{"version":3,"file":"static/js/main.03410d06.js","mappings":"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","sources":["assets/img/Maha Pic.svg","assets/img/Maha.svg","assets/img/github.svg","assets/img/gmail.svg","assets/img/kaggle.svg","assets/img/linkedin.svg","../node_modules/invariant/browser.js","../node_modules/lodash.throttle/index.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-on-screen/lib/TrackVisibility.js","../node_modules/react-on-screen/lib/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/shallowequal/index.js","../node_modules/classnames/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","data/data.js","components/Navbar/CustNavBar.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap-icons/dist/icons/arrow-right-circle.js","components/Banner/Banner.js","components/Skills/Skills.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["var _path,_path2,_path3,_path4,_path5,_path6,_path7,_path8,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_path24,_path25,_path26,_path27,_path28,_path29,_path30,_path31,_path32,_path33,_path34,_path35,_path36,_path37,_path38,_path39,_path40,_path41,_path42,_path43,_path44,_path45,_path46,_path47,_path48,_path49,_path50,_path51,_path52,_path53,_path54,_path55,_path56,_path57,_path58,_path59,_path60,_path61,_path62,_path63,_path64,_path65,_path66,_path67,_path68,_path69,_path70,_path71,_path72,_path73,_path74,_path75,_path76,_path77,_path78,_path79,_path80,_path81,_path82,_path83,_path84,_path85,_path86,_path87,_path88,_path89,_path90,_path91,_path92,_path93,_path94,_path95,_path96,_path97,_path98,_path99,_path100,_path101,_path102,_path103,_path104,_path105,_path106,_path107,_path108,_path109,_path110,_path111,_path112,_path113,_path114,_path115,_path116,_path117,_path118,_path119,_path120,_path121,_path122,_path123,_path124,_path125,_path126,_path127,_path128,_path129,_path130,_path131,_path132,_path133,_path134,_path135,_path136,_path137,_path138,_path139,_path140,_path141,_path142,_path143,_path144,_path145,_path146,_path147,_path148,_path149,_path150,_path151,_path152,_path153,_path154,_path155,_path156,_path157,_path158,_path159,_path160,_path161,_path162,_path163,_path164,_path165,_path166,_path167,_path168,_path169,_path170,_path171,_path172,_path173,_path174,_path175,_path176,_path177,_path178,_path179,_path180,_path181,_path182,_path183,_path184,_path185,_path186,_path187,_path188,_path189,_path190,_path191,_path192,_path193,_path194,_path195,_path196,_path197,_path198,_path199,_path200,_path201,_path202,_path203,_path204,_path205,_path206,_path207,_path208,_path209,_path210,_path211,_path212,_path213,_path214,_path215,_path216,_path217,_path218,_path219,_path220,_path221,_path222,_path223,_path224,_path225,_path226,_path227,_path228,_path229,_path230,_path231,_path232,_path233,_path234,_path235,_path236,_path237,_path238,_path239,_path240,_path241,_path242,_path243,_path244,_path245,_path246,_path247,_path248,_path249,_path250,_path251,_path252,_path253,_path254,_path255,_path256,_path257,_path258,_path259,_path260,_path261,_path262,_path263,_path264,_path265,_path266,_path267,_path268,_path269,_path270,_path271,_path272,_path273,_path274,_path275,_path276,_path277,_path278,_path279,_path280,_path281,_path282,_path283,_path284,_path285,_path286,_path287,_path288,_path289,_path290,_path291,_path292,_path293,_path294,_path295,_path296,_path297,_path298,_path299,_path300,_path301,_path302,_path303,_path304,_path305,_path306,_path307,_path308,_path309,_path310,_path311,_path312,_path313,_path314,_path315,_path316,_path317,_path318,_path319,_path320,_path321,_path322,_path323,_path324,_path325,_path326,_path327,_path328,_path329,_path330,_path331,_path332,_path333,_path334,_path335,_path336,_path337,_path338,_path339,_path340,_path341,_path342,_path343,_path344,_path345,_path346,_path347,_path348,_path349,_path350,_path351,_path352,_path353,_path354,_path355,_path356,_path357,_path358,_path359,_path360,_path361,_path362,_path363,_path364,_path365,_path366,_path367,_path368,_path369,_path370,_path371,_path372,_path373,_path374,_path375,_path376,_path377,_path378,_path379,_path380,_path381,_path382,_path383,_path384,_path385,_path386,_path387,_path388,_path389,_path390,_path391,_path392,_path393,_path394,_path395,_path396,_path397,_path398,_path399,_path400,_path401,_path402,_path403,_path404,_path405,_path406,_path407,_path408,_path409,_path410,_path411,_path412,_path413,_path414,_path415,_path416,_path417,_path418,_path419,_path420,_path421,_path422,_path423,_path424,_path425,_path426,_path427,_path428,_path429,_path430,_path431,_path432,_path433,_path434,_path435,_path436,_path437,_path438,_path439,_path440,_path441,_path442,_path443,_path444,_path445,_path446,_path447,_path448,_path449,_path450,_path451,_path452,_path453,_path454,_path455,_path456,_path457,_path458,_path459,_path460,_path461,_path462,_path463,_path464,_path465,_path466,_path467,_path468,_path469,_path470,_path471,_path472,_path473,_path474,_path475,_path476,_path477,_path478,_path479,_path480,_path481,_path482,_path483,_path484,_path485,_path486,_path487,_path488,_path489,_path490,_path491,_path492,_path493,_path494,_path495,_path496,_path497,_path498,_path499,_path500,_path501,_path502,_path503,_path504,_path505,_path506,_path507,_path508,_path509,_path510,_path511,_path512,_path513,_path514,_path515,_path516,_path517,_path518,_path519,_path520,_path521,_path522,_path523,_path524,_path525,_path526,_path527,_path528,_path529,_path530,_path531,_path532,_path533,_path534,_path535,_path536,_path537,_path538,_path539,_path540,_path541,_path542,_path543,_path544,_path545,_path546,_path547,_path548,_path549,_path550,_path551,_path552,_path553,_path554,_path555,_path556,_path557,_path558,_path559,_path560,_path561,_path562,_path563,_path564,_path565,_path566,_path567,_path568,_path569,_path570,_path571,_path572,_path573,_path574,_path575,_path576,_path577,_path578,_path579,_path580,_path581,_path582,_path583,_path584,_path585,_path586,_path587,_path588,_path589,_path590,_path591,_path592,_path593,_path594,_path595,_path596,_path597,_path598,_path599,_path600,_path601,_path602,_path603,_path604,_path605,_path606,_path607,_path608,_path609,_path610,_path611,_path612,_path613,_path614,_path615,_path616,_path617,_path618,_path619,_path620,_path621,_path622,_path623,_path624,_path625,_path626,_path627,_path628,_path629,_path630,_path631,_path632,_path633,_path634,_path635,_path636,_path637,_path638,_path639,_path640,_path641,_path642,_path643,_path644,_path645,_path646,_path647,_path648,_path649,_path650,_path651,_path652,_path653,_path654,_path655,_path656,_path657,_path658,_path659,_path660,_path661,_path662,_path663,_path664,_path665,_path666,_path667,_path668,_path669,_path670,_path671,_path672,_path673,_path674,_path675,_path676,_path677,_path678,_path679,_path680,_path681,_path682,_path683,_path684,_path685,_path686,_path687,_path688,_path689,_path690,_path691,_path692,_path693,_path694,_path695,_path696,_path697,_path698,_path699,_path700,_path701,_path702,_path703,_path704,_path705,_path706,_path707,_path708,_path709,_path710,_path711,_path712,_path713,_path714,_path715,_path716,_path717,_path718,_path719,_path720,_path721,_path722,_path723,_path724,_path725,_path726,_path727,_path728,_path729,_path730,_path731,_path732,_path733,_path734,_path735,_path736,_path737,_path738,_path739,_path740,_path741,_path742,_path743,_path744,_path745,_path746,_path747,_path748,_path749,_path750,_path751,_path752,_path753,_path754,_path755,_path756,_path757,_path758,_path759,_path760,_path761,_path762,_path763,_path764,_path765,_path766,_path767,_path768,_path769,_path770,_path771,_path772,_path773,_path774,_path775,_path776,_path777,_path778,_path779,_path780,_path781,_path782,_path783,_path784,_path785,_path786,_path787,_path788,_path789,_path790,_path791,_path792,_path793,_path794,_path795,_path796,_path797,_path798,_path799,_path800,_path801,_path802,_path803,_path804,_path805,_path806,_path807,_path808,_path809,_path810,_path811,_path812,_path813,_path814,_path815,_path816,_path817,_path818,_path819,_path820,_path821,_path822,_path823,_path824,_path825,_path826,_path827,_path828,_path829,_path830,_path831,_path832,_path833,_path834,_path835,_path836,_path837,_path838,_path839,_path840,_path841,_path842,_path843,_path844,_path845,_path846,_path847,_path848,_path849,_path850,_path851,_path852,_path853,_path854,_path855,_path856,_path857,_path858,_path859,_path860,_path861,_path862,_path863,_path864,_path865,_path866,_path867,_path868,_path869,_path870,_path871,_path872,_path873,_path874,_path875,_path876,_path877,_path878,_path879,_path880,_path881,_path882,_path883,_path884,_path885,_path886,_path887,_path888,_path889,_path890,_path891,_path892,_path893,_path894,_path895,_path896,_path897,_path898,_path899,_path900,_path901,_path902,_path903,_path904,_path905,_path906,_path907,_path908,_path909,_path910,_path911,_path912,_path913,_path914,_path915,_path916,_path917,_path918,_path919,_path920,_path921,_path922,_path923,_path924,_path925,_path926,_path927,_path928,_path929,_path930,_path931,_path932,_path933,_path934,_path935,_path936,_path937,_path938,_path939,_path940,_path941,_path942,_path943,_path944,_path945,_path946,_path947,_path948,_path949,_path950,_path951,_path952,_path953,_path954,_path955,_path956,_path957,_path958,_path959,_path960,_path961,_path962,_path963,_path964,_path965,_path966,_path967,_path968,_path969,_path970,_path971,_path972,_path973,_path974,_path975,_path976,_path977,_path978,_path979,_path980,_path981,_path982,_path983,_path984,_path985,_path986,_path987,_path988,_path989,_path990,_path991,_path992,_path993,_path994,_path995,_path996,_path997,_path998,_path999,_path1000,_path1001,_path1002,_path1003,_path1004,_path1005,_path1006,_path1007,_path1008,_path1009,_path1010,_path1011,_path1012,_path1013,_path1014,_path1015,_path1016,_path1017,_path1018,_path1019,_path1020,_path1021,_path1022,_path1023,_path1024,_path1025,_path1026,_path1027,_path1028,_path1029,_path1030,_path1031,_path1032,_path1033,_path1034,_path1035,_path1036,_path1037,_path1038,_path1039,_path1040,_path1041,_path1042,_path1043,_path1044,_path1045,_path1046,_path1047,_path1048,_path1049,_path1050,_path1051,_path1052,_path1053,_path1054,_path1055,_path1056,_path1057,_path1058,_path1059,_path1060,_path1061,_path1062,_path1063,_path1064,_path1065,_path1066,_path1067,_path1068,_path1069,_path1070,_path1071,_path1072,_path1073,_path1074,_path1075,_path1076,_path1077,_path1078,_path1079,_path1080,_path1081,_path1082,_path1083,_path1084,_path1085,_path1086,_path1087,_path1088,_path1089,_path1090,_path1091,_path1092,_path1093,_path1094,_path1095,_path1096,_path1097,_path1098,_path1099,_path1100,_path1101,_path1102,_path1103,_path1104,_path1105,_path1106,_path1107,_path1108,_path1109,_path1110,_path1111,_path1112,_path1113,_path1114,_path1115,_path1116,_path1117,_path1118,_path1119,_path1120,_path1121,_path1122,_path1123,_path1124,_path1125,_path1126,_path1127,_path1128,_path1129,_path1130,_path1131,_path1132,_path1133,_path1134,_path1135,_path1136,_path1137,_path1138,_path1139,_path1140,_path1141,_path1142,_path1143,_path1144,_path1145,_path1146,_path1147,_path1148,_path1149,_path1150,_path1151,_path1152,_path1153,_path1154,_path1155,_path1156,_path1157,_path1158,_path1159,_path1160,_path1161,_path1162,_path1163,_path1164,_path1165,_path1166,_path1167,_path1168,_path1169,_path1170,_path1171,_path1172,_path1173,_path1174,_path1175,_path1176,_path1177,_path1178,_path1179,_path1180,_path1181,_path1182,_path1183,_path1184,_path1185,_path1186,_path1187,_path1188,_path1189,_path1190,_path1191,_path1192,_path1193,_path1194,_path1195,_path1196,_path1197,_path1198,_path1199,_path1200,_path1201,_path1202,_path1203,_path1204,_path1205,_path1206,_path1207,_path1208,_path1209,_path1210,_path1211,_path1212,_path1213,_path1214,_path1215,_path1216,_path1217,_path1218,_path1219,_path1220,_path1221,_path1222,_path1223,_path1224,_path1225,_path1226,_path1227,_path1228,_path1229,_path1230,_path1231,_path1232,_path1233,_path1234,_path1235,_path1236,_path1237,_path1238,_path1239,_path1240,_path1241,_path1242,_path1243,_path1244,_path1245,_path1246,_path1247,_path1248,_path1249,_path1250,_path1251,_path1252,_path1253,_path1254,_path1255,_path1256,_path1257,_path1258,_path1259,_path1260,_path1261,_path1262,_path1263,_path1264,_path1265,_path1266,_path1267,_path1268,_path1269,_path1270,_path1271,_path1272,_path1273,_path1274,_path1275,_path1276,_path1277,_path1278,_path1279,_path1280,_path1281,_path1282,_path1283,_path1284,_path1285,_path1286,_path1287,_path1288,_path1289,_path1290,_path1291,_path1292,_path1293,_path1294,_path1295,_path1296,_path1297,_path1298,_path1299,_path1300,_path1301,_path1302,_path1303,_path1304,_path1305,_path1306,_path1307,_path1308,_path1309,_path1310,_path1311,_path1312,_path1313,_path1314,_path1315,_path1316,_path1317,_path1318,_path1319,_path1320,_path1321,_path1322,_path1323,_path1324,_path1325,_path1326,_path1327,_path1328,_path1329,_path1330,_path1331,_path1332,_path1333,_path1334,_path1335,_path1336,_path1337,_path1338,_path1339,_path1340,_path1341,_path1342,_path1343,_path1344,_path1345,_path1346,_path1347,_path1348,_path1349,_path1350,_path1351,_path1352,_path1353,_path1354,_path1355,_path1356,_path1357,_path1358,_path1359,_path1360,_path1361,_path1362,_path1363,_path1364,_path1365,_path1366,_path1367,_path1368,_path1369,_path1370,_path1371,_path1372,_path1373,_path1374,_path1375,_path1376,_path1377,_path1378,_path1379,_path1380,_path1381,_path1382,_path1383,_path1384,_path1385,_path1386,_path1387,_path1388,_path1389,_path1390,_path1391,_path1392,_path1393,_path1394,_path1395,_path1396,_path1397,_path1398,_path1399,_path1400,_path1401,_path1402,_path1403,_path1404,_path1405,_path1406,_path1407,_path1408,_path1409,_path1410,_path1411,_path1412,_path1413,_path1414,_path1415,_path1416,_path1417,_path1418,_path1419,_path1420,_path1421,_path1422,_path1423,_path1424,_path1425,_path1426,_path1427,_path1428,_path1429,_path1430,_path1431,_path1432,_path1433,_path1434,_path1435,_path1436,_path1437,_path1438,_path1439,_path1440,_path1441,_path1442,_path1443,_path1444,_path1445,_path1446,_path1447,_path1448,_path1449,_path1450,_path1451,_path1452,_path1453,_path1454,_path1455,_path1456,_path1457,_path1458,_path1459,_path1460,_path1461,_path1462,_path1463,_path1464,_path1465,_path1466,_path1467,_path1468,_path1469,_path1470,_path1471,_path1472,_path1473,_path1474,_path1475,_path1476,_path1477,_path1478,_path1479,_path1480,_path1481,_path1482,_path1483,_path1484,_path1485,_path1486,_path1487,_path1488,_path1489,_path1490,_path1491,_path1492,_path1493,_path1494,_path1495,_path1496,_path1497,_path1498,_path1499,_path1500,_path1501,_path1502,_path1503,_path1504,_path1505,_path1506,_path1507,_path1508,_path1509,_path1510,_path1511,_path1512,_path1513,_path1514,_path1515,_path1516,_path1517,_path1518,_path1519,_path1520,_path1521,_path1522,_path1523,_path1524,_path1525,_path1526,_path1527,_path1528,_path1529,_path1530,_path1531,_path1532,_path1533,_path1534,_path1535,_path1536,_path1537,_path1538,_path1539,_path1540,_path1541,_path1542,_path1543,_path1544,_path1545,_path1546,_path1547,_path1548,_path1549,_path1550,_path1551,_path1552,_path1553,_path1554,_path1555,_path1556,_path1557,_path1558,_path1559,_path1560,_path1561,_path1562,_path1563,_path1564,_path1565,_path1566,_path1567,_path1568,_path1569,_path1570,_path1571,_path1572,_path1573,_path1574,_path1575,_path1576,_path1577,_path1578,_path1579,_path1580,_path1581,_path1582,_path1583,_path1584,_path1585,_path1586,_path1587,_path1588,_path1589,_path1590,_path1591,_path1592,_path1593,_path1594,_path1595,_path1596,_path1597,_path1598,_path1599,_path1600,_path1601,_path1602,_path1603,_path1604,_path1605,_path1606,_path1607,_path1608,_path1609,_path1610,_path1611,_path1612,_path1613,_path1614,_path1615,_path1616,_path1617,_path1618,_path1619,_path1620,_path1621,_path1622,_path1623,_path1624,_path1625,_path1626,_path1627,_path1628,_path1629,_path1630,_path1631,_path1632,_path1633,_path1634,_path1635,_path1636,_path1637,_path1638,_path1639,_path1640,_path1641,_path1642,_path1643,_path1644,_path1645,_path1646,_path1647,_path1648,_path1649,_path1650,_path1651,_path1652,_path1653,_path1654,_path1655,_path1656,_path1657,_path1658,_path1659,_path1660,_path1661,_path1662,_path1663,_path1664,_path1665,_path1666,_path1667,_path1668,_path1669,_path1670,_path1671,_path1672,_path1673,_path1674,_path1675,_path1676,_path1677,_path1678,_path1679,_path1680,_path1681,_path1682,_path1683,_path1684,_path1685,_path1686,_path1687,_path1688,_path1689,_path1690,_path1691,_path1692,_path1693,_path1694,_path1695,_path1696,_path1697,_path1698,_path1699,_path1700,_path1701,_path1702,_path1703,_path1704,_path1705,_path1706,_path1707,_path1708,_path1709,_path1710,_path1711,_path1712,_path1713,_path1714,_path1715,_path1716,_path1717,_path1718,_path1719,_path1720,_path1721,_path1722,_path1723,_path1724,_path1725,_path1726,_path1727,_path1728,_path1729,_path1730,_path1731,_path1732,_path1733,_path1734,_path1735,_path1736,_path1737,_path1738,_path1739,_path1740,_path1741,_path1742,_path1743,_path1744,_path1745,_path1746,_path1747,_path1748,_path1749,_path1750,_path1751,_path1752,_path1753,_path1754,_path1755,_path1756,_path1757,_path1758,_path1759,_path1760,_path1761,_path1762,_path1763,_path1764,_path1765,_path1766,_path1767,_path1768,_path1769,_path1770,_path1771,_path1772,_path1773,_path1774,_path1775,_path1776,_path1777,_path1778,_path1779,_path1780,_path1781,_path1782,_path1783,_path1784,_path1785,_path1786,_path1787,_path1788,_path1789,_path1790,_path1791,_path1792,_path1793,_path1794,_path1795,_path1796,_path1797,_path1798,_path1799,_path1800,_path1801,_path1802,_path1803,_path1804,_path1805,_path1806,_path1807,_path1808,_path1809,_path1810,_path1811,_path1812,_path1813,_path1814,_path1815,_path1816,_path1817,_path1818,_path1819,_path1820,_path1821,_path1822,_path1823,_path1824,_path1825,_path1826,_path1827,_path1828,_path1829,_path1830,_path1831,_path1832,_path1833,_path1834,_path1835,_path1836,_path1837,_path1838,_path1839,_path1840,_path1841,_path1842,_path1843,_path1844,_path1845,_path1846,_path1847,_path1848,_path1849,_path1850,_path1851,_path1852,_path1853,_path1854,_path1855,_path1856,_path1857,_path1858,_path1859,_path1860,_path1861,_path1862,_path1863,_path1864,_path1865,_path1866,_path1867,_path1868,_path1869,_path1870,_path1871,_path1872,_path1873,_path1874,_path1875,_path1876,_path1877,_path1878,_path1879,_path1880,_path1881,_path1882,_path1883,_path1884,_path1885,_path1886,_path1887,_path1888,_path1889,_path1890,_path1891,_path1892,_path1893,_path1894,_path1895,_path1896,_path1897,_path1898,_path1899,_path1900,_path1901,_path1902,_path1903,_path1904,_path1905,_path1906,_path1907,_path1908,_path1909,_path1910,_path1911,_path1912,_path1913,_path1914,_path1915,_path1916,_path1917,_path1918,_path1919,_path1920,_path1921,_path1922,_path1923,_path1924,_path1925,_path1926,_path1927,_path1928,_path1929,_path1930,_path1931,_path1932,_path1933,_path1934,_path1935,_path1936,_path1937,_path1938,_path1939,_path1940,_path1941,_path1942,_path1943,_path1944,_path1945,_path1946,_path1947,_path1948,_path1949,_path1950,_path1951,_path1952,_path1953,_path1954,_path1955,_path1956,_path1957,_path1958,_path1959,_path1960,_path1961,_path1962,_path1963,_path1964,_path1965,_path1966,_path1967,_path1968,_path1969,_path1970,_path1971,_path1972,_path1973,_path1974,_path1975,_path1976,_path1977,_path1978,_path1979,_path1980,_path1981,_path1982,_path1983,_path1984,_path1985,_path1986,_path1987,_path1988,_path1989,_path1990,_path1991,_path1992,_path1993,_path1994,_path1995,_path1996,_path1997,_path1998,_path1999,_path2000,_path2001,_path2002,_path2003,_path2004,_path2005,_path2006,_path2007,_path2008,_path2009,_path2010,_path2011,_path2012,_path2013,_path2014,_path2015,_path2016,_path2017,_path2018,_path2019,_path2020,_path2021,_path2022,_path2023,_path2024,_path2025,_path2026,_path2027,_path2028,_path2029,_path2030,_path2031,_path2032,_path2033,_path2034,_path2035,_path2036,_path2037,_path2038,_path2039,_path2040,_path2041,_path2042,_path2043,_path2044,_path2045,_path2046,_path2047,_path2048,_path2049,_path2050,_path2051,_path2052,_path2053,_path2054,_path2055,_path2056,_path2057,_path2058,_path2059,_path2060,_path2061,_path2062,_path2063,_path2064,_path2065,_path2066,_path2067,_path2068,_path2069,_path2070,_path2071,_path2072,_path2073,_path2074,_path2075,_path2076,_path2077,_path2078,_path2079,_path2080,_path2081,_path2082,_path2083,_path2084,_path2085,_path2086,_path2087,_path2088,_path2089,_path2090,_path2091,_path2092,_path2093,_path2094,_path2095,_path2096,_path2097,_path2098,_path2099,_path2100,_path2101,_path2102,_path2103,_path2104,_path2105,_path2106,_path2107,_path2108,_path2109,_path2110,_path2111,_path2112,_path2113,_path2114,_path2115,_path2116,_path2117,_path2118,_path2119,_path2120,_path2121,_path2122,_path2123,_path2124,_path2125,_path2126,_path2127,_path2128,_path2129,_path2130,_path2131,_path2132,_path2133,_path2134,_path2135,_path2136,_path2137,_path2138,_path2139,_path2140,_path2141,_path2142,_path2143,_path2144,_path2145,_path2146,_path2147,_path2148,_path2149,_path2150,_path2151,_path2152,_path2153,_path2154,_path2155,_path2156,_path2157,_path2158,_path2159,_path2160,_path2161,_path2162,_path2163,_path2164,_path2165,_path2166,_path2167,_path2168,_path2169,_path2170,_path2171,_path2172,_path2173,_path2174,_path2175,_path2176,_path2177,_path2178,_path2179,_path2180,_path2181,_path2182,_path2183,_path2184,_path2185,_path2186,_path2187,_path2188,_path2189,_path2190,_path2191,_path2192,_path2193,_path2194,_path2195,_path2196,_path2197,_path2198,_path2199,_path2200,_path2201,_path2202,_path2203,_path2204,_path2205,_path2206,_path2207,_path2208,_path2209,_path2210,_path2211,_path2212,_path2213,_path2214,_path2215,_path2216,_path2217,_path2218,_path2219,_path2220,_path2221,_path2222,_path2223,_path2224,_path2225,_path2226,_path2227,_path2228,_path2229,_path2230,_path2231,_path2232,_path2233,_path2234,_path2235,_path2236,_path2237,_path2238,_path2239,_path2240,_path2241,_path2242,_path2243,_path2244,_path2245,_path2246,_path2247,_path2248,_path2249,_path2250,_path2251,_path2252,_path2253,_path2254,_path2255,_path2256,_path2257,_path2258,_path2259,_path2260,_path2261,_path2262,_path2263,_path2264,_path2265,_path2266,_path2267,_path2268,_path2269,_path2270,_path2271,_path2272,_path2273,_path2274,_path2275,_path2276,_path2277,_path2278,_path2279,_path2280,_path2281,_path2282,_path2283,_path2284,_path2285,_path2286,_path2287,_path2288,_path2289,_path2290,_path2291,_path2292,_path2293,_path2294,_path2295,_path2296,_path2297,_path2298,_path2299,_path2300,_path2301,_path2302,_path2303,_path2304,_path2305,_path2306,_path2307,_path2308,_path2309,_path2310,_path2311,_path2312,_path2313,_path2314,_path2315,_path2316,_path2317,_path2318,_path2319,_path2320,_path2321,_path2322,_path2323,_path2324,_path2325,_path2326,_path2327,_path2328,_path2329,_path2330,_path2331,_path2332,_path2333,_path2334,_path2335,_path2336,_path2337,_path2338,_path2339,_path2340,_path2341,_path2342,_path2343,_path2344,_path2345,_path2346,_path2347,_path2348,_path2349,_path2350,_path2351,_path2352,_path2353,_path2354,_path2355,_path2356,_path2357,_path2358,_path2359,_path2360,_path2361,_path2362,_path2363,_path2364,_path2365,_path2366,_path2367,_path2368,_path2369,_path2370,_path2371,_path2372,_path2373,_path2374,_path2375,_path2376,_path2377,_path2378,_path2379,_path2380,_path2381,_path2382,_path2383,_path2384,_path2385,_path2386,_path2387,_path2388,_path2389,_path2390,_path2391,_path2392,_path2393,_path2394,_path2395,_path2396,_path2397,_path2398,_path2399,_path2400,_path2401,_path2402,_path2403,_path2404,_path2405,_path2406,_path2407,_path2408,_path2409,_path2410,_path2411,_path2412,_path2413,_path2414,_path2415,_path2416,_path2417,_path2418,_path2419,_path2420,_path2421,_path2422,_path2423,_path2424,_path2425,_path2426,_path2427,_path2428,_path2429,_path2430,_path2431,_path2432,_path2433,_path2434,_path2435,_path2436,_path2437,_path2438,_path2439,_path2440,_path2441,_path2442,_path2443,_path2444,_path2445,_path2446,_path2447,_path2448,_path2449,_path2450,_path2451,_path2452,_path2453,_path2454,_path2455,_path2456,_path2457,_path2458,_path2459,_path2460,_path2461,_path2462,_path2463,_path2464,_path2465,_path2466,_path2467,_path2468,_path2469,_path2470,_path2471,_path2472,_path2473,_path2474,_path2475,_path2476,_path2477,_path2478,_path2479,_path2480,_path2481,_path2482,_path2483,_path2484,_path2485,_path2486,_path2487,_path2488,_path2489,_path2490,_path2491,_path2492,_path2493,_path2494,_path2495,_path2496,_path2497,_path2498,_path2499,_path2500,_path2501,_path2502,_path2503,_path2504,_path2505,_path2506,_path2507,_path2508,_path2509,_path2510,_path2511,_path2512,_path2513,_path2514,_path2515,_path2516,_path2517,_path2518,_path2519,_path2520,_path2521,_path2522,_path2523,_path2524,_path2525,_path2526,_path2527,_path2528,_path2529,_path2530,_path2531,_path2532,_path2533,_path2534,_path2535,_path2536,_path2537,_path2538,_path2539,_path2540,_path2541,_path2542,_path2543,_path2544,_path2545,_path2546,_path2547,_path2548,_path2549,_path2550,_path2551,_path2552,_path2553,_path2554,_path2555,_path2556,_path2557,_path2558,_path2559,_path2560,_path2561,_path2562,_path2563,_path2564,_path2565,_path2566,_path2567,_path2568,_path2569,_path2570,_path2571,_path2572,_path2573,_path2574,_path2575,_path2576,_path2577,_path2578,_path2579,_path2580,_path2581,_path2582,_path2583,_path2584,_path2585,_path2586,_path2587,_path2588,_path2589,_path2590,_path2591,_path2592,_path2593,_path2594,_path2595,_path2596,_path2597,_path2598,_path2599,_path2600,_path2601,_path2602,_path2603,_path2604,_path2605,_path2606,_path2607,_path2608,_path2609,_path2610,_path2611,_path2612,_path2613,_path2614,_path2615,_path2616,_path2617,_path2618,_path2619,_path2620,_path2621,_path2622,_path2623,_path2624,_path2625,_path2626,_path2627,_path2628,_path2629,_path2630,_path2631,_path2632,_path2633,_path2634,_path2635,_path2636;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgMahaPic(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({id:\"Layer_1\",xmlns:\"http://www.w3.org/2000/svg\",xmlnsXlink:\"http://www.w3.org/1999/xlink\",x:\"0px\",y:\"0px\",width:\"100%\",viewBox:\"0 0 1020 1031\",enableBackground:\"new 0 0 1020 1031\",xmlSpace:\"preserve\",ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_path||(_path=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E9EBE7\",opacity:1,stroke:\"none\",d:\" M1.368052,839.073669  C1.000000,561.212402 1.013485,283.424744 0.875309,5.637180  C0.873173,1.343804 2.041005,0.904317 5.861348,0.905475  C342.639221,1.007539 679.417175,1.008443 1016.195007,0.897250  C1020.132324,0.895950 1021.119995,1.521019 1021.117859,5.693579  C1020.986816,268.149902 1021.000000,530.606323 1021.000000,793.531372  C1017.255981,795.309448 1017.812866,791.185547 1015.792358,789.748535  C1015.365906,789.012512 1015.204956,788.557556 1015.062012,787.729248  C1015.081970,781.968262 1012.505127,777.366699 1010.268799,772.332336  C1009.906006,771.885681 1009.770142,771.698303 1009.481873,771.197327  C1009.191772,770.439941 1009.096924,769.987305 1009.022583,769.183105  C1008.515442,764.702881 1006.858948,761.104614 1003.807617,757.786987  C1003.455750,757.340942 1003.328918,757.152344 1003.045776,756.662598  C1001.746948,753.252686 1000.301208,750.295105 998.252319,747.298828  C997.881592,746.913879 997.741943,746.753235 997.413452,746.339172  C996.757935,745.422241 996.402832,744.649658 995.246216,744.246826  C994.548706,743.926575 994.177734,743.685364 993.606812,743.143127  C992.892273,742.062012 992.709717,741.150940 992.558228,739.878540  C991.715759,735.027100 989.283081,731.686218 984.938782,729.402344  C984.163818,729.177795 983.740540,728.996826 983.043213,728.590454  C981.313843,726.681213 979.428284,725.376648 978.000366,723.218750  C977.510376,722.180054 977.073547,721.530212 975.873108,721.290161  C975.172119,721.071838 974.787170,720.900085 974.154907,720.506104  C973.591614,720.009277 973.328613,719.671692 972.951904,719.026489  C972.555969,718.173584 972.269958,717.629517 971.453796,717.098022  C971.018616,716.779297 970.847290,716.644287 970.436646,716.280334  C968.457092,713.683716 966.683838,711.361694 963.071716,711.008911  C962.327698,710.682861 961.940613,710.428772 961.338257,709.883789  C958.110229,706.347839 954.172729,704.711182 949.786499,703.182129  C949.263123,702.969116 949.059814,702.871460 948.568909,702.600952  C945.799927,700.902710 943.223328,699.890198 939.936279,701.024658  C938.469604,701.349426 937.322388,701.344299 935.825012,701.175659  C933.469604,700.527161 931.453979,699.881775 929.571167,702.163574  C928.260559,703.191650 926.846802,703.293457 925.561523,704.350525  C924.260071,705.255737 922.859985,705.468201 922.040527,707.007202  C920.960571,708.454651 919.752991,709.399048 918.994568,711.097534  C918.517456,711.986389 918.168213,712.567871 917.594849,713.429199  C917.066895,714.083801 916.717896,714.418823 916.027832,714.928223  C911.793152,717.284302 908.360046,714.971924 904.826294,713.868530  C902.488708,713.138672 900.492737,711.417419 897.519287,711.404419  C895.700867,711.295898 894.375061,710.755859 892.744629,710.087097  C891.516357,709.408936 890.997437,708.455139 889.942383,707.663452  C889.478821,707.517822 889.283997,707.486694 888.790405,707.434021  C887.673706,707.337891 886.855469,707.266296 885.711792,707.155518  C885.172424,707.050049 884.958069,706.989624 884.438049,706.781555  C883.954285,706.489807 883.776184,706.345764 883.392578,705.923218  C882.967590,705.235168 882.792908,704.807312 882.579895,704.024597  C879.552246,694.662598 871.406982,690.018311 865.481934,683.504639  C864.775208,682.727722 863.800842,682.481934 862.782776,682.481750  C859.760864,682.481201 857.886719,680.850159 856.508423,677.944458  C855.801453,676.643311 855.468811,675.518738 854.331604,674.477051  C853.554443,673.386841 853.221375,672.507996 853.444702,671.158508  C854.270142,669.263611 856.079834,669.399963 857.426208,668.346375  C853.767090,663.280640 849.981384,658.747986 843.229004,657.634155  C840.126526,657.122437 838.073547,654.718384 837.589111,651.373962  C837.201050,648.694641 836.310608,646.212646 834.653442,644.052856  C832.559814,641.324280 831.394836,638.310486 831.486023,634.822021  C831.534668,632.961609 831.358154,630.860718 829.833801,629.765198  C825.799255,626.865906 823.203918,622.459290 819.028687,619.759033  C813.340332,616.080261 812.472351,611.073181 816.645935,605.699158  C818.536133,603.265259 818.544739,600.499573 816.811890,598.331787  C814.359375,595.263672 814.088257,592.099548 814.847595,588.221436  C814.655823,586.754028 814.601501,585.619263 814.498840,584.156250  C814.647034,582.341797 813.711304,581.437317 812.555786,580.272705  C812.144958,579.600830 811.976196,579.182373 811.768188,578.415771  C811.696655,575.973938 811.177673,574.059509 809.448242,572.220337  C809.082642,571.468506 808.947205,571.009094 808.823914,570.173462  C809.764526,564.121826 810.150635,558.635437 805.840637,553.806396  C804.261047,552.036560 804.769592,549.766235 806.486816,547.927124  C807.334106,547.019592 809.257629,545.837585 808.077942,544.740234  C803.942322,540.892822 804.918030,535.038025 802.071777,530.727966  C800.177307,527.859253 799.551636,524.174011 796.336548,522.141846  C795.495544,521.610291 794.892395,520.541199 794.997620,519.563232  C795.659912,513.409119 791.310608,510.784027 786.770874,507.822876  C784.907410,506.082703 784.288452,504.098816 783.648315,501.710876  C783.305298,493.123444 779.709045,486.214325 775.253967,479.586365  C772.010925,474.761505 769.953979,469.350922 767.937805,463.521271  C766.985229,461.239990 766.444458,459.269928 767.067688,456.815277  C767.717407,454.809143 772.048767,454.257202 768.447754,451.164490  C766.433716,446.723938 766.290344,441.797943 762.326172,438.217957  C761.915833,437.396851 761.768311,436.891571 761.641846,435.964539  C761.966797,427.321411 760.868652,419.251038 758.555054,410.953308  C757.564331,409.132172 757.218994,407.535095 756.999268,405.503174  C756.611084,397.977325 759.002197,390.683960 755.396179,383.733337  C754.093872,381.223022 753.374023,378.080200 754.137390,375.465424  C755.423340,371.060364 753.612732,367.682312 751.803406,364.152191  C749.480652,359.620331 747.695984,355.018494 749.381042,349.833588  C749.792969,348.566162 749.478149,347.538727 748.614746,346.635284  C746.781799,344.717163 746.594299,342.156555 745.791687,339.808167  C740.682129,324.857574 739.244629,308.990265 734.272583,294.013824  C733.595276,291.973724 733.119263,289.831635 731.555969,287.745636  C730.547913,286.069824 730.122192,284.578583 729.678833,282.695374  C728.783447,277.521729 725.958740,273.502289 724.227905,269.053497  C720.801819,260.247375 720.260620,250.435974 714.789734,242.347580  C713.978027,241.147476 713.256165,239.812485 712.195923,238.313812  C711.785339,237.884918 711.632263,237.705429 711.282593,237.237289  C710.664673,236.149979 710.263672,235.336899 709.297485,234.508453  C706.634949,231.217957 705.672119,227.149689 702.200500,224.441315  C701.648804,223.454697 701.498718,222.596771 700.459595,221.989792  C699.458923,221.428589 698.699585,221.058899 697.760254,220.348526  C697.254089,219.750885 697.036621,219.356888 696.758057,218.613464  C696.100342,215.788300 694.807068,213.647354 693.224426,211.254547  C690.435852,199.825760 683.118835,190.912079 678.706299,180.610474  C676.799438,176.158707 672.853882,172.697723 668.802734,169.248596  C667.393494,168.461426 666.610291,167.556335 665.919922,166.117188  C664.542725,162.405334 662.969482,159.251007 659.485779,157.048904  C658.154114,156.206970 657.417114,155.291214 656.789612,153.846756  C656.018250,150.779312 654.308533,148.661560 652.181641,147.078384  C647.407959,143.524979 643.094666,139.290588 637.545349,136.843048  C636.768311,136.500336 635.891479,136.057465 635.624756,135.314926  C632.722595,127.235458 624.654053,124.545082 619.045593,119.299362  C617.068237,117.449867 613.980530,116.034866 616.383362,112.429848  C616.894653,111.662712 616.492920,110.794296 615.868347,110.170685  C612.117859,106.425926 609.815247,101.321030 604.670898,98.451752  C597.675415,96.229561 593.631348,91.113777 590.748169,85.313354  C586.965454,77.703331 579.791077,73.540497 574.270935,67.717857  C573.899353,67.325912 573.857849,68.627281 573.141602,69.208862  C564.748108,69.253532 558.086121,65.222122 551.100830,61.042477  C547.317749,57.194561 543.063599,55.258961 537.665344,55.113121  C532.971619,55.089050 528.931641,54.467125 527.057556,49.736137  C526.297119,47.816414 524.552490,47.684204 522.880493,47.658512  C518.219543,47.586884 513.542358,47.263531 508.907288,47.988194  C506.095001,48.427883 503.253174,48.845753 500.446838,48.536037  C485.916992,46.932487 472.021637,49.643635 458.187775,53.874256  C443.164490,58.468616 429.000946,64.988152 414.896210,71.735497  C405.548096,76.207405 396.801056,81.576004 388.843445,88.793678  C388.462677,89.552299 388.262451,89.991814 387.842590,90.713020  C387.318024,91.332146 386.959320,91.615517 386.260162,91.985947  C385.165894,92.406982 384.346100,92.639420 383.444794,93.412399  C382.651978,93.903824 382.089661,94.161743 381.288147,94.601440  C380.578796,95.136818 380.149689,95.540085 379.527985,96.170059  C379.157776,96.493057 378.998962,96.609886 378.583771,96.873581  C377.620789,97.353073 376.879272,97.619438 376.013184,98.287506  C375.603638,98.579430 375.437622,98.695335 375.017029,98.980774  C374.036407,99.547485 373.394470,100.063171 372.504272,100.773293  C370.882751,101.917160 369.288605,102.545120 367.903351,104.029541  C366.905823,104.986389 365.960602,105.500633 364.943542,106.440491  C364.363953,106.916748 364.014709,107.165184 363.375366,107.556778  C362.904907,107.805656 362.711487,107.893127 362.220764,108.087379  C360.659729,108.403496 359.557037,108.851593 358.855713,110.424088  C357.925415,111.842125 356.978973,112.791183 355.496094,113.666550  C351.316223,115.033249 348.209930,117.201424 346.177094,121.216766  C345.083405,123.201469 343.632629,124.381119 341.864319,125.727028  C336.337494,129.203354 332.310638,133.731415 328.520203,138.897827  C328.401062,139.921890 328.245422,140.591324 327.932434,141.580994  C327.617401,142.327576 327.387543,142.727509 326.915253,143.379211  C325.527557,144.975143 324.097534,146.068924 322.879333,147.798950  C322.493347,148.168503 322.327606,148.300781 321.898376,148.598267  C321.133667,149.085037 320.594666,149.363663 320.174377,150.205444  C319.488068,151.622391 318.741058,152.641724 317.824463,153.929871  C317.464203,154.322678 317.309418,154.469162 316.907532,154.813950  C316.154419,155.373535 315.642975,155.729553 315.252747,156.623688  C314.818756,157.504578 314.429565,158.028091 313.702728,158.703094  C310.288269,160.157089 309.003662,162.965958 307.522125,166.052811  C303.783539,169.692322 300.970428,173.596329 298.501038,178.204620  C292.193756,185.147583 287.926422,193.102798 282.872833,200.481323  C274.140930,213.230377 264.820770,225.706360 258.860260,240.103546  C255.820221,247.446564 251.773346,254.363815 249.826508,262.203430  C248.862350,266.085938 248.655869,269.704468 249.950348,273.823303  C250.123276,274.966797 250.058426,275.728058 249.740326,276.843384  C245.217484,282.970337 242.081100,289.311401 240.478333,296.420074  C239.009064,302.936676 236.508087,309.123047 233.920441,315.662842  C231.304871,318.849365 229.540787,321.895294 229.984100,325.922455  C230.181458,327.715149 229.982620,329.886383 229.003876,331.260681  C224.032364,338.241547 223.834595,347.216370 218.952484,354.571655  C215.805878,358.665833 213.284592,362.823425 209.333313,366.233521  C208.690674,367.024323 208.250198,367.540070 207.564407,368.288605  C205.448685,370.021912 202.975479,370.797272 201.553635,373.374603  C195.546768,377.328247 193.867188,384.475281 188.689728,388.694427  C188.393570,388.935730 188.736877,389.631256 189.134003,390.381317  C190.232513,392.120239 191.334000,393.513184 190.264481,395.674072  C183.912079,397.095642 184.239166,402.860382 182.685699,406.930908  C181.071243,411.161255 180.576584,415.847870 180.399399,420.471130  C180.788162,414.282806 182.133194,408.336548 184.386185,402.545135  C185.408936,399.916138 186.857910,397.935516 189.572174,396.399109  C191.572372,394.149017 192.675201,391.578278 195.414520,389.963928  C199.781876,387.769623 203.555557,385.564850 204.551880,380.573151  C205.069702,377.978699 206.648254,376.376984 209.481445,377.088654  C212.304367,377.797760 211.402390,380.070282 211.160645,381.955688  C211.054321,382.785004 211.012039,383.584137 211.289886,384.774963  C211.519241,386.490051 211.421051,387.799377 210.886475,389.455414  C210.339645,390.518951 209.782959,391.071960 208.893738,391.829529  C205.381699,395.179413 203.324783,399.082306 202.747513,403.367950  C201.893967,409.704407 199.491653,415.478302 197.665878,421.495605  C193.695435,434.581238 187.668320,447.171509 187.253281,461.213501  C187.193268,463.244049 186.332581,465.685272 184.291580,466.043182  C180.622711,466.686523 183.692062,468.140961 183.711945,469.542236  C183.895660,470.417572 183.904251,470.928162 183.765503,471.818939  C182.222672,477.284088 179.746994,482.091064 179.476471,487.893005  C179.668457,489.619629 179.471344,490.922272 179.011948,492.585693  C177.146637,495.695099 176.893402,498.827423 176.690506,501.916016  C176.492752,504.925720 176.299561,507.812653 173.571671,509.804535  C172.321289,510.717590 172.397263,512.050232 172.791031,513.378845  C173.356949,515.288391 173.466629,517.244629 173.433823,519.603577  C173.454193,520.771851 173.293854,521.521240 172.851837,522.589233  C168.824646,524.816101 169.489838,528.395142 169.393967,532.052917  C169.338745,532.884949 169.254303,533.350830 168.973602,534.124023  C168.873901,534.960876 167.460373,534.935303 168.476288,536.085815  C168.693649,536.886292 168.664154,537.361206 168.383209,538.165466  C168.049866,538.687134 167.884735,538.875610 167.423309,539.294922  C160.511719,547.185364 159.557693,556.886780 157.667099,566.206360  C157.144745,568.781311 157.543320,571.621643 155.739731,573.775574  C153.037277,577.002930 152.975555,580.408630 154.723633,583.954407  C156.271606,587.094238 155.693726,589.588196 154.024109,592.731750  C151.537842,597.412964 151.663300,602.927856 151.440552,608.585571  C151.463318,609.799500 151.370407,610.622314 151.171371,611.432068  C150.012085,616.148376 148.104752,620.409485 147.860565,625.697083  C147.594894,631.449890 146.978561,637.473083 146.386230,643.757629  C146.283905,644.676270 146.152679,645.188416 145.780304,646.047607  C141.895996,650.189331 141.626953,655.195862 141.614502,659.886597  C141.593262,667.878662 139.775085,675.353882 136.643311,682.547241  C135.437622,685.316650 135.071686,687.773132 136.084305,690.658691  C137.357071,694.285583 137.886032,698.083313 137.104736,702.334229  C134.196091,706.430359 131.628693,710.233887 132.048355,715.608154  C131.140305,717.472778 129.917099,717.503113 128.187561,716.848267  C123.019707,715.211060 118.912926,712.420471 114.895500,709.523743  C112.626099,707.887390 110.039085,707.655151 107.462753,707.048218  C103.050308,706.008606 98.532249,706.289185 94.101562,705.931091  C90.690872,705.655396 86.898224,706.796997 84.339226,710.026550  C80.917961,714.344177 75.459236,715.726013 71.045891,718.627563  C56.595455,728.128052 44.978378,739.982910 37.258896,755.571350  C31.505791,767.188904 25.759317,778.828918 20.181557,790.510620  C13.905812,803.654236 8.861519,817.455994 5.272322,831.689575  C4.602070,834.347534 4.352263,837.349670 1.368052,839.073669  z\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M914.263916,1031.666016  C905.645752,1032.000000 897.291504,1032.000000 888.468628,1032.000000  C887.251831,1031.163330 886.411560,1030.888306 885.206787,1031.788086  C879.977905,1032.000000 874.955811,1032.000000 869.466858,1032.000000  C868.574768,1031.489380 868.061768,1031.301025 867.211975,1031.785278  C864.958313,1032.000000 862.916687,1032.000000 860.437500,1032.000000  C858.286621,1029.984131 856.749390,1027.983154 861.144653,1027.591064  C863.065918,1027.419556 863.056274,1026.065918 863.033936,1024.726685  C863.000610,1022.721863 862.946472,1020.748535 865.138000,1019.606689  C863.320923,1020.748779 862.338562,1022.488586 861.396729,1024.265259  C860.771362,1025.444824 860.161133,1026.668213 858.554138,1026.680908  C856.886719,1026.693970 856.318848,1025.485229 855.911682,1024.177246  C855.404053,1022.546143 854.340759,1021.328369 853.242920,1020.063538  C850.272461,1016.641235 850.814636,1015.311096 855.865845,1013.922363  C856.429382,1014.077576 856.664856,1014.012878 856.803650,1013.747864  C856.836060,1013.686157 856.670288,1013.619568 856.211548,1013.426208  C855.182129,1007.696411 859.435425,999.277344 864.266541,997.517822  C864.875671,997.866089 865.094482,998.179871 865.194702,998.300903  C862.381287,995.768311 863.326111,994.500305 866.355835,993.968567  C868.534180,993.586365 871.967285,994.895630 872.440491,992.116089  C872.969604,989.008118 869.290588,989.542725 867.278442,988.793640  C865.359741,988.079163 865.364807,986.875122 866.012085,985.221252  C867.360474,981.776550 868.595276,978.452148 864.874451,975.349915  C863.653015,974.331604 863.092651,972.152832 862.910767,970.314758  C862.646729,967.645874 862.698303,964.978577 866.631409,965.662231  C868.559937,965.997437 869.481384,965.037964 869.897888,963.431641  C870.403076,961.483521 868.603882,961.512878 867.546143,960.863892  C864.941467,959.265808 862.138550,958.478821 859.103516,958.106018  C856.570496,957.794922 854.065491,956.898376 853.937195,953.683167  C853.800720,950.264587 856.407410,949.896851 858.933838,949.310608  C860.913330,948.851257 862.849182,948.515076 864.850586,948.914612  C866.972473,949.338196 868.797180,948.922363 870.397766,947.042297  C869.208862,944.143005 862.809509,944.511536 865.018311,939.641113  C866.812988,935.683899 869.780640,939.411621 872.228821,939.232727  C870.159973,937.677917 868.138062,936.730408 865.598938,938.403687  C864.099243,939.392029 862.366638,939.016479 860.861572,938.083435  C859.721619,937.376648 858.565247,936.569214 858.606079,935.028625  C858.644897,933.562805 859.976074,933.365845 860.986023,932.824646  C866.586243,929.823608 867.412537,926.977112 863.914917,923.339111  C861.941223,921.286194 859.440430,922.735229 856.939331,921.966431  C856.395386,921.731567 856.191406,921.608154 855.754272,921.214233  C854.968628,920.042725 855.327759,918.997803 855.013367,917.812561  C846.881226,925.361633 840.063843,919.835754 833.062073,915.355164  C832.234802,917.050354 833.270691,918.970032 831.484009,920.315552  C830.626099,920.825317 829.998291,920.946472 829.058044,920.839844  C828.496582,920.652283 828.104675,920.412109 827.949646,920.777283  C827.692078,921.384155 827.741150,920.542664 828.358521,921.236389  C828.436340,921.724243 828.420471,921.931030 828.288452,922.437012  C827.356567,924.026733 826.484802,925.338867 828.111755,926.641541  C829.928467,928.096130 830.220154,930.291077 831.015442,932.268738  C832.305359,935.476562 831.945435,937.829102 828.103271,938.517334  C824.695374,939.127686 823.496460,943.368103 819.503418,943.287781  C816.523865,940.383240 817.945496,937.546692 818.995300,934.693665  C817.477661,937.090332 816.616455,939.525330 818.515991,942.451416  C819.391052,943.445068 820.483521,943.676575 821.145203,944.828979  C821.272949,945.246277 821.292358,945.413208 821.567139,945.492798  C822.013000,945.398499 822.203369,945.391541 822.682007,945.457092  C823.558533,945.800110 824.019104,946.218506 824.507385,947.063721  C823.977905,949.482544 817.799011,955.342773 816.122375,955.441589  C815.787964,955.461365 815.322449,955.473999 815.179260,955.246643  C812.822388,951.504700 808.363647,952.519836 805.213623,950.771667  C801.791138,948.872375 801.120728,950.227722 800.127319,953.212097  C799.177612,956.065247 799.282349,959.126404 798.002625,961.854370  C797.497253,962.931946 797.910339,963.786987 798.626465,964.553955  C803.198975,969.450195 802.213684,974.680054 799.028320,979.602051  C796.742188,983.134766 794.443787,986.953613 789.663696,988.458069  C788.915100,988.514954 788.585876,988.267273 788.214417,988.105225  C787.612122,987.842712 788.485901,988.026428 787.846863,988.216370  C787.207825,988.406250 787.555725,988.888123 787.839600,988.284912  C787.854004,988.254272 787.992554,988.240601 788.466797,988.476868  C790.176208,991.490967 792.863403,991.200439 795.712769,991.424622  C796.616211,991.895630 797.064270,992.396790 797.688965,993.188477  C798.847473,995.629517 800.978638,995.526794 803.134155,996.120789  C804.321777,996.753540 804.777344,997.543030 805.047485,998.841797  C805.075378,999.425720 805.060730,999.658630 804.960876,1000.228516  C804.695312,1000.982300 804.461182,1001.365295 803.907349,1001.909912  C803.072754,1002.427185 802.465454,1002.454285 801.568542,1002.159058  C800.854248,1001.674805 800.768433,1001.886353 800.714111,1002.635864  C799.289795,1005.095215 797.959656,1007.230225 794.869385,1007.362854  C797.781067,1008.238892 800.580566,1004.209961 803.468262,1007.785034  C804.418152,1010.141296 802.851013,1011.485107 801.766724,1013.269409  C804.014526,1014.324280 805.827087,1012.939880 807.678894,1012.918945  C809.919739,1012.893616 812.349609,1013.541321 811.659058,1016.028015  C810.241821,1021.131226 811.565552,1026.776611 808.236450,1031.745117  C763.645752,1032.000000 719.291565,1032.000000 674.468628,1032.000000  C669.234131,1027.713989 668.697021,1027.686279 664.245728,1031.754028  C661.299988,1032.000000 658.599976,1032.000000 655.449951,1032.000000  C658.014893,1028.313599 659.258301,1024.247070 657.988525,1019.491211  C657.696838,1018.398682 658.205200,1017.113464 659.511780,1016.708435  C660.888977,1016.281433 661.567627,1017.322754 662.250977,1018.291504  C663.304321,1019.784668 663.367432,1022.345276 666.496521,1021.923096  C668.368164,1021.580627 669.897766,1021.248352 671.741882,1020.959778  C673.547302,1020.837952 673.022400,1019.962219 672.696167,1018.851685  C673.282898,1016.815125 674.911926,1016.309937 676.609863,1015.353943  C677.628479,1015.001465 678.330750,1014.936768 679.379028,1015.090271  C680.147949,1015.350830 680.557617,1015.595459 680.987854,1015.797668  C681.276794,1015.933472 681.589722,1015.999512 681.906982,1016.037720  C681.678406,1015.855469 681.376770,1015.901611 680.835571,1015.626648  C677.581848,1014.265930 677.511780,1010.914612 675.661682,1008.885681  C675.573914,1008.789429 681.413513,996.615723 681.548523,996.564209  C682.017212,996.385315 682.778137,996.140808 682.956116,996.419678  C684.424194,998.720032 687.071350,998.569641 689.053284,999.641602  C692.274902,1001.383850 691.143982,1005.164429 691.071716,1008.470642  C694.533508,1008.070557 697.661316,1007.182678 700.466675,1004.525513  C704.692078,1002.552429 708.724182,1005.194946 712.942993,1003.814148  C715.386902,1003.014282 714.958801,1007.281738 715.958252,1008.585815  C713.817261,1001.596497 713.817261,1001.596497 718.424316,1000.075684  C719.189270,1000.146667 719.464539,1001.237549 719.947815,1000.497864  C720.281372,999.987183 720.117798,1000.733582 719.440857,1000.080200  C720.517029,995.897766 722.380493,998.619934 724.041382,999.323486  C724.601807,997.491943 724.175537,994.782166 727.528015,995.452637  C730.300415,996.007080 731.124390,997.935425 730.753845,1000.575317  C734.750977,999.370483 736.669739,996.656128 738.071716,992.984314  C740.187988,990.736816 742.323792,989.443298 742.630005,985.830872  C742.864502,983.063354 746.320251,980.663574 747.894775,977.708862  C749.020630,975.596069 750.446106,974.040161 750.745911,971.248230  C751.126526,967.704224 754.039917,969.405457 756.393738,970.604126  C758.564819,971.897949 760.212402,973.254578 761.356750,975.155579  C762.291077,976.707947 763.580688,977.671448 765.478882,977.157898  C767.638916,976.573669 768.214539,975.012390 767.842041,972.862854  C766.348389,972.678711 764.690125,974.480469 763.210693,972.224365  C761.796875,964.953979 762.287292,958.228027 765.678223,951.880493  C765.910767,951.445190 765.947083,950.811890 766.301208,950.543701  C773.279236,945.259399 772.964905,936.666687 776.093994,929.241333  C776.498840,928.772766 776.683716,928.605286 777.193604,928.250977  C778.435730,927.652832 779.430603,927.606201 780.759277,927.459900  C782.473755,927.620056 783.186890,929.126770 784.970154,929.157410  C784.778931,925.841797 787.037476,923.866455 789.479492,921.610718  C789.973389,921.273743 790.184204,921.154785 790.735107,920.897827  C794.807434,919.437500 798.438965,919.529846 802.250305,921.724548  C802.748108,922.076355 802.929993,922.236755 803.322144,922.687622  C804.095581,923.656677 803.872925,925.388000 805.103882,924.978333  C806.369202,924.557251 806.400269,922.882446 806.868286,921.315063  C808.840820,918.290771 810.674133,919.346252 812.711609,921.269592  C813.077515,921.824646 813.238403,922.148499 813.513794,922.286682  C814.107849,922.584656 814.549377,922.051086 813.925232,922.285278  C813.301086,922.519470 813.706604,921.238098 813.507324,921.681396  C811.225037,919.953125 811.583984,917.485107 810.646851,915.226929  C808.121033,913.952332 806.282227,912.341980 804.369873,910.297607  C803.909180,910.001038 803.730835,909.875916 803.294556,909.557495  C801.441284,908.129211 799.995300,908.113342 798.515015,910.105896  C797.857422,910.542175 797.426025,910.672485 796.624390,910.718872  C795.820862,910.612610 795.378113,910.475891 794.634766,910.149414  C792.458557,909.121582 790.349915,908.650635 788.865051,906.544067  C788.629639,906.030945 788.576599,905.810486 788.565125,905.256348  C788.976868,903.270813 792.185181,902.737244 790.340088,899.935425  C790.147461,899.121826 789.972656,898.444153 790.270691,898.161743  C795.633667,893.079834 792.393860,887.112854 792.036255,881.449585  C792.015503,881.121399 791.960449,880.653992 791.734131,880.520081  C784.492676,876.237305 788.648315,869.253784 787.537354,863.505676  C784.441589,867.984924 783.025391,873.725159 782.422668,878.548340  C781.745544,883.966675 780.121094,889.488953 780.494507,895.109314  C780.580505,896.404175 780.671814,898.019348 779.533386,898.858948  C773.955322,902.973389 774.619568,909.251465 773.781799,915.000244  C773.603088,916.226257 773.241516,917.254944 772.282654,918.020386  C770.648804,919.324463 770.475952,921.085144 770.630676,922.980896  C770.738403,924.299561 770.670898,925.591675 770.491028,926.928833  C770.126892,929.634888 764.886353,928.477112 766.388062,933.156799  C767.435059,936.419556 763.243103,938.141663 760.966736,940.245239  C758.822388,942.226807 757.609192,944.962158 755.711182,947.212708  C751.935547,951.689758 746.068237,951.436523 742.118896,954.917603  C741.877075,955.130798 741.476807,955.284180 741.189575,955.183472  C733.511719,952.490845 726.591797,956.964783 719.259216,957.462769  C716.757935,957.632629 714.043396,955.991272 711.502197,958.541016  C708.511963,958.760193 705.842712,959.082275 703.430115,957.498657  C702.245667,956.721191 700.960266,956.620911 699.629822,957.205688  C697.957825,957.940735 696.109619,957.878784 694.943787,956.624695  C690.729858,952.091858 684.846924,952.708496 679.656616,951.850708  C673.518982,950.836365 668.300903,948.752319 663.767334,944.537537  C658.821106,939.939087 652.119812,939.092957 646.063904,937.090149  C641.738770,935.659729 637.967773,934.181702 634.594055,930.831909  C631.637756,927.896912 627.644409,925.754517 623.115479,925.517944  C620.455933,925.379089 617.784180,925.338257 615.147095,923.636108  C613.797302,921.753357 615.058838,920.667542 616.555237,918.617554  C612.411072,920.717773 610.424866,917.494995 607.319458,916.660400  C604.003052,912.863525 599.276062,913.537720 595.126587,911.909912  C594.543152,911.922668 594.308899,911.910217 593.728882,911.826172  C587.429565,907.699707 581.152039,904.508301 573.742310,904.233154  C572.581909,904.190125 571.501404,903.683472 570.413452,903.268860  C569.155151,902.789307 567.708618,900.965576 566.946472,903.999878  C566.668701,905.105896 565.003540,904.864807 563.828796,904.923462  C560.034912,905.112854 557.745972,907.748474 557.774841,911.544556  C557.855286,922.110535 556.359436,932.522034 554.355042,943.183899  C552.392883,944.698730 550.346985,944.672729 548.009277,944.903442  C545.812744,944.546326 545.100342,943.105835 544.182495,941.694824  C541.855896,938.118469 539.136230,934.983948 533.937012,935.317444  C533.057922,933.928589 533.198242,932.692993 533.925232,931.794861  C538.062805,926.683838 539.567627,920.303650 542.472778,914.209595  C542.651245,913.384338 542.789734,912.925476 543.131042,912.162415  C545.410950,907.554504 548.831299,904.044617 550.750488,899.241272  C551.325867,897.564087 552.088440,896.384949 553.190369,895.005249  C553.601562,894.593445 553.778809,894.443665 554.245361,894.106445  C557.045105,892.786316 558.359497,890.271423 560.715210,888.477112  C561.055359,888.064148 561.202881,887.911133 561.592834,887.558105  C562.448853,886.864014 563.259460,886.606812 563.787354,885.582275  C564.288269,884.601379 564.679810,883.899719 565.254150,882.949219  C565.889038,882.027161 566.506226,881.461792 566.889587,880.366821  C568.233337,877.519470 569.042542,874.762085 570.956177,872.189819  C571.665833,871.238281 572.404846,870.740234 572.982056,869.683228  C573.466492,868.818909 573.791199,868.238770 574.221863,867.320557  C580.951294,853.802307 587.121033,840.411316 592.911621,826.450562  C593.857849,824.398682 594.740234,822.719177 595.990234,820.849976  C597.557617,819.297729 598.278442,817.709595 598.497131,815.530518  C598.526428,813.218872 598.927429,811.385742 600.622314,809.683350  C602.363708,808.513000 602.707581,807.074280 602.666504,805.112061  C602.793030,803.599121 603.280029,802.532898 603.704712,801.085571  C604.534241,799.052551 605.401978,797.406250 605.795410,795.211060  C605.960632,794.645691 606.040222,794.423401 606.277283,793.884277  C608.861023,789.827698 609.614746,785.395325 611.503906,781.069824  C611.572205,780.013184 611.745239,779.334229 612.105652,778.342773  C612.976501,776.861694 613.716187,775.704895 613.714722,773.899658  C613.903748,773.095642 614.096069,772.666077 614.583130,771.999268  C619.669128,772.394470 621.896606,775.881897 621.760071,782.430725  C623.245728,779.644714 623.722839,776.323364 625.423828,773.414612  C626.825134,771.018188 625.304382,768.621399 624.445312,766.313965  C622.556702,761.241028 622.571289,761.193481 627.619995,759.282715  C628.626221,758.901855 629.446350,758.401672 629.358643,757.206055  C629.246582,755.678833 628.156067,754.908813 626.873596,754.409912  C625.238159,753.773682 623.940247,754.332520 623.060059,755.780396  C622.145569,757.284668 622.432922,759.460632 620.129395,760.422974  C617.744629,759.747742 617.624817,757.977112 617.837952,756.358093  C618.140808,754.057251 617.130737,752.175049 616.443237,749.811279  C616.714050,748.014587 618.520569,747.488586 618.584717,745.554443  C618.929932,743.964417 619.437134,742.882324 621.070923,742.303589  C625.067200,743.412354 627.352234,746.239868 629.779785,748.944336  C632.223633,751.667053 633.754639,751.233826 634.963867,747.784180  C635.662842,745.790161 634.629578,743.363647 636.838745,741.505493  C637.843262,741.051086 638.554749,741.024902 639.605408,741.341309  C642.213501,743.586609 641.015198,746.955078 643.018799,749.590454  C645.286682,747.999573 647.605835,746.033020 650.699646,747.214355  C651.299133,745.704773 649.987732,744.903503 649.947998,743.432373  C649.932800,742.604553 650.025452,742.143188 650.366028,741.389648  C655.474854,739.647034 652.562744,735.509277 653.414917,732.356384  C653.164124,730.847961 652.148621,730.441589 651.000305,729.710571  C649.409180,728.334473 649.210815,726.799744 649.494019,724.826416  C650.543091,723.337524 651.712341,724.060364 652.965515,724.081604  C651.106323,723.661804 649.151123,723.511597 649.189148,721.047302  C649.223938,718.795593 648.606445,716.221924 652.069458,715.474121  C652.523987,715.499146 652.604004,715.791992 652.652222,715.523987  C651.668213,711.656189 653.562012,710.242798 656.933777,710.066528  C658.411621,709.989258 659.856567,710.193054 661.308960,710.443604  C662.519104,710.652405 663.834045,710.479065 663.867188,708.985779  C663.895447,707.712402 663.499939,706.261108 661.198120,706.834473  C660.366638,706.963013 659.883240,706.956482 659.039490,706.797974  C658.219482,706.467407 657.841858,706.143311 657.397705,705.374023  C656.947021,700.760376 660.846436,699.994141 663.481628,697.727478  C667.956360,697.051880 669.141113,699.628906 669.002991,703.009216  C668.892456,705.714966 668.949768,708.321716 669.901733,710.909912  C675.040710,708.475952 680.529968,709.186646 684.874634,708.775818  C683.960754,708.399414 682.693970,706.925110 682.290955,704.853333  C681.850342,702.588806 682.520569,700.605713 685.103638,700.567749  C688.398987,700.519287 691.853943,698.805359 694.256409,700.869934  C692.229431,699.768066 689.610352,698.254944 690.861145,694.382629  C691.097839,693.649658 690.850220,693.110901 690.178467,692.750916  C686.520935,690.790649 687.664734,687.851562 688.754150,684.652405  C689.407532,683.575989 690.068115,682.954285 690.946655,682.085144  C691.354492,681.716309 691.523804,681.576782 691.961670,681.250610  C692.995483,680.668701 693.733093,680.236511 694.485352,679.285339  C696.357300,676.860474 697.940918,675.758667 700.875977,677.582031  C704.249939,679.678040 706.496216,676.896118 708.470215,674.439758  C707.564575,673.435974 706.530884,673.252808 705.336060,672.657227  C704.907227,672.311462 704.761292,672.139099 704.521729,671.635559  C704.433044,670.833191 704.557007,670.393555 705.023438,669.726562  C707.045776,668.321655 709.338623,668.688660 711.394287,667.312744  C715.522156,662.278015 718.786560,666.868408 722.602905,667.886902  C724.759644,668.579651 723.802795,673.147888 727.769165,671.232666  C733.782837,671.884460 735.011353,675.444397 733.505066,681.193359  C736.269714,679.796265 737.733765,677.546997 740.392334,678.504333  C742.993347,679.440918 742.671570,682.503540 744.963623,683.966797  C746.235840,684.817017 747.161621,685.547974 748.226379,686.649353  C748.473816,689.622681 746.903992,692.277771 748.723694,695.012695  C749.451050,696.105835 748.905701,697.717773 747.590271,698.476196  C745.413940,699.730896 743.432556,698.950989 741.310730,697.194519  C742.748169,700.024536 744.571655,700.706543 747.103516,699.755371  C748.032593,699.406311 749.051514,699.290039 750.051453,699.396790  C751.880188,699.591980 753.865540,699.727722 754.578430,701.811035  C755.207275,703.648682 753.974731,704.957947 752.777832,706.148865  C751.871460,707.050842 750.375427,707.451355 750.348877,709.429688  C751.817505,705.169312 755.484497,708.249023 758.188965,706.509644  C754.700623,704.091980 755.559814,701.560181 757.410706,698.475037  C758.830750,696.108093 758.469238,692.600220 757.688110,690.352722  C755.468994,683.967102 758.208496,679.033081 761.087402,673.582764  C764.727966,671.102478 766.585510,673.679688 767.367126,676.060913  C769.793213,683.451904 772.873962,690.603577 775.392822,697.962158  C779.470642,709.875122 779.654053,722.454651 783.339600,734.330444  C783.537048,734.966675 783.880127,735.642517 783.759705,736.264771  C782.214783,744.245911 786.357239,752.209717 783.781250,760.216614  C783.225830,761.943054 783.456177,763.919189 784.132629,765.625854  C785.515869,769.115417 786.180847,772.563599 784.483459,776.188049  C785.159973,775.267761 784.824768,774.087280 785.730713,772.942017  C789.168335,772.289856 792.004150,773.114136 794.509521,775.695312  C794.653687,776.565674 794.594727,777.058594 794.308594,777.874878  C792.868347,781.808655 793.609131,785.316589 794.653198,789.161377  C793.064880,792.956238 793.256348,796.279663 795.550537,799.330444  C797.250916,801.591614 797.080322,804.354370 797.832764,806.865234  C798.702942,809.769470 798.683472,812.994873 803.109680,813.444458  C805.499146,813.687134 806.197205,816.685303 805.778564,818.709900  C805.060852,822.181091 804.026550,825.814819 799.517212,826.984863  C797.596985,826.968872 796.004456,824.417114 794.752869,826.186584  C793.422974,828.066650 793.425049,830.838562 794.950500,832.752441  C798.225647,836.861572 797.727173,840.315491 793.122070,843.807068  C797.235718,845.144409 798.125854,847.878174 797.979675,851.440002  C797.759460,856.805237 799.044739,861.559448 804.472351,864.191956  C805.836365,864.853638 806.831177,866.096313 806.758972,867.777039  C806.691528,869.347412 806.573364,870.808716 808.726501,871.054504  C810.403259,871.245911 812.102417,871.651184 812.937561,869.567749  C814.052124,866.787048 815.865295,867.047668 818.164124,868.104370  C821.027405,869.420471 824.944519,868.681458 826.741211,872.744263  C828.432739,874.394714 827.700256,876.025635 827.488708,877.612610  C827.378174,878.442261 827.384338,879.386169 828.270508,879.736450  C829.396240,880.181519 830.035156,879.344788 830.612549,878.497498  C832.620178,875.551636 831.972717,874.524170 827.070801,873.071045  C825.798706,871.844788 825.515625,870.541321 825.295654,869.227051  C824.989075,867.395447 824.655090,865.423035 826.681519,864.377991  C828.887939,863.240173 831.612122,862.977844 833.117981,864.973450  C834.873596,867.300171 838.796448,868.043030 838.416809,872.022339  C838.326538,872.968689 839.451538,873.161865 840.263977,873.353760  C843.317139,874.075012 846.266113,875.385132 849.511597,875.026001  C852.081116,874.741638 853.951843,875.614319 855.302551,877.939514  C856.705566,880.354675 858.379089,881.731140 860.080261,878.035461  C861.536499,874.871948 864.109070,874.398193 867.514038,875.325562  C870.991516,875.034180 872.335754,872.169373 874.591064,870.590393  C878.065430,868.158081 879.319824,868.832153 880.720703,872.776917  C882.159180,876.827576 883.818481,880.390320 879.317932,883.764832  C877.388062,885.211853 879.246033,886.345764 880.771912,886.738098  C882.754272,887.247925 884.692993,886.448059 887.089844,886.209595  C884.929077,885.465515 883.013611,884.783630 883.704834,882.323242  C884.231567,880.448364 888.936157,878.659912 891.092529,879.735474  C894.628967,881.499451 898.299744,883.144714 901.213989,886.500122  C901.592102,887.230347 901.682495,887.686890 901.601562,888.501526  C899.783752,891.419006 898.934082,894.541321 896.413818,897.025574  C894.099792,897.786926 892.320007,896.428345 890.356934,896.421875  C888.672913,896.416382 886.675049,895.303284 885.420898,897.952026  C884.458191,899.159546 883.090881,898.763245 882.200134,899.596252  C883.091309,899.037292 884.047546,899.087952 885.347290,898.970581  C891.640015,900.384644 893.134155,902.278625 893.097168,908.804749  C892.874756,909.410645 892.758972,909.638916 892.392944,910.149170  C891.003662,911.661743 887.342407,911.100952 888.915833,914.156555  C890.215332,916.680054 892.944946,918.189453 895.702515,918.464722  C897.285217,918.622620 896.798523,916.462219 896.890259,915.210693  C897.101013,912.333801 896.536011,909.135498 900.346436,907.628906  C904.138245,911.093018 901.737793,915.787598 903.532715,919.929199  C903.948181,920.991577 904.034485,921.730774 903.964966,922.835693  C903.589600,924.445190 902.818481,925.624573 903.272278,927.353271  C903.438965,928.609375 903.496338,929.533813 903.461426,930.822876  C903.629395,936.322754 904.409546,941.414001 904.825745,946.878967  C905.318481,948.108582 905.513550,949.058105 906.042297,950.272827  C906.371887,951.298218 906.498169,952.004028 906.702820,953.052490  C906.197510,956.891418 907.629272,960.136169 907.968079,963.834106  C907.849915,964.756348 907.672668,965.344238 907.735474,966.244629  C907.867981,966.717590 907.937805,966.904846 908.124756,967.375244  C908.635315,968.669128 908.862427,969.700562 908.529114,971.102417  C906.896912,973.340759 907.745850,975.104553 908.921021,977.179016  C910.435974,982.436768 907.927368,987.434509 909.295227,992.725220  C909.178345,994.306152 909.526306,995.434570 910.131470,996.908447  C911.236145,1006.656189 913.120728,1015.873596 915.056946,1025.085205  C915.496338,1027.175171 915.860718,1029.349854 914.263916,1031.666016  z\"})),_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1020.762634,960.747070  C1021.000000,961.444458 1021.000000,961.888916 1021.000000,962.666687  C1019.418823,964.540222 1018.246582,966.451294 1015.824707,967.104614  C1012.568176,967.983276 1014.288086,970.806824 1013.946411,973.148071  C1013.774719,974.294861 1013.902588,975.060059 1014.651733,975.982422  C1015.692505,977.806030 1016.331787,979.504883 1014.375000,980.586609  C1011.540710,982.153564 1009.363953,980.118591 1006.925720,978.506653  C1007.138794,980.354065 1008.367737,981.065918 1009.267273,981.915161  C1011.424744,983.951904 1010.937073,986.243774 1009.704224,988.287659  C1008.311707,990.596191 1006.596252,989.701782 1004.637878,988.490479  C1002.439392,987.130615 1000.683533,989.909241 998.357666,989.826294  C994.559082,989.690735 991.643127,990.655579 991.850891,995.664307  C991.963135,998.369446 989.271240,999.245728 986.455505,999.621765  C985.848755,999.604370 985.605835,999.570923 985.021484,999.393860  C983.682495,998.487976 983.010193,997.444641 982.077271,996.146118  C981.101685,994.304688 980.835510,992.716003 981.374634,991.054443  C982.669556,987.063171 982.894775,983.349609 981.187317,979.147156  C979.074463,973.946777 982.650757,971.403870 989.629395,972.856323  C991.860535,972.387085 993.899170,972.821777 995.524597,971.116272  C996.765198,969.814636 998.368530,970.355286 999.479614,971.608582  C1000.720459,973.008179 1000.964294,974.365906 999.371765,975.940430  C997.899231,977.396240 996.952087,979.381470 994.494385,980.099365  C997.669312,981.867004 999.793884,982.795410 999.707153,977.954895  C999.663757,975.529907 1001.131653,973.161926 1000.317078,970.518433  C999.365967,967.431458 997.736084,965.835693 994.452271,967.255981  C992.005188,968.314331 989.935120,968.351990 988.343689,965.436157  C987.232544,960.203308 991.280640,959.963257 994.176575,958.670288  C994.372192,958.582947 994.562683,958.342712 994.442383,958.287537  C994.176880,958.165833 994.116760,958.573669 993.920166,958.690247  C990.635071,960.637756 989.483093,958.454285 988.631409,955.885620  C988.142090,954.409668 987.364014,953.331848 986.047241,952.400391  C982.801758,950.104797 982.777222,948.312439 985.996887,946.043152  C987.867615,944.724548 990.092285,943.945679 987.238525,941.373169  C985.778625,940.057251 986.601257,938.665100 987.864258,937.566223  C988.996094,936.581360 990.668701,936.501770 991.919800,935.042297  C989.396667,932.075928 987.174072,929.172180 982.541931,928.799622  C979.637390,928.566040 976.914062,925.928345 975.714539,923.549744  C974.244995,920.635559 972.547913,920.717590 970.213135,921.100037  C966.607483,921.690735 968.885193,924.571716 968.151733,926.662109  C967.993164,927.233459 967.907227,927.455261 967.633545,927.980042  C964.611755,930.613831 962.535278,933.641541 960.065796,936.307739  C957.651917,938.913818 952.766418,939.483276 950.227905,937.439209  C948.031860,935.670898 948.325745,932.572266 951.015869,929.133423  C952.455078,927.293701 951.540955,925.112061 948.993896,924.456787  C948.910828,924.435425 948.840515,925.361877 948.716919,926.196228  C948.528015,926.749878 948.415100,926.958130 948.026123,927.391052  C944.302063,928.728760 942.766357,926.966370 942.167664,923.864868  C941.948669,922.730103 942.100830,921.511963 941.458618,920.474670  C939.393433,917.139343 941.211853,916.009460 944.232849,915.527222  C945.218201,915.369934 946.206238,915.188477 947.041748,914.577209  C947.776855,914.039368 948.132507,913.313171 947.922668,912.418701  C947.654236,911.275024 946.771057,910.540161 945.731873,910.974182  C941.733154,912.643982 939.470032,909.981262 937.130249,907.648926  C935.802551,906.325500 934.205444,905.480652 932.699219,904.452759  C931.104065,903.364197 930.178467,903.020508 928.835205,905.117371  C926.709167,908.436340 923.387573,907.684631 920.346497,906.393372  C918.844116,905.755432 917.626770,904.085327 918.841309,902.800537  C921.796631,899.674255 921.842773,895.450928 923.094543,891.835449  C924.747681,887.060974 927.399353,886.315979 931.642456,886.946472  C928.768250,886.332153 924.548218,887.762085 925.171387,882.074219  C924.724243,884.534424 924.968506,886.562622 924.043945,888.815613  C922.583069,892.375305 920.884033,892.328796 918.443542,890.745300  C916.253296,889.324036 913.480713,888.539978 912.184387,885.985046  C911.201294,884.047607 909.263550,882.221863 912.211548,879.981018  C913.722900,878.832275 912.859802,876.496338 912.666931,874.736877  C912.087524,869.453186 911.584167,864.207092 913.162292,858.989685  C913.657349,857.352966 913.376038,855.679138 912.812500,854.079407  C912.298889,852.621582 912.009583,851.092834 912.666321,849.686035  C916.033936,842.471863 915.655151,834.691467 915.734680,827.098877  C915.790710,821.746948 918.310730,817.170471 918.987183,812.094727  C919.215881,810.377869 920.113037,808.474854 917.418457,807.080383  C916.670898,812.292725 913.229675,816.178772 912.493652,821.512512  C911.677429,827.427368 908.165100,832.836365 908.047241,839.154663  C908.019165,840.659668 906.257385,842.266907 904.473206,843.573120  C902.437622,844.011108 900.707458,843.335388 900.613708,841.782959  C900.404785,838.322815 899.479919,834.960144 899.358948,831.539062  C899.221313,827.648621 902.332275,825.873047 905.539001,824.010681  C904.548218,822.211121 902.733154,821.107483 902.037964,819.266418  C900.766235,815.898804 899.820007,812.561157 902.638611,809.443787  C903.790588,808.169739 904.284546,806.585999 904.749756,804.977295  C905.192383,803.446777 905.951965,802.139343 907.831909,802.331787  C909.689819,802.521973 910.299805,803.782043 910.269531,805.483154  C910.468140,803.458618 910.268066,801.519531 908.486511,800.186279  C904.003967,796.831360 904.796448,791.995056 904.851807,787.386597  C904.874268,785.516602 905.975525,784.338501 907.763733,783.780212  C909.031067,783.384460 911.242859,782.765381 910.982910,781.857849  C909.618164,777.091919 914.443604,772.663818 911.519470,767.937134  C909.977600,765.444763 909.545349,763.220276 913.640625,762.442017  C914.765503,762.728882 915.409241,763.272888 916.328186,763.182678  C921.514526,762.673645 922.916077,764.273560 921.213318,769.261047  C920.610596,771.026428 920.887878,772.866943 920.297546,774.597290  C921.149536,771.962891 921.794739,769.199890 923.477661,766.960754  C925.426147,764.368408 929.161499,764.785156 929.001282,767.602356  C928.551270,775.518127 935.405640,778.742004 938.647400,784.973877  C938.717346,779.971924 935.171204,776.685364 934.996521,772.531799  C934.798645,767.825317 932.105896,764.955872 928.661377,762.394409  C927.698853,761.678711 927.208679,760.559509 927.107422,759.359985  C926.920410,757.143860 926.329407,755.522644 923.557678,755.649841  C921.589050,755.740112 920.623291,754.304382 920.255859,752.520447  C919.907227,750.828003 920.657959,749.500122 922.118225,748.798096  C924.940491,747.441223 925.915833,744.750305 927.437622,741.992065  C932.029663,741.252075 932.824219,741.947327 932.408325,745.897461  C932.374084,746.223083 932.055115,746.669067 932.179626,746.841492  C935.118042,750.912842 934.646240,756.154968 936.854797,760.430359  C937.836304,762.330444 939.965698,762.719604 942.035461,762.919800  C943.987854,763.108582 945.528259,764.126892 946.252502,765.984314  C947.085571,768.120972 945.310120,768.934509 943.967346,769.838318  C941.868591,771.250671 942.027527,773.086060 942.779541,775.132568  C944.967896,771.754944 947.025269,771.650635 948.533325,775.163208  C950.049072,778.693542 951.710815,782.093018 953.789734,785.316223  C954.890381,787.022644 955.062195,788.833862 953.188782,790.166382  C951.395447,791.442139 950.729614,792.389954 952.649902,794.381348  C954.967834,796.785339 954.345947,799.569702 952.248413,802.219604  C955.813110,797.780334 959.054749,803.096313 963.445923,802.256714  C961.304016,800.307861 959.028564,800.676758 957.312195,799.863525  C954.930420,798.735107 952.914185,797.326721 956.155640,794.936523  C959.278809,792.633545 957.993225,789.916016 956.282043,788.075378  C953.840332,785.448730 953.335510,782.573181 953.550049,779.368225  C953.868774,774.606201 952.930481,770.114197 951.053101,765.777832  C950.254517,763.933105 949.747864,762.055298 949.658142,760.009155  C949.361023,753.234131 950.937195,751.882385 957.564270,753.387268  C958.420715,753.581787 959.095459,753.891052 959.545654,754.690857  C963.804626,762.257080 969.835144,768.071533 977.458252,772.799927  C979.383850,775.909790 977.157776,780.423523 981.828247,782.332153  C982.613342,783.115479 982.847412,783.787109 982.943054,784.868530  C982.099854,788.128967 982.532654,790.801819 984.656982,793.452271  C988.000732,797.542419 991.010437,801.481140 994.088928,805.339966  C996.479187,808.335938 998.538025,812.326904 996.774353,816.755310  C996.438049,817.599670 996.799988,818.371948 997.646179,819.351318  C999.226440,818.439575 999.326721,815.878723 1001.700439,815.416870  C1004.981445,815.988831 1006.649719,818.124146 1007.461365,820.690369  C1008.308472,823.368896 1008.783752,826.149475 1010.157410,828.666016  C1010.719055,829.694946 1011.048218,831.067322 1010.068542,831.938416  C1006.868958,834.783325 1009.512817,836.139587 1011.413940,837.679504  C1012.711243,838.730286 1014.277222,839.355530 1015.704468,840.201294  C1017.530945,841.283630 1019.362061,843.143494 1018.444519,845.005981  C1016.045898,849.875183 1019.420532,853.430725 1020.754272,857.753845  C1021.000000,858.444458 1021.000000,858.888916 1021.000000,859.666687  C1018.996826,864.098572 1020.001770,868.309814 1020.765747,872.751648  C1021.000000,899.354248 1021.000000,925.708435 1021.000000,952.531372  C1018.170715,955.328857 1019.917297,957.947571 1020.762634,960.747070  z\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M257.245850,1031.751953  C237.645767,1032.000000 218.291550,1032.000000 198.468658,1032.000000  C196.289856,1030.188843 196.070587,1027.918335 197.165924,1025.974976  C201.849594,1017.665344 203.692947,1008.728455 203.758789,999.296997  C203.773087,997.251953 204.396042,995.325867 207.018280,994.540771  C208.661957,995.262817 208.852173,996.399963 208.611938,997.706665  C208.967560,996.692322 208.809998,995.791077 207.788239,994.771667  C204.625107,991.571411 206.560501,988.290222 207.009186,984.943970  C205.925690,986.911377 204.649643,986.359009 203.523972,985.424988  C201.976410,984.140808 201.382828,982.295532 202.074738,980.478088  C203.020966,977.992371 203.268738,975.222412 204.517914,972.947449  C207.772934,967.019470 209.245377,960.594299 210.726959,953.767212  C216.797195,947.827759 220.232269,940.693420 223.309891,933.337402  C223.633362,932.564270 224.098373,931.677185 223.553101,930.982483  C222.060547,929.081055 222.558975,927.730347 224.375946,926.438171  C226.549210,924.892761 228.391174,925.382568 230.376007,927.369995  C231.912277,928.976624 231.749588,931.061707 232.936356,932.407349  C233.379639,932.451355 233.810928,932.276855 233.775696,931.953979  C232.866394,923.618835 239.953720,919.542542 243.743912,913.823608  C245.972931,910.460266 248.626190,912.777527 250.323746,915.467285  C250.668930,915.044678 250.691147,914.479431 250.492355,914.066895  C247.429092,907.710693 247.410568,907.670288 254.461990,906.154053  C255.628143,905.903320 256.328522,905.582031 256.346222,904.352966  C256.366760,902.927734 256.014435,901.695496 254.485016,901.179016  C252.742020,900.590515 250.000671,901.050964 250.500290,897.943970  C250.945633,895.174561 253.002197,894.578979 255.608765,894.221252  C258.689117,893.798584 260.304291,890.316895 259.429993,887.159180  C259.039093,885.747314 259.883698,884.622009 260.209198,883.357300  C261.338104,878.970703 263.563812,874.811890 262.892517,869.825073  C261.661346,868.316650 261.246307,866.646851 259.674255,865.368958  C259.316223,864.622620 259.226654,864.160156 259.262146,863.332031  C260.432739,860.365173 263.374451,859.479187 264.777435,856.870850  C265.933838,854.720947 268.157501,853.723877 266.702484,850.376770  C265.652679,847.961792 268.437531,846.888733 270.805023,846.978516  C273.353943,847.075134 275.503174,848.356934 277.919556,849.805664  C280.264923,850.925171 280.922089,853.488037 283.446991,854.412231  C284.989655,855.757690 284.627716,857.014343 283.812714,858.173096  C281.330170,861.702820 280.274109,866.051270 277.299561,869.307922  C275.622528,871.143921 275.156647,873.334961 276.176941,875.741333  C276.166199,874.104492 275.796783,872.259888 277.156769,871.076294  C280.376709,868.273804 280.726227,863.775330 283.761719,860.711304  C286.220551,858.229187 284.906860,854.027405 286.121033,850.723328  C287.005554,848.316284 287.866455,845.986328 289.970917,844.481812  C293.583344,841.899048 294.692230,838.224792 294.884247,834.089111  C294.938202,832.926514 294.747803,831.706726 295.292450,830.651550  C296.354309,828.594360 298.019897,826.881287 300.412445,827.712769  C302.667755,828.496582 301.924255,830.646545 301.481628,832.458801  C299.908539,838.899719 297.959473,845.187439 294.186279,850.743591  C292.934265,852.587219 292.435913,854.662537 292.182373,856.835693  C292.723846,853.772400 293.990082,850.993347 295.686737,848.440369  C297.487396,845.730896 297.880524,842.242981 300.437073,839.694336  C303.405334,842.360229 302.350250,845.622925 302.271881,848.635864  C302.187439,851.882141 299.026093,853.902893 298.352844,857.572876  C303.416412,848.206177 303.787079,838.139221 306.427856,828.689209  C306.923096,826.917053 307.608093,826.027832 309.793274,826.492249  C311.170380,827.630432 311.388824,828.952209 311.343323,830.274048  C311.268646,832.444092 311.803375,833.153564 314.203491,832.482422  C317.498413,831.561035 318.212006,833.821594 317.985962,836.494263  C317.774689,838.992126 316.793274,841.280640 315.704590,843.513733  C313.825378,847.368286 311.956970,851.230347 310.576233,855.297852  C309.952271,857.136047 308.948425,859.112793 311.664062,860.718750  C313.671234,862.920959 312.238220,864.219543 310.924194,865.530518  C308.849976,867.599915 307.553131,870.059082 307.605316,873.014771  C307.652496,875.685303 311.191071,877.672485 312.308472,875.759766  C315.338745,870.572571 320.384277,866.064087 319.488373,858.968506  C316.763062,859.417786 315.366272,863.157349 311.982574,860.996033  C310.809479,858.616272 312.276703,857.274414 313.442535,855.943909  C316.208466,852.787354 318.240479,849.173340 319.882812,845.377930  C321.097107,842.571777 322.446228,840.335083 326.711670,841.225098  C324.313477,837.766174 324.437042,834.900574 325.631042,831.974731  C326.529724,829.772766 326.327728,827.415100 326.527344,825.110596  C326.696533,823.157776 326.662292,821.002197 329.589752,820.367065  C333.273712,821.440002 335.127014,823.669678 335.485504,827.160156  C335.634705,828.612915 335.667664,830.193176 337.182007,831.039612  C340.872406,833.102173 340.692596,836.184753 339.410828,839.935059  C339.122070,841.068909 338.735474,841.724609 337.923431,842.543945  C335.618500,843.484192 333.938171,844.880676 333.682678,846.888245  C333.130524,851.226990 331.308136,854.703186 328.097504,857.594604  C327.384705,858.236633 326.740906,859.266785 326.695648,860.192993  C326.322113,867.838806 319.536102,873.094116 319.399811,880.447571  C320.805145,878.817078 320.092316,876.222351 321.094543,874.129578  C322.147217,871.931641 323.285919,869.752991 326.262817,870.760132  C328.907288,871.654785 330.317108,873.528625 329.819336,876.515259  C329.427643,878.865234 328.370422,880.905884 327.147552,882.903992  C324.454285,887.304688 321.948944,891.771729 320.921112,896.941589  C320.263916,900.247131 317.907043,902.413818 315.183502,904.161743  C311.447449,906.559326 310.328644,905.864319 310.099915,900.706543  C310.365295,899.751160 310.636658,899.163269 311.103821,898.685791  C310.402313,898.823914 310.328552,899.455811 310.054626,900.294983  C309.167847,904.609802 311.517303,909.283020 307.219849,912.567200  C306.121246,913.406738 307.283051,914.304016 308.193787,914.757019  C311.589264,916.446228 310.926422,918.144653 308.055725,919.478760  C304.991760,920.902649 302.997620,922.350891 303.524841,926.479614  C303.962341,929.905823 301.216644,931.711182 298.044464,931.026794  C294.330505,930.225464 293.692261,927.963867 295.231384,924.743225  C295.807526,923.537659 295.823730,922.172791 296.343933,920.594055  C297.024048,919.096069 297.928253,918.211487 299.701752,916.571289  C297.906189,917.992249 297.170563,918.842896 296.376404,920.094666  C293.199554,924.802002 291.877167,930.149109 289.129120,934.520996  C285.291656,940.625977 283.121429,947.792603 277.713837,952.937256  C276.451111,954.138550 275.428833,955.549072 276.214905,957.774658  C276.904144,959.725891 275.819153,961.697388 274.542969,963.290649  C273.060760,965.140991 271.146393,966.983582 268.834229,966.939880  C266.193604,966.890076 267.139160,963.776611 266.119019,962.259949  C263.513367,958.386353 263.980988,954.870911 266.780182,951.346497  C267.941010,949.884827 267.580780,947.800415 268.922852,945.377380  C267.483704,947.059692 266.264282,947.634827 265.255280,948.510559  C263.102936,950.378113 260.203308,951.702332 262.821716,955.557312  C263.944763,957.210876 262.674255,959.764465 262.442505,961.900635  C261.748199,968.300842 260.640411,974.688904 263.327026,980.954712  C264.133881,982.836487 262.556122,984.424744 262.068848,986.467773  C262.108948,987.162964 261.031708,987.669434 262.341766,988.166260  C264.066040,990.172729 264.285889,992.293457 263.904053,994.477783  C262.895233,1000.248962 263.116730,1006.025879 263.896881,1011.776367  C264.329865,1014.968201 267.455811,1017.797485 264.980255,1021.385254  C263.955231,1022.870850 264.259125,1025.498779 261.207489,1025.014282  C259.883331,1024.804077 259.855377,1026.229492 259.630920,1027.138672  C259.231079,1028.758057 258.908081,1030.391846 257.245850,1031.751953  z\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M310.694275,899.796753  C311.173187,901.438171 310.556183,902.992432 311.712067,904.403076  C316.693359,902.128723 319.451691,898.795288 320.313446,892.913147  C321.182648,886.980896 326.250641,882.522278 328.353943,876.763489  C329.649414,873.216614 327.068268,872.317017 325.326904,871.742371  C322.944275,870.955994 322.361053,873.692200 322.231476,875.271606  C321.984680,878.279480 320.689301,880.652527 319.018188,882.970154  C318.435181,883.778809 317.873047,884.927734 316.745880,884.322754  C315.748260,883.787415 315.808533,882.445862 316.392639,881.653564  C319.415527,877.552795 319.233246,872.108154 323.045441,868.031677  C325.515778,865.390076 323.448425,859.536926 326.927063,856.696899  C330.796814,853.537537 331.070465,848.982056 332.746399,844.964233  C333.443817,843.292358 334.196899,841.962891 336.619080,842.021301  C337.385590,842.363037 337.701324,842.769409 338.058228,843.602173  C338.414856,846.968750 336.886353,849.857056 337.672394,853.252197  C337.723450,853.860535 337.716675,854.104065 337.628479,854.700317  C335.171967,858.546875 333.348541,862.308044 332.095856,865.874878  C333.604889,863.877502 333.835693,860.697510 336.652466,858.708069  C338.025970,858.881897 338.746155,859.521301 339.539307,860.629028  C340.773926,864.161682 338.602234,866.966858 338.575134,868.651367  C343.530121,859.262817 343.956787,847.382324 346.856750,835.719055  C348.715332,828.001221 349.206299,820.493408 349.567902,812.594604  C350.695923,807.490051 350.627014,802.655029 350.733734,797.851562  C350.777161,795.897644 349.754852,793.687988 352.650177,793.042725  C355.223663,792.469177 356.715912,793.806580 357.311218,795.856445  C358.906586,792.945496 359.731598,789.674194 358.875702,786.066650  C358.579376,784.817749 358.984222,783.246399 360.475800,782.743835  C362.257050,782.143738 363.196228,783.394104 363.917023,784.758789  C364.605194,779.524353 363.177704,774.267273 364.074249,768.906372  C364.763885,764.782654 365.742920,760.859802 367.035370,756.894836  C368.402649,752.700256 369.661621,748.297485 368.409668,743.376709  C368.220459,742.522278 368.228699,742.023560 368.449951,741.166809  C371.135315,738.238647 372.538971,735.232361 372.718445,731.525330  C372.937836,726.993042 374.479889,722.770691 376.572388,718.358704  C376.865387,716.732910 377.312897,715.536621 377.693268,713.919067  C378.826172,710.880066 380.800568,710.995605 383.341003,711.957153  C385.447205,713.539734 386.231720,715.610596 387.407959,717.826843  C387.737091,719.040527 387.753082,719.956665 388.049469,721.167664  C388.441254,722.825989 388.748749,724.157593 388.863708,725.869995  C387.736420,729.128479 387.841370,731.839905 388.437439,735.063110  C389.346649,739.979126 388.248108,745.165649 386.400330,749.986328  C385.993073,751.048706 385.306549,752.022827 385.647461,753.569641  C385.817474,754.106628 385.886322,754.322876 386.030457,754.873901  C386.441132,758.993408 384.353699,762.419983 384.439545,766.027710  C386.371735,763.800842 387.687042,761.057068 389.771912,758.468262  C392.522217,758.341797 394.150909,759.649597 395.705444,761.793335  C396.747314,766.902405 397.763763,771.628784 397.981812,776.848999  C392.154724,783.823425 395.036896,791.809082 395.419250,798.943909  C395.727142,804.689026 393.806244,810.664368 396.617798,816.451538  C397.962555,819.219482 392.542480,826.377686 389.351685,827.281555  C387.498688,827.806458 386.497864,827.130676 386.136230,825.271484  C385.884216,823.976135 386.566162,822.628052 385.837433,821.242249  C385.103210,823.785400 384.774078,826.217651 385.486023,828.713989  C385.903931,830.179382 386.166290,831.705261 385.454041,833.115967  C384.425293,835.153381 383.859222,837.937683 381.246735,838.308838  C378.781860,838.658875 378.467072,835.855042 377.276459,834.371216  C376.768127,833.737671 376.414764,832.923645 375.384033,832.865356  C374.165283,833.914551 374.881500,835.294312 374.830078,836.878540  C374.862640,838.532898 374.072540,839.696533 374.142334,841.346436  C374.186462,842.118103 374.185699,842.563293 374.123779,843.350464  C372.765900,846.450195 371.059662,848.936279 370.801239,852.252930  C370.584137,855.039001 368.482086,856.987610 365.364105,857.128418  C363.498169,857.212646 361.976196,857.857910 361.798767,859.851074  C361.473816,863.500977 358.959900,866.166748 357.824402,869.376648  C356.691895,872.578003 353.124084,871.947937 351.974426,873.819397  C350.750946,875.810974 353.337158,879.111328 351.068359,881.309021  C349.121704,883.194641 349.122345,885.002808 349.570496,887.536926  C350.221558,891.218323 350.667877,895.099609 348.083282,898.533569  C346.991760,899.983826 346.833923,901.939575 346.276398,903.674622  C345.537354,905.974548 346.241974,907.961121 348.515472,908.404541  C353.845856,909.444031 353.180206,912.491272 351.622528,916.134888  C350.906342,917.810120 350.428314,919.594604 348.787659,921.128479  C348.105896,921.543884 347.678619,921.676880 346.905457,921.697327  C346.013092,921.539246 345.478394,921.246338 344.599548,921.371338  C344.149963,921.579895 343.970520,921.678772 343.502502,921.914062  C338.020020,922.335571 334.705780,924.787720 333.396820,930.013977  C332.834503,932.259216 331.262299,934.105164 329.419037,935.592529  C326.265961,938.136597 324.127930,941.470093 322.231659,944.960571  C321.511993,946.285278 321.106110,947.771912 318.871094,947.714966  C318.314697,947.541443 318.107117,947.428894 317.688110,947.032104  C316.962128,940.660950 320.322327,935.615967 322.007202,929.594788  C318.887756,931.935608 316.756775,934.426147 316.662354,938.156616  C316.565247,941.992798 314.511505,942.635925 311.338013,941.644897  C310.704529,941.447205 310.100006,941.155823 309.439423,941.041138  C303.221741,939.961548 303.143982,939.812195 306.017609,934.467834  C304.072479,936.566956 304.064056,936.565247 303.460815,939.485962  C302.983765,941.795654 302.505371,944.095459 299.737854,945.298706  C298.744415,945.519592 297.685516,943.922180 297.385803,946.123169  C297.207642,949.015381 295.946930,951.182007 294.841614,953.413635  C293.875214,955.364746 293.052582,957.360107 294.018860,959.519531  C294.372345,959.758057 294.709900,959.797607 294.972931,959.548706  C296.840881,957.781555 298.359985,955.092896 301.605042,957.257385  C304.732910,959.343750 303.853760,962.040894 302.828827,964.786438  C302.538422,965.564270 302.349030,966.375732 301.990540,967.500610  C301.778992,968.044556 301.681152,968.256958 301.404541,968.768799  C300.085663,971.448120 299.670746,973.273254 303.115997,974.314941  C305.921204,975.163147 308.125275,984.342712 306.436493,986.654968  C305.778503,987.555725 304.860382,987.935120 303.817871,987.655273  C301.641663,987.070923 301.055084,985.486572 301.339203,983.520813  C299.994781,987.052490 299.935608,987.244995 302.311005,987.974976  C304.541199,988.660278 306.441498,989.499268 306.753082,992.043701  C307.117798,995.021973 304.117737,994.469849 302.759674,995.653076  C302.479126,995.897583 302.452057,996.240906 302.752625,996.992676  C304.964935,995.732239 307.156128,994.459106 307.403015,991.749390  C307.949463,985.752319 308.964172,979.918335 311.279083,974.305847  C312.092621,972.333374 312.098480,970.065369 312.013611,967.886047  C311.925018,965.612610 312.837128,963.864563 315.081635,963.345520  C317.581421,962.767334 318.278931,960.924988 319.301727,958.935425  C321.482513,954.693604 322.391479,949.722046 326.246277,946.403442  C327.347046,945.455933 326.717804,944.222534 326.675568,943.106018  C326.573700,940.413330 327.108429,938.066833 330.022858,937.108582  C331.632324,936.579468 332.261536,935.497070 332.760040,933.916077  C334.106384,929.646057 334.505219,929.604248 338.616608,932.726562  C339.415588,934.810547 339.290466,936.508728 338.213135,938.467651  C337.822662,940.177002 336.880341,941.337891 336.671509,943.002747  C337.576599,941.876038 337.597260,940.696167 338.108887,939.338013  C341.697510,934.135742 343.138458,933.812988 345.362030,937.321716  C346.298553,938.799438 346.601440,940.280029 344.961243,941.199646  C342.003479,942.858032 342.498749,945.623108 342.247803,948.543213  C341.341156,950.927246 342.557068,951.950439 344.324341,953.075439  C344.820740,954.680237 344.209137,955.613770 343.235901,956.373962  C342.713776,956.781860 341.570160,957.233032 341.643250,957.431641  C344.215271,964.419067 335.909119,963.914062 334.317474,968.073792  C333.565308,970.039368 331.718353,971.084778 329.395386,970.360291  C326.320251,969.401306 324.551727,971.028076 323.605377,973.595398  C321.323975,979.784607 320.146454,986.423462 315.670654,991.680664  C314.692108,992.830017 315.687103,994.227539 316.257172,995.407288  C317.429901,997.834045 317.012024,1000.868408 315.159119,1001.748779  C311.484589,1003.494568 313.456207,1005.835815 313.402344,1008.125793  C313.292267,1012.802734 314.577332,1017.908813 309.603088,1021.521606  C306.498260,1021.521057 305.184265,1019.214233 303.970337,1017.452087  C300.839264,1012.907227 296.696930,1008.803650 295.934113,1002.779419  C295.650452,1002.751221 295.320740,1003.317993 295.349487,1003.645325  C295.869080,1009.561401 292.014771,1013.138550 289.082855,1017.651367  C286.165344,1022.142090 283.873871,1027.181641 280.244385,1031.750488  C272.645752,1032.000000 265.291504,1032.000000 257.468628,1032.000000  C257.798309,1028.518921 258.596619,1025.037964 259.364410,1021.690063  C261.526276,1021.453918 261.167694,1023.820984 262.703552,1023.971741  C263.203949,1022.290894 262.978302,1020.388367 264.334351,1018.943604  C265.038452,1018.193542 265.164703,1017.067932 264.724792,1016.122131  C261.586670,1009.375183 260.631470,1003.265930 262.264191,995.132812  C262.763550,992.645325 262.531616,990.621887 261.266968,988.245850  C260.894073,986.331604 259.360352,984.508728 261.642670,983.084961  C262.086365,982.808228 262.595184,981.778137 262.421722,981.494629  C257.555542,973.543213 260.984070,965.386475 261.731842,957.302612  C261.792175,956.650208 262.046539,955.586121 261.758148,955.394470  C256.120544,951.647949 260.193787,950.281555 263.259583,948.255310  C265.950195,946.476990 268.277924,944.149536 271.150299,942.403442  C268.408325,946.632996 269.783020,952.355408 265.670471,955.899414  C264.937378,956.531128 264.800232,957.990479 265.760010,958.580933  C268.621216,960.341125 267.791809,963.218262 268.178131,966.061768  C269.709259,965.221741 271.131226,964.552002 272.434143,963.700134  C274.244537,962.516479 275.101318,960.541016 275.131561,958.580566  C275.211121,953.427734 276.043854,951.286377 280.311554,947.372070  C280.676208,947.037537 281.388855,946.746033 281.401642,946.413940  C281.657684,939.756470 287.795837,935.973450 289.443542,929.744019  C290.269745,926.620422 291.054016,921.940674 295.670715,920.149719  C296.164642,919.871704 296.331696,919.743408 296.749390,919.807556  C297.266876,921.737793 298.146484,923.396729 296.940613,925.230286  C296.263733,926.259399 294.273163,927.378235 296.175293,928.949158  C297.369843,929.935791 298.904083,930.283081 300.399506,929.843750  C302.698364,929.168335 302.908295,926.207520 302.477478,925.375732  C299.501923,919.630981 305.280731,920.154419 307.373993,918.138367  C307.861603,917.668762 308.788116,917.654907 309.670929,917.382446  C308.639435,915.042114 305.687286,917.655518 304.891602,914.663269  C304.098511,911.680725 306.606842,911.296814 307.671204,910.164673  C310.506958,907.148438 306.829437,903.615479 308.964447,900.375366  C309.398102,899.624084 309.852692,899.487122 310.694275,899.796753  z\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M97.275787,1031.715576  C91.977905,1032.000000 86.955818,1032.000000 81.466858,1032.000000  C80.324387,1031.302490 80.275055,1030.423584 80.809990,1029.755249  C83.874619,1025.925659 84.312790,1021.314453 84.811523,1016.408447  C84.566826,1015.821167 84.770134,1015.278748 84.403366,1015.195251  C84.232964,1015.156555 84.227341,1015.619995 84.631538,1016.161926  C84.548897,1019.168701 83.352989,1020.986816 80.422058,1020.865906  C77.275681,1020.736206 76.361404,1024.191650 73.364479,1024.805176  C71.990677,1024.692017 71.211266,1024.135742 70.265587,1023.176819  C69.257927,1022.130066 69.107567,1020.450073 67.704636,1020.681641  C66.614754,1020.861450 66.684189,1022.237854 66.473228,1023.174133  C65.819771,1026.074097 65.502983,1029.089233 63.243111,1031.749268  C56.312355,1032.000000 49.624710,1032.000000 42.468533,1032.000000  C41.217346,1031.220581 40.767651,1030.042358 41.413990,1029.307129  C44.674107,1025.598633 45.101017,1019.971008 49.633446,1017.182861  C50.842850,1016.438843 51.448620,1015.530396 50.556999,1014.375732  C46.473530,1009.088013 48.863670,1004.436279 51.979691,999.955811  C54.071598,996.947998 55.459736,993.579224 57.474548,990.155029  C57.717709,989.635925 57.816456,989.429016 58.094818,988.929871  C59.265072,987.659546 59.675900,986.345032 60.503563,984.878906  C62.434841,983.311768 64.114899,982.148621 63.258518,979.414856  C62.492271,976.968689 61.034100,975.960022 58.605045,975.969727  C57.786747,975.973022 57.005859,975.640320 55.858215,975.481079  C50.972462,974.263000 49.073669,971.390320 49.848042,966.881287  C50.044682,965.736328 50.652126,964.729309 50.954762,963.623718  C53.218426,955.354309 54.542179,956.367249 45.165649,954.032043  C44.394127,953.619507 44.038670,953.273071 43.640266,952.480591  C43.486095,950.740845 43.965553,949.594421 45.346966,948.524780  C48.298180,948.424438 49.778954,947.595276 48.979874,944.573242  C48.595665,943.120239 48.610310,941.450073 49.384010,940.180725  C52.226421,935.517334 52.519970,930.756836 51.463451,925.412720  C50.649094,921.293457 54.245071,921.928345 57.164455,922.154663  C55.421719,918.864990 55.074169,915.790710 58.251881,913.240662  C59.980820,911.853271 60.286625,910.456055 58.575542,908.671509  C55.367275,905.325623 56.289722,901.486023 58.289028,898.149475  C59.719742,895.761841 60.108803,893.285339 60.856361,890.763184  C63.723743,881.089172 63.854034,870.670898 68.755257,861.567017  C69.571365,860.051086 69.874664,858.853516 68.086929,857.819153  C66.833160,857.093689 65.203537,856.410461 65.721878,854.498962  C66.233368,852.612854 68.278442,853.460693 69.781525,852.533386  C64.681763,847.186279 68.939598,843.652100 72.538376,839.729858  C75.677063,840.765625 78.488991,841.652405 81.548180,838.456238  C79.559685,839.537415 78.014465,840.007080 77.251907,838.038269  C76.523712,836.158264 76.722778,833.880859 78.730843,833.394653  C82.339478,832.521118 82.819328,830.260559 82.805756,827.215942  C82.797920,825.456177 83.889374,824.096985 85.430153,823.241394  C87.795219,821.927979 89.697098,822.007935 89.898422,825.275208  C89.992432,826.800781 89.684303,828.224121 91.747528,828.711731  C95.928574,829.699829 96.192635,832.535339 94.863991,835.992493  C99.913391,834.501648 100.985374,838.505188 102.995766,841.782104  C103.356331,842.256348 103.486000,842.458862 103.766258,842.992065  C104.156807,844.014343 104.274872,844.729248 104.338989,845.815186  C103.707954,850.118347 103.422638,853.731567 105.900444,857.560547  C108.436646,861.479736 105.013084,864.980286 102.617889,867.636047  C100.203232,870.313416 98.699425,872.766846 99.082176,876.415405  C99.367653,879.136658 97.953064,881.177429 95.640594,882.594788  C91.504494,885.129883 90.066086,889.253052 88.599159,894.186096  C90.648857,892.295105 91.335617,890.380127 92.417404,888.722839  C93.505524,887.055908 94.181664,885.407959 97.321426,885.814453  C98.906204,886.019592 102.488869,884.209534 104.236008,882.492188  C105.892395,880.864075 108.024864,878.583374 107.288841,875.499268  C106.819916,873.534180 107.666290,871.934509 109.044434,870.174133  C109.454865,869.756836 109.635361,869.606445 110.111389,869.266602  C112.244484,868.241821 113.297729,866.536072 114.671883,865.193787  C116.916794,863.000977 119.290100,862.325500 122.286362,864.525391  C123.982941,866.766602 124.848343,869.054504 126.053741,871.580994  C126.933762,873.767395 127.511940,875.641479 127.028458,878.008911  C126.329971,880.182983 123.995018,881.078552 124.239151,883.702454  C124.488197,886.420410 123.932213,888.620667 122.677322,890.632080  C121.296906,892.844666 119.328941,893.878784 116.823975,892.819214  C114.429024,891.806152 113.918587,889.815125 114.897423,887.496582  C115.976997,884.939575 115.791283,882.360474 115.240707,879.530396  C115.216904,879.313599 115.272804,879.026611 115.155884,879.153625  C114.795761,882.400757 114.178070,885.479797 113.605049,888.534973  C112.950531,892.024780 114.866585,893.493103 117.508194,893.376465  C122.417900,893.159729 122.047989,895.288574 120.313171,898.383911  C118.962463,900.793884 119.303986,902.413452 121.600334,904.275330  C126.367126,908.140564 126.530708,912.064819 122.870270,916.863708  C120.848091,919.514832 123.218849,922.651062 122.140930,925.807983  C121.629883,928.285034 121.207611,930.476379 121.719727,932.594482  C122.450363,935.616455 123.211502,938.436707 119.837013,940.483459  C118.530785,941.275757 119.613457,942.580811 119.549812,943.652405  C119.320625,947.511108 120.815765,951.476807 115.794205,954.439941  C113.581459,955.745728 114.190170,961.230957 115.175201,964.718140  C116.236877,968.476746 115.969170,972.017029 114.489868,975.447266  C112.617859,979.788208 111.505432,984.378906 111.040863,988.954712  C110.131996,997.906555 106.930374,1006.008911 103.163101,1013.985474  C102.439529,1015.517456 102.108932,1017.129822 101.662521,1018.730164  C101.078293,1020.824707 100.475517,1022.954895 97.685547,1023.744629  C93.469833,1022.805542 96.033516,1018.693420 93.683899,1016.571411  C91.942383,1019.770142 92.170265,1023.098511 91.608009,1026.419312  C94.022987,1026.576660 94.754501,1023.762878 97.180573,1024.805298  C98.942863,1027.136719 99.594299,1029.272095 97.275787,1031.715576  z\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M156.221481,1031.730469  C149.978851,1032.000000 143.957703,1032.000000 137.468277,1032.000000  C130.644730,1024.023071 136.339615,1016.976624 139.296265,1009.646057  C136.499283,1010.449890 136.068069,1012.703979 134.853058,1014.321411  C132.747986,1017.123535 130.676682,1016.926392 129.435287,1013.656799  C128.157944,1010.292480 125.622772,1006.452637 131.633789,1004.692078  C132.810959,1004.347351 132.990555,1002.940918 132.937866,1001.698547  C132.622925,994.270874 133.936417,986.990845 134.918488,979.343018  C134.630859,976.055847 135.048767,973.117065 134.929337,970.169617  C134.813766,967.317139 136.142136,965.856506 139.811157,966.369019  C137.722351,964.267212 137.641449,962.165283 138.545929,959.723999  C138.624908,959.479675 138.585266,959.024902 138.342865,958.930786  C134.455826,957.600098 134.596268,954.810913 136.230118,952.458679  C139.445969,947.828918 140.309204,941.951599 144.448181,937.809570  C145.796341,936.460388 146.313019,934.343384 145.752060,932.203613  C144.318542,926.735779 144.531082,926.484375 150.666718,925.836548  C148.439117,922.706726 148.682419,920.736145 152.171646,918.138672  C155.537033,915.633362 158.464798,911.837646 157.989487,906.775879  C157.665512,903.325378 157.861359,900.063293 162.052612,898.743958  C164.176193,898.075439 163.727539,896.098816 163.598328,894.490417  C163.293839,890.700317 164.792496,887.527710 166.153183,884.068237  C168.345139,878.495239 171.119751,873.315125 173.918823,868.074097  C175.461670,865.185181 174.504837,861.624268 173.415527,858.887512  C172.091507,855.561035 173.099075,853.903503 176.152237,851.948853  C171.330078,851.941345 172.311203,848.710999 172.187317,846.131775  C172.068298,843.654236 172.409943,841.230347 175.431870,840.885193  C176.819138,840.726746 177.707306,840.676025 177.526978,839.077881  C177.020325,834.588196 179.539871,831.187317 181.629272,827.257080  C181.856476,825.373352 182.232834,823.952820 184.126175,823.083618  C185.294708,822.800293 186.144363,822.715820 186.936279,822.970703  C188.831955,823.580688 191.306732,820.913025 192.712219,823.838989  C193.917374,826.347961 193.681946,829.034851 192.776993,831.598755  C192.121582,833.455688 190.719864,835.016968 190.578644,837.097168  C190.449341,839.001648 190.239426,840.897949 189.671432,842.771912  C193.198441,837.379089 195.276276,831.246887 195.649200,825.142639  C196.015579,819.145325 198.615479,814.061096 200.655533,808.966797  C202.727997,803.791443 205.460999,798.905762 206.593201,793.012817  C207.757019,792.159729 208.715469,792.248962 210.011017,792.762207  C211.785263,793.657715 211.758118,795.493469 213.121048,796.628113  C215.591187,792.934204 210.477539,787.245300 216.612305,784.487061  C217.647202,784.038879 218.387497,783.959290 219.523407,784.065186  C220.643372,784.343018 221.301178,784.715576 222.159485,785.459839  C223.643692,787.696167 223.670731,789.911865 223.239716,792.019470  C222.563736,795.324829 222.270676,798.536987 223.112274,801.871887  C223.573303,803.698730 222.860062,805.515137 221.875793,807.104736  C217.153275,814.731506 213.173157,822.719910 210.446945,830.393555  C210.810425,826.706360 213.829605,825.414795 217.862350,825.404236  C219.722076,825.399414 220.930023,826.084473 220.464935,828.024170  C219.809937,830.755798 219.582993,834.092834 217.324677,835.744202  C213.678955,838.410217 212.884048,842.266724 211.797653,846.019104  C210.964371,848.897278 209.318466,851.636597 208.794388,854.300903  C207.947968,858.603943 208.773285,863.254517 207.046585,867.642822  C209.116562,862.361328 215.320007,858.532532 212.572601,851.427612  C212.996780,850.700562 213.400711,850.443848 214.238403,850.236511  C215.351395,850.179565 216.061462,850.407166 217.154480,850.559998  C218.254257,850.678589 218.955276,850.873047 219.908783,851.413391  C221.475235,853.181946 221.337631,854.926697 220.919693,856.738586  C222.414856,852.135071 225.221619,848.058838 226.488586,842.971680  C227.848373,841.627808 229.325455,841.139648 231.015930,840.257141  C234.332260,840.025513 235.179337,841.556335 234.488739,844.560181  C233.438354,850.971191 230.773605,856.553467 229.706345,862.650146  C230.615875,863.025391 231.731049,862.068176 233.070053,862.899658  C234.756424,865.625854 235.727585,868.156860 233.445679,871.037231  C232.171509,871.991821 230.390915,870.990112 229.728119,873.046509  C229.176529,874.166992 228.629410,874.871887 227.508881,875.484436  C223.662659,877.998169 217.810013,876.662048 216.280121,882.701294  C216.109055,883.220337 216.029724,883.421875 215.816086,883.912231  C215.291107,884.940918 215.040543,885.714478 215.128662,886.893066  C214.643570,890.998413 213.055374,894.406738 211.231873,897.656006  C209.745178,900.305176 208.899460,903.007324 208.950516,906.357971  C208.801147,908.150208 208.466675,909.682983 211.561630,910.389099  C209.930496,909.388123 209.358444,908.614136 209.283539,907.269165  C210.369186,904.537415 212.607285,904.604614 214.411591,905.109253  C217.940216,906.096191 219.643875,904.315491 221.132385,901.655212  C222.019379,900.070068 222.741821,898.365967 223.851883,896.935547  C225.815109,894.405823 227.188217,891.134155 231.232956,891.079834  C232.441315,891.063599 233.064728,889.790283 233.784546,888.441284  C234.183167,887.706238 234.434479,887.296509 234.907257,886.590271  C235.574188,885.691040 236.071655,885.133118 237.006210,884.493774  C238.664795,883.917358 239.844971,884.177795 241.128448,885.350830  C242.209518,891.982483 241.632721,892.647644 236.331619,895.429321  C232.335800,897.526123 229.424896,900.909851 227.786636,905.217102  C227.546707,905.863525 228.656952,905.597717 228.003433,905.465942  C227.730209,905.410828 227.708740,905.273743 227.832169,905.005249  C228.631393,903.267578 229.858612,902.006531 232.080872,901.447083  C232.654602,901.542358 232.873962,901.631104 233.321320,901.992188  C234.506775,905.171631 232.756378,906.980103 230.875076,908.680969  C229.771683,909.678528 228.184967,910.371338 227.725174,911.793030  C225.643494,918.229614 221.478653,922.758179 215.519562,925.764709  C214.921585,926.066406 214.046326,926.656494 214.388000,927.167297  C218.102463,932.718689 210.582397,937.474426 213.394943,943.255676  C214.320145,945.157471 212.770660,948.393250 210.459290,950.545898  C206.201218,950.819397 206.451157,947.744873 205.880646,944.888611  C204.379745,945.900513 203.319305,947.372131 201.684113,947.951355  C200.280289,948.448730 198.798187,949.177917 197.657944,947.627747  C196.658829,946.269531 196.897400,944.734619 197.922623,943.513733  C199.620193,941.492004 201.503510,939.618042 201.764725,936.423096  C201.932297,935.859314 202.016861,935.639221 202.274475,935.111328  C205.532440,930.023682 204.900864,928.165039 199.099152,925.517456  C198.232666,924.313782 198.295761,923.273621 199.087585,922.550781  C203.279144,918.724365 202.715500,914.371155 200.391190,909.635742  C201.425903,914.909424 198.362991,917.382812 194.237885,919.045288  C193.106369,919.501282 191.958038,919.920898 191.691910,921.178162  C191.040939,924.253479 188.949570,926.404114 186.921539,928.589905  C188.089432,930.008789 189.609802,928.810059 190.994690,929.735229  C192.164780,932.989319 189.668793,933.567871 187.846863,934.506897  C185.929611,935.494995 183.611084,935.363892 181.454575,936.734436  C181.018188,937.123718 180.844574,937.279724 180.397125,937.651367  C176.875000,940.476135 173.840820,943.163940 176.554260,948.231934  C176.795593,948.974548 176.881119,949.409790 176.969147,950.175293  C177.037872,951.363281 177.183823,952.210999 177.374725,953.387390  C176.700760,958.897339 172.360535,962.988403 173.181778,968.691589  C173.478104,970.749451 173.988113,972.495300 175.238312,974.447815  C175.037003,975.628540 175.231628,976.395996 175.587097,977.187195  C176.312454,978.801819 176.646591,980.743469 175.169495,981.809326  C173.297516,983.159973 170.809509,983.434143 168.525864,983.268127  C167.183640,983.170471 166.938629,981.573181 167.248962,980.420105  C167.880203,978.074585 166.976562,976.179077 165.878922,974.652832  C165.804504,973.622314 164.892807,974.642578 165.475540,974.318726  C165.656479,974.218079 165.831253,974.359619 165.763977,974.695984  C164.810974,979.460327 167.623917,983.602722 168.058243,988.224670  C168.536682,993.316162 167.935669,997.440857 164.506561,1001.080139  C161.045486,1004.753357 160.014053,1008.703796 162.400269,1013.385437  C163.235748,1015.024597 163.501694,1016.912354 163.088547,1018.758423  C162.577988,1021.039734 161.592316,1023.031189 158.733459,1022.399902  C154.444595,1021.452637 154.831192,1023.953186 155.400970,1026.680298  C155.734512,1028.276733 156.993317,1029.671387 156.221481,1031.730469  z\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M948.192017,927.187378  C947.945923,924.987000 945.909668,923.005676 947.929443,920.904297  C949.459656,920.869446 949.381775,922.467590 950.127197,923.197876  C953.759094,926.756042 953.607422,926.761658 950.717041,931.154175  C949.590027,932.866882 949.163391,935.818237 951.065125,936.387024  C953.247314,937.039734 956.046204,939.221436 958.627075,935.997559  C960.910828,933.144897 962.608521,929.589905 966.637817,928.006226  C969.444092,931.837158 972.495667,930.914917 976.226440,929.096863  C973.283447,926.819031 969.737671,930.417969 967.245728,927.239319  C966.999756,926.669983 966.867676,926.251160 967.019958,926.018616  C968.359802,923.972961 963.881287,921.686401 966.873291,920.266357  C968.711304,919.393921 971.183044,918.624756 973.625671,919.484497  C974.301086,919.722229 975.352966,918.890259 976.287231,918.527710  C975.975708,923.409241 980.500549,928.027832 985.155823,927.353760  C987.120239,927.069275 987.714294,927.993103 988.690552,929.217224  C990.505676,931.492920 992.237671,933.972229 996.183594,934.608398  C993.605835,936.525208 991.657898,937.814697 989.163818,938.180176  C988.316345,938.304382 987.597534,938.833557 987.532654,939.782043  C987.473694,940.644287 988.220093,940.786316 988.865356,940.943542  C989.889038,941.192932 991.912720,940.833435 991.383484,942.361511  C990.807922,944.023254 990.523560,946.501343 988.103027,946.891174  C986.528076,947.144897 985.126038,947.282837 984.862366,949.236511  C984.483643,952.042297 986.912354,950.573303 987.931641,951.243652  C989.707581,952.411743 989.759766,954.199951 990.071777,956.015869  C990.519653,958.622253 991.685547,959.837158 993.897217,957.245850  C995.120605,955.812439 996.433594,954.827271 998.793152,955.563477  C997.690247,957.808350 994.623108,958.005615 994.770691,960.713440  C994.805725,961.356262 993.953247,961.879456 993.274963,961.411377  C989.025085,958.478027 990.526611,963.263428 989.141235,964.673645  C988.009949,966.456238 986.251953,965.259766 984.956665,966.113953  C987.479675,968.094971 990.472778,969.623230 990.167480,973.705322  C989.259644,974.874573 988.272217,975.240417 987.450623,974.374878  C985.769531,972.603882 984.078613,972.968933 982.752380,974.472046  C981.445679,975.953186 981.384399,978.356628 982.553772,979.560669  C986.360718,983.480469 984.235779,987.360046 982.750305,991.071716  C982.076355,992.755615 982.641113,993.894958 982.953552,995.639526  C983.699951,996.749451 983.855591,997.831543 984.785645,998.785645  C986.084351,1000.273987 985.318726,1001.394897 984.251038,1001.708618  C981.005188,1002.662292 979.210022,1006.897644 974.719910,1005.404480  C973.155334,1004.884094 971.442627,1007.107605 970.890747,1009.425049  C971.245117,1010.766357 971.710388,1011.712891 972.512695,1012.865295  C972.736877,1016.192322 974.615479,1016.927429 977.033691,1016.123596  C980.039551,1015.124512 981.370850,1016.585266 982.401855,1019.349976  C982.391968,1020.427673 982.022949,1020.998413 981.262573,1021.733398  C979.734558,1023.118408 979.369690,1024.253906 981.101807,1025.454712  C981.207886,1024.350220 980.071716,1023.492371 980.884277,1022.142822  C981.713013,1021.402039 982.378845,1021.122192 983.529785,1021.144531  C984.427124,1021.301819 984.918823,1021.479492 985.749695,1021.889404  C992.563171,1024.074707 993.447876,1025.930054 990.277222,1031.693604  C980.979126,1032.000000 971.958191,1032.000000 962.468628,1032.000000  C961.012268,1031.180054 962.183777,1029.746094 961.618408,1029.286743  C956.262085,1024.935791 959.477783,1020.116028 961.290833,1015.919189  C963.167114,1011.575989 964.198547,1006.840210 966.930603,1002.861572  C967.680054,1001.770142 968.032349,1000.578003 968.062561,999.158997  C968.120239,996.453308 966.919983,996.902893 964.998535,997.756104  C964.440369,997.619934 964.227966,997.526062 963.775818,997.199646  C963.122681,996.336853 962.855469,995.252625 961.848267,996.389709  C960.733582,997.648254 959.520508,998.825867 957.938416,999.422607  C955.926880,1000.181396 955.041809,1000.878113 955.369629,1003.612732  C955.915649,1008.168579 953.173279,1009.703186 946.368958,1009.716675  C946.012146,1010.118042 945.871521,1010.280029 945.531006,1010.690918  C943.524353,1013.041138 945.859192,1015.551819 944.472290,1017.995361  C943.845093,1019.534058 940.316772,1018.500854 942.213257,1021.619263  C942.582947,1022.333069 942.657654,1022.783020 942.537720,1023.582397  C941.742432,1024.976562 940.627258,1025.287964 939.156616,1025.618896  C937.928772,1025.741333 937.035339,1025.665527 935.805054,1025.698364  C935.242065,1025.652710 935.017212,1025.612915 934.469727,1025.448730  C932.031128,1024.176147 931.867676,1022.302490 932.285339,1020.236938  C932.683472,1018.268494 933.051697,1016.322144 930.933350,1014.560669  C930.463379,1013.861206 930.318604,1013.404236 930.257568,1012.555969  C930.357788,1011.713440 930.497253,1011.251465 930.854980,1010.489929  C933.437988,1006.529907 936.765686,1003.447144 938.086060,998.773376  C934.418335,998.071167 931.492371,1003.681152 927.632568,999.603271  C927.372742,998.812134 927.899414,998.207153 927.025024,997.618286  C926.100342,996.958618 925.567139,996.332275 924.950684,995.359619  C923.860474,993.283997 920.348328,995.747986 920.372253,992.458435  C920.394714,989.367981 921.976685,986.855957 924.442383,985.398499  C928.021057,983.283264 930.060913,980.382324 930.979492,976.105225  C930.343140,974.575928 935.726196,975.392883 932.001770,973.145630  C931.485168,972.833801 931.296692,971.880493 931.707825,971.319641  C934.573425,967.410156 933.040344,960.000977 941.787292,960.483398  C939.053284,958.771240 937.285767,959.564575 935.200806,959.678955  C934.625610,959.623779 934.399780,959.569336 933.873779,959.343018  C933.407166,959.014648 933.240662,958.858215 932.858643,958.440125  C932.514038,957.995667 932.385132,957.812805 932.077515,957.349426  C931.423523,955.785767 930.156555,955.106995 929.401245,953.629639  C929.073303,950.336060 926.487549,949.355591 924.580994,947.891235  C922.113281,945.995911 921.003662,943.717346 922.877930,941.065308  C924.597412,938.632202 923.304932,938.001526 921.367004,937.282349  C919.636230,936.639893 918.110168,935.659424 916.522400,933.640442  C917.733154,935.769043 919.344421,936.433167 920.652100,937.404114  C922.314026,938.638062 923.211426,940.018799 922.244812,942.057617  C921.324585,943.998596 921.583984,945.754517 922.367859,947.754211  C923.646301,951.015320 921.551575,952.401733 918.696106,952.694458  C914.710449,953.103149 910.095703,948.606750 911.187683,944.799683  C912.572266,939.972412 908.559326,935.923279 910.005249,931.232483  C910.304321,930.262390 908.882324,929.772766 908.123657,929.148010  C905.082397,926.643799 905.101624,926.620483 908.739807,924.064941  C906.947571,923.247864 905.230408,922.368042 903.279175,921.190918  C900.139160,919.469238 901.212524,916.746887 901.003540,914.420166  C900.829529,912.483032 900.702759,910.541687 900.278809,908.299927  C898.178162,905.354126 898.826904,902.320679 898.676270,899.007935  C899.032043,895.576904 899.833252,892.647949 900.699280,889.349854  C900.963196,888.568909 900.977112,888.120728 900.995483,887.336304  C899.224487,884.888489 900.348267,882.534790 900.492126,879.902527  C902.012939,873.583862 903.138245,867.535217 902.504150,861.421509  C902.157166,858.076477 905.814941,855.889038 904.243347,852.243958  C903.908569,851.783142 903.784180,851.591125 903.530090,851.080688  C902.855957,848.990906 904.536621,847.300537 903.494324,845.188599  C903.342834,844.405457 903.391968,843.960022 903.761597,843.263672  C906.945496,839.310181 907.325378,834.915955 907.335205,830.442322  C907.337952,829.170837 907.923340,828.244934 908.651001,827.311829  C909.358582,826.404541 910.588135,825.427734 910.566162,824.505737  C910.426941,818.659729 913.476379,813.779053 915.140137,808.493469  C915.634094,806.924377 915.457458,803.912659 917.731934,804.485291  C920.034058,805.064941 922.343628,808.089905 921.326477,810.260986  C916.553284,820.449585 917.538025,831.404541 916.402405,842.064392  C916.261963,843.382629 915.938416,844.475281 915.589111,845.699585  C914.751465,848.635742 912.265686,851.460083 914.788757,854.948547  C915.569580,856.028137 915.387939,858.422607 914.751770,859.802429  C911.798584,866.208496 913.546570,872.932129 914.733276,878.950439  C915.714844,883.928528 912.775208,881.163635 911.800781,881.862793  C912.734680,886.037292 916.325745,887.674622 919.370300,889.810669  C921.679199,891.430603 921.196106,891.064453 922.241516,888.605835  C923.247864,886.239075 923.800232,884.632996 922.415283,882.221069  C921.853333,881.242432 924.320312,880.798706 925.281006,879.917725  C926.324158,878.961182 927.025208,880.190247 927.723145,880.812988  C929.199585,882.130371 928.186401,882.662109 926.995178,883.257385  C926.304260,883.602600 926.195312,884.404114 926.729126,884.911865  C927.145874,885.308105 928.053101,885.744019 928.423279,885.550842  C934.434631,882.413757 932.077026,888.285278 933.469971,890.183472  C931.623230,889.874329 931.026611,887.278137 928.606873,887.930115  C926.875427,888.396729 926.242615,888.838074 925.079102,890.621033  C922.602844,894.415649 924.717041,899.763062 920.271667,902.594666  C918.524475,903.707520 919.667847,905.077637 921.115234,905.424377  C924.083557,906.135559 927.374084,907.548706 928.391968,902.575745  C928.878784,900.197327 929.938232,900.018311 932.132385,901.899109  C935.246765,904.568726 938.874573,906.649536 941.587769,909.839661  C942.189270,910.546936 942.950134,910.775757 943.767700,910.159912  C945.169617,909.103943 946.719788,907.040894 948.296265,909.253967  C949.205872,910.531006 951.220093,912.022461 950.236389,913.955688  C949.116394,916.156494 947.069763,917.264526 944.424316,917.033630  C943.501465,916.953125 942.409485,916.730103 941.437622,918.121277  C943.213928,919.230652 944.400513,920.576416 943.595642,923.142883  C942.742126,925.864319 944.562317,927.069336 947.613892,927.000488  C948.186890,927.192139 948.376892,927.381287 948.567627,927.569702  C948.758484,927.758362 948.696411,927.694214 948.192017,927.187378  z\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M788.730164,904.790588  C789.007324,904.998779 789.009827,905.496948 789.008667,905.746033  C793.555969,909.672852 790.166443,912.587219 787.856201,915.898132  C787.291626,916.481323 786.925476,916.757751 786.240173,917.151367  C784.250183,917.902649 784.430603,919.731201 783.386475,921.151550  C782.816040,921.682495 782.425537,921.903137 781.683472,922.187622  C777.511230,922.686768 777.555420,925.621460 777.193176,928.706543  C776.766663,935.034119 773.124817,940.267029 772.981140,946.320679  C772.958374,947.282898 772.959778,948.738403 771.660706,948.502258  C767.556580,947.755981 767.704346,951.057129 766.784607,953.324585  C765.870911,955.576782 765.830872,958.181946 763.773254,959.978821  C763.301147,960.391052 763.020752,961.878845 763.337891,962.204834  C766.119019,965.064697 763.593750,968.218140 763.997925,971.584717  C762.916626,973.329041 761.654114,973.649719 760.166016,972.680054  C759.073364,971.968140 757.995056,971.217224 756.285034,971.813110  C754.634583,971.519836 753.567322,969.371155 752.114136,970.360291  C750.210999,971.655884 752.565369,972.337585 753.054077,973.317749  C753.212524,973.635559 753.065979,974.358643 752.795166,974.598022  C750.087097,976.991638 748.815002,980.812378 746.481445,982.920654  C743.019592,986.048340 742.756653,988.439209 745.309143,992.331421  C742.984985,992.405884 740.955627,990.328552 739.283691,992.856750  C737.395325,992.608521 736.721802,991.317566 735.950073,990.025269  C734.026978,986.804749 731.300659,986.772156 729.419067,990.065674  C728.515320,991.647461 728.028564,993.423462 725.592590,993.839478  C725.026611,993.791504 724.805176,993.736084 724.296387,993.497559  C723.630066,992.725159 723.622681,992.144897 724.051147,991.575195  C723.372864,991.338074 723.134338,992.045105 722.650391,992.243286  C721.452393,992.734009 720.830139,994.000793 719.354858,994.701904  C718.585510,994.932983 718.128723,994.976562 717.323120,994.920288  C715.418213,994.568176 713.693054,993.319397 712.367798,995.071594  C710.606689,997.400085 708.275818,996.784607 705.702698,996.816589  C704.453064,997.555969 703.533936,998.339233 702.407410,998.481384  C699.510376,998.847107 700.419373,1000.207642 701.604004,1001.996948  C701.890991,1003.060974 701.824707,1003.765320 701.234619,1004.716309  C699.429382,1007.431946 697.879272,1009.782959 694.306274,1009.061462  C692.705933,1008.738342 691.534546,1009.868530 690.671753,1011.266357  C688.294922,1007.446167 691.300903,1002.394714 687.526550,999.294678  C686.274536,999.773438 686.358826,1000.326599 686.646729,1001.003906  C687.026245,1001.896912 688.712891,1002.937256 686.699768,1003.695190  C685.559753,1004.124268 684.921509,1002.955627 684.606750,1002.026428  C684.240295,1000.944763 684.214478,999.748657 683.857483,998.662476  C683.680359,998.123474 683.148804,997.401672 682.679443,997.318970  C681.629333,997.133850 681.247437,997.867920 681.478088,998.862671  C681.958557,1000.934937 679.621704,1002.317200 680.566406,1004.871704  C681.608582,1007.689880 678.025146,1006.390503 676.598022,1007.708130  C677.892090,1009.901367 679.232361,1012.172913 680.786316,1014.722229  C680.941589,1015.352234 680.770691,1015.640442 680.251465,1015.937988  C679.250000,1016.001709 678.500000,1016.001038 677.375000,1016.001404  C675.646729,1012.738831 672.518738,1011.360352 670.033875,1009.254150  C667.645813,1007.229980 666.686707,1007.893738 666.010620,1010.529114  C665.329895,1013.182617 665.659302,1015.735535 666.634399,1018.237000  C667.166443,1019.601562 668.038208,1020.887207 667.227539,1022.731567  C660.316406,1026.916382 662.876221,1018.823303 659.309937,1017.356506  C659.102966,1022.456482 662.874146,1028.815552 655.253052,1031.737793  C637.645752,1032.000000 620.291565,1032.000000 602.468628,1032.000000  C599.931030,1030.397583 599.271240,1027.868896 597.962463,1025.772583  C596.768250,1023.859558 597.538513,1022.339355 599.457764,1021.284302  C598.257202,1020.262146 596.930603,1020.730896 595.654297,1020.759094  C594.175537,1020.791748 592.943237,1020.160400 592.542358,1018.744995  C591.780823,1016.056152 593.635254,1013.511108 592.661560,1010.512817  C591.657104,1007.419861 594.965942,1006.188049 597.221863,1004.829651  C601.355530,1002.340759 603.113464,997.245850 607.836792,995.305420  C609.318787,994.696533 610.661560,993.979858 612.010498,994.907898  C615.364075,997.215210 617.584656,995.192078 619.851990,993.116455  C621.710632,991.414734 622.812744,988.442200 626.295410,989.582092  C629.687683,990.692383 629.866150,993.588684 630.422729,996.342468  C630.113953,992.019897 627.088074,988.593750 626.346436,984.066101  C626.391663,982.834412 626.851379,982.036316 626.953979,980.819458  C627.023315,980.044250 627.097473,979.603577 627.308472,978.842896  C629.879150,974.618286 631.997620,976.738770 633.945557,978.987366  C636.331665,981.741760 638.746765,984.306274 643.148499,983.677490  C643.656006,983.400269 643.866882,983.301636 644.412537,983.097168  C648.648010,982.786987 652.381653,983.346680 655.570435,985.780701  C658.098816,987.710693 660.366821,986.953430 662.145996,984.969421  C668.425781,977.966370 668.366150,977.913513 675.493835,983.395081  C675.769409,983.607056 676.084045,983.684143 676.735596,983.629089  C677.577942,980.974915 673.885437,976.658081 678.774902,975.414551  C681.331787,974.764282 684.704651,973.315430 686.504333,977.444946  C685.055786,979.535950 685.386108,981.772766 684.764343,983.771118  C685.642090,983.680115 686.486877,982.951904 687.689697,983.748962  C688.644897,984.659790 689.290466,985.393494 689.445251,986.423340  C689.311646,985.436523 688.676331,984.742432 687.804382,983.792358  C686.234680,982.209778 685.778870,980.632629 686.402893,978.487549  C687.041687,977.613220 687.732788,977.210205 688.323425,977.542786  C693.228027,980.305054 698.593384,978.932434 703.708008,979.036743  C707.765930,979.119385 709.600037,982.610596 713.274109,983.643188  C713.837585,982.210449 713.014709,980.817078 713.085876,979.461792  C713.173706,977.789429 713.850098,975.911804 715.570862,976.570007  C719.646912,978.129150 723.395142,974.544617 727.308167,976.251892  C728.455200,976.752258 728.020081,975.885803 728.264709,975.425537  C730.080505,972.008362 733.269775,970.877502 736.830261,970.744995  C739.917969,970.630127 742.423950,967.745972 745.940857,969.081970  C744.260010,967.325378 741.501892,966.315979 742.660278,963.235962  C743.579529,960.791748 745.417786,960.387939 747.863464,960.446594  C750.318726,960.505676 751.161804,958.101074 752.390198,956.202637  C748.214233,957.669495 744.235107,959.475952 739.674927,959.169373  C738.239929,959.072876 736.388977,959.840637 736.480774,962.205872  C736.584778,964.888306 734.391052,965.484863 732.723267,964.739685  C726.198547,961.825012 718.957520,962.669128 712.334595,960.481079  C711.493225,960.203125 711.009399,959.518738 710.889160,958.333557  C713.057312,956.674255 713.864319,951.267273 718.073669,956.142700  C718.562195,956.708496 724.158752,955.440491 727.273438,954.640747  C731.773987,953.485168 735.928406,950.801086 740.832642,953.895691  C742.434204,954.906189 741.662109,950.496704 743.876587,951.119019  C750.160461,952.884827 753.959473,947.342529 756.308044,944.379639  C758.930054,941.071838 762.129944,938.355713 764.664673,935.071655  C766.037048,933.293579 766.946167,930.261230 761.474487,930.312073  C767.597778,929.369507 770.630310,927.314331 769.091064,921.498779  C768.620728,919.721863 768.493652,917.426697 771.405396,916.846497  C773.158875,916.497070 772.234680,915.115234 772.221863,914.021729  C772.196594,911.865601 770.838684,909.296875 773.798889,907.870667  C774.054260,907.747681 774.392456,907.200256 774.366577,907.174194  C768.807373,901.590881 776.194458,900.621521 778.074463,898.589600  C779.926270,896.588135 778.730957,894.693237 779.157043,893.059692  C780.064087,889.582458 779.678101,885.784058 781.380249,882.241516  C782.387146,880.146240 779.805481,879.375488 778.549194,878.193665  C785.242798,873.697815 783.273682,865.520996 786.928284,859.101807  C787.927246,862.050110 791.294434,863.834595 788.561707,867.380249  C787.653870,868.558167 789.134521,869.818298 789.504700,871.048767  C789.793457,872.008362 791.249146,873.103027 789.485962,873.977661  C788.132507,874.648987 787.783386,875.559326 788.586304,876.757141  C789.264099,877.768311 790.159790,877.714172 791.130981,876.959900  C792.009888,876.277222 792.700378,876.619202 792.887573,877.684265  C793.514832,881.253235 794.105652,884.828857 794.672729,888.407898  C794.718750,888.698425 794.516479,889.054443 794.364441,889.346130  C792.927307,892.104858 796.124878,893.828064 795.899292,896.355957  C795.603394,899.672913 790.849731,895.354431 791.012085,899.645508  C791.338928,901.403442 790.325989,901.579712 789.005127,901.775391  C788.425293,901.669556 788.203979,901.590393 787.704956,901.303894  C786.531250,900.084595 786.103455,898.895691 786.104187,897.327759  C786.121033,897.104431 786.268555,896.794983 786.268555,896.794983  C786.268555,896.794983 785.926697,896.752686 785.795593,896.951538  C784.775024,899.170410 786.115173,901.148987 785.606140,903.319641  C784.915833,906.263428 787.748901,903.484253 788.730164,904.790588  z\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M533.529297,935.231567  C538.377625,934.639343 538.515991,934.987061 543.692810,938.906372  C545.485168,940.263245 546.377991,941.562195 546.852417,943.778442  C549.479004,945.098694 551.614319,946.709473 553.869995,948.737183  C554.655396,950.581360 553.742004,951.926270 553.409729,953.357178  C552.978210,955.215881 552.821777,956.936218 554.545288,958.361084  C556.543823,960.013306 557.407288,962.060608 555.932007,964.516968  C555.154724,965.811218 555.795044,966.705078 556.559082,967.644592  C558.963379,970.600830 558.779907,973.838196 557.323730,977.053772  C556.283997,979.349548 556.537292,980.728638 558.625916,982.556152  C561.082153,984.705383 562.169373,988.083069 563.396484,991.157471  C564.297607,993.415283 562.708130,994.809875 561.026489,996.418030  C565.082764,994.705383 567.784058,994.418945 567.538879,999.946228  C567.469971,1001.500183 569.954895,1002.593689 570.505493,1004.425049  C570.902832,1005.747070 571.180298,1007.143433 569.882446,1008.078003  C568.613037,1008.991943 567.590637,1008.113403 566.456909,1006.812988  C567.117004,1008.196045 567.874451,1008.836426 568.834106,1009.181519  C574.099670,1011.075378 572.877625,1017.199951 576.187256,1020.532837  C577.487854,1021.842651 574.845093,1023.073364 573.328369,1024.036987  C580.585999,1024.296753 581.489929,1025.676270 578.242737,1031.747559  C563.312439,1032.000000 548.624878,1032.000000 533.468628,1032.000000  C532.890930,1031.874146 532.670898,1031.729492 532.688538,1031.625000  C533.765991,1025.208984 529.585815,1020.468201 527.393066,1015.110901  C525.264099,1009.909363 524.715332,1004.292175 522.708618,999.039795  C522.614258,1003.956482 523.485046,1008.901184 525.210449,1013.337463  C526.793762,1017.408630 525.958801,1022.248962 529.559387,1025.770508  C530.758911,1026.943848 529.763428,1030.151855 527.385437,1029.325806  C523.811035,1028.083984 526.492065,1031.207520 525.227417,1031.733643  C506.312439,1032.000000 487.624878,1032.000000 468.468658,1032.000000  C467.296570,1027.386597 470.805115,1024.634155 472.824219,1021.245667  C473.488434,1020.131042 474.892365,1019.574280 475.736145,1018.073120  C476.868866,1016.172180 477.719818,1014.512207 478.975464,1012.694641  C482.820618,1008.961121 484.623077,1004.218933 487.802002,1000.040527  C488.636719,998.653687 489.263000,997.525940 490.079651,996.145264  C490.676666,995.195312 491.335449,994.654114 491.570160,993.514771  C491.741669,992.587341 491.942352,991.990540 492.364197,991.133972  C493.226624,990.019165 494.191437,989.507629 495.258362,988.615723  C496.294800,987.744934 497.302094,987.273071 497.625397,985.809204  C498.102539,984.011536 498.958771,982.735718 499.717102,981.058228  C500.113525,980.171875 500.474609,979.640015 501.059509,978.879456  C501.773712,978.005371 502.452332,977.492798 502.792389,976.358032  C503.836731,974.047363 505.643036,972.691895 507.016418,970.589478  C508.164551,969.331299 508.962280,968.196045 510.396301,967.216858  C513.671692,966.163269 514.766968,963.686279 515.881531,960.789795  C516.145935,960.279968 516.268616,960.085388 516.616821,959.631470  C518.123718,958.640625 518.738037,957.540894 518.714905,955.717957  C519.194153,953.455139 520.004700,951.765259 521.951355,950.389160  C523.425537,949.672363 525.004272,949.576965 524.970459,947.379883  C525.095276,946.848083 525.162048,946.641418 525.383484,946.152100  C526.292114,944.928406 527.585876,944.428284 527.948181,942.771362  C528.356384,941.881653 528.740356,941.357239 529.445190,940.669861  C531.121155,939.457886 533.587097,939.494019 533.304932,936.489380  C533.318665,935.951111 533.349670,935.736206 533.529297,935.231567  z\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M855.769165,921.236145  C856.834839,920.996460 857.674561,921.059753 858.498535,920.973328  C864.274658,920.367554 867.174011,922.509705 867.773010,927.865295  C868.069763,930.518494 863.619751,934.281067 859.365601,934.811890  C861.253296,937.501892 863.185730,938.408691 866.445190,936.903625  C870.561523,935.002747 873.603394,936.938965 876.011475,941.297424  C873.166748,941.014771 870.542603,943.043640 868.668213,939.544617  C867.674866,937.690247 866.765564,939.370422 866.039490,940.070312  C864.743835,941.319153 865.676208,942.204468 866.752258,942.804016  C868.480042,943.766724 870.330872,944.509155 872.055176,945.477356  C873.034790,946.027405 874.404419,947.711548 873.010193,947.944824  C870.195068,948.416016 868.886292,952.873718 864.944641,950.439758  C862.259277,948.781433 859.154236,950.941345 856.235291,951.326660  C855.075500,951.479614 855.070129,952.762451 855.067261,953.782043  C855.063293,955.205627 855.948975,955.810181 857.169250,956.174072  C861.149902,957.361267 865.636963,956.760437 869.104126,959.886108  C870.109253,960.792297 873.799622,959.386841 872.219849,962.354431  C871.139160,964.384399 871.576660,969.858948 866.287354,967.244751  C865.689148,966.949097 865.214478,966.504272 864.516541,966.890198  C863.817017,972.158630 865.502380,975.226074 870.213257,977.065308  C870.892517,977.330505 871.614197,978.177124 871.460144,978.235779  C867.336182,979.805725 869.492371,984.838257 866.530212,987.027710  C869.592468,988.162231 875.040833,987.036804 874.690796,991.687805  C874.226624,997.855164 868.507080,995.005188 865.451721,995.083313  C862.264404,997.345947 870.734741,996.559753 865.336914,998.991333  C862.232849,997.144409 862.004700,999.111328 862.032837,1001.078796  C862.063782,1003.246460 861.616150,1004.472839 859.143738,1005.300842  C855.791992,1006.423401 858.688232,1010.541748 856.781982,1012.788513  C857.375793,1013.383911 857.513428,1013.840393 857.205322,1014.685425  C855.401062,1015.126282 853.340637,1014.489807 852.599426,1016.439880  C851.804749,1018.530640 854.193481,1018.434509 855.098694,1019.395935  C856.175964,1020.540283 856.969177,1022.054382 857.528381,1023.542419  C857.820007,1024.318359 856.942383,1025.645264 858.561340,1025.704224  C859.576782,1025.741333 859.791809,1024.841675 859.968933,1023.986877  C860.670715,1020.600708 864.213745,1018.943542 865.067444,1015.528625  C865.236877,1017.717529 868.653137,1020.074463 864.518250,1021.822449  C864.260620,1021.931335 864.349060,1023.024597 864.391785,1023.651978  C864.737061,1028.730957 864.736145,1028.480225 860.218628,1028.646729  C858.229858,1028.719971 860.158508,1030.430298 859.966064,1031.679932  C846.979126,1032.000000 833.958191,1032.000000 820.468628,1032.000000  C819.138184,1031.057251 819.415283,1030.028931 820.201782,1029.386963  C825.846741,1024.778809 823.822021,1019.024231 822.945312,1013.272522  C822.298828,1009.031128 823.983337,1004.969055 825.292908,1000.737732  C825.945496,1000.485474 826.369324,1000.861328 826.572388,1000.753540  C827.151306,1000.446045 826.686096,1000.979187 826.160156,1000.144165  C825.440613,998.854309 825.052246,997.711304 824.193237,996.910828  C822.099731,994.959534 822.128113,992.990051 823.827698,990.791016  C825.176941,989.045166 825.374817,986.794006 825.806030,985.710510  C825.527893,989.853271 821.108276,990.947571 817.529480,992.598755  C814.511719,993.991089 814.185425,995.269775 816.193115,997.743286  C817.860901,999.798157 817.863159,1002.944946 820.831604,1004.273071  C822.023865,1004.806519 822.107300,1006.524109 821.453918,1007.862488  C820.799255,1009.203369 819.636780,1009.847290 818.193298,1009.610901  C814.632690,1009.027588 810.686951,1009.002930 809.081299,1004.809631  C808.565979,1003.463867 807.371399,1003.393066 806.151978,1002.591431  C805.570435,1002.000854 805.365723,1001.578308 805.204224,1000.764343  C804.854004,999.059937 807.076172,996.633179 803.282471,996.816528  C800.841309,996.753296 798.158081,997.880615 797.056213,994.370361  C796.983582,993.403564 796.800720,992.869080 796.204590,992.207275  C792.664001,992.592102 788.628296,994.917786 788.002075,988.389771  C794.044739,985.304016 797.308350,980.070312 799.896057,974.427979  C801.305603,971.354614 800.407043,967.901306 797.927979,965.899780  C795.435669,963.887573 794.376221,963.543518 796.876709,960.106995  C798.030579,958.521240 799.202515,954.197144 799.121521,950.761353  C799.037476,947.194580 802.252258,946.422974 804.200745,948.153259  C806.354309,950.065613 808.099182,950.658630 810.666870,950.026123  C814.277588,949.136719 813.794312,953.270081 816.276733,954.715637  C816.504822,949.670288 823.018738,952.146729 823.951538,947.371460  C827.852600,945.975708 829.067810,948.087585 829.251465,951.697754  C829.238403,951.980408 829.260559,952.420837 829.473999,952.469421  C829.986206,952.359863 830.330017,952.179260 830.434937,951.877502  C831.118835,949.910034 834.288025,948.623291 833.077332,946.463806  C832.033936,944.602844 829.378784,946.082153 827.448975,946.028687  C825.806580,945.983215 824.260498,944.911072 822.284912,945.806030  C822.000000,946.000000 821.500000,946.000000 821.250000,946.000000  C820.421143,945.181580 819.842224,944.363159 819.132935,943.271118  C823.170044,941.736633 824.612000,935.840088 830.038208,936.552124  C830.747070,936.645081 830.993408,935.230530 830.383301,934.517090  C828.379517,932.173889 829.331604,928.510681 825.547546,926.574097  C822.197937,924.859863 825.781921,923.390076 827.692505,922.139893  C829.354675,921.741089 830.281006,922.546021 831.462097,923.565063  C832.364441,924.772034 832.599426,925.917786 833.335327,927.212830  C832.777832,925.272583 832.656616,923.503967 830.749634,922.243225  C830.424622,921.486328 830.431580,921.021912 830.777100,920.278748  C832.012573,918.104980 833.016663,916.212952 829.134155,916.332336  C832.560974,912.911316 835.005310,913.066956 837.758728,916.627380  C840.633972,920.345337 849.059265,920.790100 852.476196,918.025879  C853.882385,916.888367 855.050232,914.025269 857.199890,915.630920  C859.284180,917.187622 855.453796,918.412964 856.010132,920.631348  C855.197876,922.097351 853.242981,922.355713 853.746216,925.153076  C854.214355,923.333984 854.601868,922.214233 855.769165,921.236145  z\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M139.631653,957.992798  C140.412735,960.579102 136.674408,964.322693 142.191452,965.521179  C143.075073,965.713074 142.939941,966.996338 142.267944,967.600952  C141.417526,968.366211 140.446701,969.061279 139.170868,968.172852  C135.683228,965.744202 136.240646,967.969971 136.391541,970.412964  C136.551453,973.002075 136.154648,975.625488 136.001099,978.616943  C133.549515,982.114807 131.129272,985.256409 128.234100,988.282654  C128.168732,988.515869 128.295242,988.969849 128.532043,989.071045  C131.527832,989.502625 132.082581,991.007080 130.947250,993.346436  C129.802292,995.705750 127.908989,997.237061 125.151794,998.241882  C122.311852,998.963196 122.164253,1001.725952 120.231766,1003.320251  C115.887657,1003.474304 114.178535,1005.950928 113.502548,1009.538330  C113.442062,1009.859375 113.362938,1010.178650 113.266075,1010.490723  C112.305099,1013.586243 111.701401,1020.624390 112.147293,1023.490967  C111.189766,1025.462524 113.121796,1026.641968 112.726059,1028.521240  C112.222771,1029.988525 111.244873,1030.663696 110.240189,1031.756836  C107.299988,1032.000000 104.599968,1032.000000 101.449982,1032.000000  C100.200096,1029.835815 102.194763,1028.434937 102.556519,1026.624146  C101.899368,1028.245239 100.790642,1029.702759 100.214767,1031.736572  C99.250000,1032.000000 98.500000,1032.000000 97.375000,1032.000000  C97.770790,1029.896729 97.532501,1027.794922 96.974487,1025.325684  C96.625862,1024.563477 96.494362,1024.107056 96.755920,1023.296631  C99.580086,1022.620850 99.897758,1020.387268 100.226311,1018.522217  C101.352638,1012.128723 105.289207,1006.863647 107.173836,1000.860840  C109.040802,994.914307 109.958282,988.626221 110.796379,982.420959  C111.142212,979.860413 112.118263,977.711670 112.975143,975.405212  C114.367226,971.658386 114.806244,968.118774 113.277542,963.931946  C112.054810,960.583252 113.077400,956.408081 113.145706,952.600403  C113.158844,951.868591 113.681252,951.435303 114.392105,951.265930  C118.446457,950.299866 119.542221,946.732178 116.852554,942.728516  C115.947067,941.380676 116.116005,940.619324 117.480843,940.031982  C120.553780,938.709717 121.604919,936.964417 120.189804,933.450806  C119.407600,931.508667 119.591331,928.858032 120.723190,926.296021  C126.745514,923.740173 126.862419,918.514587 127.205544,913.638550  C127.401382,910.855652 126.929665,908.267212 130.831192,907.853088  C132.896729,907.633850 132.971283,905.611816 133.353775,903.994446  C134.366959,899.710266 133.860764,895.384216 133.829788,890.717896  C135.639709,886.020142 136.592361,881.477051 137.235397,876.852722  C137.738235,873.236572 139.535156,871.025879 143.501358,871.259888  C146.686020,871.447815 147.484833,869.997559 146.043015,867.301514  C144.996414,865.344482 145.134018,863.528503 146.003326,861.578003  C146.521744,860.414734 147.269318,859.120117 145.751053,857.642822  C144.247513,854.811584 144.832642,852.599304 146.607269,850.477173  C148.475510,848.242859 145.987228,849.319519 145.033600,848.895386  C141.344482,845.713013 141.544785,845.329163 145.231033,840.429138  C148.185654,836.501587 149.963196,840.199280 152.538452,841.225220  C156.155991,844.025208 157.455688,841.873413 158.731598,838.775024  C159.212265,838.390503 159.435852,838.273071 160.033646,838.064209  C161.508759,837.886780 162.479706,838.176147 163.497040,839.290771  C165.002243,843.412903 162.132019,846.401550 161.632401,850.215820  C161.507904,851.017517 161.294662,851.394409 161.092117,851.796936  C160.794846,852.387817 161.379364,851.654968 161.055984,852.237061  C160.973694,852.385193 161.054260,852.288147 161.265106,851.547974  C161.829300,848.711975 162.610641,846.476440 165.574783,845.872925  C166.381683,845.708679 167.270477,845.387939 167.642944,844.659424  C169.511627,841.004333 171.927185,837.819824 175.086823,835.170349  C175.665405,834.685242 175.558655,833.638428 175.784027,832.498169  C175.934372,831.942627 176.011612,831.725525 176.255066,831.205994  C177.077377,829.967957 178.158173,829.450806 179.026154,828.240845  C179.439484,827.842590 179.621155,827.699036 180.121811,827.413452  C181.148148,827.104309 181.825256,827.168030 182.723511,827.768188  C183.104721,828.115112 183.224899,828.230225 183.345093,828.345276  C178.525833,832.651428 178.784470,838.551208 178.932129,844.209106  C176.371490,844.605713 177.216827,840.844788 174.920486,841.834534  C174.023636,842.221069 173.084122,843.123779 173.395264,844.171570  C173.984772,846.157043 174.000259,848.059143 173.189453,850.386719  C175.389618,850.386719 177.390549,850.386719 179.960190,850.386719  C178.601822,852.398254 176.767792,852.865784 175.586868,854.158325  C174.278839,855.589966 174.476562,855.706543 174.970139,857.713379  C175.913437,861.548645 178.065384,866.419250 174.677963,870.270874  C169.987030,875.604797 169.362183,882.857910 165.514465,888.607544  C164.104340,890.714722 164.703796,893.829285 165.345459,896.417847  C165.976151,898.962158 165.003403,900.706665 162.658447,900.564270  C158.799072,900.330017 159.096405,902.498901 159.468216,904.934326  C160.550156,912.021240 157.158936,916.710144 151.410355,920.168640  C149.371140,921.395447 149.582596,922.195007 153.084412,926.504639  C151.838943,928.423767 150.160721,927.149170 148.618469,927.225647  C147.133636,927.299377 144.175278,928.516907 145.923157,929.795349  C150.964294,933.482666 146.895645,937.953735 145.549286,938.955688  C142.065399,941.548401 142.377167,945.603577 140.178909,948.529480  C139.060333,950.018250 137.852249,951.708801 137.052261,953.514648  C136.016617,955.852417 135.875427,957.807556 139.631653,957.992798  z\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M375.214355,1031.718750  C368.645599,1032.000000 362.291199,1032.000000 355.468384,1032.000000  C351.191284,1023.629822 349.279327,1014.419495 343.454590,1007.715576  C343.260223,1008.323608 342.331635,1009.555359 340.761444,1010.193726  C339.805389,1010.582397 338.810974,1010.779114 337.993958,1009.941772  C337.337616,1009.268860 337.409637,1008.397217 337.746765,1007.611389  C339.098389,1004.461182 339.230530,1000.707275 343.228394,997.992310  C339.853210,997.712280 338.791443,996.195801 339.252045,993.621094  C337.440460,1000.056763 337.384460,1006.950745 333.946381,1013.270142  C330.146484,1017.238098 330.146484,1017.238098 325.409332,1012.643494  C327.227051,1016.131958 330.350098,1016.464966 332.748962,1018.367798  C337.159729,1024.560913 337.037384,1027.839722 332.278503,1031.722168  C326.645081,1032.000000 321.290131,1032.000000 315.467590,1032.000000  C313.165009,1029.910278 312.789185,1027.187866 312.006317,1024.685059  C311.400879,1022.749451 311.398590,1020.421875 313.698792,1019.517456  C315.950287,1018.632324 317.447418,1019.956665 318.111206,1021.941650  C317.606842,1017.004272 318.538025,1012.142822 321.510071,1007.855896  C322.699860,1006.139771 323.292084,1004.417908 323.555389,1002.367249  C324.666748,993.712830 326.086121,985.207275 334.037537,979.605713  C336.796844,977.661865 336.292480,973.775879 338.131439,971.189148  C343.112366,964.183044 347.920746,957.064697 352.231140,949.620239  C353.140472,948.049744 354.725098,947.203491 356.321747,946.998352  C361.541992,946.327454 364.058197,942.890015 365.958771,938.498230  C366.694244,936.798767 368.111908,935.227966 370.194672,935.616028  C372.360840,936.019714 372.963135,938.119873 372.816345,939.921936  C372.614868,942.394958 373.400543,944.112305 375.601196,945.726318  C378.493042,951.445679 378.454926,957.599060 380.654877,963.551270  C381.266357,964.900208 381.444916,965.949463 381.485657,967.418457  C381.436005,969.612183 381.459869,971.413330 381.323914,973.582642  C381.185547,974.903564 380.897949,975.838806 381.105713,977.168945  C381.200226,978.009521 381.220001,978.493591 381.191467,979.345459  C381.075073,980.719238 380.237823,981.710449 380.415131,982.566406  C381.421112,987.424194 381.036163,991.058838 375.350159,993.093445  C372.826172,993.996582 373.494751,997.862366 373.720184,1000.432312  C374.169861,1005.557129 374.779053,1010.677917 375.815247,1016.083801  C376.139465,1017.087341 376.247467,1017.777100 376.405090,1018.799927  C376.446167,1020.079224 376.937225,1020.814636 377.649475,1021.827576  C378.281006,1022.962952 378.595856,1023.857910 378.976776,1025.125244  C379.239746,1026.504395 379.169891,1027.499268 378.598511,1028.785156  C377.985657,1030.612915 374.704529,1028.469604 375.214355,1031.718750  z\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M156.468658,1032.000000  C155.704666,1029.146362 152.862183,1027.368286 153.596283,1023.713989  C154.282410,1020.298584 156.325424,1019.575623 158.105606,1020.538147  C161.981750,1022.633972 161.495895,1019.688660 161.897293,1017.838928  C162.092117,1016.941040 161.921616,1015.703125 161.417923,1014.954712  C156.472900,1007.607422 161.078018,1002.279175 165.418182,997.199829  C166.698456,995.701599 167.380142,994.296997 166.908386,992.862305  C165.623932,988.956055 167.492844,984.717346 164.555573,980.723877  C163.048538,978.674988 164.473099,974.447571 164.667221,971.210388  C164.683441,970.940125 165.418182,970.536621 165.824814,970.529602  C166.084305,970.525208 166.652679,971.252930 166.574173,971.455627  C165.679199,973.767578 167.239502,974.830078 168.749191,975.918640  C171.863800,978.164368 167.233627,979.918579 168.554581,982.375793  C170.250076,982.605042 171.205551,979.467468 173.903702,981.060242  C174.998642,981.706543 174.957108,978.437622 174.158569,976.869995  C173.783646,976.134033 171.464798,975.295898 174.689102,975.002441  C175.831757,972.718262 177.055191,971.308228 179.816544,970.782959  C184.925873,969.810913 189.162796,962.748901 188.125290,957.801575  C187.920013,956.822632 187.453110,955.653992 187.950394,954.886292  C191.813095,948.923950 190.477051,941.805725 192.434753,935.446716  C193.139542,933.157349 195.047455,932.665039 197.567978,933.235962  C199.172653,934.638184 200.990097,934.797791 202.763916,935.774170  C203.415955,939.200989 202.508972,941.835815 199.675919,943.620056  C198.436371,944.400818 197.490891,945.589722 198.345276,946.869202  C199.529434,948.642395 200.543045,946.603333 201.628326,946.270325  C202.546463,945.988708 203.461319,945.688171 203.928741,944.626343  C204.480408,943.373169 204.574493,941.131836 206.465668,941.630676  C208.469543,942.159180 208.080429,944.171509 207.576965,945.817139  C207.009842,947.670776 207.621841,949.003967 209.661957,949.942566  C211.282654,950.792114 212.777939,951.421082 212.217438,953.686035  C210.719635,960.850769 209.524567,967.657959 205.614716,973.763489  C204.330338,975.769348 204.730545,978.744324 203.178558,981.093628  C202.303055,982.418945 203.464203,985.206909 204.983704,985.062561  C209.890930,984.596375 207.895065,987.379089 207.321747,989.385315  C206.812820,991.166260 208.084213,992.572510 207.990265,994.609802  C205.938156,995.279419 204.877670,997.019470 205.199600,998.510254  C206.134689,1002.840637 205.084351,1007.085938 204.279892,1011.071655  C203.310898,1015.872559 202.766525,1021.225647 199.177658,1025.094604  C197.350769,1027.064087 198.383560,1029.140381 198.000305,1031.571411  C184.312439,1032.000000 170.624878,1032.000000 156.468658,1032.000000  z\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M375.308319,946.066895  C372.006165,945.334656 370.589142,943.844116 371.531006,940.628113  C371.958710,939.167908 371.464020,937.397949 370.168060,936.667480  C368.861969,935.931274 368.435059,937.774536 367.569092,938.422485  C365.036072,940.317505 368.161560,940.882019 368.529694,942.416016  C366.448792,943.387085 362.461517,942.223511 363.122955,946.699524  C363.193420,947.176514 361.892334,948.485718 360.002625,948.159119  C356.861664,947.616333 353.933167,948.044128 352.709869,952.295471  C352.007599,954.736023 349.740112,956.871277 348.055481,959.055725  C345.936951,961.802673 344.312927,965.034973 342.257690,967.959534  C340.151672,970.956177 337.669250,973.797668 337.238678,977.871277  C337.054413,979.614380 335.063660,980.937378 333.346863,982.278931  C326.941528,987.284302 325.896851,994.944458 325.036224,1002.450867  C324.759644,1004.863220 324.543182,1006.698120 322.605286,1008.899231  C319.442688,1012.491455 318.995850,1017.641113 319.385040,1022.539307  C319.460602,1023.489990 320.287262,1024.542358 319.351288,1025.308838  C318.463928,1026.035400 317.395508,1025.323608 316.553040,1024.928467  C314.402588,1023.919983 316.048462,1023.517761 316.875214,1022.745789  C317.781494,1021.899597 316.728210,1021.253906 316.139465,1020.825195  C315.648163,1020.467468 314.882904,1020.184875 314.318024,1020.290771  C313.072205,1020.524292 313.071411,1021.658875 313.025909,1022.666931  C312.889832,1025.681396 316.060760,1027.927490 315.000671,1031.578857  C312.958344,1032.000000 310.916656,1032.000000 308.437500,1032.000000  C305.500671,1028.457764 307.009949,1025.040039 308.660828,1021.308167  C313.729462,1016.557190 311.384277,1010.795105 311.948914,1005.556335  C312.253479,1002.730591 307.309113,1006.480652 308.886230,1003.004578  C309.741486,1001.119629 312.536072,1003.962036 313.269653,1002.349731  C314.197174,1000.311157 317.538574,998.566223 314.590057,995.481201  C312.760193,993.566650 312.358521,991.829407 315.177490,989.408142  C319.713226,985.512573 319.743866,979.077393 321.900513,973.806824  C323.423920,970.083618 324.679413,966.437683 330.411926,969.049561  C333.656769,970.528015 334.174438,965.743469 334.976868,964.083984  C336.124878,961.709961 335.480225,959.278015 338.235229,962.981262  C338.695404,963.599792 339.335754,963.730713 339.940155,963.269043  C340.635590,962.737732 341.257507,961.732300 340.683777,961.130066  C336.772278,957.024292 339.876923,956.030701 343.226227,954.993164  C343.549896,954.892822 343.676575,954.156677 343.947968,953.354736  C343.861755,952.803284 343.722290,952.612610 343.573608,952.067627  C344.913055,948.730408 345.855377,945.604431 347.833771,942.850159  C348.782654,941.529114 350.751465,939.060181 347.085205,937.472168  C344.634644,935.212830 342.314209,933.316223 339.680542,931.234436  C338.465607,928.384766 339.845215,926.569702 341.648071,924.552795  C343.505646,922.822021 345.926605,922.995056 347.743286,921.241089  C348.660889,919.309326 349.602051,917.678040 349.945953,915.929382  C350.379608,913.724487 355.203094,909.370544 347.486969,910.228821  C346.761078,910.309570 343.117615,908.021790 344.455688,903.902954  C345.984619,899.196472 349.643219,894.871094 348.383667,889.362122  C348.247101,888.764954 348.772919,887.793396 348.479553,887.489319  C345.201599,884.090698 347.147003,882.413818 350.234497,880.396667  C351.886230,879.317505 351.005157,877.011414 350.138947,875.351440  C348.493774,872.198608 349.043488,870.383911 352.907867,871.221802  C355.081482,871.693115 355.256592,870.967041 356.200134,869.155212  C358.228455,865.260315 360.370514,861.549438 360.904114,857.080139  C361.145172,855.061035 362.574829,854.985107 364.274872,855.576660  C367.965820,856.860901 370.099243,853.540649 369.609558,851.633972  C368.580353,847.626526 371.472595,846.137634 372.966919,843.329102  C374.567810,841.705627 376.119751,842.064392 378.005493,843.219849  C379.307739,844.531860 379.818146,845.754639 379.533447,847.581726  C378.924164,848.573486 378.253510,848.894653 377.195923,849.226929  C375.614044,849.590576 375.329895,850.452026 375.545074,851.557617  C376.121613,854.520020 375.871552,857.102600 373.024323,858.988159  C370.871338,860.413940 372.741669,862.733215 372.082031,864.894653  C371.945190,865.458374 371.873108,865.679321 371.653137,866.214600  C370.228638,868.726990 369.386902,870.988770 370.611938,873.851807  C370.938019,874.839294 370.962463,875.516357 370.733612,876.515198  C369.505127,878.168457 368.940247,879.663940 369.368103,881.753906  C369.441406,882.735107 369.448334,883.393982 369.419556,884.387756  C369.383301,885.166260 369.352417,885.609497 369.268555,886.379272  C369.032654,887.759766 368.719818,888.804688 369.082886,890.215942  C369.260223,890.988220 369.337341,891.439575 369.435425,892.249817  C369.872009,894.203918 370.088226,895.801331 370.015076,897.473145  C369.598541,906.992371 370.878418,916.302917 373.731079,925.792297  C374.647888,931.311096 375.535522,936.444031 376.226501,941.607483  C376.434113,943.159119 377.343903,944.795593 375.308319,946.066895  z\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M628.010010,978.655151  C628.001770,979.447693 628.001038,979.890564 628.000122,980.665466  C627.981079,981.593933 627.800415,982.131287 627.208740,982.796265  C629.112732,988.691711 632.192627,994.096497 632.548096,1001.013916  C629.819885,999.373291 628.125793,997.632263 628.621704,994.954041  C629.054077,992.619141 628.251831,991.745300 626.245911,990.864075  C623.705139,989.747742 623.415649,991.511536 622.244507,992.928406  C620.589417,994.930664 618.300415,996.409912 616.276550,998.105774  C615.730896,998.562988 615.173157,998.606628 614.456482,998.366211  C607.986511,996.195923 605.902161,996.885010 601.672913,1002.786438  C600.709290,1004.130981 600.086670,1005.549683 598.247070,1006.118652  C594.836914,1007.173340 591.873596,1008.627441 595.042969,1012.966614  C595.626160,1013.765137 596.298401,1015.169006 594.656860,1015.905884  C593.391907,1016.473694 592.714600,1017.307617 593.502502,1018.611816  C594.318176,1019.961975 595.453369,1019.467468 596.838623,1019.415344  C599.133301,1019.328857 601.864929,1019.438171 603.657349,1021.584045  C602.673401,1023.491699 601.500061,1021.901306 600.522217,1022.143433  C598.810852,1022.566956 597.332092,1023.636353 599.034851,1025.116821  C601.047119,1026.866455 600.989136,1029.205933 601.950684,1031.627075  C598.969421,1032.000000 595.938782,1032.000000 592.454102,1032.000000  C589.700623,1030.300293 591.289062,1026.186035 587.453857,1025.072998  C584.619751,1023.430054 583.473389,1021.263550 583.872925,1017.984375  C588.908325,1013.132690 583.220764,1010.470337 582.026001,1006.695435  C581.812439,1005.933533 581.724731,1005.494263 581.624390,1004.728760  C581.608582,1003.235229 581.045044,1002.448242 579.707397,1001.833557  C578.094421,1000.159363 571.728394,1002.177795 576.221069,996.562012  C577.892029,992.353760 575.597351,989.243774 573.258057,986.766541  C570.751953,984.112793 569.775146,982.382996 572.702881,979.400513  C575.596313,976.452942 578.233765,977.065308 581.175110,978.878967  C582.081482,979.437805 582.325684,980.466370 583.077637,981.648132  C583.883118,979.725525 582.552917,977.274780 584.778259,976.189026  C586.441040,975.377686 588.140625,974.691711 590.340149,975.594238  C591.243835,976.039978 590.439148,975.761536 591.049194,976.030273  C592.634216,976.728638 594.208801,978.302246 595.978027,976.823181  C597.072571,975.908203 595.176758,975.014587 593.329834,975.900330  C592.728943,976.188538 592.220276,976.566650 591.243042,976.175171  C588.709290,974.473450 587.447998,971.008911 583.600891,972.640015  C582.481140,973.114807 581.331360,971.897034 581.561890,970.513672  C581.914917,968.395386 582.013611,966.173035 582.792053,964.192261  C583.850281,961.499451 585.889282,961.729797 588.868774,964.699829  C587.645691,960.002930 589.182007,957.481384 592.928040,958.742065  C598.872803,960.742554 604.008545,958.921936 609.547607,956.470337  C613.856934,955.409790 616.027832,958.107239 618.036011,960.708496  C619.322327,962.374695 618.120850,963.741760 616.854370,964.751587  C620.531372,966.407959 624.055786,968.706299 627.287476,971.466553  C629.684021,973.513550 628.676208,975.929382 628.010010,978.655151  z\"})),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M1.244710,933.248962  C1.000000,916.979126 1.000000,900.958191 1.000000,884.468628  C5.960523,878.931030 9.154473,872.846375 11.241603,866.133240  C12.627962,861.674011 9.630256,857.836365 9.517498,853.264404  C10.248816,851.899292 11.266324,851.344849 12.322191,850.906494  C16.000826,849.378784 18.226589,847.430847 15.469046,843.162659  C13.692307,840.412659 16.441545,836.986938 14.405087,833.802063  C14.185331,833.031189 14.125854,832.580566 14.145250,831.790344  C14.296920,830.820251 14.547804,830.232544 15.044590,829.435120  C15.349114,829.059082 15.485803,828.923706 15.850569,828.635498  C16.415413,828.246582 16.461433,827.923218 16.308758,827.232727  C16.471760,824.287659 17.993805,822.251221 19.541634,819.867676  C22.815224,818.802063 22.635082,816.583679 22.198586,814.197632  C21.090797,808.142456 21.112411,808.169434 26.895638,806.952087  C28.157732,806.686401 29.325212,805.902893 31.003662,806.613464  C33.925224,811.102844 33.143669,814.973206 29.602200,818.776428  C28.713137,819.787598 27.632957,820.229736 27.649574,821.729614  C31.458286,826.033936 31.589079,826.892578 27.336119,830.292664  C24.235043,832.771851 22.926132,836.039856 23.378654,839.476013  C24.039314,844.492676 22.819963,849.409790 23.389465,854.366821  C23.579779,856.023254 23.416210,857.736450 22.725239,859.269958  C21.762156,861.407349 21.859198,863.033081 23.319260,865.176331  C25.676140,868.636108 24.187479,870.970032 19.424549,872.067383  C18.008680,873.450928 17.359774,875.039246 16.191050,876.165405  C14.934861,877.375793 14.066040,878.250061 15.421518,880.113831  C16.619955,881.761719 15.490454,883.560181 14.596691,885.511963  C14.086528,887.599670 14.626595,888.960449 15.789525,890.385864  C18.737993,893.999695 18.212143,897.814880 14.087420,900.298096  C11.803335,901.673157 10.847525,902.702148 12.164706,905.276428  C13.111793,907.127380 12.396754,908.564697 10.162971,908.764160  C7.387962,909.012085 7.596463,910.447266 8.932898,912.025452  C11.781704,915.389771 12.444120,919.338989 12.029955,924.463013  C13.214426,922.086731 12.147511,920.769775 12.094878,919.380493  C12.057159,918.385071 11.909492,917.353943 12.509329,916.481506  C15.987468,911.422363 16.008974,911.429626 16.727194,905.074158  C16.858635,903.911133 16.791891,902.605957 17.582319,901.747253  C21.628311,897.351929 21.964993,891.462585 24.116716,885.912476  C25.485117,884.096558 25.737638,881.672546 28.612921,881.512146  C30.423286,882.452332 31.363363,883.855286 32.503002,885.036072  C34.197624,886.791992 34.316730,888.703552 31.961359,889.902527  C29.974226,890.914001 29.836794,892.026062 30.797348,893.809509  C31.436771,894.996704 31.650282,896.508789 31.086971,897.674500  C29.291586,901.390015 30.646553,904.332397 33.081562,907.501709  C33.518612,911.937012 31.087648,914.583557 28.148487,917.363037  C25.353992,919.006348 23.330757,920.599182 23.121956,923.928955  C22.946735,926.723267 20.247803,928.233704 18.842186,930.431274  C18.043510,931.679993 16.660246,933.328918 18.262260,934.303406  C21.013313,935.976807 20.332264,938.981201 21.856712,941.434265  C22.401482,942.673584 22.593531,943.618042 22.224323,944.933472  C19.708735,946.687195 17.188667,945.767883 14.764263,945.706604  C12.281754,945.643860 12.060799,943.704712 11.954111,941.663147  C11.307964,943.454468 10.736436,945.241943 10.321374,947.065918  C9.804140,949.338867 9.045946,951.405457 6.165520,950.864990  C3.335484,950.334045 1.757322,948.442871 2.162157,945.531921  C2.574938,942.563843 2.455194,939.582581 2.766461,936.621582  C2.900000,935.351379 2.183526,934.429382 1.244710,933.248962  z\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M10.015657,852.653442  C14.486213,858.938110 14.162849,869.467285 8.458560,876.257751  C6.289199,878.840149 6.678234,883.833923 1.374621,883.991638  C1.000000,873.312439 1.000000,862.624878 1.000000,851.468628  C2.122688,847.027588 2.790639,842.969238 3.214862,838.541748  C2.940767,835.568726 4.757924,833.488586 5.284200,830.708069  C7.187465,828.052124 8.571601,825.554810 8.577869,822.171692  C8.594137,820.924194 8.914786,820.065796 9.072166,818.843994  C9.330420,817.680237 9.859410,816.958069 10.011055,815.773743  C10.043046,814.342651 10.659837,813.435364 11.176874,812.164856  C11.839898,811.027344 12.629765,810.304871 12.717386,808.892395  C12.905066,808.189880 13.031682,807.793091 13.307705,807.119263  C14.279010,805.762146 15.727294,804.987061 15.188990,802.935303  C15.198062,801.970032 15.428198,801.387512 15.940697,800.585083  C16.659010,799.757202 17.238724,799.203491 17.128263,797.999146  C17.240417,796.173523 18.142572,794.963684 18.896717,793.370056  C19.573627,792.476318 20.193521,791.950623 20.913448,791.118652  C21.216894,790.737976 21.336254,790.584778 21.622070,790.195618  C22.339611,789.294739 22.220659,788.498596 22.250286,787.404785  C22.414797,786.403931 22.756407,785.837769 23.514965,785.133057  C27.068737,780.820190 30.080479,776.487183 31.545116,771.444336  C32.334564,768.726196 34.294796,766.953552 35.595047,764.702271  C39.316097,758.259216 41.959286,751.211853 46.480297,745.223694  C47.889450,743.357239 49.264721,741.497253 51.509243,740.500671  C55.087444,738.911865 53.547783,735.223267 54.756531,732.265869  C57.687386,727.814209 61.752563,725.096497 66.036407,722.125427  C68.563957,721.215149 71.261772,721.484924 72.814255,718.713013  C73.585236,717.434631 74.410210,716.704346 75.829514,716.229492  C76.756775,716.024841 77.380791,715.952759 78.242249,715.594116  C78.692986,715.363403 78.871513,715.267029 79.317604,715.025024  C80.342155,714.546753 80.993881,714.054504 81.889244,713.343933  C82.344139,713.047119 82.535950,712.939148 83.038170,712.708618  C87.679619,709.439392 92.712433,708.811829 97.843987,708.599731  C99.205872,708.543396 100.469849,708.338440 101.893936,707.321045  C103.198357,706.834351 104.186302,706.813721 105.550171,707.139771  C107.928848,708.700928 110.560570,709.443115 111.527405,712.498169  C109.893448,716.149719 106.428078,717.443970 103.706444,716.458984  C98.646210,714.627625 94.649200,716.893372 91.175423,719.125610  C86.157944,722.349731 80.866585,724.178528 75.218536,725.490234  C72.579132,726.103271 70.672104,727.228821 73.186867,730.536011  C73.939278,731.956177 74.026062,733.357239 73.235580,734.115540  C69.173843,738.012207 66.639565,743.513916 61.218632,745.936707  C59.573822,746.671875 58.520969,747.653015 57.730000,749.171387  C55.945843,752.596375 53.277370,755.269409 49.996666,757.848022  C43.158092,760.875854 41.888649,767.377380 39.226650,773.316284  C38.211624,779.119812 35.163616,783.386230 32.445614,788.117065  C27.892168,796.042603 21.772684,803.504333 20.423893,813.156372  C20.107397,815.421204 23.108097,817.426392 20.298475,819.789062  C20.390835,822.974915 17.485895,824.631653 17.035580,827.646729  C17.122606,828.168274 17.252445,828.331726 17.188023,828.740601  C16.993759,828.986145 16.496401,828.989746 16.247746,828.993652  C15.574930,829.400452 15.208700,829.841858 15.026184,830.711304  C14.998224,831.444458 14.996188,831.888916 14.994068,832.666687  C15.217328,838.221436 12.349377,842.675232 11.318160,847.593994  C10.989695,849.160706 10.403160,850.717468 10.015657,852.653442  z\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M34.233925,1031.712891  C24.051754,1032.000000 14.099753,1031.848022 4.157573,1032.093628  C1.218599,1032.166260 0.908457,1031.287720 0.930983,1028.688232  C1.068903,1012.772278 1.000000,996.854492 1.000000,980.468628  C4.993199,977.434326 8.687661,979.282776 9.609565,984.515747  C10.037020,986.942139 10.399986,989.390503 10.785069,991.812866  C11.441084,995.939697 13.326287,998.517578 17.220957,999.802002  C19.189659,1000.451294 20.204298,1001.674805 19.219547,1003.833435  C20.690077,1002.349243 20.404470,1000.887939 19.831312,998.914062  C18.067410,992.839233 16.940172,986.671692 18.943335,980.310425  C19.827377,977.502869 20.956392,975.770691 24.475323,976.879639  C26.892866,979.567871 26.530691,982.399963 25.979994,985.622070  C26.119787,986.866882 24.589493,987.307373 25.591450,988.211121  C26.441399,982.883118 26.736246,977.611816 29.778456,972.695679  C32.017525,971.383728 33.930012,971.817505 35.742069,972.807373  C37.252010,973.632141 38.155106,975.015747 36.707687,976.408508  C34.737053,978.304871 34.968590,980.571777 34.953407,982.870300  C34.923119,987.455078 33.286331,991.673096 31.763071,995.865295  C29.186016,1002.957520 31.454504,1009.983948 31.655134,1017.037842  C36.519703,1019.787720 34.096664,1024.634644 34.937023,1028.537354  C35.145935,1029.507568 35.017735,1030.527100 34.233925,1031.712891  z\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M930.654846,1014.040344  C934.040100,1013.918823 935.066895,1015.005554 934.243408,1018.239258  C933.758667,1020.142700 931.690674,1022.569031 934.790405,1024.723877  C936.349182,1027.937134 941.173157,1027.382568 941.218262,1031.703857  C932.312439,1032.000000 923.624817,1032.000000 914.468628,1032.000000  C913.811523,1026.717529 913.058411,1021.596191 911.464478,1016.473511  C909.503662,1010.171814 909.210388,1003.504517 908.996948,996.450073  C908.556030,995.606934 908.209412,995.153137 908.053833,994.276001  C906.197876,988.626892 908.328979,983.257080 907.993469,977.450195  C906.731628,975.276367 906.842346,973.490295 907.880859,971.333252  C907.681152,969.893677 907.375122,968.791565 907.032715,967.345947  C908.851929,965.404236 911.689087,965.593140 913.238220,963.235474  C914.359314,961.529236 916.265747,962.958130 917.878967,963.027710  C917.030273,960.370483 913.434692,959.733215 913.597534,956.268127  C914.063293,955.596741 914.453918,955.333374 915.241699,955.054688  C917.116882,954.910522 918.365601,953.993774 919.778931,953.580688  C921.036926,953.213013 922.488403,953.471741 922.656555,954.690613  C923.111694,957.991577 926.414001,959.139587 927.731140,962.135071  C927.967896,962.660156 928.056396,962.872192 928.268372,963.402832  C930.980713,966.468872 930.646423,969.575378 929.647583,973.046875  C930.005188,973.640564 930.237793,973.955688 930.698486,974.457153  C931.175171,974.935974 931.414124,975.236938 931.805908,975.783691  C931.591492,980.388550 930.680420,984.140137 925.752991,986.062988  C923.132202,987.085632 921.389221,989.910034 921.529968,993.487488  C923.308838,992.621338 925.648682,989.269897 925.992676,994.640625  C924.287476,997.348328 924.372986,999.975220 924.897827,1002.965454  C925.292725,1004.234497 925.433777,1005.307983 926.876892,1005.860718  C928.948669,1007.409607 928.989197,1008.822083 926.915894,1009.830261  C924.935974,1010.792908 924.398682,1012.315735 924.554321,1014.605103  C924.597839,1015.499695 924.705444,1016.051208 925.510742,1016.488281  C927.794373,1016.629700 928.637817,1014.598572 930.654846,1014.040344  z\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M24.312037,976.709961  C20.707020,978.257446 17.638096,986.147827 19.614824,990.691528  C20.909039,993.666382 18.434464,998.266296 23.286976,999.699768  C23.153498,1000.144592 23.159046,1000.742737 22.864454,1001.009949  C20.617973,1003.047852 20.218857,1006.250488 18.358372,1008.497437  C17.874886,1008.239075 17.369568,1008.098694 17.366644,1007.948547  C17.291010,1004.068237 16.574593,1002.330688 11.907123,998.335144  C10.026665,996.725403 10.290020,994.468262 9.341970,993.043945  C7.289435,989.960327 9.092220,986.874084 8.101716,984.022156  C7.071704,981.056519 5.712221,978.333862 1.345411,979.960449  C1.000000,964.645752 1.000000,949.291565 1.000000,933.468628  C3.925879,933.445251 5.516691,934.525330 4.276762,937.972778  C3.399298,940.412415 4.116609,943.163330 3.357070,945.780762  C2.680636,948.111755 4.423422,949.520447 6.587512,949.857605  C9.114548,950.251343 8.092943,948.265259 8.447796,946.970886  C9.000351,944.955444 10.106731,943.161682 10.145963,940.904968  C10.179893,938.953064 11.965205,937.868164 13.641184,938.351807  C15.820899,938.980713 14.082382,940.521912 13.704507,941.531982  C12.824123,943.885498 12.863315,945.189453 15.916717,944.191956  C17.796854,943.577759 19.412207,944.999817 21.618542,944.988647  C23.333172,943.713013 24.714325,943.916992 26.409340,945.171875  C28.641562,949.368408 26.151821,952.990112 25.964880,956.737549  C25.637627,963.297729 27.382149,970.033875 24.312037,976.709961  z\"})),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M982.161743,1020.171021  C980.534302,1017.741150 979.057373,1016.673584 975.935242,1017.796570  C973.335571,1018.731689 969.837219,1018.486389 971.951172,1013.375305  C973.376404,1012.298523 974.755127,1013.290405 976.471924,1012.987549  C978.674988,1013.024719 980.615173,1014.267090 982.601257,1012.395996  C983.243835,1011.741516 983.660950,1011.320862 984.171082,1010.691040  C984.226074,1010.442078 983.893799,1010.545837 983.752319,1010.674072  C983.440613,1011.050537 983.342102,1011.324890 983.156799,1011.847534  C982.847778,1012.187988 982.697266,1012.306396 982.286499,1012.570190  C980.914917,1012.989075 979.965393,1012.655151 978.909424,1011.723877  C978.501526,1011.227722 978.273560,1010.977051 977.764404,1010.904541  C977.192261,1011.388794 976.851990,1011.790161 976.224854,1012.323242  C975.593262,1012.640259 975.194214,1012.707275 974.475220,1012.653687  C973.375732,1012.330444 972.822937,1011.629517 971.716919,1011.297302  C971.073059,1010.973206 970.745422,1010.724670 970.228638,1010.220093  C968.710388,1009.767212 967.367615,1008.653442 968.559326,1007.850525  C970.494751,1006.546448 971.950989,1004.903381 973.542236,1003.317932  C973.858826,1003.002441 974.660522,1002.657166 974.854431,1002.810791  C979.721802,1006.665100 981.126770,999.465637 984.915222,999.359253  C988.319702,997.844543 992.547546,997.626892 990.376343,991.946594  C989.734131,990.266479 991.681763,988.846863 993.672791,988.445801  C996.942566,987.787048 1001.503784,990.624329 1002.896057,984.639038  C1003.186462,983.390503 1004.747864,984.770142 1004.980957,986.023376  C1005.241394,987.423462 1005.705078,988.674622 1007.350464,988.747070  C1008.657593,988.804565 1008.904175,987.727295 1009.010864,986.705688  C1009.159668,985.281006 1010.753906,983.350037 1007.770081,982.951660  C1006.962280,982.843872 1006.593140,982.272888 1006.677429,981.569214  C1006.964478,979.172607 1001.566528,980.337891 1003.748291,977.827759  C1005.640686,975.650635 1008.575745,976.943726 1010.530273,979.339050  C1011.325439,980.313599 1012.754028,980.225891 1013.798706,979.746887  C1015.390137,979.017273 1014.141174,977.749878 1014.140137,976.052185  C1014.647583,974.665466 1015.378662,974.162109 1016.007080,973.152710  C1016.376160,972.743713 1016.536865,972.590027 1016.970703,972.239624  C1018.265625,971.485657 1019.310547,971.081360 1020.744019,971.775513  C1021.000000,974.041687 1021.000000,976.083313 1021.000000,978.562500  C1019.476135,980.214355 1018.965881,981.991272 1018.453186,983.735657  C1017.868103,985.726501 1017.018921,987.419312 1014.684753,987.967346  C1019.084351,987.336914 1016.623047,993.635071 1020.736816,993.770752  C1021.000000,995.066711 1021.000000,996.133362 1021.000000,997.600037  C1017.072510,1000.400208 1013.477478,1000.256409 1010.376831,996.572998  C1009.029358,994.972412 1007.048462,994.414185 1005.331909,993.423462  C1004.260498,992.805237 1003.126831,992.498352 1002.195312,993.655151  C1001.481750,994.541199 1001.578125,995.595459 1002.132141,996.466919  C1003.551697,998.700134 1005.306702,1000.753479 1004.666626,1003.738953  C1004.529236,1004.379883 1005.247375,1004.899963 1005.941223,1005.071960  C1007.147583,1005.371033 1007.654480,1004.567627 1008.277100,1003.708313  C1011.624695,999.088562 1011.196045,999.949341 1014.988342,1003.951599  C1018.515503,1007.673950 1017.512085,1011.290344 1017.803345,1015.129700  C1018.065369,1018.583496 1016.574829,1020.332520 1013.021057,1019.226624  C1010.956116,1018.583984 1009.553833,1018.784485 1008.440918,1020.791809  C1007.419678,1022.633789 1005.843689,1024.019897 1003.569031,1023.491211  C1000.757690,1022.837769 1001.155701,1020.346619 1000.882874,1018.228699  C1000.460693,1014.950684 1001.272644,1010.488281 995.066345,1011.960510  C993.557190,1012.228943 992.304260,1011.389343 990.944519,1012.455811  C990.489990,1012.954224 990.267151,1013.247559 990.043640,1013.777222  C990.016663,1013.994263 990.108948,1014.359558 990.299927,1014.405640  C990.789734,1014.377502 991.086365,1014.295349 991.657471,1014.151123  C992.338684,1014.070312 992.740356,1014.096985 993.459106,1014.249756  C995.283142,1015.044189 996.659729,1015.995422 998.212769,1016.612976  C1002.270020,1018.226379 1001.129883,1021.846985 1000.260681,1024.285767  C999.175659,1027.330200 996.343994,1025.769653 994.329590,1024.708374  C991.559265,1023.248840 988.678833,1022.940613 985.328125,1023.124390  C984.692993,1022.879395 984.437439,1022.687195 984.117859,1022.211670  C983.786377,1021.695557 983.664124,1021.367981 983.712708,1020.775146  C983.681763,1020.560974 983.237366,1020.499451 983.005859,1020.488586  C982.774414,1020.477722 982.323547,1020.342041 982.161743,1020.171021  z\"})),_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M410.226929,1031.738037  C403.978851,1032.000000 397.957703,1032.000000 391.468262,1032.000000  C390.200714,1031.455933 389.358521,1030.942139 389.527557,1029.450195  C390.632507,1027.808472 392.434784,1028.290283 393.812714,1027.171265  C394.202454,1026.750854 394.536926,1026.401855 394.309875,1026.210693  C393.807159,1025.787231 394.523132,1025.977295 393.820618,1026.530273  C390.244720,1025.416870 390.176758,1021.242554 386.930786,1019.603271  C385.046051,1017.149231 385.857788,1013.606323 382.508911,1011.954895  C382.066162,1011.583496 381.904907,1011.412720 381.600311,1010.915039  C381.280365,1008.327209 382.883423,1007.130249 384.622223,1005.662964  C385.600128,1005.358093 386.315765,1005.281433 386.831573,1005.739868  C390.359467,1008.875000 390.446686,1008.900452 394.611267,1006.754822  C392.730316,1003.356384 389.091278,1004.586365 386.049103,1003.359314  C384.407501,998.718201 385.834076,994.306030 385.714478,989.560547  C383.355286,985.943481 384.364594,982.033142 384.412628,978.644043  C384.490997,973.120361 383.546600,967.561829 384.737152,961.755005  C387.055511,960.114319 389.215485,959.625427 391.818420,961.154785  C394.218872,964.760193 394.034882,968.193970 392.709717,971.841492  C390.835663,976.999817 392.798523,980.254211 398.188904,981.510864  C403.545715,982.759644 404.045197,987.855530 405.570740,991.730469  C406.477814,994.034241 406.322418,996.912476 407.451202,999.357483  C407.590546,999.659302 407.834747,1000.123779 407.699066,1000.294739  C403.400513,1005.708374 409.399506,1009.656738 409.578888,1014.738892  C407.851288,1017.067139 408.589264,1019.010803 409.509003,1021.021179  C411.045013,1024.378784 411.726562,1027.848022 410.226929,1031.738037  z\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M584.858521,1016.684448  C584.923401,1019.526611 584.732117,1022.092773 587.678772,1023.833740  C589.942932,1026.129639 591.036743,1028.436401 589.272705,1031.646362  C585.638733,1032.000000 582.277405,1032.000000 578.458069,1032.000000  C578.013000,1031.667480 577.980591,1031.325806 578.045837,1031.003784  C579.224243,1025.191650 578.702820,1024.636597 572.715088,1025.531494  C571.897095,1025.653809 571.068970,1027.311279 570.327393,1025.849487  C569.704956,1024.622314 570.776001,1023.682617 571.865906,1023.109009  C573.029419,1022.496704 574.238464,1021.970947 576.027771,1021.123108  C573.614136,1020.072693 572.732117,1018.071594 570.787354,1016.753723  C568.287720,1015.059814 573.072815,1015.614624 572.321960,1013.920959  C570.019653,1011.934692 567.644287,1009.956116 565.361816,1007.875549  C564.624084,1007.203064 562.881409,1006.886353 563.883179,1005.282043  C564.302124,1004.611023 565.050110,1003.761841 565.712219,1003.702332  C567.325806,1003.557190 566.949524,1005.360352 567.633850,1006.185608  C568.038330,1006.673340 568.191956,1007.428467 569.699341,1007.319153  C569.916626,1004.659058 568.608459,1003.036377 566.436829,1001.622498  C564.306152,1000.235168 562.736511,998.573303 567.096558,997.183289  C564.947693,995.870483 563.674316,996.917908 562.616028,997.633484  C561.597473,998.322083 561.190491,1001.002136 559.539917,998.562317  C558.645386,997.239868 558.246582,994.892700 560.308411,994.326782  C563.756287,993.380310 562.660828,991.391602 561.390686,990.014465  C559.228149,987.669922 560.125183,983.085327 555.220947,982.560791  C552.958618,982.318787 554.497864,979.555481 555.144775,978.374084  C557.567505,973.949585 558.304932,970.028931 553.497986,966.655029  C552.010071,965.610657 552.034241,964.530640 554.073914,963.968445  C557.017639,963.156921 555.263000,960.386414 554.694580,960.147095  C547.614563,957.166138 552.432983,953.242126 554.121582,949.050659  C555.299194,948.178284 556.034668,948.186829 557.072571,948.677979  C559.394897,955.464966 562.595764,961.639221 564.023193,968.414429  C564.238281,969.435242 564.837952,970.187927 565.426208,970.990540  C568.273193,974.874512 570.431335,978.864746 570.075012,984.055298  C569.713806,989.316650 574.391663,992.303711 576.862549,996.684204  C576.504333,997.636353 575.515564,998.334167 575.588562,998.893616  C575.786743,1000.413635 577.025024,999.784607 577.916809,999.538208  C578.842651,999.282410 579.529358,999.383240 579.936462,1000.688354  C579.501160,1003.159485 581.442200,1002.925903 582.750732,1003.779907  C582.996338,1004.447998 582.997498,1004.891113 582.998108,1005.666565  C581.709839,1009.762695 579.542908,1013.671387 584.858521,1016.684448  z\"})),_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M58.751747,989.755493  C56.380619,995.560608 53.946892,1001.223633 49.827267,1005.940063  C48.221588,1007.778259 49.917057,1009.294495 50.536148,1010.943237  C51.566910,1013.688232 55.622364,1016.659058 49.556377,1018.999634  C48.358974,1019.461670 45.052670,1021.716309 46.438992,1024.988403  C46.963322,1026.225708 46.125294,1026.722900 45.081394,1027.131836  C43.235012,1027.855225 42.056995,1029.151978 42.009605,1031.627930  C40.611111,1032.000000 39.222221,1032.000000 37.416664,1032.000000  C36.553852,1031.407837 36.751804,1030.819092 37.167156,1029.963867  C37.768894,1029.041626 38.422501,1028.514282 38.606667,1027.369019  C38.772964,1026.448242 38.954639,1025.848022 39.289886,1024.957520  C41.097824,1022.920349 40.118496,1021.002686 39.722427,1018.790283  C39.410446,1016.794373 39.510345,1015.145752 39.893608,1013.177246  C41.675911,1011.153259 40.481377,1008.997986 40.874168,1006.756348  C40.752548,1005.480225 40.799320,1004.554993 41.051331,1003.296997  C42.905689,995.109558 43.968208,987.241638 41.508198,979.049683  C40.754562,978.260254 40.449738,977.625916 40.447304,976.521790  C41.029388,974.832581 42.588268,974.148438 42.828323,972.224792  C43.659115,968.853882 43.202087,965.768311 43.490189,962.328186  C43.529190,960.835815 43.536819,959.742432 43.526215,958.223022  C43.498680,956.338196 43.487480,954.881653 44.678520,953.300171  C47.586536,953.344727 50.168522,953.725464 52.760319,954.019836  C54.209591,954.184448 54.616455,954.734070 54.420151,956.282349  C53.996307,959.625183 53.812454,962.870728 51.562778,965.775085  C49.494713,968.445007 51.690853,972.937927 55.611530,973.994446  C56.742954,974.717529 57.353569,975.629150 57.039017,976.604980  C56.501461,978.272766 56.076927,979.259583 58.451889,980.138000  C60.306931,980.824097 59.744186,982.950867 58.192829,984.106567  C55.458889,986.143311 56.338177,987.832581 58.751747,989.755493  z\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M985.264404,1023.262939  C988.655457,1022.368469 992.380737,1020.099182 995.768005,1023.944458  C996.379883,1024.639160 997.992188,1025.522827 999.313354,1024.330322  C997.000305,1022.598938 1001.941833,1019.347412 998.085693,1018.097107  C996.309937,1017.521362 994.672119,1016.988708 993.274536,1015.212646  C991.988831,1013.708740 992.023926,1012.496704 993.640015,1011.189209  C1000.088318,1008.514038 1002.225281,1010.177490 1002.061035,1016.984985  C1002.013611,1018.951416 1000.967041,1021.923340 1003.911499,1022.461731  C1006.450256,1022.925903 1007.465210,1020.545837 1007.975098,1018.295105  C1008.833435,1014.505981 1011.033264,1017.240845 1012.576538,1017.473694  C1013.741699,1017.649597 1014.657288,1019.442749 1016.087402,1018.133179  C1017.331177,1016.994080 1016.912354,1015.755188 1016.060669,1014.562439  C1015.568359,1013.873169 1015.456055,1013.242676 1015.704834,1012.294250  C1017.214600,1006.538513 1016.946899,1006.211182 1011.721191,1006.444397  C1011.144897,1004.588989 1013.899170,1005.164795 1013.785156,1003.602234  C1013.694580,1002.361511 1012.837646,1001.920898 1011.897888,1001.570618  C1010.926392,1001.208435 1010.374817,1001.664124 1010.080261,1002.628418  C1009.530640,1004.427551 1009.846375,1007.146240 1007.506714,1007.439270  C1005.165344,1007.732422 1003.487976,1005.487122 1001.059326,1004.002808  C1004.925598,1002.361511 1003.872070,1000.888306 1001.595581,998.679932  C999.084900,996.244263 998.684204,993.260620 1002.173889,990.862976  C1002.930237,990.343262 1003.979492,989.813965 1004.325989,990.546692  C1005.994995,994.076416 1011.112488,992.602417 1012.686340,996.950317  C1013.540710,999.310608 1017.543457,997.638794 1020.549805,998.000000  C1021.000000,1008.428772 1020.900452,1018.859253 1021.075012,1029.285156  C1021.115112,1031.682007 1020.548401,1032.107910 1018.249634,1032.066895  C1009.148071,1031.904053 1000.041809,1032.000000 990.468628,1032.000000  C991.087463,1027.813965 992.071777,1023.682434 985.264404,1023.262939  z\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M123.766800,997.263184  C127.727806,996.549072 129.471237,994.050110 130.665665,990.840210  C129.131149,989.864929 127.975349,991.266235 126.358261,990.996704  C125.795540,990.766724 125.576271,990.538696 125.173363,990.158630  C126.941086,986.002686 131.610077,984.051086 132.891281,979.502197  C132.990952,979.148438 134.397003,979.162659 135.598572,979.002930  C136.301224,979.566772 137.006821,980.345215 136.838577,980.667725  C135.097015,984.006042 135.540283,987.423889 135.511322,991.032593  C135.480026,994.934143 133.713303,998.630249 134.696259,1002.962952  C135.527847,1006.628479 131.531097,1006.831360 128.486694,1007.393494  C128.898132,1009.199402 131.667267,1009.987915 130.437119,1012.359314  C130.149460,1012.913757 130.538559,1014.916931 131.864059,1015.140259  C133.216782,1015.368225 133.831024,1014.207153 134.010544,1012.914368  C134.078140,1012.427673 134.120941,1011.832825 134.415329,1011.499695  C136.022964,1009.681335 136.892929,1007.047302 139.636597,1006.465820  C140.338135,1006.317139 141.082153,1007.013977 140.852905,1007.657959  C139.864120,1010.435181 142.170898,1014.000793 138.496368,1016.193420  C135.576340,1017.935791 134.697998,1024.604858 137.015503,1027.155762  C138.449860,1028.734619 137.273331,1029.905762 137.047363,1031.632812  C136.555557,1032.000000 136.111099,1032.000000 135.333328,1032.000000  C134.576599,1031.477539 134.050659,1031.333252 133.210449,1031.785889  C125.645744,1032.000000 118.291496,1032.000000 110.468620,1032.000000  C110.054367,1030.866211 109.880264,1029.628296 111.648331,1029.053833  C117.026718,1027.516357 119.404655,1022.800049 122.074112,1019.204407  C124.381989,1016.095825 121.897209,1011.333374 120.852379,1006.889160  C118.659653,1008.692627 118.410416,1011.345642 116.252045,1012.884033  C115.776924,1013.357910 115.322556,1013.287048 115.142250,1013.627686  C115.445496,1013.734253 115.750221,1013.712952 116.378128,1013.645752  C118.689041,1020.266235 116.856522,1024.112671 111.289444,1024.245728  C106.825020,1018.269958 110.751328,1013.082275 112.324821,1007.871948  C113.238930,1004.844849 114.085991,1000.499268 119.632675,1002.952087  C122.288849,1001.892212 123.005653,999.767395 123.766800,997.263184  z\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M826.999512,1000.602905  C823.729797,1002.477722 826.440918,1005.543152 825.271484,1007.823486  C824.412231,1009.498840 821.829346,1012.780151 826.210693,1014.433167  C827.034302,1014.743835 826.466431,1015.911255 825.947144,1016.569031  C825.066101,1017.685242 824.607361,1019.124573 825.067383,1020.286255  C827.232849,1025.754883 824.163757,1028.718262 820.062622,1031.658936  C816.307068,1032.000000 812.614197,1032.000000 808.460632,1032.000000  C809.405701,1026.946411 807.894043,1021.438721 810.514160,1016.540283  C811.396973,1014.889832 810.284851,1013.975342 808.624329,1014.141602  C807.156433,1014.288452 805.732300,1014.996399 804.271973,1015.058533  C802.871643,1015.118042 801.384033,1018.444519 800.046997,1015.086975  C799.151123,1012.837463 799.206848,1010.976440 802.237122,1010.453491  C802.570312,1010.395935 802.730957,1009.338318 802.985840,1008.372314  C802.853027,1007.819763 802.705994,1007.639465 802.697449,1007.140503  C803.217346,1006.556641 803.634033,1006.377930 804.425659,1006.297913  C807.257324,1006.416870 806.055481,1004.972839 805.679321,1003.584961  C805.605591,1003.027222 805.616699,1002.800049 805.815186,1002.287598  C807.871704,1002.410889 810.945190,1000.614990 810.554993,1005.007080  C810.410950,1006.628235 818.375793,1009.276611 819.853882,1008.336792  C820.610413,1007.855835 820.938232,1007.083862 820.796265,1006.192749  C820.621033,1005.092957 819.813171,1004.620483 818.876953,1004.124695  C817.340088,1003.310852 812.248352,1004.563049 816.371887,1000.058899  C816.881104,999.502625 815.328796,999.095337 814.667480,998.692932  C812.288818,997.245239 812.951904,994.902039 813.134399,992.841370  C813.334656,990.579590 815.617981,992.282715 816.126465,991.713440  C818.695251,988.837585 826.034912,990.412292 824.096130,983.324768  C823.918701,982.676208 824.155212,981.790771 824.908630,981.811951  C826.034790,981.843628 827.239746,982.058777 828.244080,982.542725  C829.126465,982.967773 829.055115,984.343384 828.439758,984.682434  C825.136841,986.502197 827.369080,991.210022 823.883667,993.006592  C822.764404,993.583496 823.640747,994.840393 824.644653,995.257751  C826.965942,996.223022 827.153503,998.111816 826.999512,1000.602905  z\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M1021.000000,857.531372  C1019.623413,857.967651 1018.105347,857.883789 1018.108948,856.078979  C1018.113281,853.928894 1017.367371,852.380188 1015.784668,850.904663  C1014.593994,849.794556 1014.685303,848.040710 1015.905518,846.868225  C1019.410156,843.500610 1016.841980,842.287537 1014.019836,840.961365  C1011.338501,839.701355 1008.728577,838.232971 1007.136047,835.606140  C1006.072388,833.851746 1004.183228,831.577271 1008.560730,831.612000  C1009.809509,831.621887 1009.929993,830.508301 1009.358215,829.918213  C1005.647766,826.088745 1007.661072,819.439026 1002.296936,816.162842  C1002.453918,810.255920 999.595337,806.511047 994.767517,803.912292  C994.024597,803.512390 993.218140,802.257507 993.656921,801.941101  C997.102112,799.457153 995.289062,794.583618 998.682190,791.929260  C1004.283508,792.002747 1002.615662,795.882935 1002.765930,798.781982  C1003.458069,798.859253 1003.455750,798.245300 1003.654602,797.855164  C1004.665527,795.871582 1004.976196,792.868103 1008.098816,793.395813  C1011.262329,793.930481 1011.164978,796.774963 1011.381287,799.306213  C1011.732605,803.416077 1013.801086,807.121460 1015.072998,810.910583  C1016.868164,816.258484 1018.785645,821.359192 1018.669006,827.072876  C1018.634888,828.740051 1019.045410,830.381714 1020.751831,831.754517  C1021.000000,840.354248 1021.000000,848.708496 1021.000000,857.531372  z\"})),_path30||(_path30=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M963.777832,997.241638  C964.657227,996.915649 965.320496,996.727783 965.970581,996.765686  C968.336182,996.903625 964.726624,992.326477 968.476990,993.624695  C966.762878,996.630798 971.752991,998.743530 969.293030,1002.328125  C967.528625,1004.899231 965.716736,1007.571472 965.087036,1011.309998  C964.484619,1014.886414 962.268921,1018.661316 960.886353,1022.425659  C960.133240,1024.476196 959.685303,1024.835693 961.202637,1026.374146  C962.447815,1027.636597 963.863586,1029.380249 962.041504,1031.703369  C958.638733,1032.000000 955.277405,1032.000000 951.458069,1032.000000  C947.419800,1030.340698 944.844177,1027.500000 942.154846,1024.305420  C942.000000,1023.555542 942.000000,1023.111084 942.000000,1022.333313  C942.258240,1020.682190 943.290588,1019.784302 943.915527,1018.310425  C945.435852,1015.430237 939.728394,1012.564270 944.664429,1010.060303  C945.040649,1006.672302 946.745605,1006.461060 949.185913,1007.808105  C950.328552,1008.438904 952.138062,1009.627502 952.443909,1008.050293  C952.807251,1006.176392 956.041077,1004.737671 953.656677,1002.441406  C951.274353,1000.146912 952.866028,999.407349 954.960144,999.036987  C957.738220,998.545715 959.754028,997.025146 961.438538,994.888611  C962.165894,993.966125 961.962341,991.667969 963.784119,992.391357  C965.822693,993.200867 963.555359,994.963562 964.007263,996.635254  C963.662659,997.575012 964.013000,996.777649 963.657471,997.335999  C963.305969,997.887817 963.054138,998.440857 963.053955,999.097534  C963.158447,998.539978 963.223267,997.970093 963.777832,997.241638  z\"})),_path31||(_path31=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M332.728638,1013.323120  C335.011932,1007.905273 336.192932,1002.561157 336.820892,997.173462  C337.163849,994.231201 338.239960,991.901367 339.919556,989.339539  C341.956726,991.549683 340.553528,993.785767 340.435120,996.311584  C341.976532,996.459473 344.007050,994.228333 345.022125,996.285706  C346.030701,998.330017 343.868927,999.831360 342.596375,1000.446960  C338.757507,1002.303772 342.391937,1007.429688 338.266235,1008.966858  C341.695770,1009.371948 342.665344,1007.106018 343.701782,1004.749634  C344.171387,1003.682068 344.659607,1001.706909 346.360535,1002.794067  C347.617920,1003.597717 346.442688,1004.837524 345.731689,1005.736328  C345.130524,1006.496277 344.092224,1008.072327 344.522766,1008.139038  C349.866364,1008.966553 347.757477,1015.603577 351.824768,1017.278320  C351.973389,1017.339478 352.235596,1017.493469 352.225616,1017.519226  C350.217804,1022.692444 357.217957,1026.028442 355.010559,1031.614380  C347.645752,1032.000000 340.291504,1032.000000 332.468628,1032.000000  C334.460632,1027.956177 335.785767,1023.878418 332.190857,1019.338745  C330.389832,1017.079651 331.558014,1015.372803 332.728638,1013.323120  z\"})),_path32||(_path32=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M38.214981,1029.807861  C37.751060,1030.501221 37.484379,1030.992798 37.108849,1031.742188  C36.250000,1032.000000 35.500000,1032.000000 34.375000,1032.000000  C33.296196,1027.964600 32.276546,1023.945557 33.695232,1019.807190  C29.040659,1019.946838 29.121099,1019.973999 30.390450,1016.213257  C30.663300,1015.404907 30.208252,1014.298401 29.945312,1013.369812  C27.750772,1005.619873 28.727213,998.001099 31.613792,990.738098  C33.068523,987.077759 33.613976,983.580078 33.121159,979.812378  C32.778179,977.190247 33.083492,975.131409 37.369076,975.504517  C34.873016,973.502502 32.939571,972.953186 30.394241,972.997559  C28.507195,971.304260 28.772860,969.657227 30.378416,968.307861  C31.983952,966.958557 33.526478,967.303833 35.237419,968.559631  C37.734535,970.392334 40.551182,971.821045 41.155739,975.620728  C41.203449,976.564026 41.371758,977.105896 41.768890,977.825073  C41.899345,983.554382 44.031300,989.058716 42.501850,994.621216  C41.796833,997.185242 42.234379,999.735840 42.037865,1002.643799  C42.008064,1004.064270 42.013226,1005.128479 42.023685,1006.591797  C42.389492,1009.816589 37.649128,1008.540710 38.317146,1011.613403  C39.049725,1011.222839 39.798832,1011.197327 40.805168,1011.768799  C41.032936,1014.046997 41.016514,1016.085388 40.999153,1018.560669  C39.567505,1020.575256 40.438526,1022.549438 40.021317,1024.655273  C39.966125,1025.743774 39.972286,1026.489380 39.979408,1027.607666  C39.459553,1028.524048 38.934509,1029.063599 38.214981,1029.807861  z\"})),_path33||(_path33=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M1021.000000,831.536804  C1018.999268,832.029175 1016.752441,831.464783 1017.197083,829.214111  C1018.051697,824.888489 1015.570923,821.079102 1015.953735,816.916626  C1016.062622,815.732849 1016.047058,814.296021 1014.954651,813.758728  C1012.261353,812.434326 1012.153687,810.466858 1012.922729,808.002014  C1013.105591,807.415710 1013.106140,806.310791 1012.771545,806.095337  C1009.085754,803.722534 1009.591064,800.197632 1009.867676,796.628418  C1009.962219,795.408508 1009.146423,794.390808 1007.778198,794.260315  C1006.463684,794.134949 1006.249817,795.150085 1005.979858,796.159302  C1005.412720,798.279541 1003.654480,800.053650 1004.701477,802.671936  C1000.439758,802.180359 1000.861755,799.537292 1001.192688,797.082214  C1001.417847,795.411316 1002.977966,793.407715 999.360168,793.015625  C998.660461,792.653320 998.348389,792.298157 997.850342,791.640930  C997.824219,784.411804 994.057800,778.810913 991.235229,772.514160  C990.903320,771.739685 990.752136,771.280457 990.564575,770.450745  C989.806152,767.382080 986.630615,765.127808 989.310913,761.689209  C993.030579,761.677979 995.025208,763.857300 997.173706,766.220886  C1000.002258,769.332703 1001.205139,774.313843 1006.781616,774.943665  C1008.730225,775.636169 1009.442261,777.302429 1011.062256,778.423096  C1011.517456,779.095337 1011.654602,779.534607 1011.690430,780.344482  C1010.863525,782.544006 1011.905029,783.575012 1013.606812,784.677551  C1016.901672,795.921814 1019.046326,807.095581 1020.777588,818.698120  C1021.000000,823.024536 1021.000000,827.049072 1021.000000,831.536804  z\"})),_path34||(_path34=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M308.695129,1020.831909  C309.547943,1024.470093 307.895660,1027.723022 307.998657,1031.574463  C298.979095,1032.000000 289.958221,1032.000000 280.468658,1032.000000  C279.739441,1029.962036 281.421143,1028.775024 282.055573,1027.180542  C283.474945,1023.613464 287.739502,1021.357971 286.772827,1016.586487  C286.607452,1015.770325 288.488342,1013.910156 289.718597,1013.556091  C293.765167,1012.391479 294.174530,1009.976624 293.073792,1006.470337  C292.692352,1005.255432 292.818176,1003.654297 293.925781,1002.762573  C295.217804,1001.722168 295.571198,998.776245 297.768768,999.772034  C300.049561,1000.805481 298.018890,1002.392395 297.565460,1003.853333  C297.134827,1005.240723 298.006439,1006.682190 298.933929,1007.916016  C302.113007,1012.145325 305.242889,1016.411621 308.695129,1020.831909  z\"})),_path35||(_path35=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M82.937378,713.627319  C82.576134,713.742554 82.270668,713.825867 82.149040,713.927246  C81.431160,714.592163 80.814743,715.131592 79.837845,715.644958  C79.533371,715.685913 79.214523,715.675537 79.075974,715.754578  C78.668991,716.436279 78.175697,716.743958 77.252441,716.884644  C75.817413,716.879822 74.936592,717.383972 74.040184,718.483643  C72.506363,721.289368 69.653847,721.349792 67.218300,722.770325  C63.020531,725.320496 59.819382,728.556335 56.198997,731.772217  C52.473217,739.512390 45.010300,744.095032 41.616955,751.663635  C38.380249,758.882935 34.560036,765.816040 31.328676,773.050232  C29.403580,777.359985 27.258820,781.708069 23.968781,785.647217  C23.383898,786.303162 23.141893,786.832092 22.872967,787.655884  C22.949959,788.853943 23.011429,789.748047 21.974064,790.533325  C21.642689,790.588684 21.627914,790.646790 21.606676,790.667969  C21.571732,791.573608 20.858341,792.018494 20.151798,792.796021  C19.297258,794.421631 18.669611,795.861450 17.983055,797.635254  C17.967850,798.866455 18.015137,799.764404 17.132725,800.730591  C16.584478,801.422668 16.301687,801.909973 15.964722,802.677979  C16.140022,804.403687 15.525773,805.532532 14.375559,806.800232  C14.043974,807.400513 13.907690,807.734375 13.742464,808.337891  C13.655765,809.724060 13.077240,810.627136 12.321750,811.793823  C11.751302,813.129089 11.372802,814.206848 10.947115,815.624756  C10.946092,816.550171 10.835437,817.096619 10.344811,817.827820  C9.979059,818.965210 9.765863,819.861389 9.542931,821.103577  C8.908545,824.582153 7.956148,827.605042 6.283301,830.750732  C5.374301,833.134155 4.699541,835.232178 3.989309,837.653503  C4.070703,840.624634 3.673069,843.115417 1.383001,845.072815  C1.000000,843.285645 1.000000,841.571289 1.000000,839.428467  C4.856188,833.213806 5.566668,826.284180 7.613232,819.888000  C12.598852,804.306152 19.240828,789.499939 26.713383,775.017517  C32.182381,764.418213 35.744736,752.744324 43.195148,743.283325  C50.964859,733.416870 59.466900,724.274353 70.549484,717.668762  C75.574341,714.673706 81.378227,712.568420 85.287827,707.700012  C87.574852,704.852112 91.427826,704.497742 94.506958,704.715942  C104.447357,705.420349 114.932983,705.072998 122.386032,713.658691  C123.723694,715.199707 127.213501,712.686401 127.271500,716.712646  C127.196457,718.879211 125.429855,718.592346 124.109482,719.366882  C122.260742,719.440247 121.312202,718.471313 120.192200,717.178223  C119.118706,715.638672 117.996902,714.632568 116.409103,713.641663  C113.357750,710.971863 109.774849,710.107544 106.200577,708.466553  C104.883545,708.214600 103.859047,708.136963 102.454552,708.137085  C100.214890,709.369507 98.260735,708.926147 96.267799,708.667847  C91.119164,708.000549 86.900330,709.964478 82.937378,713.627319  z\"})),_path36||(_path36=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M410.467957,1032.000000  C409.642059,1026.969360 409.211761,1021.998230 406.396820,1017.527161  C405.446472,1016.017578 406.608215,1015.110474 408.618591,1014.995605  C410.010315,1011.982239 411.262787,1009.624512 415.180786,1011.514587  C416.276611,1012.043213 417.966919,1011.546875 419.003784,1010.885498  C423.750153,1007.858337 427.805359,1009.925049 432.151306,1012.545776  C432.702057,1013.203613 432.919373,1013.646606 433.167786,1014.487000  C433.337708,1015.617676 433.311523,1016.375977 433.157715,1017.505005  C432.828094,1019.078186 432.461029,1020.249084 431.812408,1021.694824  C430.406403,1023.250610 429.181061,1024.347778 429.697693,1026.525269  C430.102112,1028.229858 429.616394,1030.037354 428.229584,1031.759766  C422.311951,1032.000000 416.623932,1032.000000 410.467957,1032.000000  z\"})),_path37||(_path37=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M525.444153,1032.000000  C524.834167,1031.203979 524.719421,1030.392700 524.487183,1029.616455  C524.281555,1028.928955 522.518982,1029.259766 523.237976,1028.095703  C523.549927,1027.590576 524.701111,1027.423706 525.470886,1027.424316  C526.568359,1027.425171 527.636353,1029.820801 528.713074,1027.738892  C529.608887,1026.006592 528.020752,1025.043335 526.762390,1024.223511  C524.945740,1023.039917 523.540955,1021.912903 525.439392,1019.554749  C525.845947,1019.049805 525.529602,1017.462952 525.008850,1016.790833  C521.025452,1011.650146 523.413818,1004.661865 519.790466,999.326904  C518.769470,997.823730 521.651672,997.424561 522.658203,996.768250  C523.637878,996.129272 524.759705,997.501587 524.979248,998.943420  C526.257507,1007.337891 527.600342,1015.813782 533.180786,1022.598389  C535.901733,1025.906494 533.677185,1028.396729 533.006409,1031.625488  C530.629456,1032.000000 528.258850,1032.000000 525.444153,1032.000000  z\"})),_path38||(_path38=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M72.696564,1024.192139  C75.721191,1021.922058 77.322693,1017.934875 82.087105,1019.359436  C83.071548,1019.653748 83.315895,1017.006714 83.953156,1015.357300  C86.869034,1017.822815 86.423485,1025.172363 83.118759,1029.184814  C82.503098,1029.932251 81.798592,1030.606567 81.067535,1031.657227  C78.629440,1032.000000 76.258888,1032.000000 73.444168,1032.000000  C72.499527,1031.576904 71.886719,1031.349243 71.327583,1031.028198  C69.782257,1030.140869 67.767632,1029.226074 67.917671,1027.300293  C68.102737,1024.924805 70.466835,1024.731812 72.696564,1024.192139  z\"})),_path39||(_path39=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M443.252380,1031.681396  C439.307098,1032.000000 435.614166,1032.000000 431.460632,1032.000000  C427.652466,1030.159912 429.964691,1027.125122 429.655396,1024.362549  C433.297455,1024.063599 435.806946,1020.342468 439.917786,1021.716614  C440.501282,1021.918762 440.729065,1022.024597 441.272430,1022.347290  C442.389771,1023.272644 442.943176,1024.148438 443.469971,1025.514160  C444.272461,1027.726807 444.637451,1029.560059 443.252380,1031.681396  z\"})),_path40||(_path40=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M1021.000000,818.539368  C1016.465576,808.324524 1015.535828,796.822754 1013.190063,785.307983  C1012.854675,784.514832 1012.946777,784.091980 1013.701538,783.651489  C1015.641174,783.792664 1015.618042,785.166016 1016.001953,786.636841  C1016.106445,787.402039 1016.177551,787.806702 1016.332275,788.508179  C1019.270447,794.304321 1020.844421,800.105164 1020.772827,806.673462  C1021.000000,810.692932 1021.000000,814.385803 1021.000000,818.539368  z\"})),_path41||(_path41=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M941.650635,1024.004028  C946.245361,1024.872070 947.811890,1029.013184 950.951172,1031.647339  C947.969421,1032.000000 944.938782,1032.000000 941.454102,1032.000000  C940.841431,1030.149048 939.405273,1029.548584 937.968506,1029.157227  C936.147888,1028.661499 935.003784,1027.753052 935.010376,1025.375244  C935.002441,1025.000000 935.500366,1025.000000 935.749329,1025.000000  C936.443970,1025.000732 936.889648,1025.000977 937.669556,1025.000488  C939.102966,1024.669312 940.202087,1024.338623 941.650635,1024.004028  z\"})),_path42||(_path42=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1021.000000,993.533875  C1019.254517,993.431824 1018.203003,995.507996 1016.107666,995.212646  C1017.097412,991.179993 1017.080750,987.547791 1010.849792,987.262878  C1015.527527,987.494263 1017.321655,985.788818 1017.318726,981.811401  C1017.317627,980.374573 1018.380249,979.031372 1020.618896,979.013428  C1021.000000,983.689270 1021.000000,988.378479 1021.000000,993.533875  z\"})),_path43||(_path43=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M476.397095,1017.582214  C474.125397,1021.635071 471.632751,1025.415649 469.154938,1029.205933  C468.716461,1029.876709 468.339935,1030.588013 467.967407,1031.640381  C466.933319,1032.000000 465.866669,1032.000000 464.399994,1032.000000  C463.672394,1031.682495 463.458405,1031.301392 463.374908,1030.523682  C463.614929,1029.315796 464.186737,1028.664307 465.001709,1027.811523  C465.755890,1027.030884 466.432770,1026.577271 466.734253,1025.475830  C466.962769,1024.810059 467.129852,1024.442139 467.485992,1023.825073  C468.403931,1022.621643 469.381378,1021.835083 469.780029,1020.298340  C470.298035,1017.962830 468.534180,1016.327515 469.033691,1014.054016  C472.591248,1012.917175 473.719727,1016.426147 476.397095,1017.582214  z\"})),_path44||(_path44=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M1013.592468,974.207275  C1012.841370,972.884155 1013.076477,971.440552 1012.462708,970.719666  C1010.435303,968.338745 1012.003174,967.172913 1013.781189,966.174683  C1015.885925,964.993103 1018.129272,964.058594 1020.656250,963.008423  C1021.000000,963.750000 1021.000000,964.500000 1021.000000,965.625000  C1020.477661,966.423462 1020.333069,966.949280 1020.785950,967.789551  C1021.000000,968.000000 1021.000000,968.500000 1021.000000,968.750000  C1020.199341,970.563660 1018.895752,971.624878 1017.228638,972.773193  C1017.002441,972.997559 1017.000000,973.000000 1016.998779,973.001221  C1016.239197,973.826416 1015.342773,974.376465 1013.592468,974.207275  z\"})),_path45||(_path45=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M63.375000,1032.000000  C63.093422,1028.318115 65.315552,1025.095825 65.199738,1021.313538  C65.156921,1019.915222 66.308151,1018.030579 67.632988,1017.921448  C69.534279,1017.764954 69.841545,1020.062805 70.864563,1021.699463  C68.616692,1024.738159 67.934601,1028.282471 66.255066,1031.737549  C65.250000,1032.000000 64.500000,1032.000000 63.375000,1032.000000  z\"})),_path46||(_path46=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M664.454102,1032.000000  C664.731750,1029.959961 664.338928,1026.983643 667.718628,1027.046509  C670.624695,1027.100586 673.501160,1027.442627 673.990845,1031.617310  C670.969421,1032.000000 667.938782,1032.000000 664.454102,1032.000000  z\"})),_path47||(_path47=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M443.444153,1032.000000  C442.999359,1030.224121 443.219543,1028.420532 442.202698,1026.403809  C442.899231,1024.998901 442.735046,1023.275818 444.648743,1022.695801  C446.978882,1023.268250 447.040924,1025.573730 448.785583,1026.820068  C449.412781,1027.296387 449.749481,1027.595703 450.311768,1028.152466  C450.844208,1028.744263 451.097534,1029.120972 451.438599,1029.839844  C451.636292,1030.613037 451.599304,1031.057861 451.224152,1031.746582  C448.629425,1032.000000 446.258881,1032.000000 443.444153,1032.000000  z\"})),_path48||(_path48=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M66.437500,1032.000000  C67.399475,1028.751099 65.887474,1024.185791 70.685852,1022.165771  C71.494278,1022.583984 71.988426,1023.167969 72.745186,1023.880859  C72.881035,1026.680420 70.041382,1025.455322 68.860291,1026.977051  C70.111496,1028.423218 71.402542,1029.915405 72.846794,1031.703857  C70.958336,1032.000000 68.916664,1032.000000 66.437500,1032.000000  z\"})),_path49||(_path49=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M1021.000000,806.536804  C1019.416809,801.187866 1017.833557,795.375793 1016.333130,789.184326  C1018.941589,789.609314 1017.974182,793.033936 1020.651245,793.993164  C1021.000000,798.024536 1021.000000,802.049072 1021.000000,806.536804  z\"})),_path50||(_path50=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M1021.000000,872.536804  C1018.506042,870.525208 1018.023376,862.067566 1020.629761,860.011536  C1021.000000,864.024536 1021.000000,868.049072 1021.000000,872.536804  z\"})),_path51||(_path51=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M463.980896,1029.724976  C464.135010,1030.446655 464.083069,1030.889160 464.015564,1031.665894  C461.299988,1032.000000 458.599976,1032.000000 455.449982,1032.000000  C454.429321,1031.301880 453.186432,1031.678711 452.853821,1030.299072  C453.346741,1028.835327 454.170197,1028.060181 455.576111,1027.431152  C456.853821,1027.232422 457.736176,1027.507202 458.946533,1027.870361  C460.303101,1028.477173 461.431732,1028.615234 462.862915,1028.957397  C463.384064,1029.198242 463.579437,1029.322021 463.980896,1029.724976  z\"})),_path52||(_path52=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M100.250000,1032.000000  C99.866325,1028.186035 101.518326,1025.176636 104.386665,1021.784241  C105.106667,1026.171997 103.071800,1028.724854 101.146767,1031.681885  C101.000000,1032.000000 100.500000,1032.000000 100.250000,1032.000000  z\"})),_path53||(_path53=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M1.000000,845.428467  C2.769444,843.180603 2.440958,840.575806 3.699256,838.223267  C5.880155,842.684937 2.630289,846.402527 1.275213,850.767700  C1.000000,849.285645 1.000000,847.571289 1.000000,845.428467  z\"})),_path54||(_path54=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M1021.000000,960.555847  C1017.438538,959.695801 1018.032959,956.190796 1017.593506,953.605652  C1017.203979,951.313904 1019.326843,953.038269 1020.662354,952.962402  C1021.000000,955.370544 1021.000000,957.741150 1021.000000,960.555847  z\"})),_path55||(_path55=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M589.375000,1032.000000  C589.336365,1029.512207 588.457703,1027.190063 588.007690,1024.406006  C592.703430,1024.510864 591.516113,1028.309082 591.999756,1031.587158  C591.250000,1032.000000 590.500000,1032.000000 589.375000,1032.000000  z\"})),_path56||(_path56=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M431.159058,1023.660889  C429.573975,1026.370117 430.006470,1028.824951 430.856689,1031.643677  C430.250000,1032.000000 429.500000,1032.000000 428.375000,1032.000000  C427.560730,1029.494629 429.356232,1027.075928 427.909882,1024.399170  C427.022461,1022.756897 429.169556,1022.609070 430.544556,1022.020142  C431.279541,1022.344849 431.459595,1022.805420 431.159058,1023.660889  z\"})),_path57||(_path57=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M389.852600,1028.692993  C390.256622,1029.805786 390.499481,1030.610474 390.871155,1031.707520  C389.285645,1032.000000 387.571289,1032.000000 385.428467,1032.000000  C384.855713,1031.820435 384.711426,1031.640747 384.498413,1031.121094  C384.942505,1028.586670 384.816742,1025.567993 388.880035,1027.739258  C389.351562,1028.069458 389.521484,1028.227173 389.852600,1028.692993  z\"})),_path58||(_path58=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M375.399994,1032.000000  C374.630493,1030.269165 374.358917,1028.605347 377.385193,1029.001953  C378.188232,1028.627197 378.663208,1028.638794 379.342896,1029.401245  C379.691437,1030.285889 379.662872,1030.816650 379.235626,1031.669434  C377.933319,1032.000000 376.866669,1032.000000 375.399994,1032.000000  z\"})),_path59||(_path59=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1017.345886,972.959106  C1017.171021,970.871521 1019.249573,970.508667 1020.707031,969.151001  C1021.000000,969.750000 1021.000000,970.500000 1021.000000,971.625000  C1019.896423,972.306885 1018.792908,972.613770 1017.345886,972.959106  z\"})),_path60||(_path60=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M379.428467,1032.000000  C378.968262,1031.547485 378.936523,1031.094849 378.967957,1030.307373  C380.370819,1028.775024 381.829376,1029.336060 383.626953,1029.812744  C384.191803,1030.074097 384.403351,1030.208374 384.850037,1030.635742  C385.080566,1031.108398 385.076050,1031.287598 385.035767,1031.733398  C383.285645,1032.000000 381.571289,1032.000000 379.428467,1032.000000  z\"})),_path61||(_path61=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M885.375000,1032.000000  C885.551575,1029.971191 886.393738,1029.230713 887.940552,1031.675049  C887.250000,1032.000000 886.500000,1032.000000 885.375000,1032.000000  z\"})),_path62||(_path62=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M452.491577,1029.687866  C453.560333,1030.506104 454.121002,1031.013550 454.840851,1031.760498  C453.933319,1032.000000 452.866669,1032.000000 451.399994,1032.000000  C450.937592,1031.625000 450.875183,1031.250122 450.756683,1030.593750  C450.744080,1030.113159 450.787537,1029.913940 451.101440,1029.570801  C451.575714,1029.410278 451.779633,1029.393799 452.491577,1029.687866  z\"})),_path63||(_path63=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M867.333313,1032.000000  C867.130798,1031.128662 866.705750,1029.854370 867.911621,1029.636475  C869.016113,1029.436890 868.832031,1030.613647 868.991821,1031.663696  C868.555542,1032.000000 868.111084,1032.000000 867.333313,1032.000000  z\"})),_path64||(_path64=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M133.333328,1032.000000  C133.102310,1031.364258 133.160156,1030.601807 133.957138,1030.558716  C134.257889,1030.542603 134.590515,1031.118774 134.954315,1031.712402  C134.555557,1032.000000 134.111099,1032.000000 133.333328,1032.000000  z\"})),_path65||(_path65=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1021.000000,967.666687  C1020.364624,967.896545 1019.600952,967.839966 1019.557861,967.042419  C1019.541626,966.741577 1020.118103,966.408752 1020.712219,966.045288  C1021.000000,966.444458 1021.000000,966.888916 1021.000000,967.666687  z\"})),_path66||(_path66=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M977.218018,773.314758  C972.207520,772.409485 968.830627,770.178833 966.795593,765.528992  C966.045288,763.814575 963.795166,762.531738 961.958130,761.569214  C959.043884,760.042175 957.890076,757.901184 958.735413,754.021851  C955.860657,755.870911 953.345398,755.639648 950.932251,753.527649  C950.240662,764.094482 957.012817,772.620911 955.035034,782.473755  C954.674377,784.270020 955.553040,785.373779 957.263794,786.392578  C960.069458,788.063354 959.343750,791.444031 959.749939,794.062805  C960.170471,796.774231 956.810974,795.333923 955.517517,796.870300  C956.661133,799.190918 958.893677,798.829163 960.935730,799.067200  C962.936401,799.300415 964.908752,799.811035 965.720398,802.020996  C965.980042,802.728271 965.619568,803.544983 964.990479,803.657104  C962.993958,804.013000 960.956421,805.631348 958.950134,803.576782  C956.730469,801.303772 954.633911,800.575317 952.874634,804.144531  C952.360107,805.188477 951.461243,806.332336 950.205322,805.023743  C949.239136,804.016968 948.981201,802.877258 950.138611,801.515686  C953.646118,797.389526 953.429504,797.546631 949.221008,794.478271  C947.384521,793.139343 948.782043,790.814941 950.294189,790.261658  C955.116638,788.497314 953.360474,786.995483 951.122009,784.024841  C949.552368,781.941772 947.396729,779.487671 947.632080,776.178223  C947.742676,774.623840 946.565552,773.507935 944.746277,773.476501  C943.431396,775.110046 947.804138,777.606262 944.391174,778.291748  C942.049744,778.761963 941.535645,775.858643 940.703857,773.823181  C938.706848,768.936584 943.205933,769.005127 945.450073,767.259094  C944.847473,765.539490 943.692322,763.802490 942.044128,764.201538  C936.610168,765.517090 934.664185,761.436951 933.692444,758.043945  C932.755371,754.771729 934.470276,750.787659 929.497192,749.281006  C928.759033,749.057373 930.456970,747.096741 931.032104,745.954956  C932.342590,743.353638 931.390564,742.218018 928.361389,742.010742  C925.656250,739.957581 927.377747,736.520386 925.197083,734.244141  C923.575745,732.551880 922.664001,730.414307 919.629822,731.370728  C917.303040,732.104187 916.003662,730.886963 916.563843,728.449402  C917.260071,725.419800 916.330750,722.145630 918.345154,719.281677  C919.928833,717.030029 917.918274,715.255859 916.714478,713.125610  C916.734131,712.237732 916.910583,711.657898 917.318970,710.863403  C918.654846,710.442566 919.390808,709.498840 920.855164,709.133301  C922.885864,709.295898 924.500854,709.210815 926.131348,709.035767  C930.179016,708.601196 932.428162,710.237427 932.171448,714.920654  C930.008240,719.093689 931.126648,721.319885 934.824768,723.753540  C941.614441,728.221680 948.028687,733.338623 953.698975,739.220276  C959.378967,745.112061 966.928467,748.790405 972.193176,755.146606  C972.798462,755.877441 973.798584,756.710999 974.763733,755.878540  C975.865784,754.927917 975.318604,753.658386 974.587158,752.743958  C971.984924,749.490540 970.041992,745.878662 968.558838,741.686951  C970.246826,739.439636 972.193970,739.937134 973.439941,741.321899  C977.610779,745.957153 981.409424,750.895874 983.484619,757.273438  C983.444763,759.514160 983.409729,761.311523 985.720520,762.088074  C987.373291,762.643311 988.541443,764.524780 987.282898,765.529419  C984.166931,768.016541 984.708862,771.382629 984.132874,774.535278  C983.916260,775.721313 983.251831,776.681396 981.822266,777.419556  C978.790100,777.617554 978.346619,775.382202 977.218018,773.314758  z\"})),_path67||(_path67=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M145.724289,644.348633  C145.605820,637.942688 143.603790,631.605713 147.261063,625.802673  C147.780975,624.977783 148.189819,623.551697 147.040649,623.217773  C142.024963,621.760376 145.525314,619.553528 146.690811,618.057129  C148.598602,615.607849 149.309097,612.774719 150.261627,609.592407  C151.973801,606.021851 150.676666,601.422424 155.293533,599.501404  C156.303192,599.617249 156.287567,600.432556 156.838409,600.616028  C156.706528,599.751160 155.925903,599.418152 155.219467,598.554443  C154.320190,596.196594 154.343521,594.209473 155.731171,592.036011  C160.631973,591.636719 159.213547,587.691101 160.257385,584.860840  C161.438416,583.067444 162.411819,580.844910 164.493576,581.759521  C166.883347,582.809448 165.695450,585.145691 165.289459,587.022644  C165.150208,587.666504 164.915512,588.287537 164.613358,589.275391  C164.501785,590.136047 164.473846,590.627502 164.454498,591.478638  C164.491226,596.851624 161.398056,601.056946 160.805984,605.946533  C160.619385,607.487671 159.698105,608.770203 162.149261,609.626221  C163.144470,610.561157 163.524078,611.437683 163.640518,612.790466  C161.711105,615.422852 161.113647,619.053284 157.262360,619.316040  C156.890152,619.341431 156.012360,619.252075 156.801849,619.800842  C160.982712,622.706726 157.777298,626.109436 157.534286,629.280640  C157.418518,630.791321 157.467972,632.253418 157.787842,633.800659  C158.129776,629.936462 158.546555,626.120789 159.707047,622.511902  C160.472000,620.133118 162.298874,618.506470 165.119888,619.966309  C167.441223,621.167603 169.183868,623.429932 167.451630,625.597595  C163.300751,630.791992 164.017746,636.817444 163.558655,642.682434  C163.377243,644.999939 163.298569,647.319214 162.516907,649.901550  C162.500793,650.982910 162.375092,651.692688 162.139633,652.754517  C160.957886,656.035339 159.605835,658.876587 158.990143,662.335693  C156.883835,665.214355 156.735992,668.021606 157.625763,671.330078  C157.461670,671.882812 157.356796,672.091187 157.007965,672.549927  C152.918716,674.453796 155.071518,677.989136 154.299255,680.977173  C155.131378,686.301392 153.724884,691.131042 153.441925,696.427002  C153.416733,697.645813 153.393661,698.462585 153.092896,699.663574  C152.119873,701.862915 151.110428,703.482605 148.434601,703.456299  C146.545761,699.198608 147.813339,695.147278 148.486557,690.719849  C148.513626,688.701416 147.934464,687.109070 147.940445,684.268005  C147.623734,687.737427 146.423264,689.727844 145.793655,691.908508  C145.434235,693.153381 144.493683,693.860107 143.160950,693.644958  C141.470718,693.372131 141.184723,692.210327 141.439194,691.261108  C142.037842,695.073364 140.790009,698.919250 137.985352,702.636230  C137.513687,702.987061 137.303238,703.097168 136.739838,703.158813  C135.664062,697.931152 136.187057,692.523438 133.423676,687.707520  C133.091278,687.128235 133.262207,685.936890 133.653320,685.314026  C139.738663,675.622925 139.651855,664.454956 141.175613,653.702087  C141.587555,650.795105 142.211594,648.194641 144.487488,645.844788  C147.086548,647.516113 145.630280,649.643127 145.131973,651.550659  C144.458572,654.128357 143.812302,656.514648 145.270996,659.106995  C146.712646,661.669006 144.696152,663.989136 144.417175,666.209167  C145.022842,665.325562 144.919495,663.942993 145.547028,662.433960  C152.617126,656.320740 153.154984,648.420471 152.853745,640.281677  C152.016876,642.214966 151.038071,644.065308 148.530930,645.007080  C147.399780,645.146545 146.673553,644.992188 145.724289,644.348633  z\"})),_path68||(_path68=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M815.834656,587.706055  C817.176331,588.970459 817.164124,590.138977 816.281921,591.085144  C814.719116,592.761169 815.302368,594.386902 816.710938,595.362854  C820.166626,597.757141 819.064148,601.399353 819.676392,604.581055  C819.894165,605.712708 819.638550,606.659851 818.411133,606.835449  C816.014954,607.178284 814.766296,608.423035 815.076233,610.863159  C815.485901,614.088928 816.348999,617.367554 819.700928,618.544434  C822.083862,619.381104 824.102234,619.948914 824.184937,622.900024  C824.193420,623.202759 824.374329,623.684448 824.596680,623.770813  C831.945923,626.627014 832.609802,632.776794 833.850830,639.587585  C834.656067,644.007019 839.189575,647.631653 839.384766,653.031067  C839.457825,655.053650 842.253479,656.689453 844.232117,656.738953  C853.408081,656.968140 855.590332,665.165161 861.096863,669.946472  C858.617371,671.654724 856.563660,669.026672 854.492920,670.887512  C851.105835,672.653259 852.904419,676.215576 851.358887,677.784729  C851.513855,676.754517 852.594177,675.939819 854.450317,675.504761  C855.560974,675.481934 856.166687,675.794983 856.860840,676.672119  C858.982666,679.369141 861.004028,680.788330 864.454712,681.378784  C868.388123,682.051880 870.195801,686.804138 873.532715,689.238953  C878.357605,692.759460 881.907532,697.551880 883.940918,703.676270  C882.026855,705.638672 879.674377,703.780090 877.296204,704.839661  C876.424377,704.887268 875.934753,704.804626 875.133789,704.460083  C874.505676,703.871765 874.285095,703.434937 874.138916,702.586304  C874.216064,700.916016 874.714966,699.562927 873.989624,698.315796  C870.873962,692.958374 866.256653,689.107178 860.821716,684.626953  C860.651184,688.480103 862.909241,689.561707 864.507141,690.942749  C867.528625,693.554382 870.649780,696.042969 871.467896,700.566040  C870.310486,702.201599 868.802185,701.699890 867.116577,701.892029  C866.298218,701.868958 865.838684,701.786377 865.064270,701.518555  C863.272827,700.231628 861.558838,699.502075 859.688599,698.348999  C856.891968,692.179077 852.365112,688.265747 847.527405,684.046936  C842.420166,679.593140 835.917358,675.957092 833.183411,668.999268  C832.448242,667.128174 830.665894,665.964966 828.753784,664.561768  C827.442749,663.102295 826.954773,661.693604 826.970825,659.742310  C829.123169,654.697876 830.479614,654.316589 834.068359,657.581787  C836.374756,659.680237 838.220093,662.378906 842.072815,663.018311  C841.854675,662.989746 841.704163,663.006470 841.237488,662.803345  C835.800171,660.436523 832.482056,655.513245 828.270996,651.709778  C826.292297,649.922668 825.798828,646.730164 826.251221,643.775879  C826.826050,640.022156 825.412231,637.667603 821.132812,637.036560  C817.012451,634.118713 816.854248,629.347229 814.387512,625.454834  C813.187744,624.401733 812.484009,623.415649 811.788086,621.975830  C811.425049,620.636902 810.720337,619.890076 810.119507,618.650024  C809.476318,616.704285 809.533630,615.116455 810.080994,613.139038  C812.059204,609.966858 811.209167,607.040283 810.605591,604.158997  C809.669373,599.689392 808.727173,595.230530 807.433777,590.829895  C806.707153,588.357422 805.419800,584.858215 808.968140,583.463501  C812.265076,582.167542 813.864563,585.200684 815.834656,587.706055  z\"})),_path69||(_path69=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M387.204285,89.188911  C392.898560,82.616364 400.007172,77.827492 407.653168,73.858994  C426.693634,63.976440 446.236603,55.204491 467.053345,49.798401  C475.563171,47.588409 484.168823,45.773102 493.321655,46.946308  C503.194702,48.211830 513.184265,45.272659 523.146667,46.243576  C525.273804,46.450882 529.452759,44.367275 528.737000,50.460495  C528.443848,52.956432 533.890808,53.688156 537.604431,54.037632  C540.760803,54.221493 542.536438,55.434677 542.410400,58.806660  C539.115845,61.800125 535.921814,58.760956 532.383423,59.281227  C531.245728,59.338581 530.492249,59.270504 529.370850,59.104668  C526.673523,58.316383 524.433960,57.206062 521.526611,57.428291  C520.678650,57.398201 520.199768,57.339897 519.376099,57.181374  C514.619263,56.536224 510.338135,53.786804 505.431519,56.506622  C504.667908,56.870754 504.205902,57.021389 503.365540,57.201218  C502.250671,57.326401 501.505798,57.290401 500.394714,57.136684  C498.361084,56.421688 496.695587,56.334999 494.654266,57.167732  C492.425629,57.464142 490.576569,57.504169 488.354492,57.016064  C483.416351,55.122711 478.748077,57.090706 473.774780,56.479954  C472.392883,56.470375 471.393402,56.490368 470.031647,56.500240  C468.423187,56.384125 467.360840,56.842823 466.053741,57.710506  C464.565002,58.303619 463.373657,58.340649 461.826965,58.027176  C459.389252,56.966450 457.290833,55.038174 454.978363,58.200481  C454.164642,59.194176 453.467224,59.814259 452.355225,60.492439  C451.574219,60.796036 451.105713,60.884727 450.272461,60.903259  C444.818756,59.606182 440.686768,62.257450 436.186371,64.503815  C435.823456,64.952240 435.659851,65.117371 435.208679,65.481934  C434.505707,65.888252 434.075348,66.056877 433.296509,66.260101  C429.967102,66.956429 426.769653,67.179726 424.840515,70.604111  C423.983002,71.601707 423.142456,71.984268 421.886719,72.293091  C417.763702,72.794739 414.201813,73.766037 411.254242,76.879807  C410.747620,77.741203 410.349548,78.275345 409.724121,79.056625  C409.020325,79.771187 408.462616,80.130028 407.592834,80.606842  C406.912170,80.928154 406.513885,81.081169 405.811646,81.306656  C404.360504,81.764473 403.259033,82.261230 401.893738,82.893036  C400.904083,83.322166 400.224854,83.695297 399.393127,84.391022  C398.976349,84.661011 398.801575,84.757828 398.351471,84.975197  C397.094604,85.367065 396.181458,85.766678 395.188782,86.696915  C393.183563,87.957619 391.512817,89.166260 389.171021,89.820488  C388.333771,89.824165 387.885742,89.676445 387.204285,89.188911  z\"})),_path70||(_path70=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M916.341309,712.929260  C921.434082,715.012207 921.946228,716.725220 918.908752,721.186523  C916.962036,724.045776 920.328308,727.567200 916.621155,730.614441  C924.943970,728.061096 928.120667,731.418213 927.998779,741.605591  C927.715027,745.657593 926.897461,748.934814 922.683105,749.996704  C921.255066,750.356384 920.882568,751.359070 921.428406,752.681702  C921.968018,753.989502 922.658264,755.232239 924.362305,754.259521  C926.706543,752.921509 928.389893,753.287109 928.133667,756.200562  C927.758240,760.470520 930.674011,762.424561 933.378052,764.541748  C934.735229,765.604309 936.122498,766.487976 935.973572,768.445312  C935.546753,774.059509 939.190735,778.391174 940.651489,783.409058  C941.007935,784.633545 942.926575,786.253723 940.224060,786.818298  C939.067871,787.059937 936.538635,788.263000 936.837585,785.045959  C936.946289,783.876648 936.056824,783.383789 935.433289,782.616150  C932.064148,778.468018 926.313232,775.576172 928.026245,768.653015  C928.269104,767.671509 927.929749,766.174194 926.229614,766.260864  C925.094971,766.318665 924.190674,767.124573 924.237061,768.128418  C924.327332,770.078491 921.962830,771.044739 922.519531,773.108887  C922.976013,774.801453 921.613342,775.891541 920.483093,775.895630  C919.331909,775.899841 919.153503,774.225403 919.054688,773.095520  C918.908936,771.429932 918.914246,769.773804 920.091919,768.363220  C921.238159,766.990356 921.044434,765.508118 919.981934,764.265808  C918.317139,762.319336 917.923340,764.770142 917.003845,765.290527  C915.111267,766.361755 914.219360,765.743835 914.009399,763.354065  C913.033997,760.602478 913.031006,757.882446 910.802979,755.914490  C909.449524,754.718933 910.158630,752.801819 910.827332,751.231995  C912.710327,746.811401 913.282593,742.442688 911.243896,737.807190  C910.019043,735.022339 909.876282,731.788086 911.461731,729.115906  C913.175476,726.227600 913.503357,723.224976 913.579895,719.694702  C913.628052,718.837952 913.682678,718.349854 913.843750,717.502686  C914.226807,716.189941 914.857117,715.411438 915.470093,714.210693  C915.814758,713.611389 915.972900,713.327881 916.341309,712.929260  z\"})),_path71||(_path71=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M315.877594,154.278915  C316.137695,154.094803 316.461304,153.968872 316.625427,153.912201  C318.355164,152.729202 319.963104,151.633804 320.088440,149.095154  C320.240570,148.581070 320.338104,148.387100 320.686920,147.985962  C320.938202,147.778793 321.228394,147.679153 321.374329,147.631805  C323.721008,147.027603 324.709076,145.279678 325.715485,143.115967  C325.927032,142.497116 326.089386,142.239380 326.516907,141.903839  C327.135071,141.592270 327.557098,141.401794 328.322906,141.153259  C331.849457,141.391159 333.203613,138.813324 334.877899,136.939941  C336.508636,135.115265 338.539429,133.654633 340.036987,131.239182  C340.397766,130.774353 340.558838,130.601593 341.003052,130.215881  C343.675598,128.746552 345.413483,129.308731 346.740936,132.050888  C345.319092,122.697189 353.104858,119.719124 358.282410,115.028496  C360.043457,113.433083 362.619263,113.388832 364.937408,114.125572  C369.247650,115.495422 372.977844,114.241058 376.785553,112.195686  C379.881409,110.532700 382.579681,107.535118 386.972412,108.651428  C388.284088,111.298866 386.841187,112.858246 384.997375,113.635956  C381.455566,115.129913 379.000916,117.385056 377.440460,120.953209  C376.511993,123.076241 374.255035,124.227196 372.052856,125.753723  C369.447449,127.614632 366.992920,128.976913 364.335419,129.996689  C358.489624,132.239853 353.509186,135.709274 349.521088,140.578522  C346.977631,143.683929 343.799683,145.536667 339.646729,145.555191  C336.858978,145.567627 334.922913,146.827301 334.244354,149.729752  C333.715759,151.990616 332.376465,153.539703 330.034729,154.186844  C327.112610,154.994415 325.881622,157.918991 323.260590,159.712051  C321.213318,160.585999 320.094055,161.755127 319.145172,163.432724  C316.807068,167.566376 314.291412,167.917923 309.770203,164.768585  C308.533264,161.423950 310.933990,160.213669 312.971375,158.443237  C313.679108,157.858109 314.035400,157.456680 314.515625,156.815216  C314.247742,155.538818 315.141754,155.097748 315.877594,154.278915  z\"})),_path72||(_path72=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M387.325989,109.196251  C382.992737,109.333534 380.081360,112.054726 376.795410,113.867195  C372.854706,116.040817 369.075897,117.517517 364.640228,115.426079  C362.892303,114.601913 360.869934,114.692368 359.390686,115.896820  C355.933746,118.711555 352.156708,121.377235 349.526215,124.869293  C348.000427,126.894836 348.415070,130.399918 348.016602,133.247604  C347.865723,134.325745 348.161865,135.515869 347.214691,136.452042  C344.581482,135.110260 347.000488,129.037140 341.228455,130.847290  C339.615295,127.917130 342.138611,126.771164 343.588501,125.164154  C349.411041,118.710609 356.692993,113.801559 362.653748,107.008934  C362.886597,106.380287 363.063049,106.146515 363.535675,105.895676  C364.794983,105.497047 365.791168,105.079208 366.669281,103.962021  C367.679718,101.800957 369.605896,101.172729 371.418457,99.919678  C372.771240,99.530312 373.740753,99.105110 374.603088,98.002792  C374.690155,97.693192 374.773346,97.779030 374.763763,97.720032  C375.878784,97.590324 376.770325,97.022789 377.723267,96.028015  C377.845612,95.730583 378.071228,95.488762 378.233093,95.454956  C379.180847,95.702362 379.563965,95.149002 380.100311,94.355911  C380.760986,93.559181 381.298370,93.064194 382.097015,92.465912  C383.402252,92.748802 383.892853,91.876839 384.750702,91.135345  C385.223572,90.680664 385.501312,90.486794 386.024750,90.222801  C387.308350,90.882256 387.826508,89.857872 388.787170,89.258102  C390.737152,88.009308 392.436554,86.983559 394.444641,85.830826  C395.467865,85.356964 396.204620,85.122749 397.370239,85.403008  C399.338318,87.815079 400.088196,90.518707 401.579651,92.896309  C403.030914,95.209953 401.307434,97.660416 400.071930,99.839714  C397.557678,104.274536 392.886139,106.037025 388.693237,108.991142  C388.140289,109.268196 387.895721,109.328468 387.325989,109.196251  z\"})),_path73||(_path73=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M786.874573,507.127686  C791.005493,507.713348 793.207336,510.758667 795.771362,513.318787  C796.004150,513.551270 796.394348,513.870911 796.358276,514.092468  C795.024536,522.277710 803.377747,525.978333 805.018799,532.848206  C805.997864,536.946411 805.723999,541.620789 810.336914,544.406677  C811.947998,545.379700 810.278198,547.388245 808.625000,548.155090  C805.513000,549.598511 805.161865,551.671448 807.521606,553.947205  C812.191833,558.450989 811.456665,563.748596 810.043579,569.614136  C806.267517,572.711792 804.667847,569.133484 802.093750,567.324646  C801.161377,566.727844 800.704102,566.178040 800.291443,565.169739  C800.005188,563.950317 799.875122,563.050171 799.361938,561.897461  C799.044128,560.893677 799.004272,560.200989 799.169067,559.155518  C800.162231,557.055359 802.007874,555.614014 799.468079,553.374451  C797.926270,552.014893 798.467957,549.283203 797.663940,547.282043  C796.987854,545.599304 796.440674,543.826477 794.427856,542.603149  C792.216003,539.812073 791.912781,536.640869 790.744690,533.387817  C788.810852,524.548096 788.017090,515.924988 786.874573,507.127686  z\"})),_path74||(_path74=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M731.918335,287.125732  C734.442627,287.549744 734.494934,289.703308 734.842041,291.321594  C737.401672,303.254181 742.533691,314.503937 743.267883,326.988037  C743.613831,332.870850 747.732361,338.249329 748.391418,344.423737  C748.524597,345.671265 750.059265,345.854706 751.122986,346.308075  C752.363831,346.836975 753.248840,348.063202 752.091370,348.993622  C747.787842,352.452789 750.355713,356.705933 751.463867,359.952820  C752.390686,362.668365 753.637329,365.747833 755.592102,368.181915  C756.594543,369.430237 757.580078,370.960358 756.603577,372.225311  C753.873047,375.762726 755.069641,380.035522 756.600098,382.533844  C761.008667,389.730438 757.580444,397.184814 758.489868,404.699615  C757.913147,405.335205 757.500671,405.539337 756.681641,405.556824  C755.922119,405.278320 755.598755,404.966614 755.280945,404.225342  C755.007874,402.825195 754.748657,401.772156 754.083801,400.486267  C753.665100,399.252991 753.529358,398.316406 753.551514,396.983795  C753.578552,392.012482 752.953064,387.504486 751.470825,382.756165  C750.615967,381.253632 750.222351,379.988342 749.785889,378.319458  C749.153870,374.347565 749.912048,370.597900 748.183655,366.790985  C747.733154,365.468475 747.630554,364.468750 747.551514,363.101746  C747.613098,361.510651 747.273132,360.412354 746.319092,359.131470  C746.051453,358.578064 745.960876,358.346680 745.784058,357.749298  C744.730347,346.968750 741.686951,337.085388 737.784058,327.075653  C736.091858,324.535126 735.000793,322.189392 735.760498,319.060303  C735.974915,317.870087 736.166504,317.017029 735.939209,315.813934  C735.789368,315.046051 735.719604,314.599731 735.633423,313.800964  C735.662476,311.492676 735.501709,309.589935 734.064087,307.604950  C732.378296,300.717163 730.048767,294.285461 731.918335,287.125732  z\"})),_path75||(_path75=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M604.676758,97.204498  C609.846069,98.614151 611.545837,103.420242 614.739990,106.686714  C615.759277,107.729042 616.482239,109.065742 617.763000,109.917168  C619.248413,110.904648 620.914490,111.858498 617.881409,113.186676  C615.339478,114.299782 616.272766,115.587708 618.023315,116.688232  C622.058289,119.224846 624.859741,123.479362 629.654114,124.987434  C630.383850,125.216995 631.246399,125.835030 631.545837,126.499451  C635.648376,135.604675 644.859192,139.066849 651.897156,144.894577  C654.538330,147.081619 656.684143,149.381607 657.660034,152.990143  C652.614075,154.872574 649.285217,151.354721 645.095764,149.312347  C644.085083,148.882828 643.504089,148.454117 642.746826,147.682434  C641.687927,146.449509 641.796570,144.739807 639.807983,144.350891  C638.065918,143.871719 636.868469,143.131210 635.655762,141.768753  C635.173645,141.082260 634.953674,140.658813 634.658569,139.883286  C631.363403,133.230698 626.901306,128.200912 619.925781,125.249146  C618.965271,124.799698 618.411865,124.369583 617.689941,123.596626  C616.479980,122.178642 617.037842,120.035187 614.693542,119.489632  C613.665771,119.330322 613.009155,119.114540 612.066284,118.659042  C608.867310,115.258362 606.724182,111.099754 601.401123,110.392853  C599.444092,109.952499 598.319580,109.071190 597.923279,107.022949  C597.898010,104.996605 598.748657,103.492325 598.817993,101.852097  C599.033813,96.745712 599.016479,96.744980 604.676758,97.204498  z\"})),_path76||(_path76=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M249.339569,274.216156  C245.078049,266.901672 248.659180,260.435547 251.120117,254.149567  C257.352692,238.229767 265.390472,223.201202 275.102753,209.112518  C282.307800,198.660828 289.669922,188.317398 297.260620,177.779541  C297.792694,177.684937 298.026215,177.736557 298.426971,178.105225  C298.341461,183.136002 294.098297,186.029205 292.976227,190.735733  C292.391418,191.899765 291.742950,192.585770 290.936218,193.582779  C287.295471,196.834518 286.525055,201.113327 285.084229,205.435989  C284.744354,206.128754 284.505676,206.495193 284.023254,207.080139  C283.270660,207.933960 282.555389,208.399307 282.073944,209.464691  C281.829315,209.925842 281.726654,210.109268 281.455078,210.560989  C280.153870,212.210281 280.033569,213.980408 279.407410,215.902817  C279.254150,216.660477 279.114380,217.078491 278.777435,217.773651  C278.001953,218.943375 277.138794,219.606842 276.332703,220.727859  C275.722260,221.671661 275.354370,222.394318 274.939331,223.435303  C274.714539,223.891190 274.613342,224.067520 274.330719,224.487488  C273.761078,225.187805 273.309448,225.585236 272.731873,226.267944  C272.036926,227.088211 271.490295,227.659668 271.362305,228.803711  C271.068939,230.417496 270.656586,231.660233 269.747864,233.065430  C267.036072,235.262405 264.879700,237.466476 263.697449,240.863770  C262.665436,243.004562 258.871490,242.542114 259.931458,246.172699  C260.635162,249.520325 258.967590,251.681671 257.064056,254.099869  C253.243408,256.048035 252.177841,258.683929 253.837280,262.708496  C253.506210,265.714661 252.939987,268.308289 252.430145,270.912994  C252.105835,272.569855 251.945450,274.303284 249.339569,274.216156  z\"})),_path77||(_path77=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M156.071381,599.719116  C152.250061,601.840332 153.676102,606.510620 150.624130,609.078125  C149.052856,604.035034 151.574707,599.036560 151.092102,593.885071  C151.062683,593.570984 151.105865,593.074158 151.303543,592.940308  C157.104309,589.010803 153.569641,584.656250 151.751297,580.529846  C150.835770,578.452209 151.709198,577.163330 152.652710,575.523499  C153.714920,573.677307 156.249359,572.420349 155.900986,570.089294  C154.680115,561.919678 159.851669,555.090637 160.378738,547.344727  C160.668518,543.085938 164.475281,541.282166 166.611145,538.016602  C168.639130,539.546204 168.427475,541.660034 168.475311,544.131714  C168.789001,548.073975 168.674683,551.611145 168.928680,555.513550  C168.452072,557.956116 166.590591,559.564331 166.993240,562.252197  C166.849258,565.043274 166.299652,567.373169 165.010757,569.863220  C163.490784,571.782349 162.485382,573.538879 162.452332,576.064331  C162.483856,577.372498 162.292496,578.289795 161.779205,579.487061  C156.054871,581.183228 156.054871,581.183228 158.557037,586.392212  C158.891815,587.687439 158.601761,588.607239 158.372345,589.892212  C158.174149,590.712463 157.967346,591.143982 157.420868,591.782593  C155.154724,593.788513 156.365753,596.143127 156.036758,598.635193  C156.146317,599.231262 156.233841,599.402771 156.071381,599.719116  z\"})),_path78||(_path78=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M255.751404,254.231552  C256.908600,251.542709 259.309967,249.719421 258.959290,246.378937  C259.361115,244.260086 260.484955,243.437683 262.604919,243.541168  C263.144226,243.849213 263.319885,244.034760 263.635620,244.576767  C261.070404,251.998688 261.656097,260.191040 256.036285,266.312714  C254.122528,268.397339 254.116852,271.478027 254.973785,274.699646  C255.149918,275.862946 255.087234,276.637238 254.771423,277.769867  C250.224792,282.937317 249.996140,289.346985 248.578430,295.150696  C246.666504,302.977661 243.505447,310.456421 242.521652,318.568054  C242.051392,322.445435 237.628372,325.443878 239.407043,330.473999  C239.426056,331.638916 239.348450,332.409241 239.047577,333.540955  C236.376877,338.026947 235.475723,343.127594 231.135895,346.573547  C229.063202,347.265350 227.542084,346.855286 225.889816,345.476074  C224.465302,342.260468 225.834717,339.664581 226.917267,337.193756  C228.694244,333.137970 229.905182,328.937897 231.138489,324.320007  C234.538223,319.629639 237.214737,315.022736 237.836685,309.523041  C238.339951,305.072906 238.509811,300.585266 242.106277,297.157501  C243.334717,295.986694 243.336411,294.133881 243.555984,292.484985  C244.263046,287.175354 245.888107,282.156860 248.542160,277.081360  C248.770081,276.059631 248.832199,275.372223 248.942780,274.343140  C252.451767,273.235229 250.480209,270.201294 251.290009,268.323395  C252.042908,266.577393 252.266251,264.602966 252.903656,262.382324  C254.993286,259.875183 254.783112,257.027710 255.751404,254.231552  z\"})),_path79||(_path79=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M755.838257,405.058258  C756.655579,404.861694 757.115295,404.917297 757.924316,404.997345  C758.572327,406.380310 758.870972,407.738831 759.208191,409.447845  C761.325623,418.211334 761.930542,426.804626 762.575195,435.774170  C762.881897,436.513428 762.993774,436.895386 763.180786,437.566223  C763.964172,438.801178 763.905334,440.002899 764.499756,441.331665  C765.176697,442.376953 765.315247,443.276398 765.752441,444.413147  C765.983276,445.141632 766.089783,445.563141 766.249634,446.302094  C766.419983,447.240723 766.512451,447.867859 766.830933,448.765686  C767.027161,449.470367 767.113037,449.877808 767.230286,450.593323  C767.393860,452.096466 767.408264,453.321533 768.297607,454.635071  C768.411499,455.130493 768.413208,455.337219 768.197083,455.764709  C768.226379,458.066681 768.473511,460.147949 768.755737,462.614746  C769.585449,469.151184 772.707581,474.408691 775.323608,480.236237  C775.403809,482.014343 775.531738,483.409180 776.629395,484.911438  C777.284851,487.977661 776.772278,490.730957 776.861816,493.852417  C776.637207,494.467499 776.506165,494.699402 776.045715,495.163818  C771.723877,495.184143 772.481934,491.691284 771.522461,488.967529  C769.793152,483.920929 768.023804,479.350433 767.137146,474.382904  C766.532288,470.994141 765.427368,467.233124 761.550049,465.424622  C758.409973,463.959991 759.490662,460.445953 758.404541,457.961975  C756.059937,452.600220 755.310852,447.280975 757.901917,441.614655  C759.685791,437.713593 757.496521,433.781250 756.564880,429.978363  C755.494873,425.610840 754.228760,421.314667 754.504150,416.358154  C754.476257,414.891785 754.285950,413.821930 754.501099,412.337921  C754.515076,410.810974 754.496948,409.695465 754.583008,408.152283  C754.650269,406.829315 754.933960,406.022339 755.838257,405.058258  z\"})),_path80||(_path80=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M183.163544,470.211945  C181.261856,468.031525 180.822418,465.615662 180.199829,462.997955  C182.315720,462.875488 181.546387,466.575562 183.648331,465.542328  C185.409210,464.676758 185.960968,462.692200 185.928009,460.840179  C185.820953,454.828918 188.597275,449.200165 188.177597,443.154968  C188.134613,442.535492 188.395721,441.839478 188.681274,441.260712  C194.885757,428.684357 199.042862,415.411194 201.564056,401.670532  C202.357834,397.344391 205.237488,394.549805 207.540466,390.980835  C210.943192,395.277618 208.410126,399.205872 206.629883,403.527893  C204.822784,405.525757 203.145844,407.176086 204.076691,410.192047  C205.068497,414.293457 202.348816,416.957947 201.134933,420.438507  C199.941803,422.092743 199.526398,423.477478 200.744904,425.330017  C200.065796,430.540222 197.627609,434.979797 197.052399,440.281708  C196.486740,441.756989 195.461502,442.586487 195.189880,444.205505  C193.799118,447.243774 193.118576,450.158173 191.756958,453.218170  C189.711349,455.847260 190.229248,458.496155 190.325531,461.140991  C190.526871,466.672455 188.968552,468.683258 183.163544,470.211945  z\"})),_path81||(_path81=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M801.773499,566.251404  C805.156860,566.019775 805.487122,571.032166 809.587280,570.017456  C810.011658,570.425049 810.058716,570.828796 810.123779,571.537109  C811.296387,573.572754 811.839417,575.551819 812.633728,577.789429  C812.888733,578.476685 812.949341,578.882263 813.044434,579.593506  C813.794678,580.874573 814.714844,581.665527 815.671753,582.826233  C815.939575,584.434448 816.032959,585.797119 816.133911,587.569458  C813.754761,588.524719 813.218567,586.401184 811.987915,585.198547  C811.170959,584.400146 809.981201,583.761230 808.823120,584.509521  C807.861267,585.130981 808.025574,586.254639 808.266907,587.236267  C809.631042,592.785828 811.040833,598.324280 812.386658,603.878174  C813.118958,606.900208 813.913330,609.955322 811.468262,612.937988  C807.596741,611.141663 806.308533,608.209717 807.089172,604.330383  C807.220093,603.679626 807.395630,603.031311 807.414246,602.368408  C807.554871,597.359741 806.501038,596.228333 800.705200,595.168823  C798.947754,593.027283 800.218079,590.265076 798.221069,588.117126  C797.482910,586.159302 797.451050,584.551941 798.113647,582.570007  C801.439148,580.011414 802.498840,577.202698 801.747375,573.285583  C801.338440,571.153748 800.388184,568.806152 801.773499,566.251404  z\"})),_path82||(_path82=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M195.707733,441.144867  C196.089203,435.574829 197.680496,430.622375 199.877441,425.459595  C199.151337,424.030884 198.933929,422.902924 199.620239,421.283325  C199.700211,417.142853 203.860352,414.764618 203.069794,410.400635  C202.787857,407.973633 203.850922,406.305878 204.757385,404.265320  C207.090500,400.177856 207.783600,396.017181 207.933044,391.310699  C208.246597,390.461456 208.621536,390.039917 209.267090,389.527222  C211.839890,389.911896 212.086548,391.886475 212.766388,394.012817  C213.074982,394.852173 213.193848,395.343658 213.316956,396.207672  C213.660950,398.946014 213.575470,401.263062 212.200912,403.717102  C211.391220,406.270325 209.592270,408.168274 210.084717,411.081421  C210.277069,412.101624 210.342026,412.795074 210.365204,413.853821  C210.375305,414.944794 210.241806,415.654419 209.935303,416.694092  C208.578979,422.463470 204.623306,426.482452 202.290436,431.375885  C199.776489,436.649170 200.883591,442.110565 199.983887,447.790588  C198.061203,450.562866 198.674789,454.903656 193.862976,455.280579  C192.356979,455.133911 191.385651,454.749817 190.810974,453.305603  C191.608887,450.071899 191.729141,447.028687 193.751907,444.242737  C194.915405,443.373718 194.943787,442.206757 195.707733,441.144867  z\"})),_path83||(_path83=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M188.251099,391.226562  C186.487335,390.006714 184.950638,388.298248 187.082397,387.252167  C191.184708,385.238983 192.718445,381.589325 194.799301,378.053467  C195.999939,376.013306 197.788269,374.112061 200.473557,373.007812  C202.520477,371.128510 205.581329,370.960724 206.743668,367.948669  C207.087708,367.156128 207.269302,366.672272 207.663483,366.030640  C212.300262,365.289215 211.656342,369.582062 213.560791,371.909607  C214.872574,375.795959 212.797989,379.140594 212.963928,383.037170  C212.644043,384.534088 212.113724,385.384369 210.464920,385.297363  C209.106232,383.792328 209.394394,382.431458 209.822296,380.941956  C210.116806,379.916779 211.281845,378.234314 208.872665,378.029724  C207.482483,377.911652 206.103546,378.200012 206.045547,379.969543  C205.843491,386.132050 201.824600,388.901031 196.342377,390.864075  C194.892227,390.134949 193.088333,390.231415 191.336273,391.298218  C190.416092,391.858490 189.485397,391.785431 188.251099,391.226562  z\"})),_path84||(_path84=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M167.424652,557.259521  C167.454712,553.283447 167.308273,549.676697 167.173447,545.633667  C168.125732,543.080688 168.598801,540.907776 167.862213,538.280579  C167.773712,537.545349 167.803589,537.132751 167.846680,536.409973  C167.774841,535.909668 167.689789,535.719421 167.864227,535.354858  C168.244980,534.791809 168.366226,534.403137 168.548523,533.715088  C169.281540,530.041809 169.040955,526.428650 171.395844,523.121704  C171.762894,522.122681 171.956619,521.452637 172.275269,520.456848  C173.506805,517.145630 172.366333,512.787292 177.684906,512.163086  C178.331619,512.283752 178.580673,512.373352 179.139404,512.709229  C181.568878,517.797363 182.597733,522.304810 179.573639,527.561279  C177.261139,531.580750 175.805161,536.502563 178.202240,541.791443  C178.281372,543.009521 178.114227,543.789551 177.539703,544.853638  C176.028046,546.000671 174.826340,545.963440 173.660706,544.782593  C174.336166,549.963257 172.643158,554.660339 170.942261,559.335754  C170.467072,560.641968 169.411118,561.489746 167.523392,561.437561  C165.826706,560.060547 166.940796,558.855957 167.424652,557.259521  z\"})),_path85||(_path85=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M644.677063,148.550720  C649.146729,149.200912 652.421265,152.636246 657.234497,153.219604  C658.132812,154.208344 658.695007,155.071640 659.473145,156.158752  C662.470093,158.692642 664.152283,161.893875 666.529053,164.951721  C667.280884,166.051147 667.893066,166.843933 668.756348,167.816406  C672.285706,172.574951 675.385010,177.276184 678.527466,181.947571  C680.022278,184.169464 681.416626,186.440689 680.551147,189.650604  C679.206787,190.878998 678.087402,190.632401 677.385498,189.506622  C673.725891,183.636642 667.095276,180.066803 664.790833,173.129471  C664.377930,171.886520 663.088257,171.122742 662.029236,170.327805  C655.870056,165.704376 651.775391,159.134109 646.407532,153.762360  C645.118896,152.472839 644.138000,150.882385 644.677063,148.550720  z\"})),_path86||(_path86=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M604.663696,96.902412  C604.593933,100.939629 599.124207,95.959183 599.968384,99.354568  C600.629272,102.012604 600.176636,103.587639 599.076782,105.535797  C598.996765,105.677597 598.898560,105.809128 598.597412,106.287933  C596.296692,106.552330 595.171692,105.024925 595.316650,103.385010  C595.853088,97.316010 593.485596,92.890015 588.284912,89.405182  C587.557800,87.385056 586.825012,85.801605 584.718994,84.871719  C583.112976,83.762932 581.778809,82.853165 580.411499,81.429718  C578.772522,76.636909 574.940308,73.724953 572.838806,69.533340  C573.110962,68.145111 573.162720,67.030205 573.241821,65.325661  C580.434204,71.823372 588.283203,76.686584 592.390137,85.526360  C594.748779,90.603065 598.536377,94.958054 604.663696,96.902412  z\"})),_path87||(_path87=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M248.408615,276.892303  C247.712646,283.413635 246.101776,290.097687 244.133408,296.366486  C242.842712,300.477081 238.571899,304.458160 239.438278,309.032471  C240.550232,314.903412 234.943375,317.671051 234.721985,322.629578  C234.700470,323.111267 233.447037,323.537933 232.430267,324.067200  C229.637711,321.487549 231.799072,319.001190 232.569427,316.042542  C236.018097,305.252289 238.901947,294.732147 242.798538,284.601532  C243.764465,282.090240 245.945923,279.297180 248.408615,276.892303  z\"})),_path88||(_path88=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M786.974609,506.564636  C790.728455,514.935181 789.861023,523.859375 791.979370,532.617554  C789.310974,534.213684 788.599854,532.033508 787.680664,530.426270  C784.752869,525.306519 783.048706,519.666748 780.728760,513.903198  C780.213928,512.971985 780.049744,512.298401 779.907959,511.287048  C779.845642,509.877472 779.345154,509.016479 778.383057,508.015625  C777.469055,506.507629 777.128052,505.161530 777.082886,503.369507  C777.510742,501.573608 777.530579,500.046143 778.394531,498.362457  C781.448853,496.726746 782.815796,498.834137 784.611572,500.800110  C785.497437,502.822906 786.140869,504.550171 786.974609,506.564636  z\"})),_path89||(_path89=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M711.775879,237.258209  C717.406982,241.494080 719.803650,247.759247 721.406738,254.238220  C723.621399,263.188385 726.395142,271.876312 730.691833,280.052887  C730.898438,280.445984 730.742676,281.029510 730.655518,281.897705  C727.957520,282.943878 727.166992,280.901642 726.128540,279.285736  C725.064636,277.630219 724.731628,275.603699 723.297180,273.722290  C721.751343,271.103394 720.443298,268.771301 719.712524,265.791260  C718.371338,261.594330 716.549255,258.032166 714.000122,254.417999  C712.956909,252.724030 712.556030,251.221863 712.533936,249.211578  C712.532532,245.031265 710.301270,241.455795 711.775879,237.258209  z\"})),_path90||(_path90=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M572.691406,69.136566  C576.591553,72.323578 580.159546,75.362007 580.930786,80.764359  C578.545898,82.597771 576.656372,80.589844 574.181335,80.018066  C572.408936,78.898483 570.942322,77.969193 569.993164,76.035507  C569.454651,75.120735 569.934814,73.905624 568.924500,73.881981  C568.503296,73.872131 568.688721,75.034180 568.303345,75.925522  C567.929565,76.330727 567.727661,76.443642 567.177979,76.617249  C564.817261,76.479530 563.180603,75.511284 561.502380,73.896828  C560.035950,70.950195 559.315247,67.915947 555.945801,66.438965  C555.169861,66.245216 554.742249,66.087784 554.029297,65.731300  C551.901062,63.807438 549.613953,63.002167 546.856201,62.398941  C546.022156,62.254684 545.551941,62.114918 544.742188,61.770065  C543.484619,60.978455 542.691956,60.283588 543.069946,58.724152  C545.951294,56.950405 548.224854,58.019569 550.822327,59.566017  C557.636169,64.218834 565.075928,66.395889 572.691406,69.136566  z\"})),_path91||(_path91=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M178.808823,488.261078  C177.238159,482.287933 181.210358,477.595490 182.300659,472.058960  C185.789383,472.827454 185.789383,472.827454 185.534607,477.033844  C186.339355,474.706757 186.770340,471.674561 191.059113,472.681763  C191.513184,473.104187 191.656464,473.316650 191.935822,473.896179  C191.822495,478.514771 191.747543,482.787842 190.347687,487.266876  C189.149506,489.220459 187.423477,490.440338 187.365967,492.978302  C187.118698,494.603607 186.637436,495.746094 185.624573,497.039459  C185.150772,497.422180 184.937943,497.540344 184.374969,497.741333  C179.990921,497.307190 181.076584,494.389313 181.190353,491.874908  C181.260986,490.313690 182.466125,487.963409 178.808823,488.261078  z\"})),_path92||(_path92=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M679.752625,190.399567  C679.567688,183.122009 674.052612,178.968079 670.903809,173.562515  C669.989685,171.993134 668.727783,170.731750 668.965454,168.379745  C674.373291,171.717255 678.741882,176.458084 681.386169,182.358322  C683.965149,188.112808 686.517639,193.797226 690.181152,198.973923  C692.527832,202.289917 692.681946,206.477829 693.970581,210.618286  C693.768616,211.131790 693.557800,211.254532 692.980225,211.383911  C691.083252,211.046661 690.023682,210.092850 689.080994,208.464172  C687.113220,202.186234 684.446960,196.680710 680.128418,191.659149  C679.808350,191.174271 679.722107,190.954254 679.752625,190.399567  z\"})),_path93||(_path93=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M784.850342,500.676971  C783.092285,500.163361 781.330505,499.231079 779.248901,498.191833  C778.496338,498.204102 778.095337,498.143616 777.522827,497.631042  C776.665955,496.485992 777.024353,495.317474 776.375549,494.101196  C774.805786,491.205902 775.242065,488.516052 775.917236,485.434357  C774.830017,484.083527 775.217163,482.541168 774.300049,481.166565  C772.479797,475.816437 769.140503,471.373016 768.512756,465.919647  C768.422119,465.132172 768.413147,464.335297 768.578613,463.271515  C771.994324,469.990570 774.453430,477.521454 779.388306,483.420074  C783.672485,488.540924 783.794678,494.412994 784.850342,500.676971  z\"})),_path94||(_path94=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M723.706055,273.165833  C727.151794,275.249298 726.479309,279.996094 730.261169,282.135132  C731.058228,283.572296 731.561035,284.873566 732.152893,286.511658  C732.994324,293.568207 733.267883,300.357941 735.044922,307.574280  C733.995911,308.272064 733.665039,307.697540 733.364319,306.930573  C733.127441,306.326508 732.733582,306.398224 733.259155,306.808380  C733.784729,307.218536 732.478088,307.493683 732.769836,307.303070  C732.237732,307.312592 732.024902,307.246246 731.582092,306.930847  C731.001709,306.081329 730.820068,305.424286 730.666382,304.405182  C730.619446,301.755127 730.322693,299.566498 727.861389,297.963379  C727.226807,297.437469 726.895691,297.098969 726.370972,296.446838  C725.495300,295.115356 725.097595,293.972809 724.789673,292.414795  C724.685486,291.332672 724.732605,290.614410 724.885437,289.549438  C725.940430,286.561615 725.111938,284.289581 723.290161,281.909973  C722.152222,280.511780 721.315552,279.342712 721.234375,277.456116  C721.586060,275.624634 722.253113,274.347290 723.706055,273.165833  z\"})),_path95||(_path95=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M1011.362244,778.722473  C1009.064758,779.317322 1008.107666,778.143494 1007.255859,776.231812  C1005.939514,774.992432 1004.384644,774.486023 1003.954041,772.842590  C1001.419189,763.168152 994.926758,755.567749 990.336975,746.970154  C989.055359,744.569458 988.320374,742.061096 987.994202,739.013794  C988.060242,738.380188 988.118103,738.130188 988.357056,737.539185  C989.127380,736.554382 989.874390,736.536255 991.021423,736.773743  C992.327271,737.314941 992.966736,738.067993 993.428589,739.256348  C993.658691,740.346619 993.989746,741.083130 994.391479,742.115051  C994.305908,743.524414 995.223572,743.785339 996.150574,744.457214  C996.511597,744.872131 996.630493,745.060974 996.851013,745.570557  C997.992981,750.656738 1000.933533,754.357300 1004.054871,758.324036  C1004.592041,758.902466 1004.825684,759.285645 1005.133301,760.003174  C1005.400208,761.684387 1006.258423,762.599121 1007.470032,763.669067  C1008.194397,765.105774 1008.968750,766.187927 1009.143311,767.835449  C1009.036743,768.989868 1008.979736,769.817871 1009.635620,770.834595  C1009.798035,771.096924 1009.984924,770.968018 1010.091736,770.929565  C1011.178223,772.785645 1011.916809,774.756470 1012.037476,777.300903  C1011.864990,777.944275 1011.755127,778.189697 1011.362244,778.722473  z\"})),_path96||(_path96=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M191.150848,473.078796  C187.948486,472.822388 187.530884,474.864044 187.018723,476.822479  C186.528427,478.697388 186.023300,480.568451 185.312439,483.238342  C183.414566,480.501068 183.814377,478.224487 184.171112,476.102142  C184.425430,474.588989 185.073273,473.209198 182.974915,472.066101  C182.670441,471.502655 182.718628,471.090454 182.787415,470.368286  C188.308228,467.626221 190.212952,463.694000 188.248795,457.837738  C187.648926,456.049225 188.393173,454.236420 190.491653,453.005432  C191.450195,453.742950 192.341019,453.979950 193.684540,453.997009  C196.500046,456.621307 194.451447,459.494537 194.513000,462.682770  C194.827652,465.729858 194.839096,468.330688 193.947540,471.296875  C193.264160,472.510193 192.509705,472.915985 191.150848,473.078796  z\"})),_path97||(_path97=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M232.457977,315.794891  C233.519226,318.277313 232.394119,320.749847 232.069305,323.719543  C232.040894,331.428040 227.873611,337.475037 226.004364,344.600250  C227.193237,347.432892 225.531723,349.061127 224.051422,351.078796  C222.192825,352.603333 221.714020,355.059113 219.045227,355.588074  C218.480484,355.493103 218.265350,355.403442 217.888184,355.004059  C217.824051,352.543060 219.449036,351.151031 220.359680,349.404144  C220.890045,348.386719 222.144592,347.109802 221.875015,346.413666  C219.821487,341.110962 224.076675,338.142517 226.208130,334.538025  C227.906250,331.666382 229.115692,328.274353 228.601349,325.596466  C227.756500,321.197815 229.762054,318.710297 232.457977,315.794891  z\"})),_path98||(_path98=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M711.996582,236.737976  C712.549072,240.822144 713.860229,244.584366 713.503540,248.971451  C709.888428,249.671997 709.610596,246.179031 707.488953,244.320770  C707.036011,243.585922 706.838806,243.131744 706.602051,242.292084  C704.241394,236.185333 700.332947,231.247299 698.433472,225.300385  C697.845459,223.459381 696.446472,221.847916 698.148926,219.787521  C699.409058,219.532196 700.080505,219.920990 700.861572,220.725403  C701.499573,221.485519 701.969788,221.999634 702.562012,222.861923  C706.515747,225.548203 707.442322,229.901764 709.907471,233.615585  C710.533875,234.516861 711.054077,235.059814 711.687622,235.872879  C711.838074,236.110962 711.948120,236.527878 711.996582,236.737976  z\"})),_path99||(_path99=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M698.454712,219.460449  C699.566345,224.807571 701.595642,229.510376 704.132019,233.928574  C705.528503,236.361343 707.186646,238.618790 707.899292,241.733124  C706.279663,243.056442 705.432800,241.913025 704.547180,240.943314  C699.954956,235.915039 696.321228,230.243179 693.848206,223.921829  C692.723022,221.045715 690.984131,218.831741 688.454468,216.614929  C687.089050,215.081757 686.668884,213.569412 686.557251,211.543335  C686.575012,210.057556 686.596497,208.976334 687.258240,207.612839  C688.174866,206.558640 688.864502,206.671616 689.805664,207.615128  C690.880737,208.821548 691.691833,209.726044 692.697266,210.866669  C694.853394,212.935013 695.929626,215.390701 697.615295,217.821198  C697.992859,218.451584 698.184448,218.808929 698.454712,219.460449  z\"})),_path100||(_path100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M210.104187,385.502106  C210.947357,384.928955 211.453781,384.398407 211.643036,383.242065  C211.939545,382.334839 212.334976,381.823761 213.126663,381.234039  C214.327408,380.604370 215.356628,380.288666 216.056335,379.001160  C216.905975,377.325012 217.231064,375.579803 219.648773,375.630859  C221.134048,376.601593 222.026489,377.755280 223.414917,378.894562  C223.811417,385.052979 220.717697,389.813232 218.169678,395.062988  C216.149216,395.890747 214.466980,394.170807 212.406723,395.082031  C210.457703,393.777771 211.243408,391.512177 209.754211,389.789948  C209.728378,388.246735 209.919006,387.057404 210.104187,385.502106  z\"})),_path101||(_path101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M178.074799,512.725159  C173.503098,513.436523 174.783844,517.693970 172.710220,519.995361  C171.858307,517.770081 172.535416,515.237000 170.833572,512.999084  C169.514191,511.264008 170.305771,508.945374 172.180969,508.507904  C175.286041,507.783508 174.925018,505.727448 175.009628,503.624084  C175.155106,500.007324 175.456787,496.420746 177.330444,492.893280  C182.214340,495.764893 182.827499,498.539703 180.453552,505.895172  C179.955093,508.428650 179.690903,510.619507 178.074799,512.725159  z\"})),_path102||(_path102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M189.652863,395.960022  C186.941895,400.441101 184.632629,405.178314 183.088638,410.416992  C182.262634,413.219604 181.972244,415.905365 181.989075,418.713623  C181.999374,420.433838 181.670456,422.042297 180.673264,423.429779  C180.336456,423.898438 179.634460,424.412018 179.125153,424.386688  C177.990250,424.330322 177.913315,423.204681 178.159637,422.498718  C180.402847,416.070343 179.843903,409.018707 182.613571,402.708832  C183.205673,401.359924 183.807571,399.924683 183.946686,398.484894  C184.335571,394.460114 186.028778,393.627350 189.652863,395.960022  z\"})),_path103||(_path103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M362.539551,106.639290  C363.439941,109.247231 361.838867,110.521858 360.057587,111.920471  C353.107971,117.377083 346.711792,123.432205 340.925323,130.505966  C340.870575,130.840179 340.902100,130.867294 340.902069,130.885101  C339.901306,132.188843 338.954041,133.548889 336.749939,133.592575  C336.200867,133.417145 335.999084,133.297607 335.624451,132.871338  C335.385437,128.942932 338.795715,127.833733 340.808838,125.299850  C342.245056,123.878670 343.414062,122.679283 344.796204,121.246445  C347.970947,118.227554 350.383911,114.761719 354.652222,113.087082  C355.695984,111.957047 356.564392,111.119438 357.676025,110.102509  C359.040558,108.952362 360.138123,107.948265 361.653168,107.058014  C361.947937,106.710945 362.113861,106.654091 362.539551,106.639290  z\"})),_path104||(_path104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M213.561951,372.044281  C211.817307,371.848419 209.817459,372.258484 210.632446,369.839325  C211.415802,367.514008 209.656204,367.182220 208.111542,366.143188  C210.957596,362.248657 214.039124,358.624481 217.423401,354.847290  C217.726135,354.694305 217.884766,354.871674 217.966995,354.957672  C219.197311,356.035278 220.711609,357.465210 219.983032,358.724854  C217.515732,362.990479 217.583618,368.370636 213.561951,372.044281  z\"})),_path105||(_path105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M874.738647,703.666199  C875.554565,703.776428 875.969177,703.831177 876.698242,703.884521  C879.309387,703.853516 881.498840,704.281372 883.849854,705.599426  C884.175720,705.788696 884.423462,705.801758 884.515625,705.779541  C885.801392,706.161316 886.995056,706.565247 888.649902,707.073242  C889.116943,706.733093 889.356445,706.545166 890.048584,706.685852  C890.792603,707.142700 891.131165,707.642944 891.931152,707.990540  C893.467896,708.744812 894.715454,709.449890 896.296570,710.291626  C899.836731,711.098450 902.797058,712.473633 905.823853,713.654968  C907.175659,714.182495 908.732971,714.574097 908.236023,716.933716  C906.427734,718.248352 904.820496,717.694336 903.242554,717.231018  C894.035706,714.527466 885.433777,710.135498 876.190552,707.521057  C874.917908,707.161072 873.717590,706.495178 873.620972,704.521790  C873.921570,703.955322 874.129456,703.783081 874.738647,703.666199  z\"})),_path106||(_path106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M179.602142,506.301788  C180.126556,501.770691 181.877396,497.329773 177.819046,493.080658  C177.837006,491.430420 178.012222,490.141846 178.343872,488.488647  C180.288620,487.950623 179.729050,484.489227 181.855423,485.360474  C183.930939,486.210907 182.722519,488.535522 183.053635,490.192902  C183.496796,492.411194 180.376389,494.759216 183.676559,496.966217  C185.214264,502.148834 184.244766,504.397522 179.602142,506.301788  z\"})),_path107||(_path107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M145.297882,644.324463  C146.119156,644.050964 146.782974,644.027344 147.782379,644.009399  C148.580612,644.613464 148.865005,645.280151 148.865448,646.404968  C147.519592,650.265198 146.441376,653.784424 148.013184,657.879395  C148.187805,659.596985 147.741165,660.721191 146.352463,661.784363  C146.315140,665.203308 145.768509,668.143555 142.769806,670.691772  C141.302719,668.431213 142.945114,666.735474 143.494339,664.898132  C144.065109,662.988831 146.989975,660.983582 142.697784,659.161621  C141.050934,658.462585 143.097137,655.288391 143.240356,653.209961  C143.395523,650.958069 144.318100,648.759155 144.857956,646.117676  C144.920090,645.323669 145.030258,644.948975 145.297882,644.324463  z\"})),_path108||(_path108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M136.068634,703.278503  C136.386902,703.110413 136.690399,703.117065 136.842178,703.116455  C138.404968,704.275757 138.396118,705.830566 138.104904,707.788452  C138.111298,709.629211 134.569275,710.174255 137.151611,712.527893  C137.445435,713.017029 137.531067,713.234802 137.649536,713.808594  C137.365799,716.089844 136.191269,717.205078 133.978607,717.705688  C132.833984,717.602844 132.210190,717.231262 131.531738,716.310669  C130.880386,711.130066 131.169739,706.534851 136.068634,703.278503  z\"})),_path109||(_path109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M762.849121,435.659668  C759.716675,434.609100 761.304077,431.795837 761.032959,429.559204  C760.272278,423.283020 759.712830,416.982483 759.160400,410.244934  C762.309448,414.691620 761.886047,420.400604 762.820251,425.764404  C763.352295,428.819122 762.924072,432.041138 762.849121,435.659668  z\"})),_path110||(_path110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M908.579529,716.908691  C905.384460,713.076294 900.520691,713.432739 896.796326,710.732727  C901.192993,709.272888 904.357727,712.998047 908.366455,713.799194  C910.559753,714.237427 912.678345,715.972717 915.297485,713.957825  C916.287170,714.821777 915.951477,715.697449 915.302734,716.863892  C914.637573,717.496948 914.145508,717.791870 913.212708,718.165161  C911.304749,718.502808 909.898193,718.360168 908.579529,716.908691  z\"})),_path111||(_path111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M340.727783,125.080093  C340.524780,128.258377 337.121429,129.328506 335.815277,132.349457  C333.934662,135.824203 331.803772,138.578598 327.722290,139.396942  C329.742401,132.724335 335.495056,129.300903 340.727783,125.080093  z\"})),_path112||(_path112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M855.263672,675.668213  C853.680298,677.103271 851.161926,677.657715 853.096191,680.338318  C853.613586,681.055359 854.222778,682.277710 852.734131,682.684875  C851.455383,683.034729 851.246216,681.817200 850.837402,680.926025  C849.320435,677.618408 851.700684,674.268677 850.669678,670.828369  C850.376953,669.851746 852.481934,670.351624 853.850159,670.913330  C854.403809,671.829651 854.617249,672.603638 854.970093,673.653015  C855.426514,674.353394 855.549255,674.828613 855.263672,675.668213  z\"})),_path113||(_path113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M188.134247,391.328461  C190.605667,391.311096 191.810654,389.675934 192.752060,387.568787  C193.364120,386.198792 194.321838,384.427826 195.971146,385.407776  C197.730865,386.453369 195.418533,387.543579 195.297699,388.692352  C195.233276,389.304779 195.435181,389.945160 195.765808,390.797546  C193.800110,392.178131 193.151733,395.047577 190.327057,395.948181  C189.985840,395.986908 190.000031,396.000031 190.007034,396.007080  C190.226471,394.246460 189.437820,392.870667 188.134247,391.328461  z\"})),_path114||(_path114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M551.075684,59.460056  C548.754639,59.502918 546.329895,59.217262 543.494751,58.935051  C542.868774,59.053036 542.653198,59.167576 542.272217,58.955452  C541.644775,56.551018 539.968323,55.577518 538.190796,54.272194  C543.290039,53.280891 547.320557,55.725559 551.075684,59.460056  z\"})),_path115||(_path115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M1011.612610,777.870300  C1011.090088,775.582764 1010.532593,773.613831 1010.086792,771.267944  C1014.275269,775.299316 1015.246521,780.953796 1016.250610,786.753052  C1015.530396,786.123474 1015.025452,785.249512 1014.277039,784.183472  C1013.323669,783.437622 1012.602173,782.894165 1012.170227,781.688477  C1011.968811,780.301575 1012.068665,779.199585 1011.612610,777.870300  z\"})),_path116||(_path116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M1004.038452,758.810181  C999.464844,755.666321 996.701416,751.342346 995.965576,745.434814  C996.675354,744.636719 997.170349,744.954468 997.770386,745.771606  C997.939331,746.046143 998.000427,746.008118 997.972412,746.032104  C1000.475891,748.866150 1001.488098,752.529724 1003.451294,756.044373  C1003.537415,756.381287 1003.721741,756.723633 1003.841492,756.876709  C1004.371643,757.456360 1004.494324,757.953979 1004.038452,758.810181  z\"})),_path117||(_path117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M764.268982,442.216370  C762.896362,441.085449 762.946167,439.849823 763.160706,438.224396  C767.950562,440.597046 767.911743,445.601227 768.901855,450.716705  C768.032471,451.767273 767.329346,451.782867 766.347534,451.198120  C766.063293,450.515839 766.050476,450.081268 766.039062,449.320557  C766.004028,448.410339 765.841736,447.869141 765.341797,447.147461  C765.174927,446.475220 765.159729,446.046997 765.152954,445.297394  C765.005981,444.120819 765.018250,443.219910 764.268982,442.216370  z\"})),_path118||(_path118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M948.845093,702.399658  C954.050354,702.553284 957.983826,705.444275 961.939209,708.690796  C961.451172,709.593994 960.801025,709.859680 959.693726,709.892456  C958.625671,709.743835 957.969971,709.459961 956.989502,709.047241  C954.477173,707.640137 952.092651,706.713989 949.809326,704.914490  C949.084595,704.110413 948.794617,703.473999 948.845093,702.399658  z\"})),_path119||(_path119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M297.699554,177.749710  C299.543884,173.138107 302.459839,169.316986 306.317627,165.823700  C306.834351,165.707245 307.045105,165.723145 307.430420,166.004486  C307.727142,166.677017 307.783752,167.092499 307.707916,167.826660  C307.461914,168.730621 307.170990,169.276962 306.677612,170.058640  C306.141724,170.781357 305.718414,171.203430 305.157715,171.896698  C304.864471,172.294418 304.745880,172.453491 304.448639,172.852509  C303.894989,173.568314 303.498901,174.029373 303.062805,174.849701  C302.775787,175.298981 302.652802,175.476166 302.323914,175.908478  C301.175873,177.138626 300.201019,178.061676 298.446808,178.184326  C298.118805,178.101105 297.839935,177.866089 297.699554,177.749710  z\"})),_path120||(_path120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M1003.880371,759.339111  C1003.788208,758.638306 1003.828979,758.178833 1003.915527,757.374573  C1008.425476,759.608887 1009.317139,764.170715 1010.142700,768.819702  C1009.467712,769.393616 1008.990662,769.488525 1008.512939,768.910889  C1008.038513,767.264709 1007.507629,766.004822 1006.800415,764.450134  C1006.144592,762.996460 1005.139099,762.226685 1004.424316,760.916260  C1004.267944,760.268127 1004.140625,759.924255 1003.880371,759.339111  z\"})),_path121||(_path121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M948.957764,702.052979  C949.239380,702.528015 949.525024,702.996277 949.918213,703.722534  C946.510681,706.870850 943.155273,704.063660 939.320496,703.627197  C937.470398,703.542603 936.124146,703.254822 934.826538,701.858032  C934.606201,701.214600 934.594971,700.935303 934.781128,700.286011  C936.375305,699.941528 937.772278,699.967041 939.588135,699.980835  C942.935425,699.725647 945.651123,700.619019 948.654541,701.793030  C948.945984,702.054199 948.961792,702.046204 948.957764,702.052979  z\"})),_path122||(_path122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M993.497864,739.249878  C992.787720,739.127441 992.247742,738.644775 991.518066,737.955872  C990.106750,737.208862 989.808350,735.718872 988.398560,734.899902  C986.994690,733.326416 985.638306,732.143677 984.552246,730.298584  C984.341187,729.521606 984.380432,729.070679 984.722656,728.347778  C989.829285,730.067261 992.525635,733.850708 993.497864,739.249878  z\"})),_path123||(_path123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M171.209305,522.861816  C172.005951,526.491577 170.266327,529.680725 168.891754,533.218567  C168.606430,529.760559 165.693146,525.483765 171.209305,522.861816  z\"})),_path124||(_path124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M845.298035,637.697449  C844.060730,636.149109 843.353821,634.613708 844.854797,633.498413  C846.187500,632.508179 847.292480,633.842468 848.220703,634.772949  C849.148376,635.702942 850.488159,636.811340 849.499817,638.139099  C848.390503,639.629333 846.847839,638.934021 845.298035,637.697449  z\"})),_path125||(_path125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M974.291992,719.172852  C974.974426,719.460022 975.295105,719.581116 975.844482,719.825195  C976.719360,720.770020 977.857849,720.859131 978.733398,721.851685  C980.375854,723.671021 981.835022,725.250793 983.412720,727.134644  C983.578552,727.692017 983.626038,727.945435 983.350891,728.410278  C982.543640,728.791809 982.044617,728.874756 981.158936,728.826965  C979.052979,728.376099 977.651672,727.447449 976.303223,725.786682  C974.972046,723.905762 973.219482,722.662354 973.385559,720.043091  C973.629089,719.444031 973.779602,719.225403 974.291992,719.172852  z\"})),_path126||(_path126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M327.240601,139.560364  C330.556122,137.883942 332.188812,134.633911 335.400574,132.804047  C335.701385,132.664337 335.901764,132.887268 336.004120,132.996735  C336.711517,138.037628 332.216003,139.196564 329.309692,141.837433  C328.443726,141.904907 327.943420,141.936310 327.078003,141.875092  C326.839172,141.141144 326.965424,140.499832 327.240601,139.560364  z\"})),_path127||(_path127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M666.723389,164.897461  C663.689026,163.098312 661.033630,160.665451 659.729736,156.721741  C664.382202,157.074692 664.709778,161.562302 666.723389,164.897461  z\"})),_path128||(_path128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M354.473145,112.832146  C352.307739,116.105934 349.036743,118.580116 345.355835,120.998283  C346.750763,116.849854 349.894562,114.255455 354.473145,112.832146  z\"})),_path129||(_path129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M206.567291,367.759521  C208.412048,372.738251 204.650146,372.490997 201.178436,372.934387  C201.354095,369.915131 203.855270,368.965515 206.567291,367.759521  z\"})),_path130||(_path130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M962.861023,710.343506  C967.053528,709.678650 969.058167,712.404419 970.928101,715.707886  C970.595825,716.375854 970.185364,716.572510 969.367920,716.624207  C967.877869,716.285217 966.961792,715.572266 965.751465,714.688965  C964.447510,713.291626 963.018860,712.390503 962.861023,710.343506  z\"})),_path131||(_path131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M1003.635010,756.008728  C1000.514221,753.855042 999.808167,749.983337 997.951965,746.415527  C1001.879150,748.037781 1002.169250,752.221619 1003.635010,756.008728  z\"})),_path132||(_path132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M312.961823,158.205276  C313.148224,160.525375 310.703064,161.355453 310.076752,163.690094  C310.025604,164.417435 309.907501,164.777695 309.526123,165.336334  C308.897339,165.951706 308.389709,166.212585 307.518127,166.251007  C307.234894,166.194702 306.932343,165.942535 306.777985,165.816925  C307.591064,162.365417 309.018860,159.404419 312.961823,158.205276  z\"})),_path133||(_path133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M824.772827,591.057983  C823.708191,593.976746 822.387451,592.910217 821.328186,591.473633  C820.729004,590.661011 819.612854,589.301331 820.872925,588.518127  C823.089233,587.140686 823.987122,588.984314 824.772827,591.057983  z\"})),_path134||(_path134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M948.896362,701.693481  C946.146484,701.530334 943.347046,701.006531 940.277344,700.225891  C943.318298,698.060242 946.066284,699.801819 948.896362,701.693481  z\"})),_path135||(_path135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M131.028412,716.117249  C131.866547,716.246338 132.387650,716.502502 133.066010,717.019226  C133.208694,717.562805 133.194107,717.845886 132.904938,718.455200  C130.069763,720.386475 127.414696,721.009705 124.287689,719.230408  C123.984932,716.468201 125.995682,717.720581 127.165588,717.134766  C128.430969,716.775757 129.571167,716.510010 131.028412,716.117249  z\"})),_path136||(_path136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M768.367310,455.993530  C767.979248,455.985443 767.818604,455.598328 767.782471,455.391907  C767.024658,453.807800 767.302124,452.618134 768.703003,451.301758  C768.982666,451.016327 769.077026,450.918915 769.124939,450.867310  C770.966064,451.296539 772.171204,452.311493 771.866882,454.317810  C771.594116,456.116455 770.027222,455.864258 768.367310,455.993530  z\"})),_path137||(_path137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M697.848877,217.743011  C695.288208,216.689240 693.738831,214.539764 692.917847,211.455063  C693.072754,211.084656 693.253906,211.066528 693.707214,211.028717  C695.972046,212.715057 696.850037,215.105164 697.848877,217.743011  z\"})),_path138||(_path138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M167.546570,537.923706  C171.909927,540.222290 168.717422,542.595764 167.516220,545.066040  C167.120712,543.076721 167.056351,540.956116 166.971451,538.383179  C166.950912,537.930786 167.349274,537.889465 167.546570,537.923706  z\"})),_path139||(_path139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M962.780762,709.894287  C963.327332,711.721619 965.190857,711.863403 966.168945,713.320068  C962.266785,715.502075 960.163696,714.374878 958.916992,709.156189  C959.891052,708.886963 960.580566,708.977051 961.618408,709.051025  C962.123962,709.317688 962.328308,709.560852 962.780762,709.894287  z\"})),_path140||(_path140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M884.196350,705.492554  C881.753113,706.302673 879.698975,704.963074 877.245850,704.170349  C879.103210,702.088257 881.158569,703.351501 883.593262,703.995605  C884.049011,704.423096 884.132996,704.809814 884.196350,705.492554  z\"})),_path141||(_path141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M812.878418,577.684692  C810.274780,577.082703 810.498718,574.682983 810.100220,572.231201  C812.804688,572.775024 812.887146,575.026306 812.878418,577.684692  z\"})),_path142||(_path142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M968.808655,716.318298  C969.469971,715.979004 969.890259,716.017639 970.628967,716.056396  C970.947388,716.056580 971.245361,716.324219 971.413452,716.433105  C972.544128,716.346191 972.959045,717.146118 973.725098,717.868713  C974.076965,718.383484 974.269592,718.643127 974.565674,719.115112  C974.653809,719.338928 974.318726,719.700012 974.140076,719.869568  C970.524170,721.569824 968.913513,720.153381 968.808655,716.318298  z\"})),_path143||(_path143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M934.739929,699.666016  C934.986328,700.120850 934.994324,700.325806 935.013916,700.838074  C934.742188,701.472046 934.409424,701.737610 933.735107,702.070312  C932.393066,702.418091 931.360779,702.710266 929.963257,702.676270  C929.454346,702.526794 929.263855,702.427551 928.932861,702.038330  C929.891357,699.002808 932.028870,698.799377 934.739929,699.666016  z\"})),_path144||(_path144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M921.209717,709.742554  C919.964905,710.172791 919.101135,710.497314 917.894104,710.735291  C917.592102,708.728577 919.243591,708.234253 920.746094,707.188110  C921.427856,706.630005 921.904480,706.469177 922.812500,706.707886  C923.850220,708.490967 923.314148,709.403503 921.209717,709.742554  z\"})),_path145||(_path145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M325.503174,142.867584  C326.177032,145.549301 324.997803,147.207031 321.897278,147.670197  C322.191864,145.606339 323.753662,144.327728 325.503174,142.867584  z\"})),_path146||(_path146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M320.632782,148.846069  C321.100586,151.498932 319.912476,153.117844 317.155304,153.883224  C316.673584,152.342545 317.972107,151.589630 318.748596,150.185852  C319.404083,149.547913 319.718079,148.954712 320.632782,148.846069  z\"})),_path147||(_path147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M923.350586,707.150513  C922.590271,707.077698 922.142517,707.093994 921.361328,707.063965  C921.133118,705.078186 922.432373,704.321533 924.697388,704.027893  C925.355652,704.341736 925.409973,704.550964 925.421692,705.083008  C925.061584,706.255188 924.568787,706.940491 923.350586,707.150513  z\"})),_path148||(_path148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M361.443848,106.807213  C361.426910,108.532913 360.249176,109.480827 358.262207,109.944344  C358.199005,108.087341 359.449005,107.256393 361.443848,106.807213  z\"})),_path149||(_path149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M815.853882,582.731689  C814.388916,582.839844 813.359558,582.135010 813.087769,580.241211  C814.525818,580.150208 815.617310,580.797974 815.853882,582.731689  z\"})),_path150||(_path150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M892.153198,707.747070  C891.267517,708.891479 890.380920,708.590515 889.321533,707.557373  C889.125427,707.230347 889.563782,707.023682 889.573486,706.781555  C890.680847,706.123840 891.586548,706.233582 892.153198,707.747070  z\"})),_path151||(_path151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M924.947510,703.953125  C925.367432,702.237488 926.737061,702.048706 928.453003,701.810242  C928.792358,701.748413 929.022583,702.039124 929.137939,702.184326  C929.215332,703.273315 928.580261,703.792297 927.597534,704.401672  C926.915710,704.661743 926.505310,704.711182 925.791382,704.588440  C925.374634,704.369507 925.252808,704.250366 924.947510,703.953125  z\"})),_path152||(_path152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M997.984497,745.690247  C997.469055,745.748962 996.998779,745.451721 996.252686,745.095215  C995.976868,745.036011 995.982300,745.005188 995.972046,745.013428  C995.636047,744.635864 995.493103,744.191223 995.726929,743.377930  C997.467102,743.038696 997.924377,744.022705 997.984497,745.690247  z\"})),_path153||(_path153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M855.307007,676.102417  C855.044556,675.525574 855.039551,675.068848 855.072021,674.270264  C856.440674,674.128845 856.970642,674.996887 857.081543,676.582520  C856.602356,676.685913 856.083435,676.454163 855.307007,676.102417  z\"})),_path154||(_path154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M978.889771,721.752014  C977.740845,722.080444 976.916016,721.450867 976.153564,720.258911  C977.260559,719.946167 978.363770,720.104370 978.889771,721.752014  z\"})),_path155||(_path155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M366.426727,103.656509  C367.062988,105.439995 365.986450,105.890320 364.128906,105.884026  C364.010254,104.530647 365.071960,104.119736 366.426727,103.656509  z\"})),_path156||(_path156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M320.989014,148.654938  C320.431427,149.209595 319.934662,149.472855 319.165466,149.814606  C319.039093,148.785522 318.763794,147.400757 320.744629,147.575836  C320.975403,147.973724 321.012573,148.168640 320.989014,148.654938  z\"})),_path157||(_path157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M377.519501,95.717628  C377.937897,97.402786 377.027710,97.987350 375.124756,97.778946  C375.170288,96.514000 376.201721,96.134109 377.519501,95.717628  z\"})),_path158||(_path158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M374.366516,97.692886  C375.018555,99.490654 373.918549,99.885132 372.096802,99.868698  C372.052032,98.605377 373.048248,98.149841 374.366516,97.692886  z\"})),_path159||(_path159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M315.769104,154.114746  C316.359497,155.054688 315.883728,155.735245 314.937744,156.461075  C314.131989,155.524338 314.293030,154.681961 315.769104,154.114746  z\"})),_path160||(_path160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M384.618195,90.832199  C384.898315,92.078194 384.326660,92.728294 382.713043,92.507629  C382.661194,91.419220 383.388275,90.996902 384.618195,90.832199  z\"})),_path161||(_path161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M388.687256,89.025101  C388.777191,90.154839 388.197937,90.834808 386.599762,90.357971  C386.278320,89.820351 386.402435,89.539368 386.791931,89.126678  C387.406311,88.967476 387.871552,88.991310 388.687256,89.025101  z\"})),_path162||(_path162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M1008.438660,768.850220  C1008.858276,768.660400 1009.138184,768.812622 1009.648315,768.996460  C1009.938721,769.483582 1009.989929,769.955383 1009.919556,770.762085  C1008.691528,770.929565 1008.240479,770.253784 1008.438660,768.850220  z\"})),_path163||(_path163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M379.911896,94.066452  C381.205078,95.651466 380.156555,95.732780 378.687714,95.569992  C378.796722,94.973686 379.198456,94.526215 379.911896,94.066452  z\"})),_path164||(_path164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M984.703125,727.935913  C984.962402,728.484802 985.000366,728.901306 985.051270,729.633667  C983.781677,730.733887 982.952087,730.406311 982.725708,728.538635  C982.865112,728.137146 983.194885,727.786621 983.363037,727.612671  C983.848022,727.560303 984.164917,727.681946 984.703125,727.935913  z\"})),_path165||(_path165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M973.869873,717.765686  C973.213989,717.767517 972.528259,717.422607 971.712036,716.809875  C972.598877,716.153198 973.387329,716.353638 973.869873,717.765686  z\"})),_path166||(_path166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M995.686401,742.931030  C995.942871,743.501465 995.964905,743.934998 995.974365,744.695068  C994.836731,744.881226 994.208374,744.288208 994.341675,742.760742  C994.792175,742.538269 995.122131,742.666138 995.686401,742.931030  z\"})),_path167||(_path167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M702.775635,222.832642  C701.883606,222.960281 701.229980,222.534698 701.033997,221.287018  C701.964966,221.084717 702.680176,221.454208 702.775635,222.832642  z\"})),_path168||(_path168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M711.858643,235.783554  C710.933594,235.959030 710.225586,235.578400 710.058899,234.252411  C710.998840,234.047958 711.725647,234.411789 711.858643,235.783554  z\"})),_path169||(_path169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M884.623901,705.775635  C884.607727,705.757385 884.717834,706.108582 884.717834,706.108582  C884.717834,706.108582 884.440918,705.972656 884.553711,705.862427  C884.666504,705.752258 884.640076,705.793823 884.623901,705.775635  z\"})),_path170||(_path170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M889.410889,706.658813  C889.583130,706.539429 889.413269,706.922424 889.269348,707.076416  C889.125427,707.230347 889.130493,707.117737 889.120850,707.147583  C889.111145,707.177368 889.238647,706.778137 889.410889,706.658813  z\"})),_path171||(_path171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M167.916611,535.184021  C168.123718,535.180542 168.050858,535.655945 167.955383,535.877930  C167.712357,535.891968 167.548447,535.692444 167.433655,535.467834  C167.414825,535.430969 167.612106,535.283752 167.916611,535.184021  z\"})),_path172||(_path172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M914.685913,718.746521  C914.665466,722.764648 916.038696,726.729858 912.495728,730.107422  C911.029358,731.505310 911.226135,735.025452 912.305237,736.773193  C915.768066,742.381897 914.561340,747.450134 911.718689,752.643555  C911.143188,753.695129 910.644287,755.247070 912.053406,755.640381  C916.287354,756.822021 915.110413,759.552612 914.154907,762.638245  C910.614929,763.625793 910.851013,765.039062 912.787109,767.351746  C916.709717,772.037476 916.557983,772.538696 911.581604,775.696777  C915.261475,779.765259 914.027161,783.620911 908.555664,784.999451  C907.578308,785.245789 906.658569,785.293152 906.185242,786.429138  C904.932556,789.435608 907.066040,797.175232 909.898254,799.087158  C913.501038,801.519104 910.831787,805.074829 911.546570,808.026062  C911.729187,808.780090 909.980896,809.169312 909.053528,808.674194  C908.004578,808.113953 907.030640,807.213318 908.303101,805.957275  C909.249268,805.023254 910.100403,804.037903 908.302612,803.379395  C906.404053,802.684021 906.160522,804.157654 905.993469,805.601379  C905.862671,806.731873 905.822571,808.000183 905.276184,808.934875  C901.208069,815.893982 901.769836,819.205688 908.012878,823.722046  C906.451782,824.936279 905.273499,826.634277 903.195496,827.123657  C902.736389,827.231812 902.255737,827.511353 901.922668,827.848083  C900.078430,829.712646 901.100281,840.786499 903.629883,842.952637  C903.980103,843.445679 903.982117,843.890076 903.985046,844.667725  C902.814331,847.688660 900.381775,846.692688 898.312439,846.979736  C899.859375,848.433289 901.991272,849.026978 903.749634,850.756042  C904.002441,850.997253 904.000000,851.000000 904.001343,850.998779  C904.936462,851.884644 905.327637,853.082214 904.800476,854.157166  C901.883057,860.106262 902.492310,866.528687 902.337646,872.804077  C902.288757,874.786560 900.715271,876.452454 901.758850,878.739136  C902.342407,881.492249 901.447571,883.812378 901.013428,886.598145  C897.594421,885.824158 894.546265,883.647217 891.816589,881.656616  C888.679688,879.369080 887.300171,882.065857 885.147217,882.258484  C884.896912,882.280884 884.463928,883.074585 884.542664,883.410645  C884.746277,884.279480 885.529358,884.579956 886.348022,884.890137  C888.032043,885.528198 889.698303,883.173706 891.851196,885.302612  C887.375427,886.331970 884.026672,890.167480 879.202209,888.060852  C877.885559,887.485901 876.285828,887.050659 876.117676,885.177551  C875.965759,883.485962 877.294922,882.997498 878.406616,882.270447  C880.848999,880.673218 883.570984,879.071411 879.505920,876.239258  C879.343384,876.126099 879.465942,875.617310 879.438477,875.294312  C879.293335,873.589233 879.969849,870.911621 878.637085,870.422180  C876.384399,869.594849 875.031189,872.206238 873.412476,873.552307  C871.923950,874.790100 871.032837,876.845703 868.369019,876.985962  C867.314331,876.318054 866.963623,875.501221 867.052002,874.219360  C866.968506,873.625488 867.854370,873.142700 866.614136,873.073120  C864.109985,873.225037 862.384827,872.671936 862.168579,869.715027  C862.961792,867.232117 863.384888,865.030579 864.195435,862.570312  C867.888794,859.611145 867.835632,864.814453 870.499329,864.885071  C871.284241,861.941528 875.373840,860.104919 873.432861,856.016357  C878.589661,849.723633 872.273865,849.160522 868.999512,846.951721  C867.661560,846.049133 866.228088,845.099915 865.354004,843.213928  C865.085388,842.004578 865.151367,841.089111 864.741211,839.905273  C864.086365,838.012634 863.634827,836.431702 864.166016,834.407837  C864.788757,832.982910 865.581177,832.089233 866.544312,830.894653  C871.995789,829.861267 873.627502,834.241089 876.495056,836.862366  C878.419128,834.430725 878.523376,834.265930 876.048096,832.699707  C873.748657,831.244812 871.975586,829.394226 870.241577,826.931580  C868.721313,825.245911 866.994690,824.132385 866.679993,821.650024  C866.706787,818.701538 865.937622,816.462402 863.664368,814.488281  C863.294434,813.757568 863.177368,813.304443 863.125916,812.481445  C863.364746,807.492126 859.438171,805.722351 856.699158,803.380371  C854.493103,801.494019 853.142273,799.898438 853.401611,796.760620  C853.709595,793.034119 848.375305,788.807129 844.564453,789.524597  C842.431213,789.926208 841.392334,789.028015 840.764771,787.296570  C839.669739,784.275818 837.256897,782.251648 834.950867,778.739868  C834.273621,784.310242 831.329346,788.665039 834.796570,793.651489  C836.303589,798.760437 835.025146,803.546448 834.337524,808.904785  C836.263123,807.366699 835.172913,806.260620 835.131775,805.234314  C835.063293,803.527161 834.917480,801.740051 837.130188,801.368347  C839.115906,801.034668 840.096069,802.453857 840.768860,804.053650  C841.684631,806.231323 841.287415,808.615784 841.769714,810.865295  C841.980530,811.848633 842.429626,812.719788 843.300415,813.741821  C844.276245,814.588501 844.928711,815.257141 845.431763,816.458984  C843.086792,819.744202 841.288574,822.984985 840.718018,827.183105  C840.510132,827.726746 840.394531,827.931335 839.996765,828.347656  C836.340271,829.121399 834.583557,827.603699 834.617126,824.272461  C834.632568,822.735962 834.347961,821.676453 832.591736,821.088562  C832.775330,822.772827 835.432312,824.085327 833.409668,825.876404  C831.854004,827.253845 830.192871,826.321045 828.723389,825.697876  C826.153015,824.607788 822.465454,824.441956 823.584656,819.890686  C823.908020,818.575806 822.503906,818.216614 821.549866,818.478455  C818.656982,819.272583 816.448975,817.485474 813.877686,816.812622  C818.482056,818.845398 821.100098,823.719055 826.277954,824.998352  C828.083862,825.444580 828.321472,827.503174 828.065857,829.237305  C827.771606,831.234436 826.804321,832.672607 824.157349,832.512695  C822.353394,831.379028 821.143188,831.638367 819.922729,832.952881  C817.351379,835.722290 814.874634,835.459961 812.320984,832.020142  C813.261841,833.425842 813.717957,834.519470 814.996521,834.848816  C818.712402,835.805847 819.711243,837.580322 816.945923,840.789917  C816.064453,841.812988 816.538269,843.322083 816.712158,844.641174  C816.947144,846.423706 817.505249,848.468323 815.361877,849.443359  C813.353088,850.357178 811.941833,848.905212 810.603149,847.643921  C810.118713,847.187561 809.761536,846.626160 809.335449,845.703735  C810.915222,840.185791 807.137756,838.006714 803.584839,835.304932  C802.363831,831.852417 797.505371,830.871216 798.756714,826.278076  C802.617981,824.626648 805.233398,819.219360 804.014465,815.981079  C803.528931,814.691467 802.668701,813.566833 801.596436,814.254944  C797.604553,816.816589 797.737976,813.333130 797.339600,811.340942  C796.346619,806.375061 795.416321,801.320312 792.711975,797.045105  C790.727844,793.908325 791.784363,791.871765 793.843262,789.301758  C794.495361,788.513062 794.270996,787.914124 794.292236,787.061096  C794.525208,786.028198 794.577881,785.301575 793.886230,784.380371  C793.009399,782.661011 793.745667,781.563477 794.657043,780.574890  C795.673157,779.472778 796.427856,778.196350 797.098022,776.894653  C798.722595,773.739197 797.981384,772.268250 794.612549,771.583679  C791.935059,771.039551 790.639526,769.454834 791.107117,766.315552  C791.448242,759.230713 793.337646,753.213867 797.558228,747.689697  C798.523499,746.426331 799.326965,742.365906 796.797852,740.065674  C795.597778,738.974243 794.949158,737.707764 795.294189,736.091980  C795.581604,734.745911 795.836853,734.647705 799.258423,733.926758  C796.524414,731.999451 794.394592,732.080383 792.972900,735.556641  C792.596069,736.477783 791.423645,736.731201 790.043091,736.297913  C788.725342,731.659302 789.249878,727.909058 793.102234,724.606934  C796.533386,721.666077 793.872253,717.553772 793.374268,714.187927  C792.940125,711.254333 792.628845,707.887939 788.909607,705.795654  C786.523438,704.453308 787.972351,700.808533 789.847595,698.768005  C792.174377,696.236145 791.665710,694.020813 789.753845,691.734009  C788.479370,690.209351 787.462708,688.420654 785.965088,687.144958  C781.139160,683.034119 780.282959,678.518860 784.358521,673.043457  C785.115723,672.293945 785.750000,672.003601 786.751526,671.699585  C788.414612,671.341797 789.522034,670.615051 790.936035,669.744873  C794.229980,669.913696 794.652710,673.234863 797.128601,674.640503  C797.890137,678.929810 800.914734,681.381470 803.407043,684.047913  C805.523926,686.312622 807.161865,687.724976 803.375000,690.115173  C800.598572,691.867493 801.466309,693.890869 805.875122,696.686462  C804.893860,694.807556 801.971985,693.464844 803.816895,691.092651  C805.693787,688.679382 808.422241,686.959351 811.666382,687.803345  C815.670288,688.844849 819.774780,689.952698 822.885315,692.933594  C824.684448,694.657776 826.418518,695.724365 829.080627,695.124512  C831.818604,694.507629 833.435974,696.402405 834.603882,698.525757  C836.388062,701.769958 839.174133,703.175415 842.724548,703.535156  C846.044678,703.871521 849.350281,704.363953 852.288940,706.139343  C853.683838,706.982056 855.190857,706.906799 856.652527,706.530640  C859.393921,705.825012 862.377563,705.940674 864.361084,707.558167  C868.570312,710.990723 874.741211,710.943970 878.099976,715.687927  C878.975830,716.924927 880.411804,717.102112 881.731079,716.767456  C890.265320,714.602295 895.964539,719.454346 901.540405,724.653870  C902.026001,725.106689 902.454224,725.623840 903.448059,726.147888  C905.312439,722.445068 908.167725,719.679077 912.612305,718.345825  C913.460999,718.248718 913.935486,718.335632 914.685913,718.746521  z\"})),_path173||(_path173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M785.100830,672.693420  C780.809143,679.966797 785.144714,684.615479 789.384216,689.263306  C790.268921,690.233276 791.935181,690.935913 792.148499,691.984070  C792.663513,694.514954 795.629883,697.335571 790.891663,699.598633  C787.785095,701.082336 788.817749,705.181274 792.254517,706.600220  C794.300903,707.445068 797.589783,707.720825 794.214417,710.988403  C793.981750,711.213684 793.807373,711.499084 793.605835,711.756531  C799.751953,713.400940 791.987061,719.865723 797.155945,722.013550  C798.148682,722.426086 797.701599,724.172119 796.711121,724.424805  C790.927979,725.899719 790.982239,730.801392 790.069458,735.597412  C791.021240,739.346863 789.877930,742.518066 789.211060,745.732117  C788.816711,747.632446 787.864380,749.547668 789.442688,751.743286  C789.800903,752.498535 789.921814,752.960876 789.992554,753.801086  C786.867310,758.207031 791.191895,761.641174 790.825684,765.805054  C789.220154,768.207825 790.170593,771.841675 786.303711,772.780518  C786.072449,774.306274 785.785828,775.681152 786.802124,776.800537  C788.126160,778.258728 787.087036,778.719910 785.827454,779.175049  C784.371094,779.701294 782.954163,779.851868 783.103882,777.805786  C783.227234,776.120300 780.968201,774.117493 783.990601,772.638611  C785.606689,771.847839 784.028381,770.268738 783.575378,769.156677  C781.955750,765.180786 782.131409,761.268250 782.564026,756.998474  C782.954224,753.146851 785.220459,748.587708 781.327881,744.946350  C780.959229,744.601624 780.886536,743.587769 781.089844,743.037170  C784.306702,734.326416 778.366699,726.584595 778.511047,718.180908  C778.626221,711.475891 774.549500,705.557434 773.743713,699.337830  C772.736694,691.565186 768.008240,685.462341 766.753784,678.022278  C766.418335,676.033020 765.649658,673.290527 762.212158,673.769958  C761.272705,674.752563 760.306519,675.426819 759.356567,675.069397  C755.684265,673.687744 752.927185,673.329041 750.883667,677.961853  C749.978027,680.014893 747.422729,678.387512 746.156372,676.554688  C743.564087,672.802917 742.538086,672.693054 739.174133,675.740051  C736.022278,678.594910 734.829590,678.468994 734.122986,674.534363  C733.606384,671.657898 731.070923,671.827026 729.369629,670.244751  C727.219910,669.537354 725.972229,666.797241 723.244080,668.786621  C720.693787,668.838684 718.509888,669.404480 716.785889,666.555298  C715.077820,663.732544 714.751465,669.213135 712.357422,667.989014  C710.947266,667.613831 710.259521,666.726929 709.135864,665.911621  C708.229004,665.214661 707.534912,664.978455 706.468262,665.598267  C705.993835,665.853516 705.798279,665.951294 705.291748,666.168579  C702.993958,666.931763 701.059448,667.044617 699.711182,665.122986  C698.268738,663.067261 696.098938,663.225525 693.699463,662.872620  C693.164734,662.650452 692.962830,662.534729 692.508301,662.180176  C691.270996,660.659058 690.653564,658.987671 688.460388,658.555725  C691.138306,662.425476 689.049072,664.037598 685.350037,665.112854  C682.606873,665.565430 680.456299,665.059387 678.492920,663.533020  C677.601013,662.839539 676.371826,662.145447 675.333252,663.083862  C674.331604,663.988953 674.790894,665.203247 675.496460,666.591064  C675.725098,667.377869 675.750977,667.842773 675.603516,668.647583  C671.827148,672.460205 676.831360,672.670959 677.681885,674.819580  C677.833191,675.622498 677.798584,676.084656 677.507690,676.845215  C675.804688,678.531555 674.033691,678.003662 672.270020,677.840942  C670.603943,677.687378 668.809387,676.602844 667.170776,678.592651  C666.396851,680.085693 666.790955,681.309326 667.005737,682.871704  C667.013672,683.447632 666.998596,683.681885 666.915161,684.268311  C666.426819,685.990723 666.205750,687.436340 665.313843,688.627136  C663.378296,691.211121 661.746704,691.015320 659.565918,687.687195  C659.164429,687.186218 659.049133,687.069641 659.049133,687.069641  C658.740112,686.677124 658.712158,686.623169 659.119995,687.109497  C659.887817,688.276917 659.032532,689.629333 660.301514,690.729736  C661.589722,695.832886 657.885681,694.747314 655.493896,695.110596  C657.812744,697.803345 661.474976,695.605042 664.078369,697.665527  C663.380737,701.369507 658.578735,700.814087 658.039429,704.650391  C655.026855,707.216431 652.746338,704.765686 650.197937,703.842834  C650.099548,704.734070 650.936218,704.707642 651.365234,705.014526  C652.640381,705.926636 654.910950,706.272217 654.231384,708.441162  C653.613953,710.411743 651.525452,710.032104 649.923828,709.977173  C646.637024,709.864380 643.400391,710.500122 640.086182,710.360840  C642.245972,711.118103 644.881653,710.977234 645.465210,713.939392  C646.128357,717.304871 642.479004,716.379822 641.205200,718.286621  C640.924194,718.774231 640.811279,718.970886 640.512207,719.454590  C637.686890,722.929932 640.225830,727.288940 637.887939,730.565002  C637.611389,730.952454 637.925964,731.377991 638.287231,731.805542  C642.889038,737.252258 642.839844,737.696594 637.253296,741.760132  C636.321594,744.656128 637.220947,747.455322 635.988525,750.113831  C634.771057,752.740234 632.187683,754.118042 630.697205,752.245605  C628.168701,749.068970 624.952759,746.626099 622.247192,743.222229  C620.884033,742.053223 621.199951,740.532410 620.429810,739.088013  C620.251709,738.312805 620.246277,737.858765 620.404419,737.072388  C622.449646,731.437073 622.847412,725.732910 624.727051,720.057983  C624.768921,719.231689 624.830750,718.760559 624.989624,717.937561  C625.973450,712.083618 626.778076,706.572327 626.674866,700.977356  C626.640503,699.114807 626.968994,697.401428 627.801331,695.688721  C628.898926,693.429993 629.605286,691.025330 628.081360,688.211487  C627.741089,686.849915 627.752441,685.846375 628.058228,684.483765  C629.740845,681.405884 630.759338,678.531555 630.596130,674.981567  C630.630981,674.180176 630.676208,673.728027 630.799805,672.953369  C631.035583,671.793396 631.213013,670.958008 631.090637,669.770874  C631.039856,669.008118 631.046875,668.569397 631.130005,667.800110  C631.743958,665.733643 631.532166,663.935730 631.612244,661.829590  C631.652283,661.065735 631.701477,660.635193 631.832031,659.897827  C632.062866,658.794312 632.229797,657.999756 632.139282,656.875244  C632.085632,656.158875 632.064209,655.745667 632.003174,655.016602  C631.082520,650.716370 627.624146,646.869751 631.649902,642.546875  C636.188354,646.641479 641.142456,647.869873 646.983826,646.851257  C649.149536,646.473511 651.342651,648.140991 653.831726,648.540955  C651.477112,645.494019 650.950867,643.066956 655.581055,641.770020  C656.414856,641.770020 656.885803,641.838867 657.690918,642.053955  C660.325989,643.948547 664.147522,641.592041 666.019714,645.483337  C667.812744,640.367126 671.095215,637.530579 676.372620,637.417236  C677.198914,637.399536 678.129639,637.077759 678.812500,637.535889  C683.088440,640.404724 688.072815,641.591125 692.685181,643.629822  C695.797546,645.005432 698.732056,646.178711 702.474792,646.124695  C703.266235,646.372009 703.689697,646.581787 704.387695,647.021912  C709.123779,649.022034 713.639404,650.713379 716.426453,655.022339  C716.943420,655.821533 717.726807,655.936035 718.608948,655.667175  C719.400940,655.425720 720.719910,654.945801 720.963989,655.459900  C722.838623,659.408508 727.212280,657.537659 729.230347,658.909790  C732.518250,661.145203 734.849365,660.366943 737.778015,659.708008  C738.745789,659.490295 739.763184,659.659912 741.085815,659.960449  C741.639893,660.161255 741.853638,660.263306 742.353821,660.575928  C744.473694,663.886536 748.033875,664.721802 750.548462,667.007385  C752.433716,661.783325 752.619141,661.694092 758.917969,663.153259  C764.408081,667.174561 769.394165,670.969360 776.725586,669.128174  C779.586731,668.409668 782.572205,670.675110 785.100830,672.693420  z\"})),_path174||(_path174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M628.256958,978.818420  C629.407349,971.218384 621.698853,970.489075 618.212646,966.516113  C616.738953,964.836609 614.502380,967.656067 612.544678,966.303894  C613.327209,963.806152 618.400940,964.679749 617.187378,961.804871  C616.298950,959.700134 613.931641,957.193481 610.364624,957.008789  C606.652161,954.948303 606.992981,951.730103 607.622375,948.640320  C608.159729,946.002625 608.096619,943.584167 606.106201,941.711609  C604.065796,939.792053 604.000000,937.739929 605.380737,934.668640  C601.305969,936.751038 599.802490,934.086182 598.025635,931.429199  C599.536926,935.477905 596.997498,936.632324 594.276428,936.738403  C589.689819,936.917114 586.643372,939.633728 583.556030,942.348511  C582.170715,943.566650 580.939880,944.874329 579.072144,945.328735  C578.270142,945.523926 576.972290,945.746033 576.927185,946.379028  C576.580627,951.244263 571.141357,953.553650 571.016479,958.554626  C570.964172,960.651794 570.575317,963.351746 567.801025,963.416626  C564.994568,963.482300 563.937805,961.037476 563.663330,958.617798  C563.194519,954.485352 561.208191,951.092407 558.745789,947.482788  C558.475952,946.949646 558.395508,946.722290 558.273560,946.134277  C558.681946,943.510437 559.178345,941.294556 558.951355,938.911133  C558.739563,936.686279 559.639771,934.956543 562.732727,935.447083  C565.164734,938.112427 564.762695,941.208435 565.032104,944.151978  C565.151001,945.451355 564.961182,947.025269 566.698181,947.368164  C568.171448,947.658997 569.223022,946.726990 570.008484,945.573547  C571.040771,944.057495 571.841431,942.406738 572.670044,940.774109  C573.197815,939.734253 573.662781,938.601562 574.654419,937.937927  C582.143494,932.925842 589.231689,927.255920 597.875244,924.150757  C600.007324,923.384888 602.026367,922.603943 604.034729,924.003235  C607.358276,926.318787 610.274170,925.564758 613.392273,922.950562  C613.932373,922.707886 614.166870,922.654907 614.704346,922.797546  C621.463135,923.758667 627.939453,924.310791 633.827087,927.594116  C634.950256,928.220520 635.667297,928.991211 636.212402,929.890137  C638.518677,933.693359 642.540100,933.844299 646.128967,935.348389  C652.736572,938.117493 660.837891,938.191956 665.636597,944.443787  C668.334412,947.958435 672.925903,949.402649 675.798767,949.666931  C679.891418,950.043335 683.805908,952.569580 688.189209,951.233948  C691.252869,950.300476 692.779419,953.405212 694.835876,954.901550  C696.519958,956.127014 697.861450,957.789001 699.653809,955.098694  C699.946899,954.658691 701.139160,954.219360 701.329163,954.399292  C703.925781,956.858704 707.219177,957.219360 710.751587,957.824951  C711.580017,959.099121 712.333435,960.028076 713.726135,959.574402  C715.588745,958.967773 717.180054,958.524536 718.258057,960.928040  C718.828247,962.199280 720.014771,961.479065 720.728333,960.785217  C722.936768,958.638245 725.017822,959.590332 726.803650,961.190430  C729.237793,963.371521 732.236633,963.052917 735.041626,963.861938  C735.834778,961.861084 732.822632,960.224609 734.368652,959.200317  C736.386108,957.863770 739.731079,956.221924 741.340454,957.030151  C745.463867,959.101013 747.385010,955.670959 750.192444,954.660889  C751.677002,954.126892 753.049194,952.255005 754.415771,954.327454  C755.575684,956.086426 755.007751,957.724915 753.017517,958.888733  C750.692505,960.248291 749.706177,964.867371 745.509033,961.617371  C744.917908,961.159729 743.949768,963.063049 743.536682,964.139282  C743.050842,965.405029 743.966125,965.941956 744.886047,966.386169  C745.923340,966.887329 747.079346,967.193726 748.021423,967.826355  C748.927307,968.434814 749.108215,969.496704 748.576538,970.492188  C748.031067,971.513611 747.307129,971.753174 746.137939,971.152649  C742.339294,969.201660 739.842346,970.740662 738.575745,974.315613  C736.291077,974.576477 737.328857,970.099976 735.143433,971.893982  C732.549500,974.023438 725.967957,973.899963 730.021301,981.083984  C727.200928,976.591003 724.691040,975.814819 721.083801,978.589478  C718.946411,980.233521 716.837402,977.690674 714.191711,977.393860  C714.677490,980.566406 715.112488,983.407898 715.625244,986.757019  C712.625000,984.790344 709.331177,984.439087 707.448181,981.560425  C706.837463,980.626831 705.423157,979.754822 704.402710,980.297974  C700.297729,982.483093 696.222168,978.933167 692.409546,980.284424  C689.576050,981.288574 689.126770,979.033752 687.328247,978.060913  C686.829956,978.126038 686.664795,978.254456 686.251099,978.191406  C684.156616,973.691345 680.452148,976.574097 678.371399,976.916931  C675.623474,977.369751 678.075134,979.989929 678.657837,981.711609  C679.199036,983.310791 679.399841,984.971680 677.597656,986.121338  C675.450928,987.490601 675.283936,985.397400 674.356628,984.428467  C672.697327,982.694946 670.725525,980.116089 668.435059,981.017700  C666.561523,981.755188 662.215454,982.355530 664.352722,986.699829  C664.502991,987.005310 656.508545,989.073181 656.267639,988.661743  C653.635498,984.165710 648.864502,984.990112 644.411987,984.001831  C643.464417,983.393433 642.780396,983.059998 641.996155,982.910950  C642.152771,982.945984 642.402954,983.018127 642.745117,983.132324  C643.040222,983.230530 643.310913,983.379456 643.779480,983.786804  C639.890930,988.660156 637.695007,983.185120 634.768616,982.082825  C633.598389,981.642090 632.976990,979.797852 632.053833,978.633667  C630.899353,977.177673 629.692627,976.871887 628.256958,978.818420  z\"})),_path175||(_path175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M544.388794,912.026489  C544.249084,912.719360 544.222473,913.094055 544.094971,913.732666  C540.465393,920.704590 532.488953,924.788879 532.514282,933.628723  C532.519348,935.400146 531.267151,936.827820 529.559387,937.297424  C524.505188,938.687195 522.588196,942.381653 521.665405,947.270996  C520.985413,947.592590 520.676270,947.053223 520.359741,947.210205  C520.098633,947.339722 520.234741,947.677673 520.721680,948.151367  C521.072693,949.978027 520.605957,951.131287 518.680725,951.700195  C516.486938,951.512695 514.788513,950.824036 513.133362,950.040283  C511.799652,949.408630 510.596863,947.959473 511.503387,946.892456  C515.032898,942.737915 510.432404,938.290894 512.973938,933.849426  C510.827820,934.113708 510.713654,937.049377 508.774963,935.789795  C507.338440,934.856384 507.391571,933.334778 507.243958,931.803711  C506.766968,926.856384 506.541229,922.158325 511.801880,919.218872  C513.701660,918.157227 512.488342,913.925964 516.316406,914.253418  C514.079895,913.587341 511.347443,913.925659 509.692383,910.756348  C507.749359,915.965454 507.772675,920.769653 507.046844,925.413391  C506.765198,927.215210 507.137115,929.191528 504.377075,929.866211  C501.502411,929.654541 499.791565,928.307068 498.616638,925.712402  C498.945374,921.873230 501.030518,918.713013 500.541260,914.680542  C500.581146,912.550232 500.978851,910.884277 502.129578,909.073669  C503.026764,907.859436 504.568726,907.635986 504.685181,906.322144  C505.116211,901.458435 509.328949,897.902344 509.201050,892.540894  C509.031952,890.951904 509.429871,889.871094 510.417358,888.640869  C510.954834,888.040649 511.277039,887.715515 511.843384,887.158569  C512.240173,886.764771 512.401672,886.611572 512.816895,886.245544  C515.377380,884.236755 515.038513,881.462891 515.706787,878.727417  C515.815613,878.210938 515.872375,878.009033 516.042603,877.518433  C516.492310,876.511047 516.923157,875.829163 517.045166,874.714966  C517.128174,874.004089 517.218628,873.602173 517.462280,872.912964  C518.209229,871.733459 518.737976,870.804565 518.976685,869.373169  C519.709839,863.341736 521.129028,857.900024 524.603577,852.812378  C525.853455,851.754456 527.390381,851.567749 527.916138,849.742310  C528.181396,849.243103 528.301514,849.048767 528.644165,848.589600  C529.846375,847.673340 530.508606,846.705627 531.324585,845.894897  C533.279419,843.952515 535.307922,843.598267 536.018921,846.848572  C536.700806,849.966125 538.172485,849.057678 539.898376,848.081360  C542.641357,846.529480 544.016724,843.818909 545.672852,841.330200  C547.391296,838.747925 549.033997,838.927246 550.561768,841.923828  C550.669983,842.615112 550.622803,842.992188 550.245605,843.486572  C550.034668,843.623901 550.311768,844.039246 550.402710,843.795288  C550.650330,843.453796 550.807068,843.356262 551.250305,843.213013  C552.180359,843.185852 552.752075,843.399597 553.446899,844.079224  C554.094482,845.554138 553.860046,846.652405 552.945251,847.959106  C551.402649,849.416138 549.170654,849.489075 548.560669,851.935547  C548.464294,852.934631 548.676025,853.577209 548.727722,854.232971  C549.084229,858.756653 547.769958,859.673645 543.654114,857.804016  C541.923340,857.017761 541.923340,857.017822 539.927917,859.681335  C544.197815,859.004089 548.274536,857.717896 551.158936,861.998596  C552.080383,863.366028 553.558044,862.010742 554.678955,861.376709  C556.291077,860.464600 558.065552,859.370300 559.724182,860.803955  C561.589600,862.416443 560.243103,864.202515 559.225342,865.656677  C557.486694,868.140747 558.411438,870.395813 559.543823,872.662354  C560.651978,874.880493 562.481323,876.681702 563.445190,879.389404  C564.129028,881.518372 563.576172,883.337036 563.627808,885.497559  C563.544434,886.567932 563.236267,887.159485 562.283508,887.697754  C561.969604,887.845154 561.947632,887.934326 561.902222,887.940918  C560.365601,889.826172 558.395142,890.699829 555.682373,890.638794  C553.562134,889.298462 554.167419,887.667297 554.599121,886.046570  C554.770203,885.404358 554.689575,886.227783 554.713989,885.565918  C554.732117,885.072510 554.492371,885.026001 554.112488,885.693970  C553.882690,886.134521 553.784058,886.316345 553.502319,886.765015  C550.708008,887.994568 548.719727,888.723328 550.340393,892.570618  C552.147278,896.859924 548.640259,897.018921 545.490173,896.435791  C545.690735,898.606018 547.700134,898.794434 548.417969,900.473022  C548.540710,901.296875 548.557129,901.955200 548.205811,902.184326  C544.673767,904.486694 544.050476,907.879761 544.388794,912.026489  z\"})),_path176||(_path176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M798.728577,825.792603  C798.866333,827.939697 799.510193,829.428101 801.417664,830.194641  C803.236694,830.925598 804.255676,832.173828 803.998169,834.617310  C804.519958,835.421509 804.583984,835.966248 804.286499,836.812622  C803.894043,837.232666 803.477051,837.490356 803.695007,837.755920  C804.111023,838.262878 803.434387,837.913147 804.261353,837.543518  C806.074463,838.679932 805.354370,839.838928 804.672058,841.028687  C802.983276,843.973267 803.158081,845.522705 807.105225,844.255981  C807.913940,843.996460 808.741516,844.120850 809.748230,844.775146  C810.811218,845.799316 811.618103,846.605652 812.440491,847.395874  C813.248169,848.172119 814.021851,849.421143 815.311829,848.421082  C816.245422,847.697449 815.544495,846.626160 815.419556,845.663513  C815.096069,843.172119 813.885559,840.592102 816.967163,838.607361  C818.479675,837.633240 816.878479,836.115173 815.962891,836.279419  C812.041077,836.983154 812.344299,832.538391 809.843628,831.564941  C808.982239,831.229675 808.968384,830.106079 809.767761,829.540283  C810.185181,829.244934 811.058777,829.284851 811.570862,829.516663  C812.119019,829.764832 812.568909,830.362488 812.915833,830.901489  C815.204895,834.458069 817.270325,835.265381 819.675537,830.862427  C821.014038,828.412231 822.832153,827.879028 823.987793,831.622498  C824.468689,832.481812 824.984924,832.917969 825.610962,833.706543  C826.283813,835.250427 826.382874,836.582031 826.586548,838.229492  C826.646912,838.997314 826.607300,839.433472 826.419495,840.177002  C826.241089,840.689087 826.157715,840.889038 825.934448,841.380249  C825.603394,842.054688 825.408508,842.435852 825.069580,843.102356  C824.017456,845.028076 822.685547,846.451050 822.337769,848.704651  C822.144836,851.335815 826.071838,850.815796 825.192871,853.752869  C822.224487,856.849365 818.574463,857.404114 814.938171,857.862976  C811.511414,858.295349 809.846497,856.085999 808.600647,853.318420  C808.010620,852.007812 807.370178,849.959839 805.515198,851.230469  C804.110779,852.192322 802.483154,852.984619 802.927063,856.023193  C803.780151,861.861877 808.376160,862.598022 812.169189,864.241882  C814.847229,865.402588 817.994202,864.864624 818.900757,861.208435  C819.655945,858.163147 821.794617,856.469604 824.377930,854.615723  C825.540344,853.507996 826.605591,852.670654 825.424316,850.899780  C825.485107,846.866699 828.751770,846.663452 831.458557,845.380127  C832.027649,845.320740 832.256287,845.326904 832.814087,845.416565  C834.274231,846.169128 835.429993,846.768677 837.122559,846.821716  C839.269836,846.950317 841.134033,846.551697 842.886536,847.234802  C844.315002,847.791626 846.146973,848.798279 845.291504,850.386475  C842.810486,854.992493 847.241211,852.116699 847.911438,853.214844  C846.226257,850.059998 845.319214,846.552856 842.300293,844.149597  C840.555664,842.760864 840.580566,840.347229 842.876953,839.177368  C845.046387,838.072144 847.485718,835.791931 849.888916,838.938354  C850.690063,839.987244 850.665894,841.483582 851.992859,842.787292  C853.364075,839.356750 854.772217,836.047363 858.263428,833.903503  C860.495789,832.622314 862.457642,833.552795 864.708191,833.840271  C864.830994,835.828308 865.264832,837.552734 865.953613,839.619873  C866.001953,840.442566 866.000183,840.887512 865.999756,841.666260  C866.803894,844.351196 869.106873,846.174011 870.783081,846.475098  C875.346985,847.295044 876.927979,850.458252 878.770935,854.170471  C876.299683,854.757141 871.333008,854.320618 876.409668,858.612122  C877.185730,859.268250 876.936218,861.302856 876.436462,861.189575  C871.091064,859.977356 874.325745,867.981873 869.722168,867.306824  C866.758362,866.872131 867.686279,863.364258 865.346558,862.076538  C864.181091,861.108521 864.355286,860.096985 864.899475,859.236511  C866.399841,856.863586 866.154175,854.894958 863.881287,853.157104  C862.507202,852.106445 862.061768,850.758545 863.533508,849.041504  C861.317078,849.652832 861.562256,851.098450 861.480286,852.410950  C861.355042,854.417297 861.412109,856.782104 860.128723,858.167175  C856.737488,861.826843 860.720764,865.822266 859.174133,869.443115  C859.579407,869.563171 859.563049,869.141541 859.740662,868.981445  C860.575684,868.228455 861.498230,868.133972 862.761353,868.769592  C862.784668,872.275696 865.066406,872.028992 867.596924,871.997742  C868.128052,872.164734 868.256348,872.331848 868.193481,872.750732  C868.002319,874.067871 868.002197,875.133240 868.003479,876.598145  C864.860535,876.070679 861.615662,874.908875 860.978882,879.947754  C860.800293,881.360840 859.929443,882.156250 858.604065,881.849976  C856.907471,881.457947 854.595581,881.532288 854.147949,879.330261  C853.490356,876.094971 851.856934,875.860718 849.084961,876.732117  C846.779053,877.456848 844.432556,876.291992 842.348206,875.481262  C840.292969,874.681824 838.483337,874.403503 836.647034,875.468567  C835.665588,873.725098 836.979736,872.599487 836.944702,871.301758  C836.912048,870.093689 837.540283,868.445374 835.072632,869.478699  C834.022766,869.918396 833.270081,868.710876 833.134766,867.696167  C832.645691,864.027100 829.846619,864.757935 827.778503,865.199524  C824.685791,865.859741 827.002136,868.110474 826.944641,869.664978  C826.913879,870.495178 826.978821,871.328857 826.999084,872.581726  C824.374390,869.644226 819.465027,872.080688 816.650818,868.840698  C815.488037,867.501770 814.652100,867.977112 814.436890,870.115723  C813.787964,876.562866 809.110352,871.901672 806.501221,872.371826  C804.143372,872.796692 803.577087,870.495117 805.472839,868.314209  C806.503113,867.129028 805.332458,866.120239 804.214539,865.653564  C797.610596,862.896851 796.165466,857.147949 796.332520,850.998047  C796.416931,847.888977 795.971863,846.237427 792.805359,845.711731  C792.068726,845.589294 791.430054,844.876770 790.742615,844.433411  C791.195740,842.486145 793.124939,842.204041 794.300537,841.112244  C796.106262,839.435303 797.038391,837.030518 795.157776,835.474731  C792.588867,833.349609 792.014282,831.389526 792.665894,828.217407  C793.001709,826.582520 791.847168,824.367859 793.881165,823.437805  C795.834412,822.544678 797.251221,824.153320 798.728577,825.792603  z\"})),_path177||(_path177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M614.093384,922.642456  C612.676514,926.544678 608.218323,928.592041 605.568481,926.473572  C602.487610,924.010376 599.664978,924.072754 596.845825,926.364197  C594.813538,928.016052 592.047180,928.028992 590.185913,929.318481  C586.685120,931.743774 581.204651,932.313477 580.699341,938.113037  C580.615112,939.079468 579.565430,940.119324 578.524902,939.304382  C575.057861,936.588989 575.177368,939.953125 573.856079,941.624146  C571.799561,944.225220 572.317139,948.909424 567.243469,949.251038  C564.695740,949.422546 563.569092,949.503052 563.610779,946.536255  C563.656250,943.288513 563.215942,940.033997 562.981445,936.380371  C561.154480,933.947876 560.400024,931.153503 561.380615,929.029297  C563.787659,923.815002 562.464783,918.593872 562.169128,913.422852  C561.935242,909.331970 563.473083,907.654053 567.327637,907.270569  C569.992798,907.005432 572.590393,906.781738 575.171997,907.711792  C576.417236,908.160522 577.739990,908.734070 579.028076,908.561157  C583.126953,908.010681 586.882812,908.334473 590.089111,911.371399  C590.935974,912.173584 592.246887,912.137268 593.666504,911.195496  C594.161011,910.990540 594.329346,910.988342 594.750122,910.984985  C597.229614,911.497681 598.160889,913.513184 599.819458,915.202026  C602.737000,918.208923 606.888733,917.624695 610.197876,919.853760  C611.887268,920.526611 613.416809,920.808655 614.093384,922.642456  z\"})),_path178||(_path178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M613.196655,777.666748  C612.898743,778.687317 612.862427,779.413391 612.791870,780.501343  C610.539124,783.856628 608.979675,787.171387 607.724609,790.996460  C606.211731,792.088806 604.531799,792.819824 606.830261,794.787354  C607.385559,797.124573 606.496277,798.856140 605.061096,800.777222  C601.217529,804.246399 599.685364,808.672485 597.613220,812.822754  C595.587585,816.879944 593.877319,821.292725 589.208130,823.679688  C585.729370,821.584351 588.221436,819.139221 588.423218,816.500916  C588.570557,815.179565 588.601562,814.214050 588.809326,812.911987  C589.024475,811.892517 589.235046,811.237549 589.533264,810.265747  C589.648071,809.506775 589.717773,809.076477 589.835693,808.331055  C590.203491,806.192322 589.106323,804.795654 588.375305,802.941406  C588.262085,802.163818 588.317871,801.719666 588.619263,800.988220  C589.570984,799.866394 590.748108,799.648193 591.677307,798.770996  C591.131897,797.681213 589.715515,798.137146 588.822144,797.075012  C588.141724,793.784241 589.526123,791.011230 589.781921,787.738525  C594.370361,782.022827 594.151978,789.077209 596.735596,789.874207  C597.106567,788.643188 596.839966,786.567566 595.960999,786.759521  C591.962402,787.632324 591.037781,779.523743 585.929932,783.794800  C584.903320,784.273010 584.169739,784.412964 583.033752,784.218689  C580.708679,782.737183 581.214478,780.919128 581.838074,778.742920  C586.805115,772.180054 593.011108,767.916931 600.761169,766.596985  C605.427124,765.802307 609.251831,767.999268 607.202026,774.191895  C608.436340,772.473694 608.978516,770.132446 611.482300,770.604065  C613.441162,770.973022 614.023315,772.548645 613.977234,774.770874  C613.960022,775.926147 613.879639,776.688843 613.196655,777.666748  z\"})),_path179||(_path179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M666.158691,679.301514  C665.871338,676.564880 666.000244,674.664490 669.442505,675.836792  C671.570068,676.561401 673.920532,676.631409 676.583008,676.996460  C678.183472,679.651733 678.353027,682.729919 680.618042,684.952026  C681.832886,686.143860 681.754456,687.627502 680.478149,688.929077  C676.359009,693.129944 671.961182,697.225891 674.675110,703.224915  C675.354675,701.388428 675.906006,698.416382 678.594238,696.746216  C683.627502,693.619080 685.803833,689.554321 683.136169,683.739685  C682.792480,682.990540 682.879272,682.109802 683.099976,680.930054  C683.322693,680.370483 683.445190,680.159912 683.847412,679.711975  C684.807800,679.143005 685.520752,679.069641 686.596436,679.333374  C688.268677,680.472839 689.094482,681.876709 689.937744,683.655273  C689.670898,685.782471 689.278809,687.558960 689.048035,689.356140  C688.948059,690.134766 689.000549,690.999939 690.017395,691.393555  C693.248474,692.644226 693.189453,692.636658 691.882874,695.335693  C690.709595,697.759460 693.079712,698.436035 694.269714,699.482666  C695.876526,700.895813 698.696167,701.171204 698.437683,704.812073  C695.941467,702.906738 693.471619,701.748901 690.776245,701.146423  C688.632996,700.667297 686.793152,704.951416 684.348694,701.582397  C684.236206,701.427368 683.095581,702.622437 683.182739,703.480103  C683.374878,705.372070 684.322754,706.893799 685.778503,708.140808  C686.674683,708.908264 689.237854,707.492493 688.650085,709.663635  C688.039307,711.919983 686.028809,709.329224 684.915100,709.897339  C680.367432,712.216736 673.808655,707.653137 670.472229,714.201172  C669.938904,715.247986 668.233521,714.916809 668.499634,713.665222  C669.278564,710.002502 665.843750,706.863892 667.689697,702.998657  C668.780579,700.714478 667.047913,698.944458 664.363708,698.049438  C660.554810,698.915344 657.326660,698.140137 654.273560,696.563965  C653.271423,696.046692 651.073792,696.380493 651.660095,694.429565  C652.184814,692.684021 653.975586,692.929016 655.469543,693.313354  C657.323669,693.790344 659.421875,695.059937 659.982544,691.384033  C663.755493,691.286194 668.046753,693.165100 669.851807,687.614624  C668.684570,686.434570 666.347351,686.714172 665.873291,684.322754  C666.000366,683.835144 666.000732,683.667786 666.001709,683.249512  C667.141541,681.964172 667.679565,680.873596 666.158691,679.301514  z\"})),_path180||(_path180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M728.699829,669.195679  C732.485962,669.621826 735.178162,670.991211 735.101440,675.176941  C735.085632,676.040161 735.591003,676.818176 736.627502,676.675781  C736.979980,676.627441 737.551819,676.083313 737.539734,675.785278  C737.335938,670.748291 742.878357,673.614624 744.655334,670.696838  C745.304749,669.630432 746.149414,672.583618 746.686279,673.737732  C747.402100,675.276489 746.913757,677.836243 749.481201,677.675232  C751.588196,677.543030 750.718445,675.385498 751.057922,674.066345  C751.769348,671.301453 753.589661,670.527527 755.835022,672.115601  C757.524231,673.310364 759.075806,674.307739 761.600037,673.999878  C761.139526,676.294250 760.607239,678.791687 759.342224,680.835571  C757.412598,683.952942 757.697144,686.762634 759.415039,689.696838  C760.113464,690.889832 761.778625,692.110535 759.233276,693.121948  C761.214478,697.173157 757.719788,699.755676 756.849487,703.037354  C756.298950,705.113220 759.527466,704.349670 761.192566,704.524048  C758.752502,708.693665 758.765442,708.423279 753.631287,708.177673  C749.079224,707.959961 753.992676,711.259155 751.925232,712.498901  C750.836304,712.699829 749.002502,712.402588 748.616272,711.062927  C748.100586,709.274048 749.731812,707.770813 750.694153,706.235107  C751.640869,704.724243 754.972473,703.885132 753.213257,701.713684  C751.797119,699.965759 748.981567,700.446167 746.671631,701.208496  C745.332336,701.650574 743.244446,703.446899 742.768982,702.200500  C741.848083,699.786499 739.519958,699.107300 738.385132,697.231445  C738.164124,696.866089 738.458069,695.878174 738.837769,695.525696  C739.618103,694.801086 740.817383,694.770142 741.631042,695.270691  C742.556396,695.839905 743.081116,697.067200 744.010864,697.620361  C744.996948,698.207092 746.335144,698.292786 747.269714,697.391968  C748.260559,696.436951 748.210327,695.066101 747.156677,694.343201  C743.133118,691.582581 746.233704,689.742371 747.935364,687.339844  C747.669983,686.649536 747.473999,686.240784 747.519409,685.423828  C748.239868,684.218079 749.123352,683.966125 750.150879,684.095276  C750.308411,684.115112 750.474121,684.239136 750.612610,684.208679  C751.038330,684.114929 751.007446,683.994629 750.293945,683.774963  C748.007507,682.187744 747.328369,685.165588 745.336487,684.991516  C743.090637,684.917053 740.699585,685.522522 741.733521,682.014648  C742.225281,680.346069 740.674866,679.624146 739.398254,679.411377  C738.068604,679.189636 736.732483,679.667664 736.382935,681.271545  C736.208252,682.072998 737.371765,683.514404 735.671875,683.495605  C734.678772,683.484741 733.551514,682.644165 732.761841,681.887512  C732.256958,681.403687 732.122864,680.402771 732.058044,679.614380  C731.862610,677.236816 729.825012,673.518738 728.069641,672.338135  C727.383057,671.015015 727.802551,670.189453 728.699829,669.195679  z\"})),_path181||(_path181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M913.980591,955.738037  C914.189880,958.185913 916.288086,958.708069 917.540771,959.923462  C920.019836,962.328857 920.105957,962.240112 919.298218,966.722046  C916.862610,964.708069 914.168518,960.380127 912.365662,967.094604  C911.995667,968.472351 909.380310,966.535461 907.385315,967.002686  C906.996460,967.002441 906.998901,967.002441 906.994568,967.005127  C906.617126,966.615662 906.472839,966.152344 906.777405,965.306396  C907.193298,961.158447 903.559021,957.762207 905.855225,953.350952  C905.886841,952.395691 907.199158,951.358887 905.239990,951.117310  C904.687500,950.211853 904.375061,949.423645 904.031250,948.317749  C903.773376,944.285706 903.952026,940.547546 904.276062,936.879456  C904.480896,934.561218 903.361938,933.181458 902.248291,931.242310  C902.010193,929.931641 902.008850,928.867310 902.010986,927.403931  C902.602539,926.327637 902.950195,925.556580 902.962769,924.320190  C902.990234,923.248291 902.990234,922.500366 902.987793,921.378662  C907.116333,919.256775 909.322693,924.781616 913.437012,923.588806  C911.591492,925.632935 908.721313,924.834717 906.942383,926.513977  C911.231140,929.394348 911.281128,929.395996 911.082703,935.415161  C911.031311,936.973328 911.991882,937.807251 912.770203,938.863281  C913.819397,940.286682 914.027344,941.635376 913.134827,943.451599  C911.398560,946.985046 914.084045,951.526001 917.966309,951.531006  C919.486755,951.532959 923.256714,951.211304 921.284851,948.467041  C919.393127,945.834351 919.432068,944.354431 921.200562,942.153625  C922.192566,940.919128 922.016541,939.951172 920.470337,938.940002  C918.427612,937.604187 916.644348,935.849670 914.846985,934.170898  C914.076782,933.451416 913.783569,932.349915 914.655762,931.514099  C915.208252,930.984802 916.077820,930.523254 916.813110,930.511047  C917.864502,930.493591 917.915588,931.542358 917.989014,932.369141  C918.313965,936.029602 921.848633,935.436218 923.914062,936.749451  C924.936401,937.399414 926.703064,936.949585 926.839111,938.834717  C926.947754,940.341309 925.783691,940.546204 924.726868,941.131897  C922.111877,942.581116 922.142456,944.565125 924.700928,945.931030  C926.475769,946.878479 927.316711,948.878601 929.476807,949.368958  C932.568054,950.070496 931.030884,951.843811 930.053833,953.684875  C930.506470,954.502441 930.809021,955.098694 930.828125,956.144348  C930.476379,957.630188 929.521423,958.631470 929.974731,960.302246  C930.004395,961.605957 929.759949,962.483521 928.661499,963.302734  C928.080688,963.447632 927.835144,963.441528 927.292358,963.217712  C925.829285,959.959595 921.174805,959.339233 921.610962,955.054382  C921.702759,954.152222 920.383057,954.492004 919.661194,954.929321  C918.632996,955.552124 918.071228,957.169617 916.207336,956.230835  C915.346619,955.725586 915.031555,954.138062 913.980591,955.738037  z\"})),_path182||(_path182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M593.686340,910.829956  C592.693420,914.521851 590.581726,915.198303 588.122070,912.407776  C586.022095,910.025330 584.528687,908.691711 581.077087,910.504578  C579.526550,911.319031 576.680237,909.820190 574.476624,909.182251  C573.063538,908.773193 571.858521,908.094788 570.195557,908.366455  C562.974060,909.546082 562.889709,909.473694 564.075989,919.769348  C564.427673,922.821533 565.922913,925.599548 562.795959,928.480286  C561.722900,929.468872 562.860657,932.857056 562.982056,935.563660  C560.246399,935.872314 559.082214,937.864685 560.318787,939.604004  C562.258179,942.331787 560.162476,943.595825 559.135193,945.700134  C558.247864,946.723022 557.374756,947.096619 555.964111,946.849731  C554.349854,946.121521 554.161682,944.930664 554.012512,943.355896  C554.307007,936.616272 555.262146,930.221497 555.620667,923.953735  C555.888794,919.265137 558.976685,913.599670 554.658386,908.938477  C555.137268,907.562256 557.016846,908.379883 557.489502,907.336304  C559.261230,903.424927 561.456055,900.738159 565.912109,903.905518  C567.187988,901.676331 563.041321,901.185303 564.925171,899.526062  C566.368652,898.254761 567.679077,900.109070 568.761414,900.923340  C573.281616,904.323792 579.153381,902.037415 583.947021,904.844177  C587.141785,906.714905 590.947815,907.537048 593.686340,910.829956  z\"})),_path183||(_path183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M613.330566,775.146729  C612.933289,773.552612 613.088196,771.630737 611.156372,771.497925  C609.139709,771.359253 609.087341,773.227478 609.033752,774.745789  C608.979187,776.290466 608.971680,778.037964 606.813904,777.819580  C604.628540,777.598511 605.079224,775.946167 605.326172,774.395691  C605.634583,772.459961 608.200684,770.051514 605.552490,768.668762  C602.810242,767.237000 598.539978,766.757141 596.533386,768.672729  C592.479736,772.542603 586.554749,773.681335 583.153198,778.747986  C582.434143,779.604370 581.784119,780.036865 580.864624,780.600342  C579.920532,781.151184 579.269409,781.603638 578.448608,782.363037  C578.024902,782.690552 577.844482,782.812256 577.370850,783.089722  C571.041443,785.000854 568.390076,791.099304 563.009888,794.267212  C562.213379,794.991516 561.601807,795.362061 560.592773,795.762573  C559.759216,795.942810 559.274109,795.940735 558.439209,795.770630  C557.662476,795.432129 557.286743,795.134888 556.802856,794.450806  C556.605408,793.908203 556.577087,793.677002 556.637573,793.111816  C557.438965,791.682190 558.611389,790.895447 559.045532,789.221497  C559.375061,788.522644 559.583374,788.131958 559.966064,787.453247  C560.750244,786.211182 561.222778,785.150940 562.467896,784.269531  C565.344238,783.200378 568.127319,782.552307 568.669556,778.815552  C568.861267,777.996826 569.039246,777.548218 569.459961,776.806030  C572.274719,773.594910 576.341370,773.766968 579.429443,771.874634  C586.252258,767.693909 593.277893,763.800964 599.390625,758.010254  C602.631592,758.342957 605.372375,757.093933 608.559082,757.299622  C610.673157,760.658264 612.594971,763.716980 617.238159,763.760254  C618.335632,765.412170 618.213562,766.884766 617.671753,768.733032  C617.255615,770.113647 616.729736,770.960388 615.498413,771.754517  C615.142151,772.437012 615.084167,772.881165 615.005859,773.661133  C614.596558,774.488647 614.267029,775.044067 613.330566,775.146729  z\"})),_path184||(_path184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M640.192078,719.187439  C640.697205,717.645081 638.064026,713.250732 643.018433,715.747437  C643.867432,716.175232 644.772705,715.493591 644.547241,714.479858  C644.189026,712.869446 643.190430,711.905945 641.314148,712.102356  C639.994568,712.240601 638.072266,713.986938 637.466370,711.854675  C636.898010,709.854553 637.843140,707.563416 640.693237,708.456360  C644.959839,709.793213 649.090332,707.100952 654.251953,709.487244  C652.270996,705.481750 644.093567,706.833984 648.976746,700.304382  C651.157471,702.878540 653.753296,704.791077 657.612854,704.989380  C658.117615,705.306519 658.311340,705.562012 658.787842,705.882080  C659.498413,706.398193 659.885132,707.236267 660.844788,706.213257  C661.628662,705.056030 662.403870,703.541321 663.563599,704.789673  C665.104736,706.448669 666.323242,708.461670 665.146667,711.063721  C664.543640,712.397339 663.967102,712.790649 662.544678,712.341736  C660.862854,711.810974 659.118530,711.638611 657.319153,711.496460  C654.082458,711.240784 653.186401,712.568176 653.007446,715.634338  C648.929260,716.189331 650.796875,719.372375 650.547607,721.260010  C650.242554,723.569641 652.027466,722.620544 653.243408,722.504944  C655.065308,722.331604 655.735718,723.701294 656.587219,725.237915  C654.285706,726.660400 652.477295,724.270325 650.240234,724.823364  C648.654785,726.402771 647.273682,725.572510 645.876892,725.083679  C642.994812,724.075012 642.332092,726.415588 641.822266,728.192932  C641.216309,730.305603 643.212097,729.969666 644.402649,730.097168  C646.333679,730.303894 647.937561,730.957153 649.083862,733.039307  C649.436096,734.874878 650.643555,735.738708 651.662354,737.165649  C652.126343,738.519104 652.068359,739.499756 651.258911,740.713257  C650.999756,741.443115 650.999451,741.888611 650.998413,742.668335  C649.584351,744.362244 647.441895,744.523865 646.726501,743.119629  C644.971558,739.674500 642.904663,741.099426 640.333496,742.037354  C639.242615,742.005249 638.497375,742.003906 637.379761,742.003723  C637.056335,740.760010 637.803650,739.988342 638.636780,739.120972  C641.995667,735.623901 641.723633,734.663330 637.201965,733.690918  C636.085571,733.450745 634.895508,732.557129 635.464783,731.897827  C638.354187,728.551392 637.287292,724.590759 637.702026,720.847717  C637.770874,720.227173 638.742920,719.706665 639.647583,719.071167  C640.187012,719.192322 640.377136,719.381531 640.567810,719.570007  C640.758728,719.758728 640.696716,719.694519 640.192078,719.187439  z\"})),_path185||(_path185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M704.795776,996.259521  C705.435852,995.198242 704.577881,992.213257 706.725708,994.252502  C709.049927,996.459229 709.811829,996.533386 711.165527,993.616516  C712.614014,990.495483 714.701599,992.536682 716.771790,993.712769  C717.498413,994.408264 717.911926,995.146484 718.850952,994.214478  C719.472473,991.080261 723.932739,991.666443 723.965881,988.357788  C724.568726,988.408264 725.444153,988.220642 725.730042,988.547852  C727.533630,990.613037 724.662781,991.073608 724.149902,992.708862  C724.119995,993.367859 724.365234,993.501282 724.871521,993.194641  C726.430542,992.864197 727.869690,992.233521 727.775208,990.767334  C727.582581,987.778015 729.103577,987.082214 731.624329,986.153015  C734.954590,984.925415 736.697876,985.236389 737.000305,988.926758  C737.121948,990.410950 738.478760,991.044739 738.927673,992.646973  C739.355530,998.830627 734.268433,1000.530090 730.818481,1003.209412  C729.101807,1004.542603 728.377197,1002.206848 728.511719,1000.775574  C728.834961,997.335938 728.947693,997.346558 725.877014,996.440002  C724.683411,998.229431 726.994812,1000.221313 725.435852,1002.168945  C724.187012,1001.188171 722.953369,1000.127869 721.626404,999.201172  C720.119934,998.148926 720.114807,999.382812 720.002563,1000.690918  C715.050049,1000.523193 714.638550,1002.969971 716.410217,1006.678650  C717.312439,1008.567383 718.413635,1010.361084 719.784241,1012.850342  C717.456848,1012.052185 715.199829,1012.558960 715.009521,1009.626221  C714.891663,1007.810913 714.452209,1006.089172 713.126526,1004.398254  C709.550659,1009.122131 705.596741,1004.012146 701.412720,1005.000244  C701.001587,1004.250610 701.000793,1003.501221 701.000000,1002.377136  C700.671692,1001.649963 700.417847,1001.251160 700.225342,1000.445251  C700.255188,999.866089 700.310608,999.639832 700.556824,999.125488  C702.039917,998.083008 703.913757,998.292542 704.795776,996.259521  z\"})),_path186||(_path186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M899.756104,898.753662  C899.792114,901.757812 900.772644,904.504822 900.007263,907.629150  C898.630981,910.644348 897.493713,913.297546 898.609619,916.394287  C899.251160,918.174683 898.577942,919.840881 896.994019,920.626221  C895.457031,921.388306 893.744202,921.275879 892.872192,919.263000  C892.141663,917.576782 890.206116,918.249878 889.043030,917.354431  C887.033508,915.807312 885.971863,913.497070 886.436401,911.320984  C886.927673,909.019897 889.513611,910.342712 891.582886,909.999756  C892.453857,905.084900 891.260010,901.214050 885.364319,900.042480  C884.621887,899.611694 884.474792,899.154053 884.779358,898.314758  C884.517334,896.219971 884.605225,894.503052 886.962646,894.710022  C889.817444,894.960693 892.963562,894.300842 895.677063,896.831543  C897.416626,896.946106 898.573120,897.502747 899.756104,898.753662  z\"})),_path187||(_path187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M615.516113,772.067749  C615.490417,771.206909 615.780823,770.420898 616.161133,769.331421  C618.296265,767.062378 620.902466,765.395264 619.892639,761.585754  C619.691772,761.060303 619.647705,760.837036 619.760742,760.310547  C621.029236,759.218628 620.861938,758.011353 621.030090,756.866089  C621.706909,752.255310 624.714539,751.087402 628.709167,753.542480  C630.989685,754.944031 632.478455,756.680664 631.099670,759.096130  C629.798340,761.375671 627.529663,762.508911 624.518433,760.174377  C624.564087,765.365051 629.744263,769.926392 627.313171,773.871826  C624.902466,777.784058 624.557739,782.417847 621.198486,786.570190  C619.505188,781.444092 621.239807,775.271362 615.516113,772.067749  z\"})),_path188||(_path188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M594.324585,825.739380  C591.685364,834.954651 587.033875,843.006409 583.270752,851.448059  C580.847046,856.885010 577.953064,862.112366 575.021240,867.665649  C571.566467,866.146484 573.987976,864.212341 574.654358,862.407043  C575.390259,860.413574 577.436890,858.506226 574.524780,856.196899  C573.765808,854.410095 574.092651,852.988342 574.744873,851.238281  C576.304138,848.162476 577.853699,845.483154 578.797241,842.143066  C581.243713,838.654114 583.570557,835.496521 584.826599,831.329468  C585.529602,829.982239 586.370667,829.135132 587.026917,827.742676  C587.574829,826.779053 588.023987,826.188660 588.821777,825.387085  C590.848389,824.106445 592.547058,823.776794 594.324585,825.739380  z\"})),_path189||(_path189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M520.016418,947.387817  C520.865784,946.879211 521.629944,946.679810 521.393250,945.515991  C520.577820,941.507385 521.905762,938.631470 525.984192,937.517639  C529.961975,936.431335 532.021606,934.333496 531.502991,929.880066  C531.001465,925.572632 534.611938,923.488831 537.267639,921.084351  C538.043396,920.382019 539.727783,920.376831 539.260681,918.866333  C538.081238,915.051941 541.106689,914.982788 543.627441,914.042542  C541.023926,920.961670 538.890381,928.349854 533.720459,934.582764  C533.677917,934.941711 533.648376,935.258484 533.685547,935.413086  C533.364868,937.772461 531.963745,939.275513 530.017212,940.774109  C529.444580,941.301697 529.179932,941.674011 528.848511,942.265930  C528.374146,943.797607 527.791382,944.980774 526.190918,945.804932  C525.908447,945.986694 525.762085,946.240479 525.776367,946.386353  C525.165710,947.998352 524.852417,949.656128 523.004761,950.714600  C521.109070,951.777832 520.662659,953.474426 519.851074,955.255371  C519.102600,956.936890 518.601074,958.438538 517.078613,959.648254  C516.788635,959.814148 516.881165,960.013550 516.847900,959.909119  C515.876831,961.433350 515.090881,963.284729 512.268433,962.476196  C511.485199,957.510925 513.319031,953.809387 517.618896,951.066956  C520.088501,950.809998 520.040588,949.276367 520.016418,947.387817  z\"})),_path190||(_path190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M782.825317,921.276123  C783.300049,919.358887 782.193726,917.342529 784.642700,916.088806  C785.427490,916.523865 785.950562,916.664368 786.787720,916.211975  C787.429504,914.633362 787.467163,912.481628 788.358582,912.035461  C791.623169,910.401489 789.315002,908.509155 789.014160,906.348633  C790.847046,906.825623 792.686646,907.656067 794.764343,908.736084  C795.134888,909.150818 795.267334,909.315857 795.373779,909.796936  C795.028625,911.105286 794.375488,911.932922 793.878357,913.142944  C793.597656,913.688354 793.529297,914.123901 793.717468,914.175903  C793.958984,914.242432 794.229675,913.939758 794.638916,913.459473  C796.142883,912.156677 797.512695,911.259033 799.557922,910.958130  C801.136047,911.088440 802.822510,911.901917 802.315369,912.808472  C800.290344,916.428223 802.853333,919.275757 803.204346,922.720337  C799.307129,922.169739 795.735535,920.007812 791.392517,921.989380  C790.523376,921.801392 790.529358,920.889648 789.875793,921.084229  C789.251587,921.270020 790.034790,920.818176 789.975281,921.739746  C789.720398,925.229797 782.548889,926.551697 789.188293,931.837463  C785.063721,931.176819 782.481567,931.563354 781.255737,928.231445  C780.862244,927.822144 780.726868,927.646729 780.537781,927.143555  C780.856201,924.916443 782.982483,923.738831 782.825317,921.276123  z\"})),_path191||(_path191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M855.592651,886.318970  C855.164612,884.228943 856.093689,883.815491 857.462830,884.430786  C858.871521,885.063843 859.555542,886.764038 858.678040,887.755127  C853.511902,893.589600 858.353943,895.639893 862.383911,897.954468  C863.623108,898.666138 864.465881,899.552551 863.251526,900.533936  C862.198608,901.384827 861.140869,903.719971 859.249146,901.890869  C858.444946,901.113281 858.053284,899.508606 856.719116,900.623291  C855.477539,901.660767 856.325928,902.911316 857.048279,904.140076  C858.613892,906.803528 858.676270,909.438477 856.215271,911.751587  C855.458435,912.462891 853.929993,913.252319 853.807373,912.408569  C853.275391,908.746765 848.862976,907.534546 848.556458,904.382690  C848.239990,901.129578 849.607544,897.854187 853.209473,896.351501  C853.975525,896.031860 855.050659,895.059204 854.443359,894.591614  C849.868774,891.069702 855.022766,889.227478 855.592651,886.318970  z\"})),_path192||(_path192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M574.584473,856.089539  C578.122986,856.413086 578.194580,858.144348 577.143799,860.880310  C576.290039,863.103210 573.651733,864.564392 574.556702,867.656372  C574.587097,868.472351 574.401733,869.047180 573.933655,869.765747  C573.259277,870.627991 572.789124,871.297180 572.282654,872.284241  C570.831360,875.171753 569.446228,877.760132 567.815491,880.604126  C567.256348,881.591919 566.840271,882.270203 566.525391,883.260498  C566.137756,884.180786 565.687927,884.809448 565.042725,885.654419  C564.535095,886.276367 564.128052,886.480103 563.312134,886.242188  C561.170227,884.286926 562.470276,882.520203 563.038086,880.399109  C561.164429,876.810913 563.669373,874.345032 564.688599,871.253052  C565.069824,870.480591 565.350952,870.083679 565.943787,869.487671  C569.570740,868.205261 569.743286,865.124146 570.597168,862.120850  C570.837830,860.946411 571.209961,860.174927 571.862366,859.195740  C572.547119,858.330078 573.192444,857.843323 573.794983,856.931030  C574.082397,856.540649 574.210754,856.394287 574.584473,856.089539  z\"})),_path193||(_path193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M619.667175,759.730469  C619.919006,760.175293 619.920227,760.343201 619.926636,760.762939  C620.562012,763.061401 619.128296,763.581909 617.293335,764.066467  C616.757263,764.046448 616.579041,763.995361 616.430237,764.040771  C611.504761,765.543152 608.652527,764.224060 608.888306,758.228394  C608.721069,757.679749 608.630493,757.478577 608.567261,756.947632  C609.577820,754.863159 609.606140,752.867371 610.144592,750.649536  C610.396912,750.136292 610.525452,749.942566 610.919128,749.516052  C612.002075,748.764404 612.915100,748.476807 614.192139,748.127930  C615.312744,748.019470 616.025208,748.168823 616.896118,748.870239  C621.888794,751.701111 618.193420,756.127747 619.667175,759.730469  z\"})),_path194||(_path194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M667.388916,1022.999268  C664.959473,1018.565796 663.118958,1014.126648 664.774536,1009.062744  C665.077026,1008.137512 663.293091,1006.125732 665.899963,1006.574402  C667.463074,1006.843323 669.591614,1003.761658 670.637024,1007.311829  C670.946167,1008.361633 671.205872,1009.927734 672.620544,1009.811646  C677.222412,1009.434143 677.487366,1012.023071 676.882568,1015.722534  C676.413574,1017.706299 674.698792,1017.796082 673.208984,1018.750854  C673.509888,1019.700073 673.757812,1020.460388 673.246521,1021.664551  C671.258484,1022.332886 669.516907,1022.665771 667.388916,1022.999268  z\"})),_path195||(_path195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M786.362183,773.072632  C789.052185,771.660400 786.872131,767.811523 789.641602,766.083679  C790.382446,765.619873 790.839417,765.483459 791.684204,765.794067  C791.984131,767.828979 791.857300,769.521606 794.277283,770.273682  C796.459045,770.951599 796.833313,769.888000 797.228394,768.268188  C797.398682,767.569824 798.077087,767.232239 798.772949,767.654358  C799.540894,768.120178 800.042236,768.943665 799.442932,769.718445  C798.200989,771.324280 798.221252,772.458069 799.953186,773.779114  C801.347351,774.842529 799.958130,775.590881 799.272705,776.512878  C797.584961,778.783325 796.121216,781.220337 794.783752,783.795227  C795.506592,784.765747 795.282776,785.609497 795.129883,786.715942  C794.822205,787.547668 794.644470,788.095398 794.233337,788.821533  C791.410950,785.725403 791.679565,782.040039 792.728516,778.140625  C793.301086,777.827515 793.609802,777.664734 793.960327,777.254150  C792.816895,773.359741 788.296814,776.035400 786.362183,773.072632  z\"})),_path196||(_path196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M651.321533,741.140869  C651.000000,739.931580 651.000000,738.865540 651.000000,737.399780  C650.679626,735.614807 649.314209,735.270630 648.221802,734.216797  C647.296021,731.169006 645.433350,731.088135 643.064758,731.760925  C641.702087,732.148010 640.405579,731.485901 639.587036,730.405945  C638.534851,729.017639 640.136230,728.113586 640.425720,726.973022  C642.116455,720.310974 645.762085,723.127625 649.632080,724.986572  C650.270630,726.168213 650.538818,727.338806 650.903503,728.754761  C651.365601,731.284912 653.441162,729.841553 654.750610,730.804688  C655.505188,733.289185 654.010864,735.447693 655.449402,738.073486  C656.564331,740.108459 655.090027,742.712769 651.321533,741.140869  z\"})),_path197||(_path197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M639.991882,742.433838  C640.875366,741.273132 641.726562,740.489014 642.659790,739.819275  C643.782166,739.013855 644.005371,736.666504 645.939941,737.392456  C647.774841,738.081055 646.230896,739.686768 646.392944,740.859863  C646.715454,743.194519 648.609558,742.890625 650.613770,743.000488  C651.113708,743.485474 651.146545,744.009766 651.361206,744.444092  C652.108215,745.955505 655.017639,746.741638 653.601440,748.861511  C652.296997,750.813965 650.724548,748.442627 649.232971,748.215271  C647.411987,747.937561 645.917847,748.102966 645.177917,750.092834  C644.817200,751.062805 645.215332,752.756653 643.389893,752.484924  C641.940125,752.268982 641.272522,751.216309 640.922241,749.734375  C640.384644,747.460327 639.793335,745.223267 639.991882,742.433838  z\"})),_path198||(_path198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M708.706055,673.034546  C709.557678,673.299927 710.592834,673.584473 710.603027,673.902039  C710.741760,678.210144 706.167236,677.568726 704.206299,679.778076  C703.263794,680.839844 701.354431,681.441895 700.422363,679.569946  C698.453003,675.614868 697.164917,678.680481 695.329163,679.938354  C694.331299,680.811584 693.362671,681.155334 692.235962,681.810181  C690.371765,682.481506 689.822998,681.406860 689.364136,679.820618  C690.199036,677.295105 689.901184,674.798523 691.507080,672.508606  C692.853638,671.149780 694.226135,670.811768 696.081787,670.905884  C697.742188,671.196350 698.967102,671.763489 700.588867,672.070129  C702.140259,672.122253 703.221619,671.063171 704.769897,671.783936  C705.000000,671.997559 705.000000,672.000000 705.001221,672.000000  C705.254395,672.230042 705.481506,672.481873 705.808716,672.958862  C705.943848,673.153198 706.333557,673.415649 706.580078,673.438660  C707.368042,673.381897 707.879089,673.179260 708.706055,673.034546  z\"})),_path199||(_path199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M552.779175,886.141724  C553.046875,884.392517 553.035522,882.758850 554.653625,881.782166  C558.887268,884.153015 554.776794,886.914490 555.147278,889.820923  C555.709656,890.762573 555.841919,891.439514 555.626953,892.509155  C555.082764,893.446838 554.477417,893.710693 553.467285,893.684937  C552.875549,893.527039 552.649902,893.451660 552.659302,893.469727  C553.389221,893.853271 554.016785,894.087036 554.448364,894.953247  C554.348450,896.662537 553.367188,897.577148 552.266113,898.792603  C550.999939,899.908813 550.185181,901.124756 548.334412,901.221924  C547.354797,899.975586 546.051697,899.981873 545.035095,899.492249  C543.233398,898.624390 542.488159,897.274658 543.484619,895.480347  C544.411682,893.810913 545.752991,893.762146 547.136658,895.120239  C547.766602,895.738525 548.548828,896.075989 549.325317,895.421692  C550.104309,894.765503 549.818604,893.942627 549.444885,893.169739  C549.373413,893.021973 549.242981,892.900574 549.182800,892.749878  C546.572754,886.219238 546.573364,886.218994 552.779175,886.141724  z\"})),_path200||(_path200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M594.734497,825.893188  C592.985168,825.445740 591.467468,824.938232 589.583984,826.073059  C588.385742,825.571777 588.301270,824.747253 588.820068,823.483276  C593.240540,818.707092 596.008362,813.462646 598.233093,807.871094  C599.394897,804.951111 601.062805,802.377075 604.502441,801.088196  C604.531555,802.097412 604.214966,803.119507 603.820312,804.462952  C602.681580,806.205383 603.293884,808.032410 602.419983,809.851196  C600.284790,811.208130 600.070862,813.117432 599.734985,815.373047  C598.832153,817.294617 598.475708,819.057800 597.266724,820.790161  C596.358582,822.592346 595.663940,824.142334 594.734497,825.893188  z\"})),_path201||(_path201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M803.334106,923.242554  C802.921936,922.683167 802.951660,922.220764 802.749695,922.071167  C799.102905,919.369202 799.941833,915.717712 800.294983,912.049438  C799.625977,911.581299 799.451172,911.093262 799.601929,910.151245  C800.696350,908.664429 801.854919,908.126648 803.668579,908.768188  C806.258118,910.502258 806.209900,914.881836 810.660645,914.034424  C812.633484,914.397522 814.634766,914.668396 812.897644,917.046631  C811.735474,918.637573 813.147644,919.382202 813.856201,920.717163  C814.852356,922.447693 814.282104,923.173218 812.385498,923.209351  C811.269592,921.096863 810.567749,919.127686 808.054077,921.687622  C806.787537,923.170288 805.578125,924.349548 803.334106,923.242554  z\"})),_path202||(_path202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M828.389038,954.000000  C827.940918,951.251770 828.806763,948.045471 824.344971,947.157654  C823.507141,946.746216 823.010620,946.485657 822.257019,946.112549  C822.148743,944.938965 822.112732,942.815613 823.393921,943.544922  C826.514099,945.321045 829.463623,944.108704 832.496582,944.040283  C834.310181,943.999268 836.640686,945.184570 835.611816,946.673279  C833.756897,949.356934 833.749573,954.167908 828.389038,954.000000  z\"})),_path203||(_path203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M756.302063,972.156372  C757.047668,969.151428 759.028198,969.259460 760.637512,971.086182  C761.572510,972.147583 762.211792,972.365906 763.673340,972.027283  C766.865051,973.675415 766.886230,969.344543 769.096252,969.615601  C769.246338,969.831177 769.603638,970.120239 769.557373,970.311768  C768.853027,973.226990 771.074097,977.250061 766.701355,978.783020  C762.412292,980.286682 760.593811,977.348267 758.922424,974.136414  C758.509888,973.343445 757.398926,972.914001 756.302063,972.156372  z\"})),_path204||(_path204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M891.057556,1000.349609  C895.433044,1003.544373 899.939270,1001.433350 904.429871,1001.663025  C903.735046,1003.184692 903.094238,1004.634216 902.411621,1006.063782  C902.055786,1006.809265 900.834473,1007.766235 900.769775,1007.523132  C899.518860,1002.816772 894.284363,1008.077209 892.651794,1004.243225  C892.432312,1003.727661 890.818115,1003.790100 889.956116,1004.403931  C889.264465,1005.884399 892.629700,1006.012817 891.042358,1007.561035  C890.209229,1008.373657 889.243958,1007.517578 888.497070,1006.805603  C887.564453,1005.916687 886.581421,1005.080811 885.339233,1003.971130  C886.950500,1002.508606 888.548401,1001.015747 891.057556,1000.349609  z\"})),_path205||(_path205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M883.748779,989.808228  C884.850464,992.072021 881.678223,994.829407 885.183777,996.533813  C885.913269,996.888489 885.271851,997.752380 884.572510,997.913574  C881.193848,998.692139 882.543091,1001.431763 882.564758,1003.675537  C878.480347,1002.798157 877.371948,999.509644 875.399109,996.864075  C881.647095,996.762878 881.647095,996.762878 877.353394,988.783447  C879.379944,987.799744 880.486267,990.525452 882.644226,989.993652  C883.168274,989.872192 883.334167,989.744324 883.748779,989.808228  z\"})),_path206||(_path206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M806.431396,936.523987  C808.744873,938.337463 811.146729,939.321350 812.876709,941.498413  C814.705688,943.800049 813.425171,945.046082 811.980469,946.224976  C809.982971,947.854736 809.102905,946.111145 808.308411,944.603699  C807.467651,943.008606 806.784729,941.378479 804.983032,940.460449  C803.894531,939.905884 801.394592,940.394287 802.122925,938.172729  C802.602722,936.709290 804.153198,935.529602 806.431396,936.523987  z\"})),_path207||(_path207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M827.001221,872.998779  C827.826355,872.970398 828.668274,872.822388 829.470337,872.941833  C831.014160,873.171814 832.600952,869.929993 833.595886,872.239197  C834.728943,874.869019 832.490417,877.556702 831.700134,880.201416  C831.196472,881.887329 829.540344,882.174072 827.995667,881.913757  C825.764343,881.537720 825.003967,880.065735 825.592163,877.940796  C825.984009,876.525513 826.514587,875.148682 826.990356,873.378540  C826.997559,873.002441 827.000000,873.000000 827.001221,872.998779  z\"})),_path208||(_path208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M786.755249,895.810791  C787.308350,897.428650 787.608582,898.851196 787.954407,900.636841  C788.854919,900.832336 789.709778,900.664612 790.783569,900.248413  C795.495483,902.976013 791.760864,903.607849 789.334534,904.852234  C787.874023,905.605347 786.783264,906.321167 785.594055,906.784119  C784.631531,907.158813 783.596741,906.898071 782.898804,906.074219  C782.000610,905.013916 782.721375,904.321533 783.568359,903.670837  C785.225464,902.397888 785.105896,900.995544 783.955261,899.399536  C782.734131,897.705811 782.675720,896.312988 785.626465,896.009094  C786.160950,895.870117 786.331726,895.742737 786.755249,895.810791  z\"})),_path209||(_path209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M872.763916,1017.134644  C875.095337,1018.703003 877.275146,1016.762878 880.073669,1017.749146  C876.785461,1019.719177 874.206238,1021.757141 874.489441,1025.564941  C874.509888,1025.839966 873.627380,1026.511108 873.450317,1026.423218  C870.325012,1024.871216 869.787231,1021.531494 869.030212,1018.762085  C868.237366,1015.861511 871.125427,1017.469238 872.763916,1017.134644  z\"})),_path210||(_path210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M547.818848,901.365601  C549.087280,900.384155 549.695435,898.872314 551.696472,899.017334  C550.938049,904.067688 546.573486,907.302368 544.571899,912.175903  C540.758484,907.308838 542.686829,903.976746 547.818848,901.365601  z\"})),_path211||(_path211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M803.259399,1006.704468  C803.000000,1007.000000 803.000000,1007.500000 803.000000,1007.750000  C801.642639,1007.360229 800.363464,1006.647339 798.914795,1007.992126  C796.962585,1009.804321 794.489624,1008.784424 792.241211,1008.940613  C791.386780,1009.000000 790.461548,1008.659058 790.613403,1007.612976  C790.686218,1007.111206 791.557251,1006.255798 791.888855,1006.332336  C796.262756,1007.341309 797.762695,1003.323975 800.756836,1001.261963  C801.497437,1001.256897 801.992432,1001.516296 802.743713,1001.887817  C803.224609,1001.864319 803.449219,1001.728699 803.996460,1001.820679  C805.175964,1003.708130 804.581055,1005.101440 803.259399,1006.704468  z\"})),_path212||(_path212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M902.007568,931.377747  C904.486267,932.567749 909.016724,933.157532 905.038330,937.728027  C904.259277,938.622925 905.288818,938.619202 905.931274,938.543701  C906.688416,938.454712 908.186523,938.875793 907.194336,939.378479  C903.504639,941.247803 906.008972,944.966553 904.159607,947.638672  C902.226074,942.722778 902.634644,937.177307 902.007568,931.377747  z\"})),_path213||(_path213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M614.250000,923.002197  C613.167908,921.673767 611.508240,922.281250 610.226318,921.240234  C608.544800,919.977112 607.075256,918.969299 606.751343,916.568115  C608.829651,916.258545 611.055908,915.185242 612.147400,917.749573  C612.567261,918.735840 613.313416,918.450623 614.113831,917.870300  C615.425232,916.919495 616.777466,914.878479 618.168396,918.014893  C619.439331,920.880615 617.144836,920.793579 615.693909,921.530884  C615.444458,921.657654 615.328857,922.047852 615.079407,922.654785  C614.839050,922.995361 614.670715,922.997559 614.250000,923.002197  z\"})),_path214||(_path214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M818.998779,943.001221  C817.258240,941.392151 811.757385,941.263611 816.644714,937.008057  C816.892090,936.792664 816.804260,936.041321 816.687561,935.586914  C816.324341,934.172546 815.370972,932.375488 817.817200,932.211365  C819.984009,932.065918 821.180237,934.000977 822.436096,935.488525  C822.571716,935.649170 822.126587,936.655334 821.978638,936.648682  C817.102661,936.429443 819.594177,940.136047 819.001587,942.587646  C819.002441,942.997559 819.000000,943.000000 818.998779,943.001221  z\"})),_path215||(_path215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M599.394409,916.272644  C597.755493,914.528381 596.510925,913.056702 595.134521,911.284424  C595.569702,910.700195 596.313110,910.029480 596.675598,910.194763  C599.312195,911.396362 601.591370,913.315308 604.966431,912.345398  C606.307861,911.959839 606.922729,913.805847 607.008179,915.606018  C607.021973,915.978027 607.006775,915.993225 607.003418,915.996582  C604.747253,918.178040 602.264099,917.309631 599.394409,916.272644  z\"})),_path216||(_path216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M728.841003,668.709473  C728.752502,669.805115 728.504944,670.610291 728.127502,671.707703  C725.525330,672.510132 723.053162,673.020264 720.651794,673.515808  C719.860229,670.588501 724.020569,671.871094 723.212891,669.202393  C723.833191,665.248047 723.833191,665.248047 728.841003,668.709473  z\"})),_path217||(_path217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M620.924438,738.762573  C623.712585,739.557434 622.110229,741.134277 622.014221,742.677490  C620.527588,743.108643 619.989685,744.027710 619.886169,745.717041  C618.485901,747.465637 616.759949,747.539551 614.546631,747.383179  C613.530823,747.259216 612.977722,747.086670 612.107544,746.559082  C611.222717,745.558716 611.075500,744.737000 611.375000,743.461182  C612.039124,742.398987 612.749084,742.030273 613.904785,741.693970  C616.974304,741.849976 618.261963,739.117920 620.924438,738.762573  z\"})),_path218||(_path218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M553.595825,943.000000  C555.698242,943.156616 556.014893,944.018433 555.120850,945.718384  C555.625000,946.994812 555.161804,947.767090 554.245361,948.748352  C550.366211,949.709351 549.422241,946.137817 547.071472,944.345703  C549.054565,943.604065 551.025452,942.689697 553.595825,943.000000  z\"})),_path219||(_path219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M900.142273,898.634033  C898.566833,899.029785 897.209778,898.934937 896.165283,897.303101  C896.336731,893.760742 898.193420,891.331238 900.613403,889.020386  C900.783081,892.102234 901.598816,895.254761 900.142273,898.634033  z\"})),_path220||(_path220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M708.661499,664.763245  C710.592896,664.969421 711.974426,665.213013 711.988647,667.633179  C710.878479,671.528870 707.910767,669.376221 705.127991,669.724182  C703.713928,668.158081 703.687317,666.883423 704.751282,665.314209  C705.002441,665.000000 705.498779,664.999939 705.746948,665.000000  C706.698303,664.488647 707.456482,664.247498 708.661499,664.763245  z\"})),_path221||(_path221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M845.694702,906.391724  C845.120850,907.655151 844.697571,908.557983 844.226746,909.435364  C843.718811,910.381897 842.976501,911.142090 841.859436,910.553406  C841.018860,910.110291 841.149963,909.197021 841.362793,908.341125  C841.599792,907.388306 841.932190,906.388428 841.847900,905.442444  C841.706970,903.861145 840.611755,901.947083 843.580261,902.054688  C846.416992,902.157532 846.003479,904.171692 845.694702,906.391724  z\"})),_path222||(_path222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M606.617188,791.454651  C608.026428,787.425354 608.013245,783.161621 612.444824,780.976562  C611.933167,785.483826 609.832031,789.641235 607.705078,794.042847  C606.375671,793.695190 606.270935,792.822327 606.617188,791.454651  z\"})),_path223||(_path223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M878.633057,891.912964  C879.522339,893.232483 880.642029,894.603394 879.084045,895.510864  C877.311462,896.543457 875.293518,896.132385 873.468445,895.157104  C872.074219,894.412048 871.874878,893.151855 872.109558,891.791809  C872.354736,890.370728 873.187012,890.310181 874.138672,891.176025  C875.439026,892.359009 876.924622,891.739197 878.633057,891.912964  z\"})),_path224||(_path224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M690.150024,678.591064  C690.033386,680.136597 690.455322,681.067078 691.716675,681.851318  C691.900635,682.891602 691.627136,683.657043 690.312195,683.946899  C688.590088,683.268982 686.929077,682.769409 687.005493,680.346741  C686.604248,679.547119 686.262024,679.058472 685.830200,678.106384  C685.418762,675.258545 685.049988,672.803223 688.378174,671.596924  C691.163696,673.409912 689.600037,676.052856 690.150024,678.591064  z\"})),_path225||(_path225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M868.077698,1004.580017  C869.196472,1005.927124 871.395569,1004.186768 871.834167,1006.399963  C871.940063,1006.934326 871.587341,1007.559570 871.445557,1008.143005  C868.994812,1006.432617 868.546265,1011.025452 866.166199,1009.785461  C863.271790,1008.277588 867.997437,1006.415222 865.845764,1004.816711  C865.044861,1004.221619 864.618164,1002.966003 865.993591,1002.529541  C867.155518,1002.160706 867.585693,1003.362000 868.077698,1004.580017  z\"})),_path226||(_path226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M554.776489,893.323425  C555.040161,892.296204 555.084167,891.592468 555.158936,890.541260  C557.179443,889.476501 559.169006,888.759033 561.507690,887.994568  C560.890076,891.230774 557.821533,892.660095 555.366333,894.992432  C554.635193,894.668152 554.476929,894.197510 554.776489,893.323425  z\"})),_path227||(_path227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M802.960205,923.346436  C804.424316,922.697571 805.848694,922.395142 807.636475,922.046387  C807.731140,922.948425 807.459167,923.895935 807.194275,924.845459  C806.823181,926.175781 807.117493,928.152588 804.775513,927.711365  C802.396118,927.263123 801.985840,925.750610 802.960205,923.346436  z\"})),_path228||(_path228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M777.263428,929.008667  C775.322388,925.223389 775.734375,922.290649 780.631287,921.015259  C783.024719,923.514771 780.674255,924.933533 779.464966,927.002686  C779.089844,927.750854 778.808105,928.135498 778.236328,928.747314  C777.987793,929.004883 777.504883,929.006775 777.263428,929.008667  z\"})),_path229||(_path229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M810.774170,913.747986  C807.673950,916.425171 806.195801,915.508728 804.044922,909.358643  C807.090576,909.177124 807.462341,913.315613 810.774170,913.747986  z\"})),_path230||(_path230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M799.684448,909.805176  C799.998291,910.456177 799.999084,910.896606 799.999878,911.667297  C798.560059,912.637756 797.120178,913.278015 795.338867,913.960327  C794.287292,914.462219 793.755920,914.108154 793.127075,913.309570  C793.058105,911.866394 792.879883,910.623718 794.662476,910.065186  C795.167053,909.855896 795.334167,909.711853 795.751831,909.783936  C796.446350,910.000000 796.890259,910.000000 797.667114,910.000000  C798.384888,909.620544 798.841980,909.485291 799.684448,909.805176  z\"})),_path231||(_path231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M889.036011,1023.841064  C888.201050,1022.075317 887.113708,1020.226135 889.194946,1019.444885  C891.023438,1018.758606 891.545349,1020.813965 891.778015,1022.142883  C892.104858,1024.009277 891.730408,1025.570801 889.036011,1023.841064  z\"})),_path232||(_path232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M789.489624,999.598389  C787.864319,995.564636 791.038513,997.371338 792.321289,997.067261  C793.593750,996.765686 794.583801,997.249817 794.098083,998.961975  C793.187866,1002.170654 791.270691,999.738647 789.489624,999.598389  z\"})),_path233||(_path233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M803.246460,997.217041  C803.414368,994.628418 805.363098,994.519897 806.718933,995.300903  C808.756226,996.474243 806.772705,998.102966 806.257568,999.771912  C805.861755,1000.146423 805.721130,1000.287903 805.290466,1000.503906  C804.807861,1000.526123 804.615234,1000.473877 804.211304,1000.209595  C803.831787,999.143372 803.663635,998.289185 803.246460,997.217041  z\"})),_path234||(_path234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M884.602539,898.005798  C885.000000,898.449036 885.000000,898.890808 885.000000,899.663818  C884.839478,900.015686 884.679504,900.044617 884.518372,900.055603  C882.730896,900.177490 881.437012,902.851501 879.254395,901.039307  C878.678955,900.561462 878.288757,899.985107 878.775391,899.449097  C880.240295,897.835693 882.258179,897.986206 884.602539,898.005798  z\"})),_path235||(_path235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M745.148865,685.283203  C747.150024,684.541687 746.734497,678.492493 750.924683,682.657959  C750.382629,683.889404 749.354553,684.139404 748.237732,684.810669  C748.000000,685.443909 748.000000,685.887878 748.000000,686.664673  C746.862976,686.966614 745.932617,686.545593 745.148865,685.283203  z\"})),_path236||(_path236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M613.759521,746.283936  C615.664917,746.018005 617.343506,746.025513 619.433777,746.052856  C620.151367,747.735229 619.687256,748.872925 617.465210,749.110718  C616.350586,749.132751 615.586182,749.095459 614.440063,749.069641  C613.883301,748.920837 613.708313,748.760559 613.407959,748.267090  C613.248108,747.453613 613.331299,746.994751 613.759521,746.283936  z\"})),_path237||(_path237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M891.191162,994.299438  C891.504944,995.530762 891.201416,996.696167 890.355713,996.477478  C888.400208,995.971924 888.475586,993.685364 887.479431,992.287659  C887.400452,992.176758 887.931091,991.333984 888.242676,991.290466  C890.240295,991.010925 890.729797,992.455139 891.191162,994.299438  z\"})),_path238||(_path238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M795.749146,901.474976  C797.598816,901.179016 798.186829,898.535217 800.253174,899.487793  C797.981995,904.786804 797.981995,904.786804 795.749146,901.474976  z\"})),_path239||(_path239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M800.341309,909.972534  C799.553650,910.011108 799.109802,910.006409 798.332947,910.000854  C798.717712,905.304932 801.181030,906.493042 803.910034,908.636597  C802.895020,909.309692 801.790100,909.619446 800.341309,909.972534  z\"})),_path240||(_path240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M884.248840,989.777100  C883.997559,990.000000 883.500000,990.000000 883.251221,990.000000  C883.083862,989.030518 882.929016,987.955200 883.304138,987.117188  C883.822021,985.960022 884.694031,984.886719 886.043274,984.562073  C886.392639,984.478027 887.083252,984.804871 887.249207,985.130432  C888.285400,987.163940 885.809204,986.773376 885.333618,987.795288  C885.059937,988.383484 884.778259,988.967957 884.248840,989.777100  z\"})),_path241||(_path241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M606.482178,791.044312  C606.950256,791.841858 607.055481,792.628296 607.273132,793.797607  C607.385559,794.180420 607.237427,794.594360 607.150635,794.796021  C605.448303,794.430420 602.860596,794.794739 602.641724,792.740723  C602.443604,790.882263 604.665161,791.099243 606.482178,791.044312  z\"})),_path242||(_path242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M680.224426,1016.253784  C680.119812,1015.692444 680.311829,1015.436584 680.788025,1015.117493  C681.804688,1015.111023 682.701477,1015.034973 683.393372,1015.375305  C684.538574,1015.938599 686.204712,1016.936951 685.350708,1018.215942  C684.210938,1019.922913 683.238037,1017.889465 682.223022,1017.333862  C681.651611,1017.021118 681.041504,1016.779053 680.224426,1016.253784  z\"})),_path243||(_path243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M879.953735,1021.781616  C880.606873,1020.099365 881.619080,1019.297241 883.080933,1019.521179  C883.770691,1019.626770 884.093140,1020.576416 883.596313,1021.076660  C882.416870,1022.264648 881.149109,1023.441223 879.701416,1024.223389  C879.405762,1024.383057 879.713684,1022.852844 879.953735,1021.781616  z\"})),_path244||(_path244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M654.832642,730.702087  C653.769531,731.278381 652.492981,731.900879 651.326416,731.737610  C650.030457,731.556152 648.076721,730.919861 650.688232,729.056641  C652.412598,728.970093 653.781006,729.055725 654.832642,730.702087  z\"})),_path245||(_path245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M866.993286,913.766663  C867.968689,916.309814 866.342163,915.973572 865.108765,915.774658  C864.090149,915.610229 863.074585,914.797119 863.675781,913.762390  C864.345581,912.609558 865.656921,913.008972 866.993286,913.766663  z\"})),_path246||(_path246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M812.063843,923.331604  C812.892944,922.902344 813.658264,922.630005 813.949463,921.314697  C815.156494,921.201233 817.268921,920.755493 816.239380,922.905090  C815.537292,924.370972 814.000854,926.203613 812.063843,923.331604  z\"})),_path247||(_path247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M876.880981,977.873657  C878.798645,976.943726 879.570923,977.816406 879.773315,979.320007  C879.899231,980.255554 879.259216,980.897766 878.322144,980.771851  C876.812500,980.569092 875.955017,979.786621 876.880981,977.873657  z\"})),_path248||(_path248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M907.639893,971.075195  C909.651489,972.748657 907.362366,974.510254 907.995239,976.635986  C905.558655,975.318787 905.126953,973.391846 907.639893,971.075195  z\"})),_path249||(_path249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M900.787231,985.661011  C898.722839,987.499817 898.275635,985.536316 897.514587,984.457642  C897.388306,984.278687 897.789185,983.386353 898.061890,983.323242  C899.679565,982.949463 900.517029,983.825989 900.787231,985.661011  z\"})),_path250||(_path250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M705.000122,671.664673  C703.883789,672.627502 702.767578,673.257446 701.326904,673.943726  C699.442566,670.653564 700.086243,668.846436 704.590454,669.725037  C705.000061,670.443909 705.000183,670.887817 705.000122,671.664673  z\"})),_path251||(_path251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M790.249390,922.000000  C788.571655,921.266846 787.767883,920.170166 788.190063,918.519897  C788.265869,918.223389 788.898254,917.807251 789.182678,917.868652  C791.066528,918.274780 790.982178,919.815369 790.997253,921.635376  C790.997559,922.000000 790.498779,922.000000 790.249390,922.000000  z\"})),_path252||(_path252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M857.231323,1015.249023  C856.999817,1014.556702 856.999573,1014.111877 856.998413,1013.333557  C858.414124,1013.083496 860.432678,1012.884827 860.395386,1014.723572  C860.358521,1016.541931 858.667358,1015.970764 857.231323,1015.249023  z\"})),_path253||(_path253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M653.042542,716.333252  C654.187805,716.256226 655.785156,715.359619 656.445679,717.050293  C656.697693,717.695312 656.153625,718.357178 655.468750,718.518311  C653.979248,718.868652 653.433228,717.862305 653.042542,716.333252  z\"})),_path254||(_path254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M708.754333,672.742615  C708.523682,674.025574 707.797302,674.744629 706.318665,674.967163  C705.643616,674.950073 705.355530,674.779358 705.062866,674.252808  C705.000061,673.555542 705.000061,673.111084 705.001282,672.333313  C706.171509,672.161743 707.340576,672.323486 708.754333,672.742615  z\"})),_path255||(_path255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M902.694214,924.041748  C903.794067,924.459717 904.733337,924.904114 904.539246,926.028503  C904.367554,927.023193 903.412537,926.885742 902.343567,926.997192  C901.699646,925.974121 900.447205,924.819946 902.694214,924.041748  z\"})),_path256||(_path256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M602.582886,810.012207  C602.293579,808.416382 601.218689,806.503906 603.379272,804.901367  C603.704529,806.515625 604.374451,808.362366 602.582886,810.012207  z\"})),_path257||(_path257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M831.205566,923.680237  C830.119080,923.493469 829.238098,922.991821 828.178589,922.245056  C828.000000,922.000000 828.001099,921.501221 828.001770,921.251831  C827.873901,920.835571 827.745361,920.668701 827.812012,920.253296  C828.755493,920.003235 829.503662,920.001648 830.625916,920.000000  C831.000000,920.444458 831.000000,920.888916 831.000000,921.666687  C831.378845,922.382324 831.515991,922.837402 831.205566,923.680237  z\"})),_path258||(_path258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M871.246460,930.431702  C872.939209,931.348694 873.322388,932.532654 872.497864,934.312744  C871.790833,932.935791 869.589050,932.471497 871.246460,930.431702  z\"})),_path259||(_path259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M673.291870,1022.124512  C672.999939,1021.248840 672.999878,1020.497681 672.999878,1019.370850  C674.081543,1019.746155 675.971069,1019.848206 675.744385,1021.705139  C675.564514,1023.178101 674.441589,1022.566895 673.291870,1022.124512  z\"})),_path260||(_path260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M905.027588,951.294922  C905.589417,950.370483 906.178833,949.740906 906.768188,949.111328  C906.880066,950.377319 908.796814,951.712646 906.317200,952.945435  C905.692566,952.529907 905.373779,952.059814 905.027588,951.294922  z\"})),_path261||(_path261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M905.303711,1024.173950  C906.251221,1023.044373 907.099426,1022.886963 907.640503,1024.131836  C907.782288,1024.458252 907.590332,1025.194092 907.306580,1025.394165  C906.234497,1026.149902 905.535217,1025.692749 905.303711,1024.173950  z\"})),_path262||(_path262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M597.391724,820.963989  C597.256775,819.189392 597.989502,817.544556 599.321655,815.870239  C599.764099,817.725647 599.295776,819.505737 597.391724,820.963989  z\"})),_path263||(_path263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M684.371826,1011.335083  C682.821411,1011.024597 681.743103,1010.289917 681.595215,1008.536987  C683.566650,1008.537415 684.368408,1009.505127 684.371826,1011.335083  z\"})),_path264||(_path264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M827.947144,919.683960  C828.007324,920.004883 828.004883,920.503662 828.003662,920.753052  C826.852295,920.893921 825.776184,920.595459 825.460632,919.324890  C825.390869,919.043884 825.812805,918.423096 826.135864,918.303406  C827.056763,917.962341 827.578430,918.547119 827.947144,919.683960  z\"})),_path265||(_path265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M660.666687,705.997681  C661.005798,707.009094 663.268616,707.816589 661.731750,708.695190  C660.442017,709.432556 659.457397,708.046143 659.041138,706.329956  C659.444458,705.999268 659.888916,705.998535 660.666687,705.997681  z\"})),_path266||(_path266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M880.811157,1028.510254  C880.711914,1026.771118 881.787842,1027.019531 882.709412,1027.268188  C882.982910,1027.342041 883.365967,1028.166260 883.252686,1028.321777  C882.688843,1029.096436 881.842651,1028.944336 880.811157,1028.510254  z\"})),_path267||(_path267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M873.155029,1010.875122  C873.705383,1011.706787 873.789001,1012.404907 872.949829,1012.526123  C872.032166,1012.658630 871.379395,1012.012207 871.505371,1011.092102  C871.620972,1010.248352 872.319336,1010.331970 873.155029,1010.875122  z\"})),_path268||(_path268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M612.996887,775.394897  C613.518555,774.762146 614.000977,774.494812 614.734436,774.112244  C614.845276,775.384949 615.482971,777.041931 613.294800,777.903687  C612.942566,777.227600 612.950073,776.493958 612.996887,775.394897  z\"})),_path269||(_path269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M893.788086,1028.243896  C894.679443,1028.848511 894.618469,1029.405396 893.901184,1029.683105  C893.573669,1029.810059 892.849121,1029.633667 892.704590,1029.373047  C892.303589,1028.649902 892.820435,1028.304443 893.788086,1028.243896  z\"})),_path270||(_path270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M904.787842,990.243958  C905.678772,990.848694 905.618408,991.406067 904.900940,991.683838  C904.573547,991.810669 903.849060,991.633911 903.704468,991.373169  C903.303467,990.650085 903.820068,990.304382 904.787842,990.243958  z\"})),_path271||(_path271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M870.476868,922.278320  C869.446899,922.542419 869.132568,922.025879 869.261597,921.358276  C869.321960,921.046326 869.904480,920.548950 870.126770,920.607117  C870.856140,920.798157 870.870300,921.440674 870.476868,922.278320  z\"})),_path272||(_path272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M778.324463,929.002014  C777.991638,928.560974 777.995483,928.117004 777.999634,927.340210  C778.680420,926.403931 779.452454,926.226807 780.661499,926.752563  C780.999878,927.164246 780.999695,927.330872 780.998535,927.747559  C780.436157,928.838440 779.578857,928.989258 778.324463,929.002014  z\"})),_path273||(_path273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M820.667236,946.007385  C820.804260,946.995789 820.564392,947.975159 819.209290,947.724060  C818.960327,947.677917 818.572632,947.341858 818.575745,947.144714  C818.594849,945.951782 819.592468,946.161133 820.667236,946.007385  z\"})),_path274||(_path274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M793.786255,777.115845  C794.630127,777.105469 795.590271,777.187134 795.429138,777.940735  C795.156860,779.213684 794.229126,778.447083 793.265625,778.112305  C793.119263,777.691284 793.311768,777.436035 793.786255,777.115845  z\"})),_path275||(_path275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M562.897034,886.269592  C563.418762,885.960266 563.824951,885.887512 564.539185,885.842712  C564.984436,887.485840 563.812195,887.660828 562.315125,887.851868  C562.240234,887.398804 562.510925,886.952515 562.897034,886.269592  z\"})),_path276||(_path276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M886.888916,892.781006  C886.157227,892.827271 885.642456,892.692139 885.843567,892.103821  C886.061401,891.466553 886.652039,891.175232 887.255981,891.595764  C887.403076,891.698120 887.187378,892.321472 886.888916,892.781006  z\"})),_path277||(_path277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M554.621704,893.002136  C554.990906,893.457703 554.985535,893.915466 555.005737,894.716064  C555.031250,895.058899 554.791931,895.239929 554.643311,895.241211  C553.769348,894.696777 553.044006,894.151123 552.159363,893.302734  C552.749084,893.001404 553.498108,893.002869 554.621704,893.002136  z\"})),_path278||(_path278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M897.967651,1018.261780  C897.378540,1018.401855 896.970276,1018.352844 896.562073,1018.303833  C896.727356,1017.949341 896.813782,1017.379517 897.073975,1017.284180  C897.651733,1017.072510 898.354797,1017.048645 897.967651,1018.261780  z\"})),_path279||(_path279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M692.349487,681.991821  C692.476624,680.975464 693.202515,680.255310 694.681274,680.032715  C694.881409,681.413391 694.046875,681.996277 692.349487,681.991821  z\"})),_path280||(_path280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M904.802246,1010.775024  C905.300049,1009.976501 905.862366,1010.044739 906.337830,1010.551086  C906.474548,1010.696716 906.481262,1011.200806 906.347961,1011.323120  C905.758972,1011.863708 905.262024,1011.537354 904.802246,1010.775024  z\"})),_path281||(_path281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M910.646973,1025.574829  C911.384033,1025.368896 911.651978,1025.626221 911.537598,1026.199097  C911.513855,1026.317871 911.345154,1026.477783 911.224854,1026.495728  C910.646423,1026.581787 910.404297,1026.300171 910.646973,1025.574829  z\"})),_path282||(_path282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M889.573792,1015.353760  C889.367188,1014.614929 889.625549,1014.346863 890.199280,1014.461487  C890.318420,1014.485229 890.478577,1014.654419 890.496460,1014.774963  C890.582642,1015.354431 890.300659,1015.597168 889.573792,1015.353760  z\"})),_path283||(_path283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M885.356384,1022.105225  C885.644470,1022.559509 885.757568,1023.158325 885.820496,1023.762390  C885.829041,1023.844055 885.585999,1023.952026 885.459473,1024.047852  C885.361511,1023.449036 885.263611,1022.850159 885.356384,1022.105225  z\"})),_path284||(_path284=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M884.955566,1007.551147  C884.283630,1007.182251 884.274658,1006.811035 884.755554,1006.483337  C884.856140,1006.414795 885.089233,1006.417542 885.187256,1006.489014  C885.655823,1006.830750 885.638916,1007.201538 884.955566,1007.551147  z\"})),_path285||(_path285=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M860.448853,1008.955505  C860.817871,1008.283569 861.188843,1008.275024 861.516357,1008.755859  C861.584900,1008.856445 861.581970,1009.089478 861.510498,1009.187378  C861.168762,1009.655884 860.798157,1009.638977 860.448853,1008.955505  z\"})),_path286||(_path286=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M907.821411,994.162720  C908.340759,994.462708 908.643494,994.939209 908.970703,995.708374  C908.111145,995.798950 906.983643,995.800720 907.821411,994.162720  z\"})),_path287||(_path287=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M894.551147,988.044800  C894.182068,988.717468 893.810852,988.724731 893.483093,988.244568  C893.414429,988.143982 893.417236,987.910767 893.488708,987.812805  C893.830627,987.343994 894.201477,987.361572 894.551147,988.044800  z\"})),_path288||(_path288=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M895.448853,1011.955566  C895.817810,1011.283203 896.188721,1011.275513 896.516174,1011.755981  C896.584839,1011.856567 896.582092,1012.089539 896.510742,1012.187500  C896.168884,1012.656128 895.798279,1012.638611 895.448853,1011.955566  z\"})),_path289||(_path289=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M796.027954,992.295898  C796.882263,992.194153 797.997742,992.183594 797.210144,993.820374  C796.685303,993.529785 796.370544,993.059509 796.027954,992.295898  z\"})),_path290||(_path290=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M714.575134,673.353455  C714.367432,672.613770 714.625183,672.345520 715.199829,672.461121  C715.319092,672.485107 715.478882,672.654114 715.497070,672.774780  C715.584167,673.354736 715.302551,673.597656 714.575134,673.353455  z\"})),_path291||(_path291=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M875.448669,926.955566  C875.817932,926.283264 876.189087,926.274597 876.516846,926.755737  C876.585449,926.856384 876.582581,927.089417 876.511047,927.187500  C876.169128,927.656494 875.798218,927.639038 875.448669,926.955566  z\"})),_path292||(_path292=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M566.839966,883.375977  C566.104736,882.651001 566.094849,881.817383 567.253418,880.982666  C567.410645,881.639832 567.251465,882.419861 566.839966,883.375977  z\"})),_path293||(_path293=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M906.710571,965.042236  C906.997498,965.442322 906.997498,965.889526 906.993896,966.672241  C906.356506,966.899780 905.595154,966.836121 905.557617,966.040588  C905.543335,965.737732 906.117554,965.407227 906.710571,965.042236  z\"})),_path294||(_path294=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M863.448486,952.955627  C863.817749,952.282593 864.189209,952.274292 864.517212,952.755554  C864.585876,952.856262 864.583313,953.089722 864.511780,953.187683  C864.169678,953.657104 863.798523,953.639587 863.448486,952.955627  z\"})),_path295||(_path295=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M572.474365,872.400269  C572.085754,871.643494 572.081299,870.745361 573.334961,870.034302  C573.344788,870.678772 573.038574,871.447937 572.474365,872.400269  z\"})),_path296||(_path296=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M804.350220,1002.088379  C803.997559,1002.007324 803.498779,1002.004272 803.249390,1002.002136  C803.121277,1001.690430 803.314026,1001.434814 803.790405,1001.115356  C804.189819,1000.842712 804.377197,1000.687805 804.866089,1000.736328  C805.270386,1001.447021 805.128479,1001.861816 804.350220,1002.088379  z\"})),_path297||(_path297=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M882.625000,1005.788086  C882.182739,1006.329773 882.168762,1006.209167 882.625000,1005.788086  z\"})),_path298||(_path298=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M864.813965,999.121948  C864.884705,999.398010 864.769409,999.795959 864.654114,1000.193970  C863.974792,999.895813 864.391907,999.567383 864.813965,999.121948  z\"})),_path299||(_path299=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M883.214294,1013.625610  C882.991333,1013.670959 882.863525,1013.614380 882.735718,1013.557861  C882.927002,1013.546448 883.118225,1013.535034 883.214294,1013.625610  z\"})),_path300||(_path300=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M858.478943,1020.464722  C858.520142,1020.442810 858.437744,1020.486633 858.478943,1020.464722  z\"})),_path301||(_path301=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M875.464355,897.521667  C875.442444,897.480591 875.486267,897.562744 875.464355,897.521667  z\"})),_path302||(_path302=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M795.884949,909.786804  C795.835388,910.000000 795.668274,910.000000 795.250610,910.000000  C794.999878,909.830994 794.999756,909.662048 795.001038,909.239380  C795.310486,909.112671 795.565491,909.308655 795.884949,909.786804  z\"})),_path303||(_path303=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M800.998779,1001.001221  C800.891418,1000.877441 800.785217,1000.752441 800.679077,1000.627441  C800.752441,1000.671204 800.825806,1000.714966 800.950806,1000.878174  C801.002441,1000.997559 801.000000,1001.000000 800.998779,1001.001221  z\"})),_path304||(_path304=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M805.226624,1000.752380  C804.997620,1001.002441 804.500000,1001.000916 804.251221,1000.999268  C804.001648,1000.830872 804.000916,1000.664246 804.000061,1000.247559  C804.166687,999.997681 804.333313,999.997803 804.750000,999.998901  C805.151855,1000.167419 805.303711,1000.334900 805.226624,1000.752380  z\"})),_path305||(_path305=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M801.465698,929.521790  C801.443909,929.480591 801.487549,929.562988 801.465698,929.521790  z\"})),_path306||(_path306=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M720.002441,1000.998413  C720.004883,1000.996765 720.424377,1001.256042 720.424377,1001.256042  C720.424377,1001.256042 720.100525,1001.242554 720.048584,1001.123718  C719.996704,1001.004883 720.000000,1001.000000 720.002441,1000.998413  z\"})),_path307||(_path307=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M807.478271,930.465576  C807.519226,930.443970 807.437317,930.487183 807.478271,930.465576  z\"})),_path308||(_path308=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M787.949280,987.880737  C788.000000,988.000000 787.577881,987.746033 787.577881,987.746033  C787.577881,987.746033 787.898560,987.761536 787.949280,987.880737  z\"})),_path309||(_path309=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M998.707764,790.798340  C998.985596,791.448547 998.986877,791.892273 998.984314,792.668701  C998.166687,793.180420 996.903442,793.624634 997.513245,794.427673  C1000.684082,798.603699 997.865356,800.164856 994.439697,801.444824  C997.870728,805.776184 1006.777649,806.834106 1002.010254,815.648560  C999.187683,817.216919 1000.549255,821.566589 996.751160,822.425293  C997.172913,819.974182 995.716370,818.705200 993.271912,818.322876  C996.312866,815.099731 996.176758,809.092712 993.002686,805.987122  C989.530884,802.590454 986.561890,798.866089 984.052368,794.352478  C982.768372,789.165039 986.752258,788.994202 989.836792,787.540771  C995.046204,784.421875 995.046204,784.421875 998.707764,790.798340  z\"})),_path310||(_path310=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M990.420105,974.002197  C987.459045,969.020203 987.167419,968.752136 981.348206,966.191162  C983.381714,963.469543 985.701538,963.544739 988.647400,964.988647  C990.090332,966.825745 991.498596,967.629272 993.501770,966.327026  C996.687378,964.256042 1003.055176,966.421753 1002.115540,969.311340  C1001.296509,971.829956 1006.073792,975.176147 1000.855164,976.917847  C999.973999,977.211975 1002.632874,980.570435 1000.505676,982.716675  C999.342346,983.890381 998.987915,985.405457 997.482605,983.235229  C996.617249,981.987610 995.198792,982.081726 993.882202,981.932129  C992.318726,981.754333 991.344788,980.643005 991.515625,979.254639  C991.746155,977.381775 993.214111,978.496399 994.254272,978.525391  C997.548035,978.617126 997.202515,974.644165 999.572754,973.670349  C998.824219,972.464966 997.667358,970.323486 996.482666,972.028687  C994.826477,974.412720 992.865601,973.841309 990.420105,974.002197  z\"})),_path311||(_path311=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M982.270081,786.329590  C982.001953,785.249023 981.999023,784.500122 981.994385,783.376831  C981.447266,782.379456 981.223694,781.659851 981.495605,780.484009  C984.361694,779.356140 987.388794,780.020996 989.811279,777.695984  C991.019470,776.536438 993.026184,776.975464 994.032166,778.708191  C995.157227,780.646179 995.846436,782.791687 993.757019,784.485596  C992.625000,785.403442 991.330200,786.121033 990.067078,787.513062  C987.146118,788.651733 984.773621,788.104004 982.270081,786.329590  z\"})),_path312||(_path312=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M966.999878,927.250610  C968.999390,926.835022 970.878235,928.021851 973.076599,926.432739  C974.934692,925.089600 977.301453,926.039001 978.214233,928.573181  C979.420654,931.922791 976.261108,930.781433 975.014160,931.405151  C973.887634,931.968506 972.370239,931.708801 971.177979,932.190369  C967.607788,933.632141 966.684387,932.050720 967.000305,928.404663  C967.000000,927.995117 966.999695,927.498779 966.999878,927.250610  z\"})),_path313||(_path313=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M916.309204,799.215698  C913.209900,798.336975 913.886719,796.474670 914.678711,794.785828  C915.495667,793.043823 916.270386,790.757263 918.324402,790.529602  C920.314026,790.309021 921.269653,792.264465 921.885864,794.065979  C922.535095,795.964050 923.215576,797.841309 921.266602,799.790771  C919.443848,800.564575 918.013306,800.144043 916.309204,799.215698  z\"})),_path314||(_path314=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M981.712769,786.155884  C984.398621,786.330933 986.792419,786.664062 989.593079,786.998596  C990.467957,786.819885 990.851440,786.931030 991.075195,787.666870  C989.822510,790.990967 984.336975,788.898682 984.260376,793.746582  C981.697266,791.923218 979.620300,789.769775 981.712769,786.155884  z\"})),_path315||(_path315=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M982.231812,779.692810  C982.000671,780.750549 981.998901,781.501160 981.994873,782.627075  C978.388611,783.472900 976.395508,782.314514 976.967834,778.267273  C977.169373,776.842468 976.999756,775.365112 976.999023,773.457092  C978.664368,773.724792 979.523438,775.227539 980.749695,776.809814  C982.055237,777.448792 982.633606,778.187622 982.231812,779.692810  z\"})),_path316||(_path316=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M916.155518,799.300476  C917.490417,799.158325 918.983215,799.316650 920.739258,799.738708  C919.084717,804.011719 917.783325,800.822815 916.155518,799.300476  z\"})),_path317||(_path317=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M984.967285,998.681274  C983.588379,998.879883 983.003113,998.047241 983.007935,996.349487  C984.025574,996.475769 984.745117,997.202209 984.967285,998.681274  z\"})),_path318||(_path318=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M1013.998779,976.001221  C1013.121704,975.841919 1011.951965,976.335510 1011.588623,975.059387  C1011.524902,974.835754 1012.109009,974.427795 1012.694580,974.050903  C1012.995117,973.996765 1013.000000,974.000000 1013.002441,974.001221  C1013.634216,974.280884 1014.097656,974.710205 1014.138550,975.698303  C1014.001038,975.997559 1014.000000,976.000000 1013.998779,976.001221  z\"})),_path319||(_path319=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M916.572876,885.353516  C916.364441,884.611084 916.625000,884.343506 917.200439,884.458191  C917.320129,884.482117 917.481140,884.651611 917.499084,884.772461  C917.585571,885.354187 917.302795,885.597900 916.572876,885.353516  z\"})),_path320||(_path320=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M952.645752,913.573547  C953.385071,913.366638 953.652588,913.625610 953.538391,914.199341  C953.514648,914.318481 953.345581,914.478760 953.225037,914.496643  C952.645142,914.582947 952.402588,914.300659 952.645752,913.573547  z\"})),_path321||(_path321=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M941.521362,906.535645  C941.479431,906.558044 941.563232,906.513245 941.521362,906.535645  z\"})),_path322||(_path322=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M278.298889,850.727722  C275.717255,850.067749 273.472412,849.050232 271.153259,848.247375  C269.860168,847.799744 268.410736,847.884460 267.645844,849.278992  C266.876007,850.682617 268.045074,851.331543 269.005432,852.009216  C271.563812,853.814514 271.134186,855.210632 268.289246,855.915527  C266.726990,856.302734 265.132751,856.708740 265.143219,858.490051  C265.162964,861.848572 262.975311,862.384705 260.225189,862.859741  C258.945068,863.601135 258.039825,863.177856 256.922577,862.294067  C256.648254,857.712830 256.793152,853.486633 258.371002,849.353333  C259.734131,845.782288 260.431427,841.930969 260.102631,838.118225  C259.594513,832.226196 261.764954,826.377869 260.000610,820.433472  C259.425751,818.496582 259.856293,815.748291 261.091339,814.188599  C265.052795,809.185791 264.260132,802.530762 267.526276,797.265503  C268.885223,795.074768 268.338318,791.936584 268.055115,789.043640  C264.560028,790.748169 266.620117,798.220398 259.855377,795.572510  C257.791626,791.127075 260.573669,786.718689 258.939850,783.104919  C258.509003,786.718628 256.385590,790.372559 255.087433,794.301147  C254.250824,796.832947 254.547516,798.614380 258.200317,798.214233  C259.727905,804.740784 255.668518,811.345276 248.692352,813.684387  C247.328033,813.120544 246.878281,812.217773 246.269897,811.000977  C244.343323,807.528198 242.948486,809.198792 241.317734,811.268311  C240.469543,811.892212 239.805008,812.093689 238.748413,812.192505  C234.201019,811.887024 236.683060,808.074890 235.152832,805.965698  C233.783661,802.328369 233.681290,799.817200 237.946945,798.338623  C240.625839,797.409973 241.047745,794.207764 241.051086,791.549133  C241.055634,787.916687 241.516281,784.315186 241.534988,780.307739  C241.545883,778.861938 241.617340,777.810120 242.232620,776.455078  C242.619095,775.905029 242.810379,775.713135 243.362976,775.338867  C244.233627,775.007996 244.752747,774.948792 245.650604,775.063599  C248.310120,776.169556 248.250381,778.224548 248.189880,780.234558  C248.085876,783.689087 248.544632,787.067993 249.142426,790.974915  C250.657242,788.213318 251.306763,785.838318 251.566879,783.340820  C251.743332,781.646606 252.373550,780.218079 253.573807,778.917664  C258.701019,773.362793 259.562103,767.265930 256.179779,760.112183  C255.689270,753.901794 254.861801,747.946106 259.820709,742.929565  C262.822571,743.660583 262.335358,745.968628 262.490295,748.307007  C262.449646,749.103821 262.144104,749.770203 263.424866,749.511475  C268.940063,751.908691 267.437500,756.818787 268.035706,761.334473  C269.404419,766.120667 265.881927,770.108337 266.955627,774.537415  C267.795929,770.638428 268.408356,766.715454 268.828857,762.417969  C270.768860,759.471252 268.143341,756.349365 270.069092,753.461548  C273.967590,749.303101 274.285736,743.951355 276.478577,739.051208  C277.206299,738.333679 277.828369,738.134155 278.822754,738.130615  C279.527283,738.081055 280.095856,738.862244 280.305420,737.608643  C280.973724,731.895630 281.914215,726.535889 283.024170,720.831665  C285.384430,715.739502 286.613983,710.970886 285.588959,705.561157  C283.653320,695.345581 286.042603,685.368591 288.289703,675.062256  C291.632843,672.028870 292.808472,674.057861 293.768280,677.233154  C294.431732,679.505371 292.799957,681.048828 293.002991,682.805054  C293.287354,680.527161 294.471954,678.830017 296.988281,679.424011  C299.519592,680.021484 299.500977,682.364685 298.938538,684.307739  C297.735992,688.462158 296.891052,692.566162 298.414764,697.543274  C301.713959,692.272583 300.974640,686.535217 303.039093,681.251831  C305.912048,676.891785 307.750824,672.547180 308.107971,667.627075  C308.227020,665.986877 308.534851,664.346130 309.748535,662.623474  C315.337158,660.157410 315.938782,660.446899 317.739868,665.778687  C318.107025,666.865601 318.609589,667.914734 319.125977,669.400574  C319.536987,671.998962 319.443420,674.200684 319.308563,676.802490  C319.150055,677.982239 318.902344,678.726013 318.585052,679.837769  C318.553040,681.205872 318.467102,682.192444 318.233398,683.527710  C316.559296,686.974854 314.831512,690.055969 317.397308,693.871582  C319.831482,701.264160 318.993652,708.143188 316.267395,715.268799  C315.967102,715.814453 315.837585,716.023376 315.501648,716.523926  C314.097534,734.166199 309.233978,750.906067 306.597290,768.386902  C308.588379,768.547974 310.714996,768.265564 312.290009,770.312012  C313.177399,771.579407 313.779388,772.843689 313.142273,773.824951  C310.921631,777.245056 312.858368,778.474182 316.031128,779.565674  C318.607758,784.767395 315.286926,789.302490 315.056061,794.100098  C314.924103,796.842407 313.620575,799.528320 314.456757,802.403931  C314.738586,803.373169 314.791840,804.463806 314.181976,805.305908  C310.534241,810.343140 311.684631,816.128601 311.521484,822.065674  C311.489960,823.136414 311.585205,823.842224 311.765808,824.908142  C311.705872,826.045654 311.422821,826.699036 310.366882,827.060120  C309.102631,827.145020 307.597778,826.738770 307.767975,828.206726  C308.657196,835.876831 303.036407,842.139893 303.363617,849.815674  C303.515869,853.386597 299.228027,856.138062 299.586456,860.297974  C299.615692,860.637207 298.715668,861.302856 298.180023,861.386902  C297.372742,861.513611 297.127502,860.709229 297.074768,860.043213  C296.902496,857.868103 296.922943,855.793518 298.389160,853.879089  C301.287842,850.094238 301.498688,845.723938 300.668823,840.721924  C298.005768,847.133545 294.520874,852.703064 292.790741,859.072632  C292.493011,860.168823 292.132233,862.173584 290.270477,861.290955  C288.473389,860.438965 290.207275,859.098755 290.251495,857.963013  C290.470184,852.348816 294.083679,848.160461 296.571899,843.723083  C298.944458,839.492004 297.849884,834.506531 300.731842,830.633667  C301.261871,829.921387 300.906433,828.199951 299.625458,828.574768  C297.980316,829.056213 295.905151,829.949951 296.157776,832.221252  C296.394257,834.347534 297.067780,836.281250 295.870239,838.451416  C294.346649,841.212341 293.858124,844.147644 290.415894,846.080505  C287.004639,847.996033 286.296967,852.781433 286.534729,856.569763  C286.753174,860.051025 283.935150,861.713257 283.421051,864.041138  C282.440033,868.483154 276.356415,870.257446 278.129852,876.048035  C278.979828,878.823486 275.719849,878.384705 274.733826,878.609009  C271.499176,870.706726 279.187775,866.587585 280.451508,860.149048  C280.851685,858.110107 284.075073,858.018494 283.238922,855.214722  C282.142365,854.188599 282.418945,853.280151 282.955627,852.056641  C283.820404,850.853882 284.638428,850.017761 284.564575,848.396118  C284.590057,846.529480 284.741730,844.992615 285.306091,843.624329  C288.651245,835.514282 287.923492,826.651062 289.948334,818.002258  C289.363159,816.605957 288.775787,815.615784 288.096222,814.673767  C286.539276,812.515381 285.091553,810.409241 288.838501,808.857605  C290.252808,808.271912 289.792786,806.484009 290.825134,805.196899  C297.153198,800.702087 297.153198,800.702087 294.599335,792.566406  C294.090424,790.945190 294.114014,790.817810 295.549225,787.436340  C291.320190,787.540344 290.859833,788.006592 291.925751,792.357605  C292.924194,796.432983 293.336121,800.402100 291.351288,804.617676  C289.263306,806.730408 287.866089,803.558777 285.936218,804.527039  C288.193085,810.477600 283.629364,815.200562 282.866760,821.040344  C283.503113,824.525513 281.820374,827.161194 280.972839,829.948730  C279.772278,833.897644 278.728149,837.850586 278.524750,842.377197  C278.259216,844.634216 279.359314,846.314575 279.242798,848.566284  C279.106293,849.504944 278.903687,850.002014 278.298889,850.727722  z\"})),_path323||(_path323=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M350.848328,811.682068  C351.219147,819.933350 350.360626,827.751465 348.273071,835.748291  C346.261230,835.768250 345.305481,834.548218 345.150421,832.998413  C344.869598,830.191345 343.294189,828.090698 341.758057,825.787415  C340.738037,828.615662 341.433105,831.344543 341.810638,834.064392  C342.111237,836.230042 342.511444,838.391418 340.327454,840.308838  C339.533752,840.605103 339.056854,840.584534 338.291626,840.226685  C338.207764,837.001770 341.753235,832.752075 334.894501,832.425903  C333.558838,832.362427 333.877716,830.129333 334.053497,828.932312  C334.550201,825.550171 333.061737,823.320068 330.182983,821.321960  C329.541229,819.251404 330.166473,817.705383 331.117798,815.879028  C331.616608,815.004456 332.428253,814.346924 332.187286,813.883362  C329.494141,808.702759 332.831512,802.647217 329.619873,797.214050  C328.265381,791.616394 326.929596,786.385681 326.075592,780.697388  C327.988373,777.832153 328.860229,775.251831 327.963074,772.015686  C327.450684,770.167297 327.911652,768.039246 328.281281,766.081970  C328.630096,764.235046 329.804382,763.079590 331.798096,763.335876  C333.729004,763.584045 334.002350,765.108948 333.952271,766.702759  C333.911072,768.014160 333.465851,769.334412 333.947388,770.250427  C335.340973,764.593567 331.034363,760.655151 328.485382,756.121460  C326.945618,753.382690 325.409454,751.049622 327.711029,747.963257  C329.251038,745.898132 328.374054,743.469177 327.946136,741.196533  C327.485718,738.751221 326.581512,736.375793 326.653564,733.849304  C326.700653,732.198853 326.646851,730.217529 328.649353,729.721802  C330.546448,729.252136 331.027710,731.109863 331.707367,732.395325  C332.094879,733.128296 332.401611,733.905151 332.703125,735.029053  C333.373749,730.547302 339.062561,731.635742 340.362732,727.553589  C345.654236,727.356995 343.946594,722.928406 345.410522,720.170471  C346.921143,718.901611 348.296173,718.049988 348.954102,716.356262  C349.877197,713.979980 351.725555,713.770996 354.178894,714.854980  C358.312256,717.335632 355.774536,720.677185 355.871307,723.947021  C352.661682,726.606262 351.025757,729.876160 349.987762,733.567078  C349.770020,734.341248 348.856934,735.303101 348.208832,735.148621  C343.618744,734.054321 342.922943,737.782349 341.336639,740.451721  C340.996094,741.024719 340.527832,741.620605 339.935455,741.848267  C333.570007,744.295166 334.030060,748.986877 335.942322,754.466797  C336.194519,755.239258 336.305756,755.689880 336.441895,756.487976  C337.742798,759.725891 341.580353,761.446777 340.273315,765.523438  C341.052826,763.996643 340.681366,761.004028 341.959167,761.210693  C344.573242,761.633423 346.610321,759.726624 348.958740,760.232178  C351.729065,760.828552 352.803986,764.618958 351.962067,768.726562  C350.775726,774.514954 348.803833,780.116943 347.906494,785.960693  C346.570068,794.664246 348.792236,803.003113 350.848328,811.682068  z\"})),_path324||(_path324=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M332.246277,815.739685  C331.527222,817.528687 331.018005,819.042114 330.258057,820.783020  C328.616119,821.212463 328.070801,822.067139 328.014313,823.419006  C327.850830,827.328186 328.499695,831.276184 326.206848,834.989136  C325.365723,836.351257 325.694946,838.668823 327.757874,839.730286  C328.763184,840.247559 330.239716,840.474731 329.514618,842.095337  C329.034393,843.168579 327.711884,843.247070 326.879944,842.891479  C323.191071,841.314880 322.246368,843.193237 321.222260,846.384460  C319.490479,851.780823 315.416382,855.845520 312.040466,860.655151  C307.839539,862.567810 306.929382,861.687012 308.280640,857.195679  C310.240967,850.679932 314.059082,845.011475 316.016205,838.559631  C316.504395,836.950317 318.058167,834.934570 316.144592,833.523071  C314.480957,832.295959 313.768768,834.611206 312.567200,835.213562  C310.969971,836.014404 309.657471,835.519043 309.785889,833.302673  C309.891418,831.481140 309.932343,829.655823 310.001526,827.416138  C310.309143,826.526611 310.617096,826.053284 310.948120,825.286133  C311.306793,824.562439 311.746796,824.428040 312.271362,824.533447  C311.828430,823.911682 310.963501,823.989868 310.239868,823.219849  C310.276123,818.228699 308.518311,812.956421 310.844177,808.807800  C314.026123,803.131958 310.830475,796.455627 314.677979,791.130432  C315.459900,790.048218 313.734528,789.175903 313.428162,788.146301  C313.123535,787.122559 312.271393,785.980225 314.790497,785.621521  C317.267212,785.268799 313.988556,782.057495 315.966339,780.340088  C315.689362,779.613647 315.315125,779.246216 315.160095,778.782043  C314.553040,776.964844 314.252258,774.784851 316.341217,774.121582  C318.507599,773.433716 319.384491,775.494629 319.914703,777.309326  C320.145569,778.099426 320.178589,778.936951 320.297699,780.153015  C320.383026,781.317139 320.397980,782.087463 320.407593,783.224182  C320.397278,784.297729 320.347565,785.002869 320.262238,786.036316  C319.764587,788.199585 320.991455,788.991455 322.573059,789.932983  C323.005219,790.297852 323.166626,790.461670 323.515778,790.921387  C323.887299,791.655212 324.019196,792.108337 324.135193,792.932556  C324.164520,793.526733 324.159698,793.764404 324.112091,794.354004  C323.226471,797.363159 323.423920,799.778564 326.305664,800.963501  C329.204987,802.155640 327.659729,805.042664 328.879181,806.965393  C330.499939,809.520813 332.282410,812.211487 332.246277,815.739685  z\"})),_path325||(_path325=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M212.304916,953.838745  C211.373489,952.881531 210.744293,951.767883 210.059357,950.330811  C211.672165,946.513611 213.067902,943.035339 210.914185,939.173462  C210.131119,937.769287 210.246307,936.556458 211.944153,935.454773  C215.140778,933.380676 214.963058,930.472717 212.453171,928.114807  C210.676086,926.445435 212.114304,924.505798 212.602615,924.678101  C217.241028,926.314636 217.410049,918.759460 222.160095,920.269287  C223.347198,920.646606 222.577728,917.358521 223.637482,915.990601  C225.973282,912.975403 226.400665,908.583557 230.769760,906.954407  C231.999008,906.496033 233.079697,904.597839 232.989410,902.369263  C233.197296,901.804077 233.393585,901.607788 233.587189,901.408813  C233.780350,901.210144 233.715500,901.276428 233.197174,901.804932  C230.531326,902.399414 229.951706,905.410034 227.563980,905.887878  C226.979492,902.362305 232.254715,893.338440 235.907562,893.530701  C240.506149,893.772827 239.951630,891.281067 240.294937,888.663452  C240.378983,888.022583 240.693588,887.411987 240.960327,886.398071  C241.369919,879.763367 243.880997,874.924927 250.278137,872.388245  C251.904495,872.707642 252.830841,873.578186 254.139175,874.510986  C254.988068,875.656372 255.142700,876.635742 255.028427,878.036987  C254.897354,878.646851 254.822922,878.884888 254.588898,879.457642  C253.408737,884.723083 251.556015,889.158630 247.469910,892.445984  C246.293640,893.392212 246.217606,895.027649 245.918808,896.512512  C243.561172,908.227783 238.238235,918.514038 230.313721,927.832886  C228.112503,927.189453 226.267517,926.046021 224.373428,928.022644  C223.932877,928.482422 222.939835,929.086975 223.814346,929.412231  C228.452179,931.137329 224.746780,933.080811 224.055832,934.892944  C221.399872,941.858582 218.232529,948.522034 212.304916,953.838745  z\"})),_path326||(_path326=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M254.240540,879.215454  C253.985001,877.929199 253.982010,876.865112 253.972626,875.402100  C252.058090,872.798096 253.800323,870.224365 253.368164,867.550903  C256.477081,864.373169 257.418701,868.137573 259.564789,868.984375  C260.704803,868.865723 261.536102,868.730896 262.687836,868.947266  C265.348328,868.987305 266.988586,870.173157 265.407990,872.281067  C262.396118,876.297485 264.138092,881.897400 260.514557,885.583923  C260.061554,886.044800 259.960602,886.931152 260.618286,887.354736  C262.021576,888.258850 262.795288,885.971924 264.947388,886.834595  C262.586334,890.183105 259.148010,892.595093 257.556152,896.280212  C257.420410,896.594421 256.142090,896.843140 255.832306,896.588867  C252.286255,893.678711 252.301086,897.096008 250.853638,899.360107  C254.482574,899.358154 258.524384,898.442505 257.959442,903.663757  C257.710327,905.966064 259.626038,910.981506 253.737534,907.381409  C252.534241,906.645691 250.243362,907.502075 249.449249,909.013123  C248.566269,910.693420 250.695236,910.929077 251.492172,911.838440  C253.646408,914.296936 252.288834,916.962097 250.989105,918.948730  C249.962341,920.518066 249.080429,918.872681 249.065247,917.638184  C249.040970,915.663879 248.765076,913.800537 246.498764,913.431946  C244.098083,913.041321 244.360031,915.454590 243.504272,916.711121  C242.387146,918.351379 241.384628,920.192993 239.903351,921.436340  C236.849106,923.999817 234.383850,926.390076 235.817459,931.020264  C236.395401,932.887024 234.925232,935.239441 232.663742,935.381836  C229.885773,935.556763 231.447235,932.944885 230.946762,931.627075  C230.595123,930.701233 230.376862,929.724609 230.040970,928.380493  C232.400467,922.453796 236.287613,917.763489 238.688522,912.148560  C241.063431,906.594482 244.765442,901.602722 244.153946,895.098389  C244.089172,894.409424 244.594391,893.453064 245.140076,892.954590  C249.268616,889.183411 252.297729,884.799255 253.622818,879.081787  C255.245972,879.816528 255.528183,881.314453 256.349274,882.544434  C258.873138,879.476257 256.213043,879.750610 254.240540,879.215454  z\"})),_path327||(_path327=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M290.685547,816.853394  C291.912354,817.706116 291.930328,818.614624 291.661102,819.649048  C289.339752,828.567322 289.728302,838.045715 286.080109,846.696045  C285.900024,847.122986 286.011078,847.672791 285.978699,848.573181  C285.970764,848.980957 285.714630,849.335144 285.528137,849.439941  C285.341614,849.544678 284.964081,849.708496 284.794617,849.840942  C284.625122,849.973450 284.413483,850.406494 284.341492,850.662781  C284.217896,851.097656 284.166260,851.276245 284.061462,851.728516  C283.696014,852.789185 283.383728,853.576050 283.041931,854.680298  C278.883942,857.292236 280.623993,851.778870 278.198669,851.264771  C277.996399,850.552673 277.999634,850.109741 278.005096,849.334656  C280.668457,846.902832 278.673676,845.229492 277.268799,843.234436  C276.796906,836.579285 278.788788,830.661499 281.228577,824.892212  C281.747101,823.666077 281.878235,822.754761 281.149963,821.332886  C284.326385,820.016052 287.786652,819.330322 290.685547,816.853394  z\"})),_path328||(_path328=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M312.001160,860.998779  C314.805969,861.348816 316.031769,859.276917 317.569550,857.532227  C318.423279,856.563538 319.737823,855.680725 321.093964,856.462280  C322.429230,857.231812 321.250458,858.538330 321.367584,859.564453  C322.184845,866.724609 315.577332,870.792358 314.172119,877.043274  C313.858459,878.438477 312.076630,879.495605 310.603607,878.002319  C309.233856,876.613892 305.592651,879.026184 305.903198,874.759399  C306.236481,870.180725 306.537018,865.893250 311.259644,863.481506  C311.684998,863.264282 311.749146,862.339600 311.989288,861.372925  C311.997559,861.002441 312.000000,861.000000 312.001160,860.998779  z\"})),_path329||(_path329=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M337.971863,840.299683  C338.444458,840.003357 338.888885,840.001892 339.666687,840.001404  C343.676208,840.529175 345.679596,841.917236 343.425812,845.962219  C342.344482,847.902893 342.692719,850.185303 342.614258,852.337219  C342.502777,855.395874 341.968811,858.296936 339.350708,860.797791  C338.415558,860.510071 337.834747,860.017761 337.126984,859.263916  C336.050842,858.034119 335.962524,856.931641 336.744812,855.369019  C336.999115,854.837402 336.999481,854.669922 336.999908,854.251221  C337.344086,850.844116 338.259521,847.716614 337.235535,844.252319  C336.998840,843.558899 336.997650,843.117737 336.995178,842.346130  C337.310516,841.541931 337.627136,841.068237 337.971863,840.299683  z\"})),_path330||(_path330=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M260.277893,869.630798  C258.979950,871.573547 257.816772,872.811279 257.087891,869.929199  C256.718079,868.466919 256.717438,867.058960 254.375793,867.017273  C252.253342,864.260254 254.017532,863.069092 256.593384,862.028137  C257.806854,862.248901 258.612488,862.497742 259.710907,862.876953  C260.002472,863.450134 260.001312,863.892883 260.000061,864.667847  C261.105804,866.300720 261.397461,867.707336 260.277893,869.630798  z\"})),_path331||(_path331=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M297.350403,919.954834  C296.832947,920.000000 296.665894,920.000000 296.248169,920.000000  C295.594238,916.744385 298.146088,915.963074 300.551941,914.456604  C301.382935,917.541565 300.065674,918.995483 297.350403,919.954834  z\"})),_path332||(_path332=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M311.364502,899.915344  C310.565643,900.002197 310.122711,900.002014 309.348053,900.002136  C309.871277,898.154846 310.726227,896.307190 311.919495,893.728394  C313.107788,896.396790 313.815033,898.157593 311.364502,899.915344  z\"})),_path333||(_path333=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M207.951279,995.369446  C211.610245,997.218689 210.078018,999.191467 207.823303,1001.444946  C206.194855,999.271790 207.516891,997.522339 207.951279,995.369446  z\"})),_path334||(_path334=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M260.336304,869.996399  C260.000702,868.611084 260.000183,867.222229 259.999817,865.416626  C262.025940,865.152405 262.970490,866.291138 262.993835,868.637817  C262.439728,869.837463 261.586273,869.987183 260.336304,869.996399  z\"})),_path335||(_path335=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M260.998779,987.998779  C260.705109,988.486633 260.412689,988.975769 260.120239,989.464844  C259.922455,989.294678 259.724640,989.124512 259.526794,988.954346  C259.837372,988.662598 260.147949,988.370850 260.730469,988.040771  C261.002441,988.002441 261.000000,988.000000 260.998779,987.998779  z\"})),_path336||(_path336=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M296.647186,864.574341  C297.387634,864.367065 297.654144,864.627930 297.540833,865.201233  C297.517212,865.320557 297.347778,865.481262 297.227264,865.499023  C296.647308,865.584473 296.404175,865.301880 296.647186,864.574341  z\"})),_path337||(_path337=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M328.419067,850.769897  C328.796875,851.287537 328.763062,851.408752 328.419067,850.769897  z\"})),_path338||(_path338=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M286.536499,931.478577  C286.558655,931.519836 286.514374,931.437317 286.536499,931.478577  z\"})),_path339||(_path339=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M319.280029,781.235840  C317.182648,779.348999 320.341431,775.917786 316.454681,774.745422  C315.606415,776.130676 316.149261,777.743958 316.001831,779.611511  C314.050934,779.565857 311.430725,781.162354 310.247253,778.497253  C309.255951,776.264832 310.378662,774.475464 312.222382,773.054443  C312.414673,772.906250 312.116669,772.121887 312.012329,771.302917  C309.679596,767.383301 309.392578,763.545654 310.689270,759.176331  C311.915100,757.200012 312.290009,755.536133 310.965973,753.435669  C310.518860,751.239746 310.485260,749.455994 312.234741,747.780884  C315.214478,747.637390 315.906158,749.732178 316.881714,751.952393  C316.990753,753.706604 317.040161,755.096069 317.486053,756.234680  C317.267273,755.174500 316.916168,753.935364 316.992493,752.290649  C316.413025,748.667114 317.684296,745.417114 317.042786,742.535095  C316.811188,744.153809 317.359558,746.755005 313.645508,746.551147  C311.159088,744.750732 311.056824,742.265808 311.695618,740.158203  C312.653107,736.999207 312.733459,733.778381 313.458923,730.295288  C314.321625,729.040344 316.337219,729.276245 315.840027,727.084839  C315.366180,725.425415 314.983063,724.080200 316.138672,722.539856  C319.380829,720.223694 317.911652,716.777588 318.839111,713.745361  C318.565796,711.948853 318.551514,710.497131 318.880127,708.683899  C319.173218,707.610596 319.524994,706.965698 320.096985,706.037476  C320.859680,704.973267 321.724457,704.516724 322.310059,703.754944  C323.949615,701.621948 323.060364,700.842224 320.448975,700.584106  C317.337158,695.936157 321.229645,692.174561 321.559845,687.674805  C321.954437,686.545776 322.350616,685.814148 322.687103,685.055847  C324.037140,682.013428 323.723511,679.978455 319.516022,679.852539  C318.572174,676.850220 319.364594,674.042786 318.696350,670.965820  C317.433838,659.201416 320.979645,648.508362 323.676025,637.694275  C324.162354,635.743652 325.090637,633.405640 326.976532,632.934204  C331.278778,631.858704 330.697418,628.882263 330.283295,625.952026  C329.626801,621.306763 331.768921,617.545837 333.868164,613.775879  C334.867615,611.980957 336.338501,611.070435 338.307953,612.751221  C334.320984,609.057190 336.459381,604.916626 337.387054,600.897766  C337.677338,599.640442 338.868866,598.665833 336.621918,597.610352  C334.061249,596.407471 334.810272,593.679016 335.156921,591.355530  C335.542053,588.774170 337.204437,586.351562 336.083618,583.242188  C335.850098,581.291382 336.468994,579.996826 337.536255,578.837524  C341.681152,574.335144 341.024506,568.283813 342.590851,562.951233  C342.983826,561.613464 341.581696,561.026550 340.937836,560.108215  C338.570587,556.731934 340.035400,552.254395 343.932159,550.916138  C344.259430,550.803772 344.868988,551.189453 344.722778,550.491150  C343.903778,546.579102 348.971008,545.187988 348.504028,541.145630  C348.241943,538.876770 351.309326,538.717590 353.015900,537.875366  C354.937775,536.926880 355.704376,535.396484 355.569031,533.443298  C355.430847,531.449219 353.456848,532.377808 352.110840,531.574951  C351.205566,530.904785 350.814972,530.277710 350.443542,529.212769  C350.265839,526.655823 351.117828,524.920776 353.062225,523.889526  C355.985016,522.339417 357.181854,520.534912 354.407013,517.747681  C353.321411,516.657288 353.049744,515.106018 354.305664,514.232117  C356.841125,512.467773 356.990570,510.314331 356.149353,507.713043  C355.947937,507.090240 355.830719,506.266510 356.174927,505.750702  C360.123077,499.834473 358.590210,492.838837 360.046021,486.439819  C360.304382,485.303986 360.520447,484.152191 361.074799,483.112366  C361.474243,482.363068 361.978516,481.679657 362.934570,481.663116  C364.140045,481.642242 364.690796,482.489716 365.027588,483.463318  C365.639893,485.233490 365.433807,487.090332 365.435120,488.911041  C365.436951,491.460846 365.617249,493.904236 367.607483,495.826263  C369.320160,497.480225 369.459900,499.657288 369.469055,501.848083  C369.480957,504.688751 370.308228,507.069397 373.398071,508.551514  C376.722443,510.164978 376.621002,513.554321 378.318481,516.276978  C378.940430,519.272888 380.857727,521.617004 379.722931,524.873901  C377.420258,527.079041 376.846802,529.572876 376.636932,532.219971  C376.288696,536.612244 375.623840,540.952881 374.398712,545.578247  C371.923157,551.112061 370.771057,556.039795 373.305756,561.861694  C375.281525,566.399719 375.481476,571.742737 371.900574,576.599365  C370.071747,584.597900 371.080750,592.125671 372.925110,599.731628  C373.858551,596.679138 374.408722,594.235718 372.406799,591.000793  C370.355896,587.686707 372.322113,583.239746 372.719421,579.006531  C380.196625,579.339417 382.035065,581.318420 381.695038,588.059387  C381.433655,593.240845 382.517242,598.327515 382.942596,603.458130  C383.231293,606.940918 383.713409,610.410889 383.540985,613.903503  C383.302460,618.735901 384.192505,623.461426 384.541351,628.219116  C385.130280,636.251099 385.305725,644.461609 383.327087,652.421570  C382.434540,656.012268 382.299255,659.306519 384.626892,662.386292  C384.927429,662.783936 385.226166,663.199402 385.416748,663.656311  C386.415405,666.050476 387.355591,668.940491 384.427948,670.161011  C381.842255,671.238953 380.993073,668.359192 380.044525,666.450256  C379.012970,664.374268 379.094727,661.630127 376.153656,660.445251  C377.734406,664.919312 376.226837,669.575256 377.652283,673.992859  C378.123291,675.452576 378.345123,677.124268 376.828461,678.062927  C375.190552,679.076660 374.020966,677.685608 372.954681,676.689697  C370.975403,674.841003 369.222992,672.849426 369.960602,670.886169  C367.100098,676.407166 367.732117,684.321289 363.489136,690.995483  C362.889618,692.804871 362.054138,694.153503 361.609192,696.009766  C360.978180,697.392700 360.625854,698.620972 361.830322,699.274475  C362.724579,699.759644 362.421112,698.581848 362.680267,697.786499  C362.967590,695.935120 363.399200,694.504944 364.556580,692.968628  C365.311279,692.456970 365.814667,692.362000 366.712372,692.541199  C367.473938,693.006653 367.782898,693.407104 368.126343,694.224365  C368.572571,696.370056 369.155457,698.253906 368.641998,699.988770  C367.790039,702.867432 367.789185,704.603455 371.234467,705.982849  C373.866150,707.036438 373.635742,710.617188 372.472321,712.649353  C369.531403,717.786255 370.224915,723.606750 368.654968,728.979126  C370.821716,725.249146 369.687958,720.111755 374.064026,717.073730  C375.482758,716.734070 376.487885,716.878174 377.709656,717.722412  C376.136841,724.061523 373.756958,729.951660 373.651276,736.502319  C373.626984,738.007690 372.425232,740.670959 369.394714,740.999023  C366.453003,741.918640 364.647430,740.336975 362.517487,739.086182  C364.867279,742.096741 366.141754,745.272034 364.900909,748.285645  C365.123383,746.430176 365.189880,743.668213 368.688629,742.863892  C370.412720,743.194763 371.162079,744.077393 370.925354,745.410583  C370.117218,749.962036 370.072113,754.932251 368.087677,758.923157  C365.333984,764.461121 365.099426,770.301453 365.381409,775.820312  C365.613617,780.364624 364.713898,784.612610 364.814911,789.145508  C362.200195,788.454834 363.417542,786.311218 362.795197,784.984497  C362.440430,784.228271 362.072449,783.424805 361.028198,783.578064  C360.183685,783.702026 359.859222,784.607849 360.096161,785.068604  C362.844543,790.413452 358.919098,794.515930 357.501038,799.119934  C356.389465,799.183167 356.206177,798.351074 356.315857,797.500854  C356.615234,795.179565 355.677185,793.806274 353.326874,794.083435  C349.444214,794.541199 352.985565,796.334900 352.848816,797.482849  C352.302795,802.066223 351.827515,806.658020 351.156372,811.624023  C347.839050,810.896729 347.226105,809.174377 347.622528,805.579041  C348.153259,800.765320 345.390717,795.927917 346.021515,790.879883  C346.617767,786.108154 346.752716,781.451965 348.840942,776.685608  C350.000214,774.039673 350.265076,769.913818 350.899078,766.439697  C351.280914,764.347595 351.044647,761.791138 348.343292,761.182678  C344.583893,760.335876 346.358398,764.008972 345.460419,765.443542  C342.934692,765.069580 344.960480,762.200867 342.701691,761.546448  C341.269897,764.017639 343.330963,768.344482 338.052307,769.714417  C340.202515,764.690063 338.751953,760.823914 335.012024,757.368408  C335.379211,756.305115 336.611908,756.699402 336.679108,755.800171  C336.710327,755.382141 335.949982,755.451843 335.271240,755.158691  C333.570160,753.063171 333.393280,750.728699 333.043030,748.479431  C332.571289,745.449951 333.139252,743.089783 336.683441,742.081177  C341.795135,740.626648 341.948608,735.578979 343.659576,731.636230  C345.862183,731.315125 345.407349,735.369629 347.587891,734.350891  C349.718384,733.355652 350.479218,730.841248 349.908264,728.766174  C348.392853,723.258484 354.032562,726.941101 354.938202,724.326355  C355.215576,722.700439 356.199982,721.739136 356.377716,720.338745  C356.798187,717.026306 357.629944,713.967285 362.261658,715.438232  C362.759552,715.596313 362.523071,714.356812 362.604614,713.423401  C362.608032,712.409790 362.625671,711.734314 362.640015,710.723999  C362.203461,708.133301 361.363464,707.171570 359.702179,709.578430  C358.454346,711.386230 357.258148,713.158936 354.328094,712.482666  C353.524078,711.760681 353.410370,711.084290 353.394104,710.032593  C351.791046,707.380493 350.854126,704.778198 349.784698,702.272583  C347.336365,696.535950 350.925964,691.594421 349.925140,686.352356  C349.619812,684.753174 349.967163,682.995361 348.201721,681.976257  C344.679230,679.943237 344.462982,676.806396 345.445984,673.342712  C345.810089,672.059692 346.086212,670.782043 346.175537,669.450134  C346.386017,666.311707 348.066071,665.446350 351.184021,666.694702  C352.759064,668.679626 352.006989,670.775574 352.442017,673.080200  C355.805634,667.332947 357.153839,661.525146 356.078400,655.254944  C355.475342,651.738647 355.263763,648.324219 357.079895,645.068115  C357.402405,644.489868 357.780609,643.818176 357.671814,643.188599  C356.255951,634.994019 358.925323,627.093750 359.680908,618.789062  C356.844238,621.561462 355.832947,624.507568 356.640991,628.067261  C357.015198,629.715698 356.888031,631.399597 355.907104,632.873230  C354.529938,634.942139 354.430267,637.284851 354.596558,639.602234  C355.097473,646.583130 353.490967,653.502625 354.094879,660.486084  C354.261841,662.416565 353.421051,664.045471 351.497253,665.374146  C346.442657,664.525208 345.990936,663.307983 347.195648,655.645386  C345.675751,668.434021 343.322845,681.141602 343.648834,694.449707  C341.640259,695.913757 338.634338,695.809448 339.008514,699.358032  C339.122742,700.441467 337.911652,700.982910 336.736847,701.517334  C335.543335,702.060303 337.419678,702.502441 337.618408,703.238220  C337.931061,704.395691 338.139008,705.477844 337.593231,706.944336  C335.148743,710.418213 333.494598,713.849060 333.139099,717.778442  C333.033966,718.940796 333.042450,720.077332 331.943420,721.219727  C329.668640,722.047485 328.234955,721.040833 326.674866,719.632080  C327.661255,721.294128 328.871063,722.218994 330.886841,722.552490  C334.169708,723.580078 335.053619,721.392395 336.351257,719.210815  C341.409271,716.829346 342.020477,717.244019 341.756775,722.304016  C341.666931,724.028442 342.724976,725.805725 341.267548,727.726685  C339.777618,728.941101 340.136230,730.361755 339.942383,731.645935  C339.854797,732.226257 339.445465,732.757935 339.182098,733.311707  C332.029205,729.697083 335.183136,737.154236 332.797363,739.362915  C331.606384,736.303162 330.492065,733.440491 329.185028,730.082642  C326.780151,733.773010 328.898010,736.833252 329.144287,739.913330  C329.423798,743.408997 332.814148,747.204712 327.746857,750.249695  C326.372009,751.075867 328.066406,752.855469 328.987305,754.020935  C332.710114,758.732422 334.819366,764.067017 335.612701,770.049683  C335.905457,772.257446 335.197449,773.760132 333.791473,776.482056  C333.032623,772.645569 332.000092,769.990234 332.790741,767.018494  C333.097260,765.866272 333.128815,764.422424 331.570587,764.270813  C329.995392,764.117615 328.989960,765.136658 329.500854,766.806519  C330.392822,769.721924 327.997833,772.764038 330.532898,775.849426  C331.960114,777.586426 328.679688,778.403076 327.283081,779.845093  C325.494507,780.956787 323.789673,781.358093 321.821167,781.989868  C320.776489,782.053284 320.121307,781.885437 319.280029,781.235840  z\"})),_path340||(_path340=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M362.230103,692.245483  C360.970612,688.107178 365.828949,686.332520 365.385803,682.546448  C365.264709,681.512146 366.223267,680.294006 365.453217,679.218018  C364.218689,677.493164 363.941650,676.379822 366.564972,675.792664  C368.526306,675.353699 367.775482,673.324463 368.175049,671.981018  C368.749176,670.050720 369.427887,668.191284 371.133667,666.915161  C371.729828,666.469055 372.331421,666.346741 372.936279,666.786316  C373.543549,667.227783 373.828217,668.050598 373.261749,668.474182  C368.621918,671.943604 371.992889,673.780273 374.637238,675.874695  C375.205780,676.325012 375.244049,677.420898 377.643829,677.327087  C372.963104,672.863464 377.670074,667.233643 374.022003,662.687866  C371.976532,660.138977 374.523468,658.880371 376.424011,657.842163  C379.088928,656.386475 379.031158,658.896362 379.545441,660.222961  C380.506500,662.702087 381.236938,665.269653 382.107422,667.785217  C382.438293,668.741394 382.922119,669.789368 384.189026,669.321960  C385.091644,668.988953 384.895966,667.955994 384.983154,667.150879  C385.162567,665.494385 384.283936,664.371582 383.263214,663.197266  C380.175659,659.645264 379.896332,655.405701 382.103973,651.632385  C383.923676,648.522095 383.049438,645.258911 382.840179,642.593079  C382.332947,636.131775 385.733490,629.368347 381.526459,623.086060  C380.835266,622.053894 381.838165,619.923096 381.977020,618.293152  C382.616638,610.786316 381.020874,603.395630 380.759491,595.933411  C380.719604,594.794128 380.009796,593.653870 380.071503,592.539551  C380.384979,586.875183 381.256287,581.027710 373.346466,579.057007  C372.090607,578.902771 371.515289,578.370117 371.056824,577.307312  C370.982574,575.446899 369.155396,573.396240 372.277283,572.688416  C372.778564,572.574768 373.501404,571.360474 373.488037,571.348267  C370.132172,568.280701 374.242584,563.890991 370.869202,559.958069  C368.098328,556.727539 370.090546,550.887817 372.769684,546.293640  C380.759125,548.389709 380.710266,555.548157 382.399902,561.578552  C382.833466,563.125916 382.455078,564.870178 382.575989,566.521851  C382.722778,568.526794 383.469452,570.121582 385.659454,570.414124  C388.609924,570.808350 390.878113,572.315552 393.587799,575.971130  C392.621307,570.610535 395.329895,570.080322 398.489319,569.540161  C399.047943,569.320374 399.280365,569.250549 399.878296,569.141968  C405.208282,571.187256 406.423065,576.473694 409.747620,580.423218  C409.989288,581.258179 410.031219,581.748718 409.932770,582.600708  C407.568268,585.452332 404.779938,587.388123 403.185242,590.655579  C401.744049,593.608643 399.693939,593.135254 397.154083,589.892395  C396.392487,588.920044 396.144623,586.265015 394.246948,587.799866  C392.787109,588.980591 389.969696,590.677734 391.323425,592.947083  C394.719971,598.640808 395.565765,604.893188 396.466827,611.202698  C396.563934,611.882507 397.003082,612.395142 397.681335,613.146973  C398.445343,614.258484 399.217285,615.377319 398.824493,616.142395  C395.525787,622.567444 399.294800,629.896484 396.151398,636.309509  C395.944366,636.731873 396.075897,637.284912 396.168762,638.106018  C396.267303,640.300537 397.006653,641.816772 398.714783,643.218323  C399.155304,643.894714 399.265808,644.335388 399.129822,645.117432  C396.561401,647.688660 398.128357,650.103577 398.932495,652.290039  C400.134491,655.558289 399.647736,657.604126 397.175934,660.557922  C394.588745,663.649536 393.790161,668.375000 392.184540,672.748657  C389.300781,675.735474 388.111725,680.031311 383.728912,681.043152  C382.173340,681.402283 381.912354,682.827271 381.687897,684.149231  C381.281647,686.541382 381.958069,689.061829 380.343964,691.332642  C379.467834,692.565125 380.969177,693.344482 381.815643,694.065186  C383.087677,695.148193 384.777527,695.537231 386.325623,696.837280  C387.549866,699.325378 386.721405,701.459717 386.182343,703.944824  C385.249725,705.970398 383.685669,707.566528 385.504150,709.909363  C385.760895,711.235474 385.484497,712.080078 384.351318,712.861694  C382.433228,713.735168 380.590668,711.052551 379.057007,713.682861  C375.670532,713.656250 375.472290,712.950195 377.727661,708.393799  C379.626068,706.636169 381.693146,705.297485 379.472900,702.387207  C379.010620,701.498840 379.400055,702.239929 379.053772,701.674805  C378.236572,700.341125 378.321136,698.076660 376.378784,697.915894  C374.799835,697.785217 374.966614,699.836182 374.227631,700.823181  C372.619263,702.971252 374.251282,704.019836 375.833618,705.503967  C376.985931,709.860107 376.082947,713.640015 374.266144,717.666382  C371.934448,720.759155 371.225739,724.144043 371.176147,727.308105  C371.097412,732.329163 369.316437,732.636353 365.098419,730.076416  C368.569427,728.554443 367.889648,725.352051 367.868073,722.975952  C367.821869,717.886414 371.282867,713.929260 371.542725,709.028015  C371.647552,707.051147 371.164978,706.067505 369.151123,706.489746  C364.730774,707.416443 365.460785,703.792297 366.386108,702.380615  C367.926575,700.030701 366.908356,697.968018 367.008606,695.399475  C368.757812,692.089722 367.809814,688.662903 368.949310,686.341736  C368.942291,688.022827 367.976135,690.246277 367.263428,692.781311  C366.555542,693.001160 366.111115,693.002319 365.333313,693.004150  C364.082916,693.181396 363.212128,693.129089 362.230103,692.245483  z\"})),_path341||(_path341=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M343.207153,924.698975  C341.649109,926.558228 340.098450,928.005859 340.025208,930.640015  C340.447601,932.238586 339.699188,932.788696 338.365143,933.105469  C335.266602,930.907593 333.446167,930.617737 334.145905,935.031372  C334.473175,937.095703 333.300232,938.621643 331.625244,938.499207  C326.393585,938.116699 328.471130,941.851746 328.059296,944.219604  C327.887604,945.207092 329.698578,946.133362 328.675629,946.786011  C322.680664,950.610901 321.922455,957.189880 319.755280,963.047363  C319.544739,963.616394 318.854950,964.519104 318.535004,964.460571  C313.142303,963.474854 313.902863,966.619995 313.469879,970.441589  C312.627319,977.878967 309.070801,984.800171 308.622650,992.498718  C308.495361,994.684937 305.616882,996.698975 304.033783,998.817139  C303.164185,999.980591 302.111603,1000.182312 301.050507,999.276245  C299.154144,997.656860 300.818359,995.883484 301.004059,994.184326  C301.120789,993.116272 301.499054,992.063293 302.855164,992.956787  C304.105194,993.780334 305.453156,994.591248 305.720551,992.405762  C305.913116,990.832031 304.554626,989.231934 302.992126,989.442627  C295.575653,990.442627 297.942108,986.779724 299.765350,983.147217  C300.495270,981.693054 300.929565,980.090393 301.648926,978.149231  C303.699707,980.106079 302.961304,982.029907 302.552032,983.836365  C302.307587,984.915222 302.280853,985.882324 303.321564,986.423157  C303.836761,986.690918 304.728302,986.812256 305.162415,986.540710  C306.134979,985.932190 306.287537,984.614868 305.705902,983.884888  C304.242676,982.048401 304.989014,980.093018 304.955078,978.163513  C304.929688,976.717529 304.188538,974.868225 302.866730,975.338013  C296.374146,977.645203 299.836365,972.401672 299.067200,970.474915  C298.867401,969.974426 299.313080,969.216187 299.734192,968.288208  C300.121185,968.377747 300.365845,968.505310 300.867584,968.192505  C301.144745,966.243042 300.782288,964.520752 302.013763,962.806519  C303.367950,960.921509 302.595459,959.247742 300.516174,957.959717  C298.043427,956.427917 297.845032,958.835754 296.807678,959.794373  C295.754608,960.767578 296.118042,963.581543 293.584900,962.562683  C291.693573,961.801941 292.209991,959.825317 291.972168,958.220642  C291.296570,953.663208 295.860626,950.995911 295.993225,946.379028  C296.635040,945.324829 297.351044,944.827820 298.668427,944.953613  C301.100677,943.809937 301.677734,941.809631 302.022736,939.600708  C302.327667,937.648254 302.605591,935.626953 303.351654,933.824951  C304.220428,931.726624 306.602539,930.918945 308.255463,931.820618  C309.842743,932.686462 308.130615,934.416504 307.534515,935.684692  C306.953278,936.921204 304.361328,937.313782 305.503540,939.125671  C306.546783,940.780457 308.111328,939.779053 309.336182,938.791260  C309.455444,938.695068 309.714111,938.571838 309.763916,938.617676  C316.966644,945.249756 314.576813,937.007141 315.586151,934.691956  C316.834900,931.827576 319.353119,930.138123 321.101715,927.763794  C321.814362,926.796143 323.228546,926.715759 324.251556,927.545898  C325.222382,928.333618 324.827576,929.353760 324.179382,930.179688  C320.474091,934.901367 320.151031,940.895569 318.047241,946.617188  C317.994781,946.996704 317.761475,947.342468 317.797302,947.528381  C317.833099,947.714294 317.708527,947.308167 317.857239,947.156494  C322.020782,946.286560 320.959259,941.491760 323.802490,939.730835  C324.404419,939.358093 324.047546,937.853882 325.059753,937.219238  C329.417389,934.486816 332.418304,930.803284 333.538239,925.625671  C334.738525,920.076721 339.571136,921.690430 343.604309,921.002991  C344.791046,922.303284 343.887878,923.316101 343.207153,924.698975  z\"})),_path342||(_path342=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M378.259521,844.245972  C376.586029,843.667969 375.169617,843.335938 373.387177,842.993408  C373.019958,842.543396 373.018768,842.103943 373.016968,841.334595  C373.334747,840.087463 374.910492,839.859070 374.213318,838.233215  C373.889343,837.678589 373.719727,837.386353 373.612610,837.072754  C372.712189,834.436340 372.109528,831.042725 374.724884,829.936890  C376.542450,829.168457 377.931671,832.618286 379.174500,834.475952  C379.792572,835.399719 380.174042,836.481689 380.958984,838.105225  C382.998260,834.508240 386.236389,832.005310 383.471405,827.712097  C382.356720,825.981262 384.059296,824.218689 384.040833,822.390808  C384.021698,820.497986 383.875214,817.541565 386.341248,817.883423  C388.227570,818.144897 388.164673,821.098083 387.777802,823.142334  C387.598267,824.091003 386.865173,824.959717 387.396484,826.002625  C394.610992,823.896057 397.234100,818.233887 393.799683,811.752380  C392.807709,809.880371 391.474365,808.394836 394.044800,806.805115  C395.011169,806.207458 395.267395,804.966370 394.779327,804.127380  C391.390442,798.302002 396.695740,791.085083 391.717987,785.499207  C390.883606,784.562866 392.099670,783.809570 392.757111,783.063110  C394.068634,781.573975 395.244476,779.965454 396.739929,778.203857  C400.358978,778.586304 399.332306,781.824951 400.574799,784.095581  C400.688538,784.681702 400.709534,784.917908 400.699219,785.503174  C400.012482,787.881287 398.579315,789.805664 399.952454,792.422729  C400.909149,796.672485 401.357758,800.626892 401.259064,805.016113  C402.232758,812.067810 399.740479,818.922241 402.692719,825.555481  C403.695129,827.807678 401.683746,829.596130 399.718689,830.731384  C397.646362,831.928589 395.790039,833.245239 395.074158,836.090210  C392.135834,838.011902 391.676239,840.345764 392.190796,843.380798  C392.629944,845.971191 394.390167,848.752441 391.732391,851.561523  C390.293304,852.622681 389.318329,852.077087 388.169891,851.041504  C387.800385,850.491699 387.609314,850.227051 387.385925,849.987427  C387.158081,849.743103 387.203247,849.843506 387.605896,850.612549  C387.644043,851.398865 387.473755,851.813171 386.899506,852.365112  C383.984467,852.895386 382.809021,851.130676 381.823822,849.210571  C380.933990,847.476379 380.043335,845.768372 378.259521,844.245972  z\"})),_path343||(_path343=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M388.192963,726.282654  C387.266510,724.674377 386.885529,723.268799 386.984558,721.374390  C387.033966,720.263367 387.302948,719.598877 387.944977,718.719238  C388.885193,718.130920 389.596405,718.060608 390.672577,718.320557  C393.406830,720.347778 394.593414,723.330444 397.258392,725.455750  C398.663391,728.580505 399.578979,731.602966 402.440552,733.851685  C402.915619,734.509338 403.136871,734.917664 403.407837,735.689636  C403.497894,736.266541 403.496246,736.502380 403.405365,737.078247  C402.735962,738.669800 402.401215,740.027649 403.631805,740.978577  C406.587769,743.262573 408.327484,746.815918 412.020416,748.772217  C413.780151,749.860107 414.941895,751.205994 416.809998,752.127625  C417.836304,752.717163 418.430542,753.394226 419.615723,753.727173  C420.346130,754.032349 420.729706,754.274475 421.300995,754.834473  C420.392914,760.403625 422.116272,764.696716 426.085297,768.231384  C426.698181,768.777222 427.127502,769.514160 427.350372,770.334717  C427.538544,771.027588 427.430725,771.983215 426.913422,772.137268  C422.569580,773.430481 426.894562,781.671204 419.600464,780.705078  C418.335083,780.303589 417.655121,779.647949 416.764252,778.706543  C416.012268,777.694702 415.659302,776.848694 414.991882,775.797363  C412.130890,773.656555 408.979675,772.182373 411.213715,767.804443  C411.785034,766.684875 410.324402,765.110596 408.781982,763.991211  C407.765106,763.177185 407.141693,762.468079 406.376648,761.412109  C405.205750,756.602173 401.746216,753.217896 400.628143,748.732117  C399.997925,746.203613 397.162415,746.692810 395.136108,745.449036  C393.139984,743.150879 394.490295,740.773071 394.191101,738.563965  C393.923584,736.588745 394.576477,733.278015 390.461517,735.291199  C389.051544,735.980896 388.645416,734.476807 388.198822,733.380798  C387.255798,731.066406 388.616882,728.847473 388.192963,726.282654  z\"})),_path344||(_path344=/*#__PURE__*/React.createElement(\"path\",{fill:\"#413332\",opacity:1,stroke:\"none\",d:\" M408.735413,763.131714  C411.904755,763.424988 413.655609,766.314392 412.691681,767.850098  C409.831726,772.406494 413.761902,772.712463 415.938110,774.634521  C415.378662,775.870972 414.429443,776.060791 413.075928,776.121582  C410.374115,775.743591 408.085938,774.689575 405.316467,775.578857  C402.305176,775.960999 400.245636,776.770264 401.282227,780.513000  C401.433197,782.166443 401.281830,783.404968 400.259033,784.770813  C398.284119,783.166077 398.419952,780.632507 397.259949,778.244812  C395.935883,773.009216 395.098755,767.985291 394.904572,762.427856  C396.874573,756.574585 394.382324,751.373962 394.568817,745.531494  C399.073090,744.899414 402.425262,744.648560 402.820770,750.799072  C403.000061,753.586975 406.499451,756.587463 406.999695,760.604614  C406.245636,761.489807 405.414886,761.428040 404.642853,761.117310  C402.387360,760.209412 400.747955,760.632507 400.085297,763.157715  C399.491913,765.419006 400.293945,767.190979 402.500519,767.879272  C404.689362,768.561951 406.864075,768.559631 407.326172,765.462524  C407.450958,764.626160 407.838348,763.904480 408.735413,763.131714  z\"})),_path345||(_path345=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M338.996460,861.410217  C340.579742,856.491821 341.499939,851.889648 341.028503,847.072937  C340.966522,846.440063 340.956146,845.421448 341.316711,845.185913  C345.534027,842.430786 340.904938,842.065857 340.072998,840.340576  C340.922546,838.335571 341.026489,836.703247 340.490417,834.791077  C339.234985,830.312622 339.098175,825.835510 342.010406,821.253540  C343.790894,826.254333 346.572937,830.473816 347.849731,835.718567  C346.406921,849.071472 343.138397,861.737488 338.370636,874.445557  C336.338684,873.464172 336.876221,871.075867 337.225098,869.028015  C337.639252,866.596863 339.110321,864.401062 338.996460,861.410217  z\"})),_path346||(_path346=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M387.870239,726.300964  C389.795288,726.256714 390.231415,727.322754 389.538116,728.833069  C388.709595,730.637878 389.683685,732.382324 389.438812,734.313721  C391.740723,734.647583 390.360138,730.817688 392.573608,731.562866  C394.780060,732.305725 394.890442,734.587341 395.639526,736.383972  C396.773529,739.103943 394.800446,741.542908 394.998596,744.582764  C394.997559,744.995117 395.000000,745.000000 394.997803,744.998901  C393.036102,747.453918 394.535645,749.924255 394.941956,752.402161  C395.397156,755.178467 395.903748,758.023987 391.697327,758.811829  C391.153809,758.688416 390.942261,758.623840 390.413574,758.475769  C389.503296,758.131592 388.984344,757.754883 388.229980,757.171509  C387.825409,756.852112 387.669342,756.719055 387.289429,756.378052  C386.529053,755.574158 386.010254,754.961426 385.203003,754.211060  C383.820496,753.718079 381.533020,754.611084 383.378479,751.741516  C387.235565,745.743896 388.761841,739.265930 385.726044,732.379089  C384.557404,729.728149 387.297943,728.610291 387.870239,726.300964  z\"})),_path347||(_path347=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M391.301880,718.770020  C390.256714,718.995789 389.507324,718.996460 388.383240,718.994873  C387.846832,719.124023 387.685150,719.255371 387.285675,719.183960  C386.214386,717.125366 383.828674,716.154907 384.029907,713.350342  C384.319183,712.214600 384.616730,711.432800 384.937073,710.336243  C383.619049,708.614014 384.073456,707.133606 384.877258,705.319641  C384.681427,702.510803 385.539948,700.187927 386.003540,697.405151  C386.825867,695.418457 388.165771,694.155579 388.488281,692.256531  C388.749298,690.719482 388.907562,688.616760 391.102631,688.700623  C393.160919,688.779297 393.290680,690.812195 393.891510,692.696533  C394.709259,697.072266 397.036835,700.587524 397.549713,704.987793  C393.228394,708.741882 393.880524,714.292236 391.301880,718.770020  z\"})),_path348||(_path348=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M338.005280,933.393433  C338.592316,932.511292 339.175720,932.015198 339.891174,931.257935  C343.562042,931.140564 345.353516,933.591431 346.988525,936.628296  C350.005341,942.267578 345.422577,945.748718 343.576599,950.188049  C342.345520,950.673462 341.550598,950.619812 340.969177,949.422424  C340.894531,945.168518 339.278870,940.663879 345.383026,939.839722  C343.723633,936.515503 341.972595,935.320251 339.285217,938.856079  C338.616272,939.378235 338.155457,939.529968 337.313721,939.228882  C337.338776,937.261414 337.670197,935.520447 338.005280,933.393433  z\"})),_path349||(_path349=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M369.006836,742.667175  C367.030945,744.043701 366.465302,745.934387 365.990784,747.917847  C365.547516,749.770691 364.997925,751.598206 364.291626,754.180908  C362.599792,751.985718 363.211548,750.490356 363.481049,748.907959  C363.952332,746.141296 365.535095,743.068665 361.086365,741.596191  C359.157257,740.957703 360.743713,738.979675 360.934448,737.617737  C361.043091,736.841858 360.923767,735.743347 361.970398,735.590942  C363.570618,735.357788 363.797638,736.759338 364.090393,737.838013  C364.729248,740.191956 367.012970,739.671204 368.770569,740.755859  C369.015350,741.455933 369.010773,741.896301 369.006836,742.667175  z\"})),_path350||(_path350=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M390.265564,758.743530  C389.110321,759.671997 388.933319,760.616455 389.105103,761.638672  C389.351624,763.105225 390.691345,764.984253 387.357483,764.518982  C385.701721,764.287781 386.103577,766.091064 386.009155,767.135681  C385.883423,768.526428 385.745697,769.960510 383.921234,769.823120  C381.662842,769.652954 382.812042,768.088684 382.825836,766.884583  C382.869720,763.048279 384.344696,759.512695 384.986145,755.403809  C385.975647,754.491150 386.728424,755.059204 387.750549,755.762085  C387.998779,755.998047 388.000000,756.000000 388.000610,756.001221  C388.534363,756.534607 389.065002,757.069336 389.799133,757.800049  C389.998779,757.999878 390.000000,758.000000 390.000610,758.000000  C390.176178,758.164795 390.351105,758.329590 390.265564,758.743530  z\"})),_path351||(_path351=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M390.298706,759.126709  C390.005066,758.992676 390.000671,758.496338 390.000946,758.248169  C394.889832,758.553833 393.787201,755.054810 393.495117,752.495056  C393.204559,749.948364 392.017975,747.431396 394.625305,745.093384  C395.192383,747.833191 395.914124,750.315552 397.391998,752.950500  C398.938599,755.707825 396.489563,758.910889 395.231049,761.928467  C393.454773,761.077087 392.023560,760.168945 390.298706,759.126709  z\"})),_path352||(_path352=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M374.390015,717.996582  C373.806824,713.916992 375.618866,710.005554 374.999878,705.445496  C375.813324,704.182251 376.763031,704.304504 378.071564,704.767029  C378.599121,705.079285 378.793640,705.230652 379.203430,705.681885  C379.561554,706.458496 379.580048,706.938293 379.228333,707.709595  C379.702271,710.061951 375.047302,711.515747 378.664185,713.940186  C378.757843,715.124756 378.520599,716.244446 378.139893,717.682068  C376.928009,717.999329 375.859528,717.998718 374.390015,717.996582  z\"})),_path353||(_path353=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M336.665649,855.066040  C336.999603,856.070801 337.000397,857.136719 337.000610,858.602539  C335.406494,862.226379 333.778503,865.433960 332.239441,868.683655  C331.748047,869.721252 331.543213,871.269531 330.008453,870.609802  C328.771973,870.078125 329.593323,868.876892 330.005737,868.033997  C332.111572,863.730225 332.455261,858.560669 336.665649,855.066040  z\"})),_path354||(_path354=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M336.988159,844.406433  C340.642242,846.964966 339.377838,850.267944 337.330780,853.801025  C334.740021,850.943420 336.590454,847.876282 336.988159,844.406433  z\"})),_path355||(_path355=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M336.778137,939.291626  C337.450623,939.001770 337.893921,939.001099 338.669830,939.000244  C339.204132,941.911804 338.872589,944.617493 335.817535,946.640808  C334.638245,944.026733 334.181732,941.719727 336.778137,939.291626  z\"})),_path356||(_path356=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M343.330627,924.848999  C343.234039,923.876282 343.474182,922.757507 343.855957,921.320557  C343.998901,920.834534 344.000244,920.666687 344.003235,920.246948  C344.727905,919.548706 345.181305,919.976685 345.807922,920.744812  C346.446930,920.998474 346.886505,920.997009 347.655518,920.994080  C348.476349,924.476013 345.305786,923.697998 343.330627,924.848999  z\"})),_path357||(_path357=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M314.401825,929.712646  C314.606812,930.111389 314.672974,930.311707 314.602417,930.431458  C313.844971,931.717102 314.543884,933.894592 312.333344,934.244873  C312.068085,934.286926 311.395386,933.618896 311.419464,933.321106  C311.565338,931.518311 311.897919,929.756165 314.401825,929.712646  z\"})),_path358||(_path358=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M298.958069,944.652344  C298.439392,945.835938 297.586731,945.986816 296.337280,945.996277  C296.358124,944.521912 295.019440,942.339966 297.123322,941.704895  C298.134796,941.399536 298.570312,943.214783 298.958069,944.652344  z\"})),_path359||(_path359=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M373.860626,838.219116  C375.090973,838.135559 376.631165,837.806763 376.665039,839.385864  C376.706970,841.342773 374.960022,840.828979 373.396423,841.002686  C371.407898,839.669983 373.068726,839.201294 373.860626,838.219116  z\"})),_path360||(_path360=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M340.778198,949.183044  C341.471985,949.316772 341.942810,949.631042 342.707428,949.972656  C343.578766,950.297180 343.868774,950.794128 343.991486,951.712952  C344.000000,952.012695 344.000336,952.503418 344.000793,952.748657  C339.728485,954.749329 340.097412,952.098694 340.778198,949.183044  z\"})),_path361||(_path361=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M310.463684,928.693970  C309.887939,929.433350 309.317932,929.891296 308.724304,929.388977  C308.092346,928.854187 308.431671,928.182739 308.993225,927.792969  C309.767975,927.255371 310.479095,927.189209 310.463684,928.693970  z\"})),_path362||(_path362=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M300.747864,968.001831  C301.730560,968.670715 302.426514,969.712646 301.367798,970.243347  C299.980011,970.938904 300.219208,969.432129 300.011902,968.328369  C300.006104,968.000000 300.500610,968.001282 300.747864,968.001831  z\"})),_path363||(_path363=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M345.999084,920.674805  C345.510406,920.741394 345.013550,920.482666 344.260773,920.109558  C344.314484,919.500671 344.616791,918.592346 344.934998,918.586731  C346.046753,918.567139 345.859772,919.609619 345.999084,920.674805  z\"})),_path364||(_path364=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M387.935974,755.659180  C387.193542,755.752075 386.388306,755.506042 385.290161,755.131226  C384.996246,754.835388 384.995300,754.668274 384.993378,754.250610  C386.128632,754.056091 387.377014,753.867493 387.935974,755.659180  z\"})),_path365||(_path365=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M266.508087,1010.349365  C265.406952,1010.630371 265.192780,1010.105591 265.506317,1009.422302  C265.635620,1009.140625 266.190247,1009.054138 266.551392,1008.878906  C266.599945,1009.308655 266.648499,1009.738464 266.508087,1010.349365  z\"})),_path366||(_path366=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M386.828430,719.130737  C387.047913,718.981140 387.528198,718.982056 387.768372,718.987366  C387.824921,719.544617 387.641327,720.096619 387.219360,720.825562  C386.326172,720.543152 386.031769,720.005920 386.828430,719.130737  z\"})),_path367||(_path367=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M373.448395,740.955444  C373.816376,740.284607 374.186401,740.274353 374.513306,740.755615  C374.581665,740.856262 374.578949,741.088501 374.507721,741.186523  C374.166901,741.655396 373.797089,741.637573 373.448395,740.955444  z\"})),_path368||(_path368=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M125.739487,879.302612  C126.108826,876.863342 125.946991,874.773499 125.061569,872.391174  C126.148071,868.706543 124.285599,866.584900 121.775459,864.490723  C120.080116,863.663086 119.509354,862.316895 119.941444,861.043884  C121.266335,857.140503 122.501083,853.319580 121.553978,849.075623  C121.319603,848.025330 122.374184,846.628174 123.593292,846.610413  C127.972794,846.546631 127.393143,843.440674 127.523277,840.673523  C127.826286,834.230469 127.838112,834.228210 121.681839,835.667297  C120.053902,836.047913 118.406883,836.074768 116.390717,835.938721  C115.300682,835.714111 114.678535,835.349915 113.963715,834.500671  C114.505089,830.695801 118.374603,830.356750 120.431595,827.694946  C121.190392,827.348083 121.653877,827.263550 122.474358,827.335022  C124.005051,827.884338 125.025887,828.859497 126.772034,828.589966  C130.352417,827.114502 130.125885,824.037537 130.544403,820.920044  C130.453461,819.615479 130.547668,818.666992 130.713165,817.358765  C131.552002,814.039368 133.165070,811.171265 131.706985,807.619141  C131.230850,803.081665 134.884262,799.630127 133.536346,795.588745  C132.131836,797.128906 130.562119,796.728455 129.452911,794.833618  C128.279877,792.829834 127.580116,790.573120 126.690971,788.423157  C125.928802,786.580200 126.606262,784.802673 128.607956,784.630920  C130.893692,784.434814 131.376144,782.423401 133.139832,781.298767  C137.117935,780.684814 135.522110,777.647705 136.251160,775.368286  C137.596695,773.432678 138.364502,771.621704 138.751160,769.528992  C137.520737,770.644409 137.569595,772.252136 136.757187,773.832275  C134.561661,775.771667 137.203903,778.907776 134.268402,780.432556  C128.649719,777.921509 125.825302,772.771179 121.818962,768.862854  C120.674782,767.746826 121.333160,766.003296 121.427315,764.520935  C121.639534,761.179749 123.239250,758.108337 123.369240,754.318787  C121.490860,755.535828 121.346191,758.507446 118.858231,758.320862  C117.109947,758.189758 117.264862,756.434204 116.664093,755.045166  C115.031898,757.239075 113.864067,759.491150 112.957573,761.928528  C112.251938,763.825989 110.725945,764.880920 108.683441,764.751160  C106.195000,764.593079 106.196121,762.588074 105.875435,760.740540  C105.153137,756.579407 104.205986,752.549683 108.850235,749.703125  C110.632309,748.610901 110.396828,746.213013 110.729942,744.226013  C111.591476,739.087219 111.562172,733.633667 115.635315,729.267334  C117.682335,729.047363 119.160988,729.735107 119.418594,731.385315  C120.435196,737.897888 125.821091,734.170776 129.010757,735.473511  C131.673401,736.561096 132.062393,733.766052 132.753540,731.949585  C133.173233,730.846558 133.608536,729.606750 135.035965,729.661865  C136.662857,729.724731 137.130432,731.138977 137.541168,732.403442  C139.010620,736.927246 138.334854,741.645630 138.841187,745.733398  C139.219833,743.186401 139.364639,740.114807 139.147522,736.976074  C138.935318,733.908081 144.001205,730.418091 146.955612,731.382507  C148.836288,731.996460 149.305389,733.660583 148.252121,734.927917  C146.152344,737.454529 146.530960,740.115295 147.175247,742.757385  C147.521500,742.433350 147.526642,741.760254 147.470245,741.184509  C147.124710,737.657471 152.706696,734.987244 150.894653,733.005310  C147.711060,729.523315 150.228760,726.387451 149.714478,723.225647  C149.024521,718.983948 150.829086,715.659119 155.188522,713.662537  C158.301941,712.236633 161.161240,710.051636 163.739319,707.723999  C165.960144,705.718811 167.592819,706.465271 169.311844,708.183472  C174.770981,713.640137 173.084702,722.792480 166.023132,726.066040  C166.709915,725.692627 167.453415,725.450989 168.168579,725.143555  C169.230820,724.687012 170.371796,723.994873 171.273560,725.326111  C172.162811,726.638855 171.897034,728.231812 170.721786,728.898804  C164.504761,732.427307 166.197128,739.034424 164.538513,744.312012  C164.158463,745.521240 164.824585,747.074463 163.182526,747.841125  C165.951294,746.377991 162.942566,742.618042 166.250977,741.151245  C166.840149,741.051392 167.080963,741.039307 167.683044,741.063782  C169.210052,741.436218 170.400314,741.684509 171.884155,742.244141  C172.629776,742.696960 172.982635,743.046265 173.452682,743.782715  C173.734711,744.606812 173.765121,745.099609 173.628082,745.952148  C171.961945,748.343689 172.713104,750.891663 171.916382,753.460693  C171.416046,754.676086 170.632065,755.264587 169.950592,756.354492  C167.069489,759.051941 166.808609,762.664185 165.194275,765.978760  C164.628021,773.362732 164.806641,773.552856 173.946625,775.672729  C174.770630,778.325439 173.653351,779.752686 171.126862,780.565979  C167.769974,779.518005 168.031601,781.886108 168.419617,783.262146  C169.899109,788.508606 167.455338,793.889832 169.934250,799.344482  C171.869080,803.601929 168.751007,806.521362 163.899445,806.599976  C162.673401,811.568909 167.049377,814.756287 167.891663,819.428284  C167.894501,820.008545 167.869843,820.238892 167.748657,820.799805  C165.716873,824.062744 165.824463,826.805298 168.524597,829.653320  C168.768295,831.002930 168.436890,831.915955 167.836212,833.137085  C166.002655,835.727295 164.236252,837.814941 160.758530,837.891602  C158.501053,837.531433 158.009033,836.022217 157.591568,834.453430  C157.276352,833.268921 157.269684,831.838318 155.170715,831.918213  C152.600174,832.797424 150.961029,834.389282 149.300735,836.044678  C146.319016,839.017883 143.783066,842.269836 139.667953,844.270508  C136.318298,845.898987 133.720169,849.317078 134.692093,854.106506  C135.729401,859.218201 136.636230,864.133972 132.711411,869.105225  C130.874771,871.431519 130.097397,875.892456 132.771194,879.360046  C134.663559,881.814148 133.437943,884.417053 132.557312,887.280640  C130.125610,890.747437 128.299652,893.985291 128.442612,898.094482  C128.502335,899.811523 128.376984,902.221863 125.937408,902.259827  C123.699333,902.294739 123.268051,899.980957 122.837898,898.280396  C121.960953,894.813416 123.060432,891.378906 123.452118,887.948486  C123.600639,886.647705 124.049026,885.370728 124.018661,883.633667  C124.080421,881.853821 124.953056,880.800171 125.739487,879.302612  z\"})),_path369||(_path369=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M116.217422,729.744202  C113.529213,734.411011 112.419388,739.349915 112.236794,744.216064  C112.096977,747.942261 111.451195,750.710205 108.106941,752.424744  C106.257568,753.372803 105.890175,754.536194 106.627029,756.472412  C107.194466,757.963623 108.089828,759.495850 107.415451,761.269409  C107.047844,762.236328 106.928299,763.323486 108.249168,763.694092  C109.519562,764.050537 111.039185,763.373779 111.256981,762.471680  C111.895470,759.826782 113.535339,757.640930 114.310242,755.230469  C114.893204,753.417114 114.989380,751.951172 117.054489,752.158997  C119.993690,752.454834 118.410637,754.472473 118.241035,755.943542  C118.189758,756.388306 118.395935,756.862793 118.747940,758.701233  C120.234673,755.774292 121.211525,753.855225 122.184296,751.934021  C122.566177,751.179810 122.999084,750.375793 123.991592,750.595276  C125.049530,750.829163 124.889412,751.833252 124.980148,752.630371  C125.310081,755.528625 124.669479,758.292603 123.520668,760.896057  C120.322632,768.143127 126.346039,771.493591 129.991867,775.581421  C131.145325,776.874573 132.400818,778.157104 133.734680,779.789673  C134.393799,780.380615 134.540573,780.837891 134.220673,781.684692  C131.481750,782.963013 132.370438,785.682312 131.617630,787.276306  C129.695297,787.824768 129.961334,784.033081 127.942947,785.883850  C126.480171,787.225098 127.973320,788.179077 128.673630,789.238220  C129.205017,790.041809 129.702438,790.937317 129.921936,791.861450  C130.251190,793.247803 129.764130,795.253845 131.748901,795.436951  C134.069641,795.651123 131.594925,792.600586 134.171997,792.125305  C136.033295,795.505859 133.895386,799.666077 135.659897,803.060181  C132.829453,802.535950 132.814209,804.329102 133.002991,806.640991  C131.620209,808.069397 132.471848,809.849670 131.693802,811.131958  C130.752121,812.683960 129.942413,814.765503 127.777641,814.303833  C125.490196,813.815918 125.789383,811.595337 125.827103,809.777283  C125.854195,808.471558 126.691208,807.344727 126.607582,805.954346  C126.103218,812.193237 120.321808,814.292603 116.956215,818.249817  C113.596840,822.199768 111.550018,829.558594 113.732361,833.779541  C114.493614,834.259033 114.990318,834.518127 115.743874,834.889771  C117.711708,839.207275 115.460602,841.076477 111.879189,842.286987  C112.900528,843.990540 113.955544,845.963440 112.180893,847.907410  C110.684975,849.545959 108.790459,848.768860 107.048721,848.207642  C105.788773,847.801758 104.487694,847.444702 103.248268,846.235901  C102.999237,845.250000 102.999390,844.500000 102.999466,843.375000  C104.225533,839.875183 104.194870,836.520935 104.851440,832.941284  C105.290894,831.144104 106.504929,829.904541 106.004410,827.904236  C105.597984,826.478027 104.600861,825.264832 105.237144,824.255920  C108.535347,819.026367 109.120644,812.582092 112.947754,807.576233  C115.351410,804.432312 120.108536,804.562622 121.651779,800.773804  C120.260147,801.356201 118.758591,803.722168 116.841835,801.771912  C115.330666,800.234375 116.074226,798.427368 117.259323,796.804932  C118.992455,794.432190 117.141403,792.040100 117.261566,789.649109  C117.171982,791.833740 118.925003,794.124573 117.039391,796.172485  C115.369209,797.986450 113.261879,798.068787 111.093925,796.981567  C109.001839,795.932434 105.897537,795.968628 106.262360,792.325012  C106.496559,789.985779 106.826744,787.725403 108.243767,785.720825  C109.269051,784.270447 110.630501,782.866516 109.738144,779.636230  C107.145760,784.556152 103.526367,787.697754 103.115059,793.078186  C102.795471,797.258606 102.932053,801.695374 97.595322,804.263062  C93.053299,806.448425 91.293709,819.477844 94.397713,823.205444  C96.206390,819.918152 94.936356,816.086975 96.699150,813.032593  C97.278641,812.028503 97.495163,810.839661 98.026474,809.802307  C98.744637,808.400085 99.710251,807.122925 101.498459,807.707703  C102.992317,808.196167 103.203140,809.680847 103.157707,811.037170  C103.045525,814.387329 101.850845,817.551819 101.367821,820.849182  C100.571419,826.285706 100.495285,826.274536 105.366859,827.432251  C105.793251,828.756714 105.500542,829.676086 104.919434,830.889526  C102.771278,833.035034 102.196068,835.098755 103.171593,837.747131  C103.707077,839.200928 104.039139,840.868469 103.223465,842.742554  C100.513062,842.758850 101.152573,840.051086 99.820404,838.966003  C98.555824,837.935974 97.299004,834.270874 95.503670,838.642151  C95.191902,839.401245 94.181145,840.112976 93.549149,839.207764  C92.755928,838.071716 91.677696,836.638611 92.973076,835.174011  C96.781059,830.868530 93.754944,830.274902 90.195541,830.005493  C88.155128,829.851135 86.073158,829.801819 88.078880,826.951355  C88.805290,825.919067 89.471611,824.702454 88.426651,823.847351  C86.972931,822.657654 86.112129,824.474731 85.107292,825.113403  C83.579460,826.084534 83.776253,827.849243 84.072884,829.219238  C84.805832,832.604065 84.430687,834.448669 80.193810,834.164001  C77.327774,833.971497 78.189468,836.452759 78.172714,838.079712  C79.857384,838.857666 80.127647,837.588501 80.572243,836.826355  C81.197273,835.754822 81.911209,835.398071 82.979935,836.131897  C83.988770,836.824524 84.213020,838.388000 83.440559,838.604309  C81.412743,839.172058 82.201309,843.440918 78.437759,841.843079  C76.096550,840.848999 76.781387,844.577698 75.112862,845.407043  C72.195969,844.360046 76.282227,841.251892 73.326019,840.063843  C71.513443,835.950928 73.136948,832.818848 76.281357,829.870117  C76.852692,829.615173 77.080917,829.523926 77.639450,829.296997  C81.343254,827.048401 81.061989,824.539307 78.959641,821.627808  C75.777657,817.221191 75.804123,815.297546 79.093491,811.056213  C79.965240,809.932190 80.582024,808.898254 80.354675,807.465027  C80.072952,805.688904 80.555305,804.178894 82.240303,802.805786  C84.108147,801.896545 85.801231,801.443970 87.631447,800.619629  C88.008118,800.618652 86.999001,799.892212 87.100159,800.551147  C87.167702,800.991028 87.070442,800.876160 86.610245,800.685974  C86.212624,800.521667 85.672058,800.618835 84.923622,800.276855  C84.093018,795.162292 85.447235,790.847107 88.862083,787.255493  C89.530113,786.552917 90.650177,786.209656 90.787712,785.104065  C90.936096,783.911133 90.803085,782.575134 89.466629,782.211853  C88.367538,781.913086 87.463898,782.858826 87.346619,783.866089  C86.551712,790.693542 82.387489,795.498169 78.083832,800.400452  C75.782433,803.021790 75.263824,806.744324 74.430679,810.148621  C73.875938,812.415222 73.133293,814.448669 69.811691,813.241455  C68.416069,811.323792 68.349655,809.346558 69.236122,807.771667  C73.821358,799.625854 72.704880,790.378845 74.498230,781.704651  C74.904625,779.738953 74.935188,777.425842 77.541245,777.234985  C80.416046,777.024292 81.712410,778.803284 81.755905,782.593689  C82.713402,780.463501 82.717232,779.040588 82.961807,777.737244  C83.974121,772.342407 85.085518,767.106262 89.566643,763.199524  C93.874947,759.443359 94.952927,753.490234 98.628708,749.156067  C100.871513,746.511597 101.256111,742.762695 100.760948,738.803589  C100.738960,733.305725 106.102203,732.772827 108.531036,729.276123  C109.110161,728.388733 109.542099,727.829346 110.142059,726.956177  C110.842468,726.146240 111.420647,725.751648 112.423569,725.406982  C112.990707,725.346619 113.219162,725.361145 113.765930,725.497803  C115.018341,726.292664 115.402992,727.381348 116.220703,728.545593  C116.384621,729.056763 116.404259,729.273804 116.217422,729.744202  z\"})),_path370||(_path370=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M69.743706,813.291260  C72.556549,813.179993 72.588730,811.531738 73.119354,809.585022  C74.513840,804.468933 75.794090,799.584534 80.293762,795.459167  C82.254570,793.661316 86.863319,790.301453 85.322784,785.190186  C84.442314,782.268921 87.080727,780.726990 89.290619,779.609619  C90.962723,778.764221 91.890121,780.206665 91.857445,781.594666  C91.806435,783.760620 95.387909,786.685303 90.548836,788.041382  C88.534599,788.605835 86.933372,789.626343 87.714195,792.631226  C88.339066,795.036011 84.442703,796.372192 85.000473,799.617676  C84.872803,801.090637 84.326324,801.934814 83.239410,802.799438  C81.359207,807.021545 82.025284,811.882812 78.168472,815.208557  C77.425659,815.849182 77.443779,818.578125 79.406296,819.996582  C84.094276,823.384766 82.608650,827.148987 79.350609,830.927124  C78.836029,830.866821 78.668091,830.733643 78.248245,830.800293  C76.641685,831.040466 74.957687,831.146484 75.149033,832.875977  C75.432259,835.436218 73.423050,837.021973 73.014603,839.614014  C72.205101,841.998108 71.217781,843.775635 69.566879,845.322815  C68.293396,846.516357 67.242943,848.557983 69.843636,849.759033  C71.200821,850.385864 72.218651,850.867615 71.627800,852.634949  C71.071342,854.299438 69.957283,854.400330 68.490196,854.117126  C67.907516,854.004639 67.247437,854.293274 66.607155,854.401917  C66.694931,854.922058 66.671555,855.446838 66.807304,855.491821  C71.389961,857.012024 73.201324,858.991455 69.350594,863.552185  C65.638657,867.948425 67.828873,874.615356 64.201141,879.302856  C63.633358,880.036499 64.209908,881.221069 64.992607,881.983704  C65.974045,882.940002 66.314713,884.471741 65.151031,884.971863  C61.012589,886.750732 62.642242,890.496399 62.108288,893.383972  C61.733105,895.413025 61.440594,897.106323 59.801571,898.609924  C57.447384,900.769714 57.795147,906.413635 60.387417,908.145447  C63.248631,910.056824 62.779659,911.640320 60.377247,913.344299  C56.538464,916.067139 55.488216,918.989441 59.607586,922.386353  C60.256115,922.921082 60.935974,923.664551 60.134510,924.440979  C59.318645,925.231567 58.212234,925.022888 57.420853,924.321228  C56.052517,923.108032 54.434944,922.331604 52.964481,923.513489  C51.546875,924.652832 52.850998,926.382568 53.195911,927.661316  C54.238667,931.527161 54.536800,934.909790 51.611454,938.351013  C49.795235,940.487488 49.734043,943.491882 50.803997,946.408752  C51.264801,947.664917 51.610771,949.528015 50.088879,950.510925  C48.550220,951.504639 47.942894,949.341736 46.338989,949.070312  C44.221157,947.465820 44.535877,945.412415 44.670143,943.020447  C48.291096,935.003235 47.364891,926.952698 46.109959,919.186279  C45.459286,915.159485 45.534206,911.736145 47.097954,908.153687  C49.331573,903.036621 52.334282,898.053406 48.662247,892.247314  C47.876076,891.004333 49.178383,889.404053 49.764439,888.043091  C54.421112,877.228943 57.085945,865.784058 59.988163,854.452087  C61.112610,850.061584 62.721283,845.991638 64.326279,841.816833  C67.424416,833.758301 68.233238,825.177124 69.028397,816.260254  C68.921761,815.063232 69.074226,814.293335 69.743706,813.291260  z\"})),_path371||(_path371=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M102.985794,846.410339  C105.025764,845.822754 106.870201,846.361877 108.666901,847.282898  C110.126228,848.031006 111.668106,848.329895 111.891876,846.030518  C112.028831,844.623169 112.335983,842.680237 109.654999,844.058777  C108.654320,844.573303 108.243835,843.482117 108.235359,842.665527  C108.222176,841.394287 109.216034,840.936523 110.242973,841.065063  C114.331352,841.576782 115.125793,838.698425 115.951248,835.376343  C119.501198,834.460876 123.087311,834.422974 126.217499,832.240540  C127.165649,831.579407 128.951401,831.567505 130.002853,832.456482  C131.417267,833.652405 129.914597,834.856873 129.528763,835.992004  C128.534973,838.915527 129.418732,841.947754 128.907715,844.855164  C128.552505,846.876099 128.671585,850.090698 124.813843,847.921936  C122.901665,846.846985 122.097343,849.200195 122.510056,849.766479  C125.552994,853.942017 122.984177,857.150452 121.176636,860.628662  C120.808800,861.336365 121.355843,862.519470 121.740578,863.742920  C122.126686,864.169495 122.253365,864.336487 122.188652,864.752930  C117.648216,862.650574 115.678101,866.130371 113.346817,868.595215  C112.784508,869.189819 113.073685,870.672852 111.275597,870.092041  C109.573181,868.777466 108.184647,867.430786 105.814186,868.278259  C106.998955,869.507507 108.514275,868.697876 109.766960,869.753906  C109.495277,872.361450 107.398743,874.228943 109.097282,877.263794  C110.214859,879.260620 106.309105,880.277893 106.095375,882.524292  C105.806580,885.559387 104.410927,885.829285 101.794838,884.842896  C100.738846,884.444702 99.198257,885.212646 99.004066,886.971497  C98.840645,888.451721 98.412621,889.833618 97.008461,890.565918  C95.288658,889.381409 97.108780,887.931580 96.231377,886.586914  C93.559753,887.573608 93.593880,890.278076 92.463402,892.251648  C91.357956,894.181458 89.604858,895.740295 87.899284,897.739563  C85.835663,894.616028 87.416214,891.314148 88.450172,889.254333  C89.923012,886.320007 90.854248,882.343201 94.953964,881.161804  C97.698242,880.371094 98.439064,878.091248 97.658714,875.607605  C96.511902,871.957642 97.951241,869.066650 100.785812,867.552429  C103.458595,866.124573 103.040436,863.359436 104.720627,861.542786  C107.170784,858.893860 104.022324,857.423462 102.711487,855.466370  C100.862892,852.706299 102.517509,849.706421 102.985794,846.410339  z\"})),_path372||(_path372=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M124.690628,882.776245  C125.060097,889.126343 122.786949,895.364746 126.112732,901.501282  C127.514320,896.545471 125.728798,890.437012 131.966583,887.129517  C133.425858,887.501282 134.004608,888.119507 134.746277,889.418091  C135.250229,894.583069 136.048630,899.082214 135.130234,903.774841  C134.357529,907.723022 134.067688,911.193359 127.696396,909.116577  C131.067886,914.556030 127.309494,918.820862 127.410492,923.518433  C127.478622,926.687683 124.051788,925.876526 121.410217,925.997986  C120.881935,923.533508 121.098450,921.086304 120.478729,918.601379  C120.162453,917.333191 117.737297,913.939148 122.844635,915.074341  C124.694214,915.485413 123.712135,911.849915 123.923958,910.065125  C124.115601,908.450317 123.079880,906.712830 121.943138,906.267883  C114.256088,903.258789 117.916931,898.994019 120.902321,894.728760  C118.434685,893.613098 115.944466,897.394104 114.120537,894.150818  C113.021904,892.197266 108.908401,891.330933 112.498405,887.638245  C113.232323,886.883240 113.217216,882.805420 113.317757,880.241699  C113.372551,878.844666 113.917877,877.678955 115.667068,877.059631  C116.874741,880.940674 118.880524,884.860229 115.831039,888.794678  C114.510902,890.497803 116.358856,891.012207 117.278984,891.794373  C118.623276,892.937012 119.848923,892.362549 120.697662,891.219666  C122.309631,889.048767 123.310844,886.614746 122.996994,883.405579  C123.394203,882.648499 123.857170,882.499390 124.690628,882.776245  z\"})),_path373||(_path373=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M59.001450,989.750610  C56.882774,990.154907 54.965977,989.888367 54.327316,987.423584  C53.749077,985.192078 55.193317,984.082703 56.878799,983.195190  C57.706158,982.759521 59.028168,982.640808 58.335304,981.246216  C57.716499,980.000671 56.523094,979.947266 55.331005,980.385254  C53.845188,980.931335 51.933693,981.362488 51.651031,979.466614  C51.337139,977.361145 53.387238,978.328125 54.546741,978.212158  C57.096455,977.957275 55.522091,975.911316 56.006401,974.375000  C57.297047,974.273132 58.714355,975.041260 59.850376,974.741882  C65.897911,973.148315 63.896488,978.803833 65.211189,981.011414  C66.704803,983.519348 64.078880,984.607788 61.389851,984.994019  C59.779095,985.859497 60.233826,987.471863 59.226822,988.776367  C59.000366,989.017090 59.001377,989.506104 59.001450,989.750610  z\"})),_path374||(_path374=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M89.155548,993.130676  C90.654045,991.425781 88.074371,989.038086 90.443565,987.916138  C91.149940,987.581543 91.666901,987.790405 92.131348,988.415283  C93.488907,990.241699 92.583557,991.873840 91.766113,993.531494  C91.321587,994.432983 90.709679,995.547974 91.516396,996.322632  C95.765907,1000.403015 92.164803,1004.307312 91.390709,1008.277222  C90.886726,1010.861816 89.077011,1011.380127 86.909599,1010.903320  C83.966637,1010.255859 85.936836,1008.186523 86.084389,1006.888000  C86.603081,1002.322937 89.971825,998.382202 89.155548,993.130676  z\"})),_path375||(_path375=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M45.711098,941.751221  C46.010345,944.041626 46.005348,946.084290 45.994450,948.565002  C45.483257,949.871765 44.977966,950.740540 44.233364,951.804688  C42.957539,953.680420 43.791550,955.629211 43.137409,957.715210  C42.959187,958.266602 42.866306,958.479492 42.571671,958.975708  C39.289165,960.166077 38.590103,964.535034 34.472832,964.343994  C31.396263,961.686157 31.332958,958.740540 33.972675,956.441101  C37.670162,953.220215 39.527203,949.065674 41.289486,944.747437  C42.044884,942.896423 42.621162,940.789978 45.711098,941.751221  z\"})),_path376||(_path376=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M96.730965,1022.763733  C96.974632,1023.432739 96.974060,1023.869019 96.965569,1024.631592  C95.565399,1025.083374 95.329720,1026.324829 94.617203,1027.182007  C93.777214,1028.192505 93.048149,1030.078857 91.204407,1029.250000  C89.794403,1028.616333 89.853447,1027.010742 90.056404,1025.740967  C90.597244,1022.356873 91.300552,1018.997986 91.981239,1015.637634  C92.179794,1014.657410 92.566498,1013.633606 93.721252,1013.529053  C94.972710,1013.415710 95.175743,1014.626648 95.663071,1015.436768  C97.011398,1017.677856 96.110054,1020.178284 96.730965,1022.763733  z\"})),_path377||(_path377=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M100.101456,904.620239  C100.536674,906.527710 101.601372,907.938110 101.042328,909.681519  C95.187904,906.479370 93.564156,902.108765 96.978500,896.117126  C96.007446,900.381348 100.529991,900.999634 100.101456,904.620239  z\"})),_path378||(_path378=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M110.249443,869.999695  C109.190086,870.094299 108.353279,870.088196 107.578842,870.304932  C106.180473,870.696350 104.673340,871.613281 103.517746,870.168945  C102.692596,869.137451 103.433792,867.958740 104.166054,867.059387  C105.410561,865.531006 107.147278,865.870117 108.702263,866.236450  C110.127579,866.572144 110.510658,867.984314 110.950340,869.622070  C110.834335,869.998169 110.667221,869.998779 110.249443,869.999695  z\"})),_path379||(_path379=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M122.005432,865.369385  C121.997971,864.835754 121.998688,864.669128 121.999710,864.252441  C126.296562,865.307129 127.580910,868.026062 125.356903,871.925293  C123.893463,869.971008 122.293266,868.169128 122.005432,865.369385  z\"})),_path380||(_path380=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M42.196915,958.271362  C42.400253,956.057007 41.008869,953.726013 43.627052,952.092041  C44.116016,952.309692 44.309437,952.565369 44.787384,952.883484  C45.004032,954.391479 45.007610,955.782959 45.011280,957.591919  C44.284386,958.901794 43.582813,959.918884 42.196915,958.271362  z\"})),_path381||(_path381=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M118.724846,910.992554  C118.010948,909.628723 117.582886,908.342468 118.765053,907.623657  C119.765259,907.015503 120.566032,908.055847 121.168861,908.823608  C121.914474,909.773254 122.475090,911.006958 121.518242,911.938354  C120.663620,912.770325 119.749725,911.765503 118.724846,910.992554  z\"})),_path382||(_path382=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M60.268402,969.155884  C61.662655,967.629517 62.720802,968.120178 63.463253,969.431763  C63.923042,970.243958 63.492630,971.099670 62.680069,971.397766  C60.965008,972.026794 60.404854,970.912170 60.268402,969.155884  z\"})),_path383||(_path383=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M125.139198,882.681152  C124.551643,883.000000 124.107384,883.000000 123.329834,883.000122  C121.729279,880.457336 124.181717,880.169861 125.671570,879.050415  C125.751770,880.116150 125.517136,881.239258 125.139198,882.681152  z\"})),_path384||(_path384=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M59.351402,988.934326  C59.171535,987.637573 58.476082,985.964417 60.666851,985.074951  C60.830708,986.369812 61.509377,988.036926 59.351402,988.934326  z\"})),_path385||(_path385=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M102.958511,913.552856  C102.283241,913.181152 102.271027,912.807495 102.756561,912.477234  C102.857910,912.408325 103.092575,912.411560 103.191185,912.483582  C103.661797,912.827515 103.647316,913.200989 102.958511,913.552856  z\"})),_path386||(_path386=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M116.271408,876.959473  C116.292595,876.511169 116.585182,876.022339 116.877777,875.533508  C117.076172,875.703125 117.274574,875.872803 117.472961,876.042419  C117.162910,876.334595 116.852859,876.626770 116.271408,876.959473  z\"})),_path387||(_path387=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M83.999069,1015.001221  C83.890816,1014.876282 83.783493,1014.750122 83.676170,1014.623901  C83.750748,1014.667725 83.825310,1014.711548 83.950653,1014.876465  C84.001434,1014.997559 84.000000,1015.000000 83.999069,1015.001221  z\"})),_path388||(_path388=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M207.323761,792.781250  C207.637009,798.925049 205.976410,804.126892 201.994278,808.562378  C200.783218,809.911438 200.461487,811.816589 200.628906,813.207642  C200.906189,815.511536 203.322708,818.184570 198.358597,817.852295  C198.063217,817.832458 197.274918,819.290955 197.388412,819.944885  C198.744263,827.756226 194.337738,834.337646 192.906281,841.541687  C192.697067,842.594543 192.145386,843.416565 191.199234,843.843384  C189.766052,844.489929 188.457825,846.773071 186.905960,845.500732  C184.902527,843.858337 188.071350,842.758240 188.081207,841.629578  C188.126190,836.472534 191.862686,832.421143 191.983673,827.384583  C192.039444,825.063354 192.484329,822.146545 188.526428,824.712463  C187.960922,825.079102 186.668655,824.324768 185.356155,824.043091  C184.189316,822.042725 186.224701,821.262695 186.860001,819.536743  C187.651596,818.071350 187.944656,816.819092 188.105392,815.509766  C188.486526,812.405151 189.783218,810.885193 193.130508,813.283508  C192.351257,810.528320 189.336685,811.552551 188.328400,809.265991  C187.926208,807.649292 188.307587,806.492249 189.053070,805.054932  C193.938553,801.330688 197.232422,797.391113 196.379318,790.897217  C196.007797,788.069031 198.845245,785.144653 196.537262,782.046387  C196.126175,781.494446 196.721542,780.392700 197.294891,779.805298  C201.178207,775.827209 200.954651,770.832092 200.901947,765.509888  C201.120651,764.516113 201.225815,763.698303 201.672867,763.327393  C205.398880,760.236206 204.496582,757.178894 201.685028,753.732666  C201.394287,751.741760 201.265656,750.118164 202.935333,748.636230  C204.435928,747.536560 205.437897,746.551270 204.641174,744.497314  C204.137665,741.973572 204.283600,740.159973 207.571381,740.390259  C209.210144,741.417603 209.516312,742.995667 210.400986,744.179932  C211.192245,745.239136 211.670120,746.486572 212.311005,747.371338  C215.119797,743.066101 218.670929,739.130554 219.632782,733.691589  C219.961349,731.833740 221.924210,730.112915 224.180267,730.658875  C226.439148,731.205566 225.477051,733.350647 225.444702,734.900330  C225.415970,736.278198 225.838974,737.512329 226.367783,738.734070  C227.766922,741.966736 227.452118,744.866333 224.773300,747.351135  C223.075134,748.926392 222.595245,751.010864 222.396393,753.558350  C222.299713,754.363464 222.200958,754.812744 221.934860,755.566956  C220.806686,757.719666 219.249893,759.440125 220.657196,762.091797  C221.056137,764.268005 220.576706,766.039490 220.086151,768.132568  C219.666336,769.395142 219.069290,770.290222 219.470093,771.678101  C219.552460,772.193909 219.567383,772.404724 219.540894,772.932678  C218.738083,774.821350 218.191849,776.415649 219.049652,778.490479  C219.314880,780.573975 219.045807,782.203613 217.673615,783.867188  C213.255356,786.059265 212.701263,782.916504 211.548111,779.423950  C211.454391,782.658691 211.046494,785.130371 210.316666,787.905518  C209.665726,789.873108 209.330902,791.635498 207.323761,792.781250  z\"})),_path389||(_path389=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M242.746964,779.759277  C242.548828,785.994690 243.797714,792.147583 241.063751,797.915344  C240.571991,798.952820 240.418533,800.791504 239.241272,800.496887  C233.520935,799.065063 236.264282,803.126831 235.988007,805.612732  C235.300354,808.762634 236.008286,811.511475 236.006256,814.611328  C235.563843,816.076660 235.114609,817.297485 234.203094,817.942505  C228.423233,822.032532 227.589325,828.721008 225.153015,834.959351  C221.667007,840.317932 219.421967,845.862915 217.283722,851.793884  C216.447189,851.820190 215.900772,851.642822 215.176270,851.232666  C214.572403,850.489685 214.050751,850.338074 213.212372,850.789673  C215.181458,853.814026 214.815369,860.545959 212.321487,863.489136  C209.834366,866.424438 209.554367,867.118347 209.830154,870.165833  C207.509338,870.187805 205.481384,869.364685 204.508682,867.467041  C203.401077,865.306396 205.230164,863.922913 206.707306,862.488708  C207.886917,861.343384 209.976212,859.793640 206.324371,858.763916  C204.402542,858.221985 205.087570,856.654602 205.978394,855.579773  C210.197952,850.489075 210.331604,843.827637 212.773178,838.055786  C213.331360,836.736328 213.014557,834.997009 215.423187,835.526978  C217.109116,835.898010 217.018616,834.151917 217.384125,833.181335  C218.175430,831.080200 218.809799,828.919922 219.515671,826.761475  C212.841171,825.891418 211.767303,831.622009 209.257324,835.549011  C207.413483,834.584595 208.418030,833.441528 208.708145,832.476196  C211.341080,823.716248 214.690979,815.268982 219.882294,807.664734  C221.648270,805.077881 223.029755,802.518555 220.973694,799.446716  C219.477844,797.211914 221.487198,795.373840 221.686569,793.332886  C221.895630,791.192871 221.905289,789.033508 222.001831,786.441284  C221.168884,785.042786 221.459625,784.121826 222.364105,782.959961  C226.155533,781.665955 227.355148,784.327332 228.508057,786.640808  C229.295807,788.221558 229.615692,790.059204 230.053909,791.846436  C230.563293,791.151062 229.729736,790.337280 229.978195,789.864380  C232.300018,785.444641 233.640274,780.613403 235.771378,776.146973  C236.642868,774.320496 238.894409,774.690125 240.486694,776.147583  C241.490662,777.066284 241.408356,778.641418 242.746964,779.759277  z\"})),_path390||(_path390=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M234.940277,887.653625  C234.459412,891.199036 234.030579,894.208618 229.278320,892.764404  C227.435501,892.204346 228.440079,895.778748 226.390427,896.114563  C225.889206,896.196716 225.301849,896.907959 225.095200,897.458008  C222.526352,904.297424 218.592697,908.856567 210.189514,906.770142  C209.608337,907.375305 209.149918,907.527100 208.313400,907.225342  C206.285019,903.424255 207.844330,900.324097 209.625046,897.408386  C211.659546,894.077148 212.870483,890.460632 214.000610,886.394409  C214.021027,885.407166 214.203308,884.870544 214.800369,884.208374  C215.009338,884.007080 215.000000,884.000000 215.003815,884.004517  C216.387161,882.766113 216.796249,880.363892 219.620483,880.539307  C221.301361,881.286560 220.581360,884.004639 222.443542,883.677368  C224.551804,883.306946 223.834808,881.165039 224.015900,879.300537  C224.378357,877.455322 225.127426,876.232483 226.677322,875.157471  C227.522018,874.454285 228.027634,873.893494 228.766510,873.167603  C229.608292,872.134949 230.375000,871.475464 231.707565,871.087219  C235.625565,869.050842 231.915512,866.088074 233.108841,863.182983  C233.331924,861.890259 232.444717,862.082092 232.217407,861.294250  C231.656921,857.318542 234.237183,854.793823 236.016327,852.221130  C238.335876,848.866943 239.917831,845.469177 240.410446,841.144897  C243.486404,839.081543 245.218491,840.214783 246.391724,843.051819  C247.761093,846.363098 248.551285,849.669067 247.199951,853.204163  C246.245941,855.699829 245.423325,858.234192 246.441010,860.955688  C246.673508,861.577393 246.695847,862.605774 246.208496,862.838989  C241.399261,865.140564 242.245667,869.395020 242.035980,873.534912  C241.919678,875.831360 241.028992,878.042847 237.747009,878.792297  C234.617767,879.506897 233.500183,884.041077 234.940277,887.653625  z\"})),_path391||(_path391=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M235.216461,887.882263  C233.129425,886.758179 229.120193,885.835571 232.125015,882.978699  C234.235764,880.971863 234.097290,875.324402 239.615601,876.761841  C239.064438,874.408569 243.373627,871.724792 239.319962,868.383484  C237.888901,867.203857 240.426804,865.424072 241.952133,864.392212  C243.748352,863.177124 246.752487,862.561340 244.185562,859.190186  C243.342392,858.082825 244.250259,856.273499 245.027878,854.967590  C247.589752,850.665283 246.115036,846.462952 244.746368,842.271179  C244.279144,840.840393 242.928238,841.094666 241.400528,841.002563  C239.353622,842.214478 237.356812,842.914856 236.253372,844.911438  C235.561249,846.163818 234.360703,847.316711 232.903870,845.327148  C233.665237,843.320862 235.085052,841.393005 231.353607,841.010376  C230.603119,841.345276 230.142120,841.522217 229.263214,841.400757  C226.919434,837.980957 229.227127,835.628174 230.878006,833.319946  C232.116714,831.588013 233.692688,830.112366 234.312241,827.617432  C234.647491,825.613403 233.564224,824.247803 233.339264,822.348145  C233.655472,819.835571 234.964584,817.916626 234.998260,815.331177  C236.249542,812.093018 232.319717,809.024597 235.630341,806.082642  C240.248947,806.522766 235.522095,809.702271 237.720459,810.959595  C240.382248,813.215149 240.919525,816.109619 241.074066,819.492920  C241.241791,820.237915 241.335434,820.661133 241.485413,821.396240  C241.573502,821.913391 241.597153,822.120422 241.624115,822.635559  C241.608597,823.347534 241.597351,823.751709 241.629913,824.453125  C241.724625,825.599365 242.262390,826.257019 242.666336,827.321838  C243.024521,829.670959 242.391342,831.591187 242.046722,833.553772  C241.871033,834.554443 240.804382,836.026123 242.702682,836.370300  C244.256821,836.651978 245.180374,835.561523 245.375839,834.045593  C245.847412,830.388428 245.219803,826.791321 244.519653,822.892944  C243.724213,820.521667 244.018539,818.172546 242.411652,816.033203  C242.259109,815.248291 242.288651,814.794312 242.529999,814.029541  C244.148407,812.643311 244.660538,810.667297 246.675674,809.897705  C247.837479,810.562500 247.986969,811.416687 247.996826,812.667114  C249.576569,819.723938 253.891129,825.826904 251.767090,833.399658  C250.861130,836.629761 250.818893,840.311890 253.154465,843.458496  C254.261368,844.949768 253.537643,846.680176 252.957123,848.244690  C250.362000,855.238708 248.508545,862.223877 252.410416,869.408020  C253.012482,870.516541 252.461624,871.677002 251.311951,872.798340  C245.101715,875.152161 243.720367,880.651428 241.331528,885.822998  C239.915100,885.675110 238.811768,885.341492 237.358231,885.002686  C236.564926,885.427002 236.502228,886.012390 236.181519,886.790771  C235.877640,887.318665 235.686615,887.569458 235.216461,887.882263  z\"})),_path392||(_path392=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M198.413757,934.019775  C196.236832,934.111938 194.208969,933.583801 193.299454,935.837769  C192.471725,937.889099 195.414749,937.656189 195.438141,939.505493  C192.419571,940.492920 190.038864,941.422668 193.227295,945.440369  C194.480682,947.019775 191.940582,950.278931 190.493912,952.352234  C189.333435,954.015198 188.904037,955.422852 189.239288,957.372864  C189.530472,959.066650 192.415588,960.593994 190.589523,962.103638  C186.925888,965.132446 186.581558,971.481079 181.259155,972.267395  C178.834717,972.625549 177.118668,973.059265 175.331024,974.932251  C170.695572,973.879150 172.393631,970.490051 171.788544,967.653198  C170.515823,961.686584 175.503494,958.354004 176.816925,953.254517  C176.559784,952.607483 176.210190,952.156494 176.023712,951.288574  C175.996399,950.555542 175.997177,950.111084 175.999268,949.333313  C176.151230,948.057312 176.832397,947.570862 177.862457,947.023865  C178.647064,946.676453 179.191284,946.518738 179.772308,945.935791  C180.114777,945.148804 179.841415,944.664001 179.522156,943.865356  C179.134079,941.755981 180.436142,940.603943 181.463547,938.992737  C183.160400,938.098999 184.854416,939.303101 186.160065,936.697388  C187.996521,933.032166 192.930847,931.865112 195.069504,927.781067  C195.895493,926.203796 198.390732,927.313904 199.817154,929.307922  C200.390289,931.323730 200.354004,932.876953 198.413757,934.019775  z\"})),_path393||(_path393=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M138.635376,998.091125  C139.061066,999.316406 138.847244,1000.991455 140.428848,1001.377258  C142.459595,1001.872559 142.271729,999.710327 142.573578,998.712402  C143.932800,994.218750 146.130371,989.922607 145.297699,984.894104  C144.932297,982.687378 146.357422,981.489258 148.732849,982.809204  C151.868958,984.551880 154.866608,983.478699 155.938034,980.186096  C156.139938,979.565735 155.957764,978.765259 156.277222,978.248413  C157.352371,976.509277 159.252014,976.346252 161.040359,976.129639  C161.671127,976.053284 162.523773,976.319031 162.462524,977.145630  C162.339935,978.799805 162.141968,980.563416 160.065353,980.986877  C158.394577,981.327637 158.011154,982.441711 158.013596,983.900818  C158.026443,991.546143 155.756149,998.764221 153.765198,1006.020264  C153.317703,1007.651184 152.262451,1009.115234 151.387024,1010.854675  C149.361816,1009.048340 150.173660,1007.287048 150.017990,1005.746826  C149.846970,1004.054688 149.749298,1002.205994 148.074158,1001.449585  C146.343445,1000.668091 144.627319,1001.776123 143.730637,1003.084534  C141.958817,1005.670044 139.827957,1004.947510 138.178940,1003.651428  C136.246201,1002.132385 136.285233,999.978821 138.635376,998.091125  z\"})),_path394||(_path394=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M199.243851,929.275757  C197.080429,928.492249 194.252396,926.174194 194.918915,930.963623  C195.174271,932.798462 193.560745,932.368347 192.765991,932.943054  C190.170654,934.819946 186.216553,935.501526 186.637573,940.038208  C186.720184,940.928345 185.982117,941.526428 185.128922,941.763062  C182.647675,942.451233 184.497009,938.984619 182.297470,939.047241  C181.249069,940.569702 178.346329,940.975464 179.765747,943.790405  C180.796051,944.171265 181.889450,944.092590 182.293961,944.582642  C182.995972,945.433228 181.866653,945.926697 181.183807,946.750122  C180.565781,947.426453 179.982468,947.482056 179.217773,947.813599  C178.195816,948.247803 177.391037,948.495544 176.293427,948.871643  C172.402161,943.807617 173.161957,941.028625 179.637604,937.011597  C180.229218,934.396179 182.013748,934.044434 184.158707,933.969421  C186.837509,933.875671 189.217194,932.994873 190.931885,930.348511  C191.467468,925.520386 194.274948,924.177002 198.668457,924.758301  C201.471741,925.167542 205.078979,924.680054 205.264496,927.655273  C205.398956,929.811829 208.637238,933.571960 203.388000,934.994507  C199.162476,934.912842 200.557892,931.435242 199.243851,929.275757  z\"})),_path395||(_path395=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M199.063477,924.662354  C195.653748,925.096191 193.437332,927.163879 191.157043,929.695679  C190.363068,930.159363 189.727676,930.329285 189.087997,930.481201  C187.675507,930.816772 186.259262,932.865417 184.840973,930.539185  C183.349457,928.092773 186.127426,927.742493 186.804062,926.372803  C189.524811,920.865540 193.782532,917.066040 198.871506,913.931458  C200.375717,913.005005 199.306305,911.971130 198.568665,911.068176  C197.866043,910.208130 196.656952,909.336426 197.990768,908.182129  C198.999771,907.308899 200.279099,906.747803 201.672287,907.211731  C203.255798,907.738831 202.986313,909.015259 202.459702,910.063416  C201.215851,912.539307 205.222168,913.241272 204.015900,916.609985  C202.865433,919.822693 201.576019,922.248291 199.063477,924.662354  z\"})),_path396||(_path396=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M232.712631,845.157227  C235.605820,846.368958 235.540955,843.876343 235.866333,842.723206  C236.636353,839.994263 238.251358,840.100891 240.651703,840.959351  C243.207901,848.306091 236.753983,852.232788 234.326614,857.712891  C233.811401,858.876160 232.975418,859.864746 233.002411,861.615967  C233.176437,862.166321 233.352890,862.332581 233.263443,862.746948  C232.997559,862.995117 233.000000,863.000000 232.997742,862.998779  C232.014267,863.562988 231.084244,864.264099 230.038589,864.658752  C228.804169,865.124573 227.277313,865.463806 226.472473,864.087341  C225.645844,862.673584 227.014755,862.033020 228.015991,861.515198  C229.431824,860.782837 229.836197,859.852722 229.286163,858.298706  C228.628174,856.439697 228.883698,854.520691 230.602966,853.409241  C233.966660,851.234863 230.298325,847.648499 232.712631,845.157227  z\"})),_path397||(_path397=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M235.714386,826.752686  C236.403641,831.874084 231.121872,833.504944 229.976486,837.510254  C229.711731,838.436157 229.332733,839.329346 228.994980,840.614868  C228.884415,841.916321 228.139130,842.243774 227.232361,842.818359  C227.696625,849.530396 222.446564,854.046753 221.217651,859.940796  C221.056320,860.714600 219.914124,861.058472 219.085938,860.677063  C218.090057,860.218567 218.344635,859.321533 218.761108,858.567871  C219.756363,856.766907 220.163620,854.854614 219.999786,852.405884  C217.890884,847.924255 220.903641,844.857300 222.282928,841.587585  C223.034256,839.806519 224.176773,838.228943 224.262390,835.834045  C224.678894,834.791382 225.020355,834.137451 225.872330,833.418945  C229.252151,832.091125 228.366470,827.862366 231.611816,826.444214  C232.148117,826.185547 232.375931,826.105225 232.966217,825.968506  C234.089676,825.898865 234.796127,826.075378 235.714386,826.752686  z\"})),_path398||(_path398=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M209.189850,788.249390  C209.267624,785.036072 210.315002,782.184875 210.075882,779.135498  C209.968994,777.772339 210.499008,776.256348 212.261017,776.490112  C213.719299,776.683594 213.760345,777.898743 213.435059,779.222107  C212.839630,781.644470 213.419861,783.512512 216.619247,783.982666  C217.117905,784.157715 217.248093,784.322754 217.190979,784.741455  C214.252670,787.234009 214.312347,790.021057 215.501633,792.982727  C216.745621,796.080505 214.702011,799.043945 212.795258,799.370911  C209.574554,799.923218 211.930481,795.966187 210.265045,794.272278  C208.664581,792.294434 210.239227,790.260803 209.189850,788.249390  z\"})),_path399||(_path399=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M224.753769,834.808960  C225.666183,841.126831 221.113358,845.650696 220.010498,851.618530  C219.248032,851.999756 218.496689,851.999512 217.369476,851.998413  C216.699432,848.198914 218.903152,844.893372 219.099976,841.166260  C219.246292,838.395508 224.024109,838.973755 223.732819,835.254150  C224.163925,834.870239 224.332977,834.742920 224.753769,834.808960  z\"})),_path400||(_path400=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M220.345520,881.052795  C217.881958,880.976990 217.659119,883.748352 215.345093,883.964600  C215.421356,879.855042 215.738983,875.615356 221.784531,876.630981  C223.836716,876.975708 223.998322,872.995605 226.796509,874.771362  C227.040405,876.451721 226.052948,877.377502 225.146317,878.708740  C223.837662,880.261597 222.450241,881.056274 220.345520,881.052795  z\"})),_path401||(_path401=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M187.701660,819.682556  C188.038528,821.872742 186.047699,822.155273 185.153473,823.708862  C182.949707,824.232666 183.006058,825.764587 182.989624,827.627441  C182.240067,828.001831 181.495575,828.003662 180.378601,828.008911  C178.667679,826.536560 179.547577,824.950012 179.899231,823.001953  C180.708893,821.041809 181.478119,819.549194 183.666962,818.838867  C185.262985,818.564087 186.372772,818.758057 187.701660,819.682556  z\"})),_path402||(_path402=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M207.861664,907.323730  C208.450500,906.997559 208.890945,906.997559 209.661621,906.997559  C210.303116,907.549133 210.506042,908.216858 210.947662,908.628540  C211.941177,909.554688 214.375015,908.156311 214.410965,910.401611  C214.431274,911.669434 212.810913,912.256775 211.717545,911.846130  C209.998032,911.200256 206.994568,911.982117 207.332916,908.555786  C207.363678,908.244324 207.582016,907.951416 207.861664,907.323730  z\"})),_path403||(_path403=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M139.346313,997.928711  C139.645660,994.320923 140.782578,990.827209 143.281509,987.816467  C143.216141,991.522827 142.100769,994.893311 139.346313,997.928711  z\"})),_path404||(_path404=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M199.005402,929.385376  C202.330368,929.418152 199.946503,933.571838 202.787598,934.730347  C203.004501,935.012207 203.003296,935.503723 203.002869,935.749390  C201.485352,935.009033 198.750366,938.725464 198.010254,934.353516  C199.391022,932.842224 198.897690,931.235168 199.005402,929.385376  z\"})),_path405||(_path405=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M217.377472,784.996826  C217.002106,784.828003 217.000565,784.660950 216.993378,784.243286  C217.323029,782.252747 217.658356,780.512756 217.996521,778.386414  C218.389099,777.597717 218.862213,777.363831 219.822784,777.341736  C221.038925,777.704590 221.543152,778.306213 221.892838,779.516541  C221.869644,781.545471 221.449692,783.078613 220.305328,784.742493  C219.246704,784.996277 218.498978,784.997437 217.377472,784.996826  z\"})),_path406||(_path406=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M144.202576,961.703735  C144.263748,960.748596 144.217926,959.885010 144.613495,959.562195  C145.694717,958.679749 146.575684,957.197937 148.271423,957.604431  C148.539825,957.668762 148.878922,959.061829 148.664108,959.252197  C147.368484,960.399780 147.511063,963.945862 144.202576,961.703735  z\"})),_path407||(_path407=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M208.860840,788.306152  C212.765625,789.074280 211.712662,791.156067 210.057846,793.675781  C209.217773,793.686951 208.434326,793.373901 207.335632,793.028564  C207.588089,791.535767 208.155807,790.075317 208.860840,788.306152  z\"})),_path408||(_path408=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M220.173462,785.229492  C220.014771,783.519714 219.881851,782.019165 220.853149,780.338867  C223.344208,779.053284 223.636673,780.388306 223.242447,782.614502  C222.690643,783.791504 222.376389,784.578186 222.031860,785.682373  C221.451889,785.821350 220.902191,785.642639 220.173462,785.229492  z\"})),_path409||(_path409=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M231.782013,870.760498  C231.878983,872.414124 231.044037,872.996521 229.348999,872.992920  C227.605057,869.859436 229.033585,869.622925 231.782013,870.760498  z\"})),_path410||(_path410=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M227.347107,842.995422  C227.487991,842.416687 227.976013,841.833435 228.723846,841.121155  C229.431900,840.994690 229.880157,840.997253 230.664429,841.000488  C230.348785,842.412781 229.219757,843.031189 227.347107,842.995422  z\"})),_path411||(_path411=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M162.955627,984.550720  C162.283539,984.181885 162.275635,983.810852 162.755951,983.483337  C162.856506,983.414795 163.089584,983.417480 163.187485,983.488892  C163.655945,983.830566 163.638870,984.201233 162.955627,984.550720  z\"})),_path412||(_path412=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M213.333542,851.000000  C213.101120,850.360840 213.162613,849.598450 213.960617,849.553406  C214.260056,849.536499 214.593094,850.115356 214.954498,850.711304  C214.554276,851.000000 214.110367,851.000000 213.333542,851.000000  z\"})),_path413||(_path413=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M140.271240,957.959534  C140.293091,957.511841 140.586166,957.023682 140.879227,956.535461  C141.077133,956.705139 141.275070,956.874756 141.472992,957.044434  C141.162811,957.335938 140.852631,957.627502 140.271240,957.959534  z\"})),_path414||(_path414=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M214.724976,884.041504  C214.829758,884.553955 214.650162,885.100769 214.237366,885.826172  C213.000397,885.101746 213.229202,884.477600 214.724976,884.041504  z\"})),_path415||(_path415=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M175.785950,951.180237  C176.312607,951.469299 176.629547,951.938599 176.975067,952.701538  C176.121094,952.805420 175.004089,952.820435 175.785950,951.180237  z\"})),_path416||(_path416=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M236.232727,886.833374  C236.176804,886.460876 236.354980,885.907288 236.770584,885.175598  C236.827621,885.549133 236.647232,886.100708 236.232727,886.833374  z\"})),_path417||(_path417=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M931.000000,1013.664124  C929.229980,1015.461304 929.071777,1018.984131 925.288025,1018.121582  C924.476379,1017.459167 923.936096,1016.934875 923.205444,1016.201843  C923.494873,1012.981323 921.028198,1008.325195 927.261597,1008.411804  C927.699768,1008.417847 927.284241,1007.353943 926.297607,1007.051636  C925.136658,1006.351929 925.050110,1005.227478 924.211609,1004.216431  C923.045105,1000.832092 921.031799,997.521851 925.599609,995.020325  C926.492188,995.581787 926.984436,996.163635 927.738342,996.872681  C928.119202,997.167786 928.238342,997.335510 928.181213,997.756592  C928.443420,1000.430237 931.047241,1000.622192 931.723572,999.716064  C933.749634,997.001404 937.053772,997.366150 939.638794,995.504883  C940.373047,1002.195068 935.850403,1006.055054 932.166809,1010.697021  C931.754456,1011.194458 931.535828,1011.420532 931.173218,1011.835693  C931.000122,1012.441467 931.000061,1012.886047 931.000000,1013.664124  z\"})),_path418||(_path418=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M927.825195,963.154419  C928.837402,962.435730 928.987305,961.582336 928.996338,960.332642  C930.144470,958.650513 931.613647,958.340515 933.633545,958.827393  C934.711121,958.632690 935.405457,958.040588 936.162842,957.944153  C939.036743,957.578125 943.159363,956.877319 944.053528,959.505920  C944.881836,961.940613 940.786438,961.580200 938.775208,962.187988  C936.532104,962.865723 935.154480,963.557068 935.443970,966.540100  C935.612244,968.273865 935.531616,971.130310 932.138550,971.456360  C933.900574,973.919250 937.377319,973.906494 937.982544,977.322998  C935.688843,977.545410 934.416382,975.216003 932.215271,975.830933  C931.547546,976.005127 931.107239,976.003784 930.336670,976.001587  C929.794861,975.765747 929.575256,975.538696 929.173828,975.158569  C928.484497,973.033936 924.570801,971.330200 929.348267,969.005371  C931.342407,968.034912 926.324463,967.076050 927.012817,964.371948  C927.198120,963.754944 927.413269,963.523926 927.825195,963.154419  z\"})),_path419||(_path419=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M902.045532,878.630249  C900.640564,878.820496 898.208801,879.010010 900.020081,876.764465  C901.543762,874.875549 901.085571,873.162781 901.015991,871.252502  C900.772827,864.578125 901.887146,858.104797 903.998779,851.392151  C909.069763,851.233398 905.196960,854.843628 906.132141,856.639038  C902.943359,857.945312 904.043396,860.766724 904.054749,863.033875  C904.080811,868.212036 903.704102,873.303650 902.045532,878.630249  z\"})),_path420||(_path420=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M904.048218,850.647888  C899.819824,851.204346 897.569336,847.874573 894.575928,845.264526  C897.510925,845.264526 900.445984,845.264526 903.683472,845.132751  C908.144836,846.682800 904.076843,848.532288 904.048218,850.647888  z\"})),_path421||(_path421=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M943.591370,1018.000000  C945.824402,1020.068237 944.656128,1021.126648 942.339233,1021.956055  C940.062012,1022.137207 938.234253,1021.259583 938.581116,1019.390808  C939.043945,1016.896851 941.597168,1018.430359 943.591370,1018.000000  z\"})),_path422||(_path422=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M980.632141,1022.011597  C981.162109,1024.351562 984.080444,1024.952881 984.455627,1027.591309  C981.765442,1027.701416 979.494202,1027.435913 978.412415,1024.627441  C977.755249,1022.921265 978.575745,1022.131592 980.632141,1022.011597  z\"})),_path423||(_path423=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M940.019165,989.489136  C941.594482,991.395081 940.798340,992.558228 939.069824,993.387512  C938.447754,993.686035 937.598389,993.753357 937.393188,993.074219  C936.793518,991.089600 938.159546,990.163391 940.019165,989.489136  z\"})),_path424||(_path424=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M933.988403,958.748840  C932.668030,959.733765 931.265930,960.121399 929.371704,959.997803  C928.484009,958.951111 928.204102,957.948059 929.753418,957.117676  C930.685059,956.421082 931.456116,956.264587 932.655212,956.764648  C932.997559,957.000000 933.000000,957.000000 933.000000,957.000854  C933.224365,957.220093 933.440674,957.446228 933.818970,957.841980  C933.989014,958.003845 933.989075,958.500488 933.988403,958.748840  z\"})),_path425||(_path425=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M973.795959,1011.792969  C974.438538,1011.996765 974.883972,1011.998535 975.663452,1012.001343  C976.684631,1012.215942 977.068909,1012.698608 977.115906,1013.693115  C975.526245,1013.992615 974.024048,1014.116333 972.337402,1013.149414  C970.590210,1012.877930 970.002380,1012.048889 970.016296,1010.349365  C970.452820,1010.000244 970.893372,1010.000488 971.664551,1010.000366  C972.520813,1010.539185 973.062622,1011.062195 973.795959,1011.792969  z\"})),_path426||(_path426=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M913.831787,888.811584  C915.080200,890.073608 915.378052,891.291382 914.278015,892.442566  C913.801208,892.941467 912.955872,892.942688 912.573303,892.299072  C911.710205,890.847168 911.723267,889.504395 913.831787,888.811584  z\"})),_path427||(_path427=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M986.370483,932.760559  C987.282959,932.415344 988.335693,932.225342 988.311401,932.808105  C988.246521,934.363525 987.039551,935.282959 985.618408,935.709412  C984.974304,935.902832 984.365356,935.463013 984.276123,934.707642  C984.122131,933.404053 985.141418,933.175781 986.370483,932.760559  z\"})),_path428||(_path428=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M944.738281,994.940674  C942.997864,991.779358 946.807922,993.992859 946.930603,992.438904  C947.431580,992.775757 948.379333,993.136780 948.362610,993.445618  C948.231567,995.867310 946.267517,994.644836 944.738281,994.940674  z\"})),_path429||(_path429=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M981.766846,1020.178406  C982.000000,1020.000000 982.497375,1020.000977 982.746094,1020.001709  C983.199829,1019.759583 983.429077,1019.542236 983.842468,1019.175171  C984.871887,1019.137268 986.165405,1018.687988 986.378296,1019.893433  C986.601807,1021.159363 984.994263,1020.853333 984.207275,1021.758240  C983.250549,1021.999878 982.501160,1021.999817 981.377075,1022.001099  C981.002441,1022.002441 981.000000,1022.000000 980.998779,1021.998779  C981.176270,1021.450623 981.355042,1020.903687 981.766846,1020.178406  z\"})),_path430||(_path430=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M931.448792,992.856689  C929.801453,990.305054 932.207581,990.730835 933.229675,990.253479  C933.762390,990.004639 934.656677,990.423828 934.476807,991.300110  C934.185059,992.721497 933.001221,992.914551 931.448792,992.856689  z\"})),_path431||(_path431=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M939.011780,913.363037  C940.099609,913.115295 941.469360,912.812012 941.728882,914.408569  C941.838989,915.085999 941.420227,915.716614 940.624329,915.732056  C939.274414,915.758179 939.124512,914.740540 939.011780,913.363037  z\"})),_path432||(_path432=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M932.956299,956.663086  C932.248169,957.000000 931.498840,957.000000 930.374756,957.000000  C930.000000,956.250549 930.000000,955.501160 930.000000,954.377075  C931.512573,954.098450 932.577759,954.755737 932.956299,956.663086  z\"})),_path433||(_path433=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M917.398071,897.380615  C917.852722,896.711609 918.046997,895.550476 918.696655,896.252075  C919.319031,896.924316 919.382935,898.425110 918.593384,898.939148  C917.622559,899.571167 917.356018,898.501038 917.398071,897.380615  z\"})),_path434||(_path434=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M942.751221,954.025208  C943.945801,953.643677 943.929993,954.334351 943.720093,954.908875  C943.625732,955.167175 943.063477,955.254456 942.713440,955.419312  C942.664062,955.014648 942.614685,954.609985 942.751221,954.025208  z\"})),_path435||(_path435=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M937.849487,1024.789551  C937.563599,1025.646484 937.042908,1025.968506 936.152466,1025.210449  C936.437805,1024.351318 936.958862,1024.031494 937.849487,1024.789551  z\"})),_path436||(_path436=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M939.001221,913.000000  C938.557983,913.000183 938.113525,913.000305 937.333313,912.999023  C937.100586,912.361450 937.161011,911.599426 937.958252,911.558472  C938.259338,911.543030 938.590820,912.120056 938.954224,912.714722  C939.000000,913.002441 939.000000,913.000000 939.001221,913.000000  z\"})),_path437||(_path437=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M948.001221,926.998779  C948.491638,927.292297 948.980774,927.587097 949.469971,927.881836  C949.298950,928.080933 949.127991,928.280090 948.957031,928.479248  C948.664001,928.168579 948.370911,927.857788 948.037720,927.274719  C947.997559,927.002441 948.000000,927.000000 948.001221,926.998779  z\"})),_path438||(_path438=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M915.449463,901.956360  C915.818237,901.285339 916.189209,901.277588 916.516602,901.756958  C916.585144,901.857300 916.582275,902.090271 916.510864,902.188049  C916.169250,902.656067 915.798889,902.638367 915.449463,901.956360  z\"})),_path439||(_path439=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M930.642212,905.572632  C931.383301,905.365356 931.652039,905.624695 931.537292,906.200073  C931.513428,906.319458 931.343750,906.479858 931.222778,906.497986  C930.640808,906.585144 930.398682,906.301270 930.642212,905.572632  z\"})),_path440||(_path440=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M963.478333,1021.465820  C963.519836,1021.443665 963.436829,1021.487915 963.478333,1021.465820  z\"})),_path441||(_path441=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M933.875061,957.791260  C933.683350,957.880005 933.431152,957.686523 933.116211,957.212524  C933.308472,957.121765 933.562195,957.314087 933.875061,957.791260  z\"})),_path442||(_path442=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M928.155273,997.912781  C928.003662,997.841614 928.002441,997.673279 928.000610,997.252441  C928.101868,997.271912 928.203796,997.543762 928.155273,997.912781  z\"})),_path443||(_path443=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M977.520813,1000.534729  C977.479492,1000.556702 977.562134,1000.512756 977.520813,1000.534729  z\"})),_path444||(_path444=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M931.212830,1011.880371  C931.121887,1011.688049 931.314697,1011.433105 931.790466,1011.114258  C931.883057,1011.307251 931.690857,1011.563110 931.212830,1011.880371  z\"})),_path445||(_path445=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M937.001221,913.001221  C936.920410,913.035034 936.838318,913.067627 936.876892,913.048828  C936.997559,912.997559 937.000000,913.000000 937.001221,913.001221  z\"})),_path446||(_path446=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M685.648499,978.009644  C686.002441,978.000000 686.498840,977.998840 686.746948,977.998169  C687.324768,979.742554 687.654419,981.487488 687.992065,983.616211  C687.675476,984.003479 687.314392,984.102783 687.032104,983.995361  C684.864441,983.170227 686.873474,988.921509 684.495911,985.986145  C683.107178,984.271484 681.820068,980.341675 685.648499,978.009644  z\"})),_path447||(_path447=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M704.692749,996.139771  C705.182495,998.349792 703.949890,999.176880 701.392944,998.995789  C700.878662,999.164124 700.750000,999.330627 700.810669,999.749817  C701.000000,1000.446838 701.000000,1000.891296 701.000000,1001.669067  C698.993225,1001.895691 698.899231,1000.164124 698.491394,998.852661  C697.949646,997.111084 697.735657,995.535278 700.381409,997.294495  C701.906311,998.308594 703.069885,996.730957 704.692749,996.139771  z\"})),_path448||(_path448=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M781.205078,926.735474  C780.250000,926.999939 779.500000,927.002319 778.375000,927.005981  C778.088745,924.735596 781.443054,924.314575 780.997803,921.372253  C781.450134,921.008118 781.892883,921.006470 782.667847,921.003662  C784.590942,923.442444 783.819092,925.195740 781.205078,926.735474  z\"})),_path449||(_path449=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M688.001587,984.383484  C691.970276,984.441162 690.591248,987.903320 692.135498,990.751465  C688.755615,989.320557 687.974243,987.305237 688.001587,984.383484  z\"})),_path450||(_path450=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M718.667114,994.000122  C719.447937,994.807556 719.895935,995.612671 720.437073,996.585205  C718.625244,996.643555 717.651367,995.961304 717.051514,994.301086  C717.446655,993.991150 717.890442,993.994507 718.667114,994.000122  z\"})),_path451||(_path451=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M783.648682,911.607056  C784.817932,911.315186 785.383728,911.822754 785.553894,912.704102  C785.664001,913.274475 785.263794,913.663452 784.692505,913.536377  C783.816040,913.341553 783.318481,912.770508 783.648682,911.607056  z\"})),_path452||(_path452=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M787.240479,895.800354  C786.838440,896.004639 786.668823,896.003052 786.244751,895.999512  C786.240540,895.093201 785.522095,893.454956 787.265015,893.654236  C788.146729,893.755005 787.876465,894.872742 787.240479,895.800354  z\"})),_path453||(_path453=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M694.717529,1003.481750  C694.453003,1002.446594 694.972046,1002.129578 695.643616,1002.258972  C695.957214,1002.319336 696.457642,1002.905151 696.398987,1003.128174  C696.206543,1003.861145 695.560242,1003.875793 694.717529,1003.481750  z\"})),_path454||(_path454=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M655.576660,1027.356689  C655.367004,1026.614502 655.628235,1026.348755 656.202637,1026.463745  C656.322144,1026.487671 656.482239,1026.657104 656.500671,1026.778076  C656.589478,1027.360840 656.305359,1027.601562 655.576660,1027.356689  z\"})),_path455||(_path455=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M627.282837,982.960205  C627.178162,982.450195 627.356201,981.902832 627.767151,981.176514  C628.999756,981.897522 628.769409,982.520020 627.282837,982.960205  z\"})),_path456||(_path456=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M724.751831,992.996460  C724.851318,993.712341 724.878540,994.610107 723.770569,994.433533  C723.659058,994.415771 723.656982,993.711243 723.805725,993.158508  C724.007324,992.991516 724.503662,992.995300 724.751831,992.996460  z\"})),_path457||(_path457=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M786.667480,916.001099  C786.897156,916.637146 786.840027,917.399231 786.044312,917.443420  C785.744324,917.460144 785.411377,916.884705 785.049194,916.292053  C785.448242,916.003235 785.891541,916.001587 786.667480,916.001099  z\"})),_path458||(_path458=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M786.535767,878.479309  C786.557983,878.520996 786.513489,878.437622 786.535767,878.479309  z\"})),_path459||(_path459=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M787.477173,909.465332  C787.519043,909.442932 787.435364,909.487671 787.477173,909.465332  z\"})),_path460||(_path460=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M508.195312,970.672058  C506.708984,972.761414 505.447540,974.565308 504.052185,976.667847  C503.422211,977.560547 502.893555,978.126892 502.303894,979.004456  C501.937775,979.730591 501.683655,980.188843 501.296600,980.873047  C495.169769,983.753845 492.923279,982.585327 490.263641,975.363159  C489.753510,973.977844 489.684601,972.473511 489.133972,971.075073  C487.787598,967.655884 487.641571,964.731995 492.799713,964.587952  C491.445984,962.799011 489.661926,962.091064 488.608276,960.177063  C488.324341,959.038452 488.509674,958.321167 489.281616,957.408386  C491.751587,955.849731 494.010284,955.570007 496.714478,956.760559  C498.837952,959.411682 500.535187,961.576233 504.315063,961.395569  C506.489288,961.291626 508.317596,963.521851 510.133453,965.499512  C510.489319,967.672852 508.749817,968.739258 508.195312,970.672058  z\"})),_path461||(_path461=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M488.744629,959.854736  C491.498413,961.553040 493.946228,963.136780 496.377411,964.709839  C495.971771,965.336060 495.864197,965.727661 495.640228,965.812683  C493.685089,966.555054 490.431366,964.842163 489.771942,966.994690  C488.842865,970.027344 491.334808,973.049744 492.114136,976.121948  C492.929962,979.338318 495.674133,982.555847 500.725403,981.079346  C500.436035,982.466797 499.708405,983.834595 498.878967,985.523376  C498.184265,986.913696 497.077057,987.548645 496.265717,988.828064  C495.955963,990.390869 495.170715,991.090149 493.574524,991.392456  C491.792938,991.063416 491.287659,989.938843 490.946960,988.282104  C490.825653,986.832031 491.396240,985.345459 490.573334,984.757996  C489.612274,984.071899 489.447174,985.862366 488.324127,986.356384  C487.545044,986.668640 487.068878,986.689026 486.253052,986.468811  C485.576202,985.965881 485.327972,985.554688 485.121735,984.728638  C485.080261,984.131897 485.091980,983.892639 485.171051,983.303711  C485.907013,979.283386 485.773956,975.601196 485.284180,971.592590  C485.125580,968.596252 482.075500,965.942810 485.432312,963.172363  C488.316437,963.317749 486.670685,960.160278 488.744629,959.854736  z\"})),_path462||(_path462=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M476.903839,1017.681763  C472.891632,1019.175720 472.205566,1015.081177 469.228149,1013.779541  C468.595032,1013.314697 468.542908,1013.110596 468.531067,1012.592224  C468.723053,1011.877319 468.908600,1011.493042 469.283325,1010.842773  C468.193573,1003.457275 474.754242,1002.239197 478.400818,998.900574  C479.389648,997.995178 481.098755,997.745361 482.859131,997.194336  C483.711365,997.124084 484.191254,997.208557 484.974487,997.567505  C487.591309,1001.279358 485.233185,1004.087341 483.812103,1006.975952  C482.865356,1008.900269 481.252472,1010.418884 480.121338,1012.645752  C479.117462,1014.514221 478.156067,1016.013245 476.903839,1017.681763  z\"})),_path463||(_path463=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M485.004395,998.359436  C484.317413,998.179565 483.964111,998.138489 483.347809,998.052368  C480.788849,995.126160 484.737885,993.047363 484.163452,990.019104  C484.881653,988.071472 486.381744,987.525879 488.060944,986.593750  C489.468048,985.878113 490.492645,985.956482 491.745911,986.869751  C492.298157,988.374146 492.600647,989.554443 493.067810,991.086853  C493.121887,992.050659 493.011322,992.662476 492.870789,993.588501  C492.437225,994.467896 491.985016,994.992493 491.271606,995.749634  C490.519745,997.187805 490.005768,998.374084 489.248413,999.772339  C487.223846,1000.867859 486.386322,999.423096 485.004395,998.359436  z\"})),_path464||(_path464=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M484.755310,998.605652  C486.272125,997.789856 487.268433,998.901855 488.700073,999.832886  C486.633789,1004.488464 484.116211,1008.896362 480.369019,1012.851074  C478.305176,1011.505005 479.574371,1010.707153 480.669495,1009.538940  C483.414520,1006.610779 485.392426,1003.272034 484.755310,998.605652  z\"})),_path465||(_path465=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M512.283325,962.378418  C513.773865,961.678589 514.977295,960.794983 516.497681,959.858032  C516.898193,963.622742 515.807617,966.715576 511.395264,967.996277  C510.290222,967.094055 511.125824,965.898193 510.482056,964.634033  C510.684326,963.382080 511.099396,962.614990 512.283325,962.378418  z\"})),_path466||(_path466=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M530.103577,940.950928  C529.522522,938.357849 531.718323,937.395264 533.417358,935.729370  C536.885132,939.897583 533.979675,940.606934 530.103577,940.950928  z\"})),_path467||(_path467=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M523.093872,950.906250  C523.044922,949.232544 523.760254,947.819824 525.474426,946.677490  C526.149841,948.588806 528.035339,951.440247 523.093872,950.906250  z\"})),_path468||(_path468=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M510.906860,964.835327  C512.142517,965.814026 511.640900,966.644836 511.125122,967.742798  C510.203461,968.919189 509.379272,969.829773 508.262756,970.848999  C507.759430,969.197571 508.644775,967.864502 509.808044,966.271362  C509.845276,965.395691 510.046417,964.980774 510.906860,964.835327  z\"})),_path469||(_path469=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M517.199829,959.860474  C516.778625,958.012207 517.444153,956.612061 519.487793,955.702271  C519.816772,957.389099 520.825012,959.722961 517.199829,959.860474  z\"})),_path470||(_path470=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M496.408844,988.997986  C495.899170,987.478699 496.148712,986.170044 498.431000,985.897034  C499.033875,987.490356 498.231628,988.438477 496.408844,988.997986  z\"})),_path471||(_path471=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M526.308716,945.978760  C526.370972,944.710388 526.943176,943.511536 528.478821,942.632690  C529.022583,944.201416 529.126465,945.835876 526.308716,945.978760  z\"})),_path472||(_path472=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M502.486298,979.154175  C502.059875,978.305176 502.255890,977.501465 503.594788,977.036255  C504.033783,977.928284 503.581940,978.578186 502.486298,979.154175  z\"})),_path473||(_path473=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M491.351196,995.951965  C491.028137,995.098694 491.332245,994.387451 492.540894,993.976440  C492.942749,994.858032 492.668976,995.593079 491.351196,995.951965  z\"})),_path474||(_path474=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M535.446838,944.956116  C535.816833,944.281921 536.188843,944.273865 536.517395,944.755615  C536.586243,944.856445 536.583557,945.090210 536.511963,945.188354  C536.169250,945.657654 535.797424,945.641174 535.446838,944.956116  z\"})),_path475||(_path475=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M846.227661,935.754028  C844.232056,935.026001 842.464172,934.054443 840.348145,933.041443  C839.872253,932.833740 839.744446,932.667480 839.808350,932.251831  C840.238647,930.341553 846.328613,923.891235 847.500854,924.297974  C849.776428,925.087585 849.489380,927.408203 849.848267,929.926514  C848.841614,931.878113 846.962280,932.372559 846.858093,934.601318  C846.670349,935.121399 846.562805,935.315979 846.227661,935.754028  z\"})),_path476||(_path476=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M846.293884,936.025879  C846.000000,935.997559 846.000000,935.500000 846.000000,935.251221  C847.169250,933.481384 848.816345,932.335938 849.778687,930.239075  C852.140198,929.718933 854.059448,931.399475 856.345886,930.535583  C857.680115,930.031555 857.932129,931.349487 857.946655,932.372375  C857.960205,933.334717 857.691284,935.054199 856.655762,934.419739  C852.939209,932.142578 853.342896,935.078796 852.501099,937.065369  C852.179504,937.824097 850.543274,938.025696 849.250854,938.739746  C847.867493,939.265991 847.624573,938.565491 847.776001,937.339355  C847.529236,936.684753 847.058472,936.369446 846.293884,936.025879  z\"})),_path477||(_path477=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M862.148071,984.621704  C860.982605,980.795410 860.980957,980.790039 858.074463,981.692078  C856.740356,982.106140 855.874817,981.355835 855.075012,980.490479  C854.233276,979.579712 853.797852,978.546387 854.508972,977.359924  C855.072327,976.419922 855.940979,976.165955 857.027588,976.201416  C861.464478,976.346497 865.429871,980.867737 864.443970,985.046082  C864.113403,986.447021 862.960876,985.783020 862.148071,984.621704  z\"})),_path478||(_path478=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M839.629150,932.015991  C840.000000,932.002441 840.000000,932.501221 840.000000,932.750610  C840.139648,933.945740 840.169006,934.924805 840.442566,935.830078  C840.963684,937.554016 840.552551,939.416870 839.379333,940.230896  C837.716858,941.384460 836.599915,939.533936 835.265503,938.199951  C836.588196,936.130188 836.192993,932.845764 839.629150,932.015991  z\"})),_path479||(_path479=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M831.008362,924.372437  C831.000000,923.551758 831.000000,923.108459 831.000000,922.332520  C835.948669,922.685303 834.265320,927.210693 835.391479,930.012939  C835.725769,930.844727 833.706726,931.019653 833.355774,930.043579  C832.697021,928.211304 830.921265,926.884033 831.008362,924.372437  z\"})),_path480||(_path480=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M856.001221,921.001221  C855.820557,922.293152 855.359924,923.621033 855.526001,924.865295  C855.743408,926.493103 855.435913,927.650452 853.755005,927.708862  C851.746216,927.778564 852.118774,926.046021 852.012146,924.783997  C851.817993,922.485413 852.342041,920.770447 855.588989,921.002075  C855.997559,920.997559 856.000000,921.000000 856.001221,921.001221  z\"})),_path481||(_path481=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M833.421021,1007.047363  C832.109558,1008.065674 830.791138,1008.725830 829.524658,1009.473938  C828.870789,1009.860168 828.284973,1010.938904 827.520996,1010.070984  C827.070740,1009.559448 827.063782,1008.530334 827.104980,1007.747070  C827.153015,1006.832214 827.792480,1006.045654 828.739868,1006.514832  C830.328491,1007.301575 831.952454,1005.255432 833.421021,1007.047363  z\"})),_path482||(_path482=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M859.028687,946.627380  C858.487793,948.132385 856.482178,948.522644 855.190796,947.789001  C854.307129,947.286926 853.890076,946.436890 854.509460,945.821106  C856.032349,944.307312 857.489380,945.182861 859.028687,946.627380  z\"})),_path483||(_path483=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M804.880310,1001.214600  C804.998291,1000.835388 804.999023,1000.668274 804.999878,1000.250610  C805.167053,1000.000610 805.334167,1000.001221 805.751831,1000.003357  C806.002075,1000.448730 806.001709,1000.892578 806.001892,1001.669434  C806.002441,1002.002441 806.002808,1002.500000 806.002625,1002.748779  C806.889465,1004.287781 806.982788,1005.522949 805.372681,1006.835388  C804.553650,1007.004028 804.109741,1007.003235 803.332886,1007.001221  C803.302307,1005.577637 803.604614,1004.155212 803.952271,1002.370117  C804.306152,1001.884277 804.561279,1001.690735 804.880310,1001.214600  z\"})),_path484||(_path484=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M804.507446,966.762512  C804.883667,967.918396 804.630371,968.650818 803.621399,968.767212  C802.896484,968.850952 802.309387,968.379578 802.479919,967.624817  C802.676453,966.755066 803.338074,966.294800 804.507446,966.762512  z\"})),_path485||(_path485=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M828.241882,988.281860  C829.320923,986.933044 830.026367,987.496094 830.460632,988.521545  C830.577148,988.796631 830.241638,989.549194 829.954651,989.656189  C829.040710,989.996948 828.419739,989.547546 828.241882,988.281860  z\"})),_path486||(_path486=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M847.755127,937.226929  C848.176880,937.547058 848.353760,938.094116 848.763062,938.819763  C849.138916,939.688049 849.742737,940.914124 848.543823,940.753235  C846.417603,940.467896 846.937988,938.858643 847.755127,937.226929  z\"})),_path487||(_path487=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M801.544434,991.791809  C801.941956,992.760925 802.186035,993.563171 801.435608,994.110779  C801.306274,994.205078 800.556519,993.787292 800.418457,993.466187  C800.034058,992.572510 799.850708,991.620422 801.544434,991.791809  z\"})),_path488||(_path488=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M864.252625,927.495483  C863.408203,927.861084 862.764893,927.838013 862.598389,927.100281  C862.547485,926.875000 863.061584,926.309692 863.375610,926.258301  C864.043640,926.148743 864.552612,926.473267 864.252625,927.495483  z\"})),_path489||(_path489=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M834.700562,938.002075  C834.871643,938.792053 834.748779,939.668213 833.687927,939.573914  C833.370728,939.545654 833.101807,938.974304 832.810791,938.651855  C833.340820,938.435974 833.870911,938.220093 834.700562,938.002075  z\"})),_path490||(_path490=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M827.040466,1001.271362  C827.488708,1001.292908 827.977478,1001.585815 828.466187,1001.878662  C828.296387,1002.076843 828.126648,1002.275024 827.956909,1002.473267  C827.664978,1002.163086 827.372986,1001.852905 827.040466,1001.271362  z\"})),_path491||(_path491=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M828.447754,993.956177  C828.817688,993.281006 829.189819,993.273560 829.518494,993.755432  C829.587280,993.856384 829.584778,994.090210 829.513184,994.188416  C829.170410,994.658081 828.798462,994.641907 828.447754,993.956177  z\"})),_path492||(_path492=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M827.728516,954.040283  C827.707092,954.488464 827.414124,954.976990 827.121155,955.465454  C826.922974,955.295715 826.724792,955.126038 826.526611,954.956299  C826.836731,954.664368 827.146912,954.372437 827.728516,954.040283  z\"})),_path493||(_path493=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M132.242249,887.186768  C131.630814,884.119080 133.924957,880.579468 129.638855,878.628418  C128.721832,878.210938 131.118347,867.566406 132.222900,866.671570  C136.963333,862.831421 133.458206,858.267334 133.051590,854.180969  C132.531143,848.950684 135.624435,843.377747 140.936172,841.969971  C144.239136,841.094543 145.668564,838.126526 147.570969,835.775696  C149.449524,833.454407 151.355225,831.365112 154.722351,830.901123  C158.621048,833.744324 156.258041,836.228821 154.564270,839.108276  C154.345200,840.228516 154.054977,840.916443 153.298126,841.766602  C150.220917,843.647156 148.597244,842.913940 148.153671,838.933289  C147.809296,842.749023 141.349609,842.946289 144.701569,847.828247  C146.523102,852.071655 143.239624,854.976562 142.383118,858.471741  C142.138794,859.468689 140.863464,860.190247 141.377686,861.588196  C141.714249,859.151367 143.482040,858.094849 145.662384,857.053711  C151.083084,857.263733 148.491974,860.495361 147.544525,862.097900  C146.363510,864.095642 145.588074,865.372559 147.819794,867.023010  C149.770370,868.465576 149.001678,870.313354 147.933578,871.843750  C146.972778,873.220337 145.900269,873.993958 143.804047,872.997559  C140.983841,871.657104 139.429474,872.965515 138.849335,876.234070  C138.054291,880.713379 138.092194,885.457947 135.264160,889.756104  C134.079041,889.201843 133.652130,887.933289 132.242249,887.186768  z\"})),_path494||(_path494=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M110.908661,1024.276489  C114.737366,1023.840149 116.921463,1022.001404 115.453705,1018.311401  C114.759735,1016.566711 118.127541,1015.476440 115.295319,1014.053223  C115.147362,1010.934509 118.405052,1009.238342 118.420059,1005.987244  C118.425026,1004.912720 120.232330,1004.658142 121.359451,1004.704773  C122.550491,1004.753967 122.812706,1005.830811 122.952454,1006.854797  C123.462341,1010.590820 123.986832,1014.324707 124.492996,1018.061157  C124.557861,1018.539978 124.705360,1019.094727 124.537239,1019.498962  C124.230698,1020.236206 123.749588,1021.459412 123.283714,1021.486328  C117.895119,1021.798645 119.206665,1031.139771 112.222153,1029.222778  C112.683044,1027.219116 110.383263,1026.247314 110.908661,1024.276489  z\"})),_path495||(_path495=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M176.756958,830.739014  C177.021667,834.396729 177.823990,838.143127 172.781616,838.978943  C172.118378,839.088928 171.582794,840.455505 171.139832,841.318054  C169.721115,844.080383 169.798065,848.054199 164.743195,847.447205  C162.964508,847.233643 162.719589,850.227661 161.264771,851.786743  C160.394592,848.035156 161.843201,844.440552 162.997818,840.398254  C165.503448,837.810852 166.780304,834.529358 169.821899,832.368042  C170.212189,831.954163 170.380737,831.798279 170.834656,831.444641  C171.939590,830.780518 172.845123,830.535461 174.078064,830.159668  C175.159668,830.014343 175.857254,830.126648 176.756958,830.739014  z\"})),_path496||(_path496=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M146.002274,856.601379  C144.961731,859.598572 141.816772,861.007507 141.970627,864.315491  C142.009033,865.141052 141.327286,865.952271 140.340836,865.703491  C138.851151,865.327759 139.572144,864.224426 139.739334,863.316833  C140.686920,858.172974 142.747177,853.430969 144.989578,848.373169  C145.801758,847.785278 146.603165,847.585510 147.396271,847.357056  C148.538315,847.028076 149.874207,846.647339 150.523499,847.881775  C151.317307,849.391113 149.790344,849.697937 148.853195,850.325378  C146.789978,851.706726 145.587997,853.578796 146.002274,856.601379  z\"})),_path497||(_path497=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M153.311081,839.269287  C153.054901,836.387573 157.594803,835.050171 155.044846,831.352539  C155.434067,828.900024 156.390060,828.987549 157.612289,830.396118  C159.128586,832.143677 158.697052,834.501526 159.736511,836.741394  C160.376984,837.385803 160.524124,837.846252 160.215805,838.690674  C159.993896,839.000000 159.496948,839.000000 159.248474,839.000000  C157.435272,841.520325 155.569824,841.003845 153.311081,839.269287  z\"})),_path498||(_path498=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M160.330505,839.004211  C159.995682,838.555542 159.997467,838.111084 159.997803,837.333313  C162.708130,836.703308 164.792328,835.381042 166.652435,833.065308  C167.952057,832.126953 168.851593,831.121155 170.680496,831.773376  C168.775894,834.826416 167.965668,838.945007 163.367935,839.959106  C162.443100,839.168213 161.586990,839.013367 160.330505,839.004211  z\"})),_path499||(_path499=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M177.002045,831.000000  C176.255676,831.000793 175.507233,831.001587 174.384644,831.003540  C171.215897,830.323364 172.800903,828.892456 173.595062,827.328247  C174.100998,826.463806 174.492447,825.928284 175.037430,825.106262  C175.476395,824.495483 175.754837,824.170288 176.283295,823.643066  C177.155136,822.876465 177.825073,822.364990 178.819275,821.770020  C179.801071,821.618347 180.348694,821.894104 180.896942,822.705200  C180.698868,824.432434 180.395294,825.857605 180.048920,827.647461  C180.006104,828.012207 180.004669,828.500000 180.004181,828.743896  C179.243774,829.677368 178.174423,829.862671 177.212830,830.787231  C177.000336,831.004639 177.000000,831.000000 177.002045,831.000000  z\"})),_path500||(_path500=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M153.009155,839.379211  C154.824509,838.590271 156.526382,840.422485 158.687515,839.134277  C158.868790,841.045044 159.640762,843.419495 156.909256,844.492920  C154.986084,845.248657 153.724213,844.690125 153.050629,842.356812  C153.002045,841.251160 153.004074,840.502380 153.009155,839.379211  z\"})),_path501||(_path501=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M123.661102,997.064331  C124.095108,999.637268 126.205307,1003.357422 120.378281,1002.997314  C120.559547,1000.730774 121.130775,998.467712 123.661102,997.064331  z\"})),_path502||(_path502=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M177.320099,830.971436  C177.116165,829.587402 177.954132,829.003540 179.653381,828.998657  C179.534851,830.024658 178.804626,830.744812 177.320099,830.971436  z\"})),_path503||(_path503=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M125.521271,994.534180  C125.479286,994.556702 125.563248,994.511658 125.521271,994.534180  z\"})),_path504||(_path504=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M124.539055,992.476929  C124.562897,992.520386 124.515213,992.433411 124.539055,992.476929  z\"})),_path505||(_path505=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M120.463058,942.521729  C120.440674,942.480286 120.485451,942.563232 120.463058,942.521729  z\"})),_path506||(_path506=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M125.115158,990.212280  C125.309151,990.120117 125.565369,990.313843 125.886581,990.791321  C125.690353,990.888062 125.432281,990.695801 125.115158,990.212280  z\"})),_path507||(_path507=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M161.003052,852.003906  C160.921860,852.038513 160.837646,852.069214 160.872681,852.046997  C160.991928,851.994019 161.000000,852.000000 161.003052,852.003906  z\"})),_path508||(_path508=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M368.427063,885.296265  C368.127563,884.325745 368.094055,883.566101 368.075928,882.426270  C369.351624,880.773682 369.091278,879.022827 369.666199,877.171509  C369.840607,876.162476 369.873413,875.472168 369.907288,874.436279  C368.365021,871.629028 369.367920,869.479004 371.248474,868.012451  C373.341736,866.380066 375.902191,866.662964 378.278931,867.781006  C379.643616,868.423035 380.395172,869.851257 382.031128,870.749146  C384.338348,872.401306 384.552917,874.600952 384.425018,876.745361  C384.221252,880.162598 385.584747,881.235229 389.101837,880.240479  C391.332489,881.230225 390.295013,883.072205 390.800598,884.781921  C390.983826,885.800232 390.971588,886.485046 390.694885,887.494507  C390.416077,888.003845 390.266663,888.185486 389.809296,888.539734  C387.477142,889.644836 382.934021,886.286377 383.857239,892.406555  C384.107574,893.385620 384.200012,894.050232 384.356262,895.038147  C384.328583,897.049316 385.644379,898.107544 386.301819,900.170227  C386.209229,901.055237 386.073669,901.251770 385.640930,901.653259  C383.983154,902.478577 382.529938,902.445679 380.737000,902.451904  C379.601715,902.528320 378.504211,902.415222 378.536865,903.529114  C378.650909,907.418579 377.713867,911.476196 378.705750,915.141663  C379.630524,918.559204 379.757629,921.818726 379.697510,925.549683  C379.938751,927.018433 379.846741,928.135620 379.519165,929.567627  C379.463409,930.329102 379.449646,930.763489 379.449524,931.519775  C379.483582,932.701416 379.654022,933.554260 379.549164,934.744629  C379.001923,936.623535 380.058167,937.449768 381.243652,938.583130  C381.566437,939.054749 381.666229,939.262756 381.840271,939.809204  C381.932800,940.612305 381.890533,941.071350 381.683105,941.851990  C382.622040,946.486755 380.354126,951.329468 384.055725,955.276489  C385.862488,957.202942 383.397644,959.210693 383.078552,961.583984  C382.367279,963.121155 381.663788,964.182190 379.911407,964.258606  C376.777313,961.957092 378.188690,958.584045 377.156921,955.911438  C376.043884,953.028381 375.703247,949.847107 374.971191,946.398438  C374.560455,941.084412 374.227264,936.160156 373.010803,931.361938  C372.613098,929.793213 371.516418,928.319214 372.881531,926.336792  C373.505951,924.865112 373.358032,923.702759 372.967194,922.619324  C370.531036,915.866699 373.758087,908.872925 372.006622,902.045654  C371.237885,899.049072 372.651917,896.883362 376.092316,896.654602  C377.327332,896.572571 378.461426,896.361694 378.133362,894.332458  C378.121948,892.013855 377.933167,890.035217 377.891510,888.070984  C377.844879,885.873108 375.149933,882.810181 379.443176,881.430908  C379.568695,881.390564 378.290985,878.502686 378.661194,876.471558  C378.334473,875.901489 378.564423,875.478455 378.315735,875.219116  C378.265961,875.167297 378.127960,875.309204 378.114624,875.440613  C378.047516,876.103882 378.127045,875.152100 378.466339,876.045898  C377.932892,877.700073 377.317444,879.006226 376.955933,880.456177  C375.541138,886.130859 374.906647,886.471924 368.427063,885.296265  z\"})),_path509||(_path509=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M375.572632,1016.954285  C372.060883,1009.152710 371.818146,1001.016724 372.449524,992.760010  C372.643219,990.227173 374.573975,991.198059 375.796722,990.903442  C378.768280,990.187378 381.004456,989.083496 378.988312,985.569275  C377.632019,983.205261 379.106934,981.499756 380.033417,979.246582  C380.368988,978.834045 380.632599,978.777039 381.251373,978.915039  C384.808502,982.969116 382.438629,987.374573 382.714172,991.901245  C380.116516,997.976013 379.500732,1004.094910 378.505859,1010.119934  C378.100922,1012.572205 377.942993,1015.073425 375.572632,1016.954285  z\"})),_path510||(_path510=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M381.928894,992.249146  C380.451355,987.969543 382.706543,983.835388 381.322449,979.415894  C381.619263,975.467834 381.194336,971.962341 380.227142,968.241760  C379.889587,966.945251 379.784607,965.889404 379.630829,964.438049  C380.836151,963.746887 381.162720,962.564575 381.985413,961.411743  C382.641266,960.458862 383.315247,960.279968 384.431732,960.555786  C384.909210,960.918274 385.053680,961.118469 385.127350,961.682068  C385.178986,967.077087 386.309601,971.935425 385.695953,977.197693  C385.324646,980.381592 384.806030,984.836670 386.975281,988.675537  C386.539642,990.794861 385.452820,992.030762 383.300293,992.643311  C382.691284,992.610840 382.451996,992.549194 381.928894,992.249146  z\"})),_path511||(_path511=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M381.315063,992.124023  C381.833710,992.021057 382.022247,992.031311 382.493958,992.033936  C383.242828,992.269714 383.551910,992.642700 383.756226,993.515991  C383.452179,997.049072 382.240723,999.997192 381.486023,1003.424194  C381.458130,1004.264648 381.447693,1004.745056 381.437347,1005.586243  C381.430634,1006.429932 381.415009,1006.912476 381.350281,1007.756531  C381.205994,1008.595215 381.119629,1009.075256 381.034332,1009.927734  C380.112518,1013.733704 382.131500,1018.070190 377.518311,1020.587280  C376.630676,1020.734802 376.139191,1020.632019 375.438538,1020.088745  C375.179535,1019.088135 375.159363,1018.386169 375.152863,1017.332153  C377.921326,1009.692993 377.830566,1001.798340 379.975403,994.377319  C380.204926,993.583069 380.208923,992.748047 381.315063,992.124023  z\"})),_path512||(_path512=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M376.893433,1020.281006  C380.193939,1017.537781 378.751923,1013.706482 380.058472,1010.312256  C380.805542,1009.624023 381.243286,1009.994507 381.818817,1010.748413  C382.013123,1010.984558 382.000275,1011.000000 382.009338,1010.993958  C383.856293,1012.889282 384.306793,1015.231750 384.110046,1018.151123  C383.667175,1020.338745 382.276611,1021.679749 381.879303,1023.495667  C381.510071,1025.183105 380.461304,1026.067017 378.317993,1025.231567  C377.080566,1024.494141 377.203644,1023.513123 376.897064,1022.361084  C376.529602,1021.568665 376.462524,1021.071533 376.893433,1020.281006  z\"})),_path513||(_path513=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M377.927673,1025.393921  C379.110931,1024.923462 380.885040,1025.217285 380.498627,1023.573425  C379.987488,1021.398682 381.706482,1020.720093 382.704346,1019.188843  C383.952698,1018.726807 384.404663,1019.346436 384.865356,1020.494629  C384.622009,1023.951233 385.383453,1027.065430 384.353577,1030.422119  C382.574707,1031.104736 381.172485,1030.581665 379.400604,1030.016113  C378.756348,1029.731201 378.481567,1029.489746 377.955383,1029.136108  C377.747314,1027.945557 377.790649,1026.867188 377.927673,1025.393921  z\"})),_path514||(_path514=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M332.667175,1013.063843  C332.666779,1014.748718 332.336029,1016.494995 332.009277,1018.629822  C329.668457,1018.644653 328.533539,1015.792725 325.461334,1016.382996  C323.310730,1016.796204 324.201416,1014.272766 324.052948,1012.998596  C323.921844,1011.873474 323.973267,1010.577881 325.429993,1010.214111  C327.082581,1009.801453 327.877045,1010.800598 328.179474,1012.242615  C328.911957,1015.735168 330.310944,1015.846985 332.667175,1013.063843  z\"})),_path515||(_path515=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M379.974670,968.437988  C383.301453,971.110779 383.262756,974.840393 381.662231,978.914978  C381.124359,979.013672 380.919495,978.995117 380.409973,978.933777  C380.114349,978.474731 380.123352,978.058350 380.149963,977.329163  C380.100098,976.570251 380.054565,976.122009 380.037170,975.333191  C380.011749,972.955078 379.983246,970.914978 379.974670,968.437988  z\"})),_path516||(_path516=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M379.819366,975.153015  C380.674194,975.417358 380.977631,975.938232 380.355225,976.847900  C379.444611,976.625793 379.043976,976.127686 379.819366,975.153015  z\"})),_path517||(_path517=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M376.846191,1019.996704  C377.134552,1020.473450 377.089691,1020.930664 376.926697,1021.712524  C375.886292,1021.889343 375.230621,1021.463379 375.172668,1020.116211  C375.637451,1019.852356 376.075195,1019.914673 376.846191,1019.996704  z\"})),_path518||(_path518=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M377.537750,985.473572  C377.561920,985.518005 377.513580,985.429138 377.537750,985.473572  z\"})),_path519||(_path519=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M169.553101,988.043579  C169.182724,988.718506 168.810226,988.726929 168.481293,988.244202  C168.412445,988.143250 168.415268,987.909241 168.487000,987.810913  C168.830048,987.340576 169.202209,987.356934 169.553101,988.043579  z\"})),_path520||(_path520=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M203.988159,987.320679  C204.525314,987.169678 205.045471,986.946899 205.027557,987.679810  C204.634354,987.609192 204.241150,987.538513 203.988159,987.320679  z\"})),_path521||(_path521=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M378.768890,893.785278  C379.096008,895.451416 382.499054,897.566895 378.054047,898.022522  C373.421234,898.497375 371.507111,902.313110 374.185059,906.449280  C375.407745,908.337769 375.448822,909.259705 374.302704,911.090393  C373.049377,913.092285 371.227814,915.179199 374.231842,917.977539  C375.082703,918.770264 375.866364,923.315247 373.381836,925.930847  C368.773102,921.829224 370.222961,916.134277 369.315521,911.115417  C369.047150,909.631042 369.229340,908.132141 368.528595,906.553345  C367.473938,904.177246 366.794800,901.484802 368.207703,898.970093  C369.436340,896.783386 368.209229,894.808044 368.061066,892.349915  C369.357483,890.787964 370.771271,891.075989 372.535645,891.732605  C374.576660,893.027649 376.747559,892.656738 378.768890,893.785278  z\"})),_path522||(_path522=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M382.351501,871.747803  C379.019501,872.575806 378.855865,868.377319 375.522095,868.417175  C371.632782,868.463562 369.920898,869.492126 369.938660,873.699463  C366.452637,871.278564 369.103577,868.754395 370.637848,866.083008  C370.843719,864.376038 370.825745,862.720825 370.509369,861.124817  C370.153625,859.330322 369.253540,858.206726 372.415131,857.593933  C375.738983,856.949707 374.472687,853.457092 373.987701,850.943115  C373.478882,848.305786 373.472137,848.307068 375.718750,847.864258  C378.765320,849.755371 379.759521,852.961731 382.151428,855.469849  C382.786041,856.475830 383.182770,857.477600 382.701111,858.062927  C379.720062,861.685730 381.462799,865.112671 383.007874,868.941772  C383.121948,870.070435 382.977112,870.798096 382.351501,871.747803  z\"})),_path523||(_path523=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M379.153320,893.680420  C377.120972,893.471924 375.031433,895.833435 373.108765,893.321533  C372.029449,891.670532 370.697357,890.807617 369.086365,889.743286  C368.372162,888.933289 368.289703,888.268738 368.194946,887.266113  C368.039978,886.545288 368.045197,886.125061 368.105713,885.395142  C372.685486,884.719604 377.193665,884.349243 375.437408,877.743774  C374.828491,875.453613 377.796783,877.119141 377.957794,875.266479  C381.308502,876.993103 379.423676,880.788635 380.958588,883.006165  C380.780273,885.492493 378.049164,879.538635 378.532013,884.246887  C378.841217,887.261475 380.970245,890.153564 379.153320,893.680420  z\"})),_path524||(_path524=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M378.038635,844.344971  C380.984100,843.757141 381.937347,846.071655 382.812073,848.131042  C383.563995,849.901245 384.379089,851.364258 386.674591,851.971008  C389.251373,854.397461 389.508728,857.285034 389.071533,860.702148  C388.819519,861.307861 388.687012,861.533813 388.258545,862.012085  C385.443512,862.601074 384.369415,861.084900 383.737915,858.983826  C383.326202,857.613892 383.868713,855.890259 381.975769,854.731567  C380.554077,852.690552 379.885895,850.665100 379.048096,848.357422  C378.716125,846.898682 378.395477,845.794250 378.038635,844.344971  z\"})),_path525||(_path525=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M344.306763,951.835938  C343.685699,951.538269 343.371399,951.063843 343.029175,950.294678  C344.516235,945.996704 346.974518,942.302856 346.999756,937.401733  C348.393799,937.253479 349.195068,934.880554 350.443848,935.880005  C351.511871,936.734680 350.945648,938.319153 350.647919,939.615662  C349.612762,944.123291 346.360870,947.513184 344.306763,951.835938  z\"})),_path526||(_path526=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M378.658081,848.001160  C381.154236,849.104797 382.237030,850.787598 381.973328,853.597351  C382.371613,854.347168 382.508972,854.805115 382.162445,855.647827  C377.907196,855.235901 378.133453,851.031128 376.019226,848.363647  C376.767700,847.993225 377.523529,847.996277 378.658081,848.001160  z\"})),_path527||(_path527=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M368.765564,889.032959  C370.913239,889.419678 372.945129,889.682678 372.950195,892.675659  C371.549225,892.690186 370.165985,892.340637 368.424500,891.975708  C368.023163,891.524353 367.980011,891.088440 367.924011,890.323853  C367.992279,889.621155 368.192444,889.323975 368.765564,889.032959  z\"})),_path528||(_path528=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M369.475159,876.908203  C371.143188,878.899902 370.924408,880.614014 368.408325,881.974854  C368.932190,880.453369 365.370483,877.950012 369.475159,876.908203  z\"})),_path529||(_path529=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M369.001526,888.680908  C368.817719,889.237915 368.598480,889.502380 368.145203,889.880981  C366.876099,889.212158 367.320862,888.355774 367.910980,887.231812  C368.345184,887.439758 368.655640,887.914062 369.001526,888.680908  z\"})),_path530||(_path530=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M350.956726,931.554321  C350.283295,931.184143 350.274689,930.811768 350.756531,930.482849  C350.857391,930.414062 351.091248,930.416687 351.189423,930.488281  C351.659241,930.831360 351.641693,931.203369 350.956726,931.554321  z\"})),_path531||(_path531=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M558.706421,947.046021  C562.137573,948.099976 562.989075,951.041687 564.005371,953.649231  C564.767822,955.605164 564.701477,957.868408 565.225464,959.938904  C565.550659,961.223938 566.355530,962.561218 567.898315,962.441162  C569.372986,962.326294 569.584290,960.536377 569.500549,959.712830  C569.093384,955.708740 572.678650,953.360046 573.428833,950.716431  C574.790894,945.916870 577.907532,945.219177 580.875061,942.716797  C585.559387,938.766846 589.648560,935.029907 596.054688,934.951050  C596.476624,934.945801 596.894043,934.572205 597.285767,934.383301  C597.544922,932.267639 593.580566,933.695251 594.679749,931.117554  C595.066406,930.210754 595.882996,929.272095 596.924072,929.390625  C599.760925,929.713745 601.396057,931.383301 601.168091,934.223511  C603.142944,934.609802 603.312134,932.928833 604.327637,932.481750  C606.346680,931.593140 607.882568,933.829468 607.441101,934.280334  C603.024536,938.792114 609.071289,941.096497 609.432922,944.545959  C609.846008,948.485901 607.535339,952.455322 609.847412,956.657532  C606.974426,960.198608 596.063416,963.133362 593.382507,960.868347  C591.941345,959.650818 591.203125,958.991455 589.909180,960.263794  C588.261536,961.884033 589.592163,963.269836 590.652527,964.535400  C591.137756,965.114319 592.283386,964.981201 592.415833,966.545349  C590.134705,967.184082 588.124756,967.472046 587.004517,964.581543  C586.588928,963.509155 585.903320,962.913513 584.740051,963.330322  C583.548157,963.757446 583.474670,964.719360 583.805786,965.770142  C584.455994,967.833252 583.476440,969.542053 581.548401,972.549561  C587.118164,969.072998 590.052917,969.947205 590.855347,975.675415  C589.381775,976.333923 587.774780,976.694275 586.154236,976.976990  C584.752869,977.221436 583.790100,977.795593 584.870300,979.239258  C586.958435,982.029968 583.714966,982.514404 582.825439,983.889343  C582.022522,985.130310 580.599854,983.928223 580.905457,983.149963  C582.267456,979.680786 579.773621,979.585266 577.666260,978.713074  C574.703308,977.486816 574.463989,979.905457 573.383484,981.407349  C572.955017,982.003113 572.125732,982.310486 571.032227,983.052002  C574.907654,984.817993 576.557739,987.890381 577.670776,991.393188  C578.049988,992.586731 577.936035,993.871643 579.149536,994.925842  C580.698425,996.271301 580.503418,996.495789 577.290283,997.108154  C576.051392,996.794739 574.325195,996.735046 574.253052,996.358459  C573.322327,991.500732 567.288635,989.117065 568.390198,983.104614  C569.333679,977.955078 566.548340,973.898987 562.424988,970.839294  C562.172852,970.652161 561.696350,970.366577 561.731628,970.250000  C564.067688,962.533264 555.961670,957.244202 556.998596,949.424316  C557.084290,948.087097 557.617310,947.502747 558.706421,947.046021  z\"})),_path532||(_path532=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M616.704590,982.803345  C620.402039,984.076050 618.452026,986.783325 619.111145,989.037659  C615.997742,988.074585 614.136292,985.960083 611.955811,984.345093  C611.080688,983.696899 610.266541,983.345581 609.256409,983.967957  C608.122070,984.666748 608.643860,985.420471 608.882019,986.450012  C609.886902,990.794006 606.231018,995.720825 602.145630,995.751526  C600.549255,995.763489 599.302246,995.219116 600.907227,993.597229  C602.590881,991.895569 602.363770,989.858398 602.822327,987.905396  C600.291016,986.713928 600.253479,989.772339 598.330688,989.940125  C598.973633,987.354370 598.464355,983.142761 603.502502,984.789062  C605.332397,980.565308 608.866577,981.639038 612.586975,981.999878  C614.146301,982.165955 615.269897,982.445068 616.704590,982.803345  z\"})),_path533||(_path533=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M617.174438,982.680054  C615.654114,983.725769 614.338074,984.247742 613.146362,982.273193  C613.680725,980.495605 616.414246,981.695740 616.396484,979.812378  C616.377563,977.792053 614.342407,978.144409 612.943970,977.952026  C611.292419,977.724792 610.161560,976.573608 609.659363,975.269653  C609.023315,973.618103 610.930725,973.302124 611.833862,972.461914  C612.671387,971.682678 613.382690,970.769653 614.177429,969.942383  C615.603149,968.457886 617.102600,969.237122 618.064026,970.295776  C620.315186,972.775024 619.764709,979.954590 617.174438,982.680054  z\"})),_path534||(_path534=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M585.306030,1016.834351  C577.969116,1014.658813 577.699524,1013.561401 582.694336,1006.169678  C584.232178,1008.234375 584.777893,1010.958313 588.162354,1011.358948  C589.528564,1011.520630 590.480408,1012.783936 588.469177,1014.046875  C587.390076,1014.724609 586.550598,1015.783875 585.306030,1016.834351  z\"})),_path535||(_path535=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M591.003662,975.995850  C591.325867,975.911743 591.640198,975.802368 591.963562,975.756714  C593.930298,975.479675 590.684143,971.777893 593.925354,972.610657  C595.741760,973.077332 597.688721,973.822632 598.188293,976.242310  C598.656616,978.510681 596.507507,978.610962 595.574646,979.228088  C592.816895,981.052490 592.759583,977.521423 591.154602,976.309448  C590.994690,976.007324 591.000000,975.999939 591.003662,975.995850  z\"})),_path536||(_path536=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M607.395386,964.043884  C605.436340,965.840332 603.412964,967.091919 600.885071,967.372986  C599.899048,967.482666 598.663696,969.848572 598.152161,967.112488  C597.883728,965.676331 599.367676,963.189514 599.836304,963.623169  C602.528748,966.114929 604.994019,961.898621 607.395386,964.043884  z\"})),_path537||(_path537=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M597.648743,989.954590  C597.512146,992.235596 595.827820,993.419617 593.845154,993.294617  C592.571350,993.214417 592.867004,991.322937 593.079224,990.312866  C593.998047,985.941162 595.905273,990.367981 597.648743,989.954590  z\"})),_path538||(_path538=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M582.985107,1003.637207  C582.178772,1004.101318 581.344177,1004.121521 580.550598,1004.312561  C579.468323,1004.573120 578.169006,1005.494568 577.457764,1004.134338  C576.547974,1002.394226 578.355347,1002.005493 579.679199,1001.144958  C581.584290,1000.971252 582.974548,1001.207275 582.985107,1003.637207  z\"})),_path539||(_path539=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M604.654785,977.427490  C603.989746,975.605164 604.730469,974.986816 606.189453,975.313599  C606.968933,975.488220 607.799194,976.126221 607.405884,977.081177  C606.920837,978.258667 605.846191,977.927490 604.654785,977.427490  z\"})),_path540||(_path540=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M589.524231,980.595032  C589.559265,979.210510 590.282898,978.988220 591.138306,979.382446  C591.789246,979.682495 592.020935,980.464844 591.634399,981.037781  C590.992126,981.989563 590.269775,981.500977 589.524231,980.595032  z\"})),_path541||(_path541=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M613.278564,990.523193  C613.543701,991.555176 613.025879,991.869141 612.357666,991.739563  C612.045105,991.679016 611.546997,991.095886 611.605286,990.873291  C611.796509,990.142761 612.439880,990.128967 613.278564,990.523193  z\"})),_path542||(_path542=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M601.425476,979.646484  C601.631897,980.384155 601.374390,980.652527 600.801086,980.537903  C600.682007,980.514099 600.522095,980.345215 600.504150,980.224854  C600.417664,979.645996 600.699463,979.403687 601.425476,979.646484  z\"})),_path543||(_path543=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M583.044312,997.449036  C583.716248,997.817871 583.724426,998.188782 583.244141,998.516418  C583.143677,998.584961 582.910706,998.582275 582.812744,998.510803  C582.344238,998.169189 582.361450,997.798584 583.044312,997.449036  z\"})),_path544||(_path544=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M581.574402,990.353271  C581.367859,989.615173 581.625977,989.347290 582.199158,989.461670  C582.318237,989.485413 582.478271,989.654358 582.496216,989.774780  C582.582336,990.353699 582.300659,990.596313 581.574402,990.353271  z\"})),_path545||(_path545=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M110.040154,728.708740  C109.607193,731.510193 108.027565,733.356140 105.722992,733.763123  C103.391090,734.174927 103.030258,735.771667 102.147209,737.668030  C100.836220,739.418335 99.542152,740.650574 97.925499,741.593750  C95.284157,743.134949 93.842018,745.421021 94.113365,748.605286  C94.275253,750.505005 93.764923,752.266418 92.642464,753.773254  C89.854111,757.516296 85.657486,760.370422 85.577324,765.788818  C85.561424,766.863342 84.136383,767.546387 82.998383,767.917725  C80.997421,768.570679 79.373642,769.945007 78.390556,771.585266  C75.240440,776.841370 70.691376,780.961792 67.153374,785.937805  C63.152229,791.565063 58.969242,797.090881 54.881638,803.111206  C50.717133,807.972351 48.670429,813.278931 47.437443,819.228210  C46.519024,823.659607 46.643982,828.877319 42.142986,831.968445  C41.596302,832.343872 40.923462,833.012268 41.072140,833.556091  C42.105995,837.337646 41.207603,840.293701 37.758972,842.370728  C37.364941,842.608093 37.182438,843.156616 37.371624,843.703918  C40.060539,851.481689 33.761524,856.059143 30.341425,861.219604  C28.466328,864.048889 30.156960,867.203796 27.595554,869.645325  C25.628883,871.172424 26.428616,872.935974 26.444948,874.516113  C26.497665,879.616943 25.000235,882.067139 21.895397,881.866272  C18.538065,881.649109 17.298773,878.969727 18.172527,873.700134  C18.282516,873.036804 18.359449,872.398682 18.126568,871.370667  C18.158262,870.172119 18.317713,869.282288 19.458904,869.434448  C20.627319,869.590210 22.056662,871.995178 22.829199,869.254761  C23.242357,867.789124 23.590414,865.710693 21.313879,865.124146  C18.418524,864.378235 18.977800,862.941711 20.247200,861.155762  C21.219246,859.788269 22.252930,858.260010 21.929188,856.577576  C20.880024,851.125061 22.510176,845.716675 21.850744,840.183899  C21.408894,836.476746 21.260439,831.827026 26.268021,829.399170  C31.215939,827.000244 28.288515,824.532043 25.790533,822.215088  C26.867762,821.352417 26.954517,820.232117 27.781639,819.217285  C30.980391,815.800354 32.107941,812.100220 31.002865,807.401672  C31.082476,806.786987 31.161634,806.571533 31.442287,806.078125  C34.602501,802.028198 33.909161,797.041321 36.073708,792.633545  C39.232304,785.786926 44.481964,780.475708 46.208530,773.211365  C46.978531,769.971680 45.491940,766.935364 46.333595,763.489685  C53.857574,759.397217 57.049656,751.130310 63.568233,746.790649  C69.383980,742.918823 70.038994,734.736023 77.386978,732.657837  C76.106071,731.265259 74.556931,732.337830 73.258614,731.235352  C71.363419,730.890625 68.929451,730.935852 69.578499,728.719971  C70.116478,726.883362 70.562447,723.649841 73.751343,724.076111  C78.049225,724.650635 82.630287,722.822021 85.204300,721.080994  C89.111069,718.438416 93.568123,717.074829 97.297523,714.381836  C98.343170,713.626709 99.366753,712.865356 100.350845,713.715759  C103.910851,716.792419 107.173325,714.365967 110.761826,713.117310  C112.898674,712.358948 114.174767,713.426758 115.621544,714.992065  C117.108353,719.150574 116.859634,722.614075 113.297089,725.700317  C112.504799,726.260925 112.009895,726.521912 111.261063,726.901245  C110.573631,727.407532 110.211639,727.843628 110.040154,728.708740  z\"})),_path546||(_path546=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M46.273392,941.760254  C44.349304,941.966553 43.563232,942.543396 42.909790,944.361084  C41.171848,949.195862 39.998055,954.399780 34.841026,957.328857  C32.249649,958.800720 33.499046,961.391846 34.737656,963.778076  C37.910572,966.781189 40.376015,970.024170 43.836033,972.711304  C43.903072,974.504761 43.244171,975.563904 41.367138,975.972046  C39.466381,972.700317 36.274471,970.877258 33.506706,969.031372  C30.923584,967.308655 30.056435,969.872803 30.007412,972.614990  C28.904602,978.611145 27.801750,984.227173 26.347401,989.921631  C25.218557,989.401978 24.655046,988.684692 24.835117,987.323486  C24.904806,983.919678 25.422892,980.774475 24.054880,977.399170  C25.206322,966.972961 22.749489,956.706909 26.002495,946.411377  C26.314266,945.404968 26.484072,944.730408 27.240374,944.021240  C27.718025,943.728882 27.927341,943.645081 28.467525,943.517456  C31.312231,941.949707 31.671951,939.365906 29.411058,937.898499  C28.513836,937.316101 27.314167,937.165527 26.369843,935.980713  C25.455236,931.087341 28.031631,926.726868 27.121840,922.045532  C26.855686,920.676025 27.093735,919.110352 26.887547,917.325989  C28.649042,914.240601 31.951870,912.479736 32.003029,908.377075  C32.465816,907.535339 33.292793,907.027344 33.169552,906.477478  C31.887793,900.759033 33.997368,895.615967 35.765709,890.415955  C36.862072,887.192017 35.640858,883.835388 36.373142,880.264526  C36.083359,879.049255 35.599117,878.251038 35.393917,876.992371  C35.473900,875.653442 35.199368,874.376160 35.828388,873.731506  C41.360447,868.060974 39.796112,860.385010 41.581482,853.674744  C42.370972,850.707458 45.202332,848.382141 44.268467,844.558228  C44.255936,843.967468 44.275246,843.731506 44.388329,843.154846  C47.443401,837.359985 49.074978,831.660339 47.746300,825.053772  C47.973343,823.998962 48.295242,823.371033 49.046837,822.601929  C53.873386,821.569702 54.048672,818.803650 52.502838,814.905151  C52.599216,814.318054 52.688320,814.090637 53.057709,813.620483  C56.407379,812.548401 59.158627,810.932068 62.115440,809.834839  C63.670944,809.257629 65.505417,808.676453 66.524002,810.644165  C67.414291,812.364014 66.914993,813.881897 64.778503,814.833313  C64.222382,814.839111 64.043884,814.937622 64.151550,815.152954  C66.048592,815.109192 67.380333,818.252686 69.710426,815.862305  C71.334007,817.196899 71.145119,818.732666 70.754646,820.173523  C69.031181,826.533203 68.010193,832.990173 67.827271,839.577454  C67.770271,841.630371 65.713997,842.316223 64.883232,843.986084  C61.220272,851.348755 61.070663,859.641785 58.224377,867.216797  C55.400970,874.730957 54.888016,883.035339 50.683525,890.102661  C49.850021,891.503662 48.705872,892.566895 51.394245,893.124512  C53.320576,893.524048 52.508957,894.943665 52.440193,896.286621  C52.146503,902.022339 49.231689,906.926453 47.430958,912.149841  C46.775799,914.050293 46.842422,915.006042 47.407997,916.873108  C48.473988,920.392029 49.163788,924.385376 48.586189,927.950928  C47.855125,932.463684 50.670868,937.571838 46.273392,941.760254  z\"})),_path547||(_path547=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M46.376965,762.649475  C47.990837,767.418762 48.602673,771.708496 47.193810,776.302429  C46.437916,778.767212 46.109997,780.734253 43.562767,782.155396  C41.024876,783.571411 41.549290,787.032776 40.250065,789.430420  C39.497173,790.819824 38.894676,791.895569 37.231735,792.736755  C32.971916,795.468628 31.734840,799.100098 32.621559,803.589111  C32.818340,804.585266 32.995285,805.550476 32.225986,806.744873  C31.999695,807.000000 31.501465,807.001221 31.252392,807.001831  C28.442629,806.775208 26.935434,811.071228 23.470188,808.403809  C22.395470,807.576599 21.950045,810.051636 22.802921,811.158020  C24.517828,813.382568 23.865402,815.892578 23.979105,818.315002  C24.109131,821.085205 22.444189,820.655396 20.362812,820.043091  C20.179434,819.537048 20.644163,818.804260 20.501188,818.655579  C15.839781,813.806458 20.095329,809.380554 21.606295,805.249817  C23.062775,801.268005 23.808487,796.540955 27.978928,793.892090  C29.247236,793.086487 28.959612,791.538574 28.996984,790.229736  C29.034863,788.903198 28.863045,787.268433 30.226198,786.675293  C36.070496,784.132080 36.633865,778.794373 37.732147,773.276184  C40.296200,770.965210 41.745930,768.413452 42.566536,765.487305  C43.034897,763.817200 43.594982,762.269226 46.376965,762.649475  z\"})),_path548||(_path548=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M25.214142,885.688599  C23.678480,891.529602 22.333900,896.797119 19.374004,902.029907  C16.927597,906.354797 14.413667,912.928833 19.713438,918.155762  C19.085440,918.481384 18.807240,918.747070 18.523344,918.753296  C16.587025,918.795776 15.584570,914.987610 13.564388,916.968262  C11.995196,918.506653 13.707373,920.749084 14.585292,922.450378  C15.159865,923.563721 16.146797,924.417725 14.303741,925.047974  C13.112210,925.455505 12.522861,927.423401 10.916727,926.540222  C9.626160,925.830627 9.990291,924.510559 10.367064,923.417786  C11.742078,919.429321 10.629076,916.309937 7.669046,913.353516  C6.381724,912.067749 4.934834,909.694946 5.679944,908.007080  C6.803958,905.460938 9.560478,908.201233 11.452484,907.303894  C11.768535,905.604309 10.103959,905.069702 9.622438,903.906006  C8.729667,901.748413 9.135363,899.394958 11.649852,899.589294  C15.517990,899.888367 15.305387,896.799133 16.439995,894.915466  C17.998688,892.327637 15.132985,891.967651 13.935960,890.990662  C12.005894,889.415405 11.974537,887.723755 12.955504,885.361084  C15.794536,883.975647 18.864004,884.347900 21.611546,882.443542  C23.358986,881.232361 26.023920,881.925232 25.214142,885.688599  z\"})),_path549||(_path549=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M37.733650,878.805725  C36.963879,884.332275 39.326035,890.229004 35.148579,895.067871  C34.250565,896.108032 36.173782,896.414917 36.508198,897.269897  C36.948803,898.396240 37.329376,900.245056 36.282501,900.325134  C30.495745,900.767822 34.334423,903.826538 35.025871,905.358887  C36.423977,908.457214 34.241158,907.784973 32.377323,908.006042  C28.637983,904.952698 26.635983,901.740479 29.831484,897.208313  C30.484245,896.282410 30.439871,894.286804 28.899387,893.236084  C25.949579,891.224304 26.886591,889.609863 29.723921,889.135132  C35.056160,888.243164 33.321705,887.035767 30.146650,885.355042  C29.207392,884.857788 29.056181,883.773560 29.006096,882.378052  C28.454781,881.398010 28.175884,880.699890 28.299583,879.511292  C28.746281,878.429260 29.317930,877.965576 30.403618,877.622253  C32.967972,878.077576 35.175850,878.593811 37.733650,878.805725  z\"})),_path550||(_path550=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M26.645172,917.155029  C28.325039,918.243835 31.539879,918.838379 28.558802,921.574768  C28.341661,921.774109 28.114250,922.240540 28.202766,922.453552  C30.056330,926.914551 27.619226,930.957092 27.003372,935.586060  C24.927748,937.913757 25.892719,942.368469 21.309185,942.221558  C20.254135,940.795837 16.898634,940.883606 19.196865,938.139587  C20.024895,937.151001 19.630884,936.721741 18.182749,936.349243  C14.926807,935.511719 14.588991,933.285950 16.529913,930.753418  C19.023815,927.499084 22.654018,925.009644 22.156593,920.016113  C21.899654,917.436707 24.973267,918.356445 26.645172,917.155029  z\"})),_path551||(_path551=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M29.124348,878.669128  C28.998917,879.749695 28.998343,880.499329 28.996765,881.623840  C26.571903,882.029968 27.239101,884.924316 25.295635,885.837158  C24.899977,882.729614 22.494484,881.786011 21.021191,884.034241  C18.556711,887.795105 16.358553,886.304993 13.367374,885.012878  C14.742027,882.558899 16.434509,880.202148 11.962449,878.669189  C11.027512,878.348755 10.815590,876.403503 11.982406,876.579590  C16.136112,877.206543 15.652804,873.055420 17.841619,871.304138  C20.138151,872.056335 19.998768,873.651550 19.332836,875.618896  C18.448616,878.231323 19.136850,880.538330 22.185368,880.699463  C25.464472,880.872803 24.511932,877.946960 25.086729,876.005493  C25.764069,873.717712 22.173428,870.703247 26.642859,869.050171  C28.332508,870.236694 27.755770,872.235657 28.954960,873.887939  C29.535994,875.562622 29.566994,876.943481 29.124348,878.669128  z\"})),_path552||(_path552=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M10.364472,852.953857  C6.479089,851.902954 8.981995,849.539307 9.365131,848.201721  C10.791684,843.221558 12.730232,838.388062 14.735292,833.249756  C16.331289,834.150818 17.379148,835.750305 16.829090,837.341431  C15.731622,840.515991 16.263733,842.949219 18.478039,845.474609  C19.660152,846.822815 18.991219,848.605774 17.400883,849.760498  C15.371665,851.233948 13.162572,852.301819 10.364472,852.953857  z\"})),_path553||(_path553=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M21.031578,942.317993  C22.862644,941.835266 23.894024,940.834106 23.966820,938.955078  C24.026642,937.410828 24.283335,936.073669 26.622169,936.015381  C31.716965,936.722290 33.613739,939.657593 32.206482,943.795227  C31.290293,946.488892 30.119381,946.345459 28.269508,944.204834  C27.525454,943.413818 28.096561,942.709351 27.786043,942.104553  C27.825169,942.555725 27.718418,942.997375 27.849503,943.722412  C27.508368,944.582336 27.016985,945.164612 26.264359,945.874573  C25.158573,944.871765 23.920238,945.024170 22.373871,944.998535  C21.695042,944.210388 21.378605,943.423157 21.031578,942.317993  z\"})),_path554||(_path554=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M27.659630,819.066772  C27.941341,820.135071 28.119480,821.375244 26.338993,821.932922  C26.056877,820.864624 25.881702,819.625610 27.659630,819.066772  z\"})),_path555||(_path555=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M15.234093,830.821655  C13.994721,830.099670 14.229087,829.477295 15.715797,829.034912  C15.822028,829.546143 15.644978,830.094788 15.234093,830.821655  z\"})),_path556||(_path556=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M17.159294,829.189087  C16.993759,828.986145 16.993551,828.495483 16.993160,828.250183  C17.709269,828.149780 18.607389,828.117981 18.433334,829.229309  C18.416180,829.338806 17.710777,829.340393 17.159294,829.189087  z\"})),_path557||(_path557=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M72.951904,731.363281  C73.954727,730.818542 75.028030,730.838684 75.849731,730.393982  C77.191277,729.668030 78.585670,728.438843 79.514000,730.521362  C80.379410,732.462769 79.478607,734.527771 77.455086,734.762817  C72.459129,735.343201 71.589264,739.406921 70.095123,742.861145  C69.468994,744.308777 69.160454,745.849121 67.385498,745.880798  C65.082840,745.921814 64.094589,746.606689 64.557114,749.099915  C64.755249,750.167969 63.577347,750.822510 62.546032,750.881104  C59.170673,751.072693 57.236969,754.022644 56.533916,756.102295  C54.975605,760.711731 51.673962,761.978699 47.380920,762.996216  C47.004318,763.004883 46.999775,763.000000 46.997883,762.997559  C45.420483,760.627136 47.097389,759.137390 48.732460,757.282959  C52.260227,754.049255 55.876404,751.359619 57.028584,746.778259  C57.356438,745.474731 58.178349,744.749329 59.333878,744.469788  C66.289696,742.787048 68.700577,736.301941 72.951904,731.363281  z\"})),_path558||(_path558=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M24.027372,785.823608  C28.850136,774.665161 34.003967,763.522217 39.322277,752.458313  C43.131588,744.533569 49.637020,738.690674 55.709633,732.169373  C56.242390,734.015686 54.852642,735.799377 55.697029,737.922180  C56.344288,739.549500 55.038780,741.029541 53.623749,741.454102  C48.259426,743.063416 46.843990,747.794189 44.296059,751.933655  C40.701702,757.773071 37.288280,763.825684 34.093277,769.773804  C31.701742,774.226196 28.447315,778.551147 27.083908,783.613708  C26.676071,785.127991 26.101496,786.039185 24.027372,785.823608  z\"})),_path559||(_path559=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M82.959930,713.789185  C86.353432,708.155518 90.911179,706.224487 97.320961,707.451111  C98.614601,707.698608 99.932800,707.817810 101.657120,708.105591  C100.605644,711.428528 97.736076,709.558533 95.521042,709.959412  C91.280685,710.726746 87.194084,711.886414 82.959930,713.789185  z\"})),_path560||(_path560=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M48.656895,757.044556  C48.362610,758.765991 47.722919,760.529541 47.039608,762.644104  C44.947727,762.866699 44.383514,763.899719 43.858654,765.848389  C43.085716,768.718140 42.314304,771.965515 38.366966,772.987915  C40.283573,766.946594 41.852066,760.431641 48.656895,757.044556  z\"})),_path561||(_path561=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M115.352715,715.110474  C113.529160,715.000427 112.576149,714.037476 111.275436,713.010254  C110.152931,710.533936 107.511360,710.480591 106.005753,708.593262  C109.972633,708.421265 113.844193,709.091064 117.044647,712.487305  C117.206276,713.875793 116.768715,714.720398 115.352715,715.110474  z\"})),_path562||(_path562=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M6.394968,830.953735  C6.915107,827.949646 6.980016,824.608215 9.248642,821.663635  C10.771007,825.232910 8.584721,828.001404 6.394968,830.953735  z\"})),_path563||(_path563=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M67.321884,722.982422  C68.183945,720.333435 71.081230,720.241333 73.519325,718.829468  C73.670868,722.848328 70.108810,722.083069 67.321884,722.982422  z\"})),_path564||(_path564=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M14.505060,807.001160  C14.011306,805.645386 14.692223,804.503296 15.652827,803.163513  C17.826263,804.902771 16.652794,806.007446 14.505060,807.001160  z\"})),_path565||(_path565=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M21.986656,790.673279  C21.880140,789.833069 22.117592,789.077454 22.600544,788.136292  C24.231445,789.172363 24.525465,790.193604 21.986656,790.673279  z\"})),_path566||(_path566=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M17.197998,800.908447  C17.058199,800.093079 17.249132,799.250793 17.682106,798.188843  C19.183208,799.128784 19.329439,800.137329 17.197998,800.908447  z\"})),_path567||(_path567=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M12.476497,811.954468  C11.993621,810.868835 12.563530,809.943909 13.468693,808.829773  C13.952974,809.837830 14.216022,811.074524 12.476497,811.954468  z\"})),_path568||(_path568=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M77.122627,717.119202  C77.413925,716.542786 77.879471,716.202881 78.641228,715.848267  C78.825920,716.810181 78.886452,717.972229 77.122627,717.119202  z\"})),_path569||(_path569=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M79.889503,715.750427  C79.915405,714.874023 80.466454,714.251770 81.704651,714.033447  C81.892365,715.081726 81.422554,715.800964 79.889503,715.750427  z\"})),_path570||(_path570=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M10.462948,818.007080  C10.278574,817.497681 10.364905,816.926270 10.675583,816.159851  C11.916616,816.714966 11.878838,817.376526 10.462948,818.007080  z\"})),_path571||(_path571=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M20.270020,792.939087  C19.909945,792.086365 20.169205,791.329041 21.290154,790.773071  C21.921225,791.714722 21.754887,792.519531 20.270020,792.939087  z\"})),_path572||(_path572=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M28.529696,1022.157471  C32.348675,1022.887939 30.679823,1025.280029 30.748453,1027.971558  C28.494936,1026.110840 26.699352,1024.920044 28.529696,1022.157471  z\"})),_path573||(_path573=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M24.644024,987.014648  C25.306158,987.793213 25.621281,988.579041 25.966152,989.682495  C24.466396,990.735718 22.959763,990.619568 22.332115,988.976257  C21.763107,987.486450 23.052174,987.099609 24.644024,987.014648  z\"})),_path574||(_path574=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M10.522354,1002.535645  C10.480005,1002.558289 10.564702,1002.513000 10.522354,1002.535645  z\"})),_path575||(_path575=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M914.333313,955.999878  C912.807495,955.857849 911.616516,955.585754 911.500488,954.146301  C911.440613,953.403870 912.202393,953.122925 912.888916,953.064636  C914.519958,952.926270 915.899170,953.174744 915.984985,955.626343  C915.555542,956.001526 915.111084,956.000610 914.333313,955.999878  z\"})),_path576||(_path576=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M924.005981,1004.349487  C925.409851,1004.119263 925.996582,1004.951355 925.992065,1006.650391  C924.588135,1006.880188 924.002869,1006.047119 924.005981,1004.349487  z\"})),_path577||(_path577=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M923.053772,1016.318848  C923.895569,1016.099121 924.657837,1016.373535 924.949097,1017.685791  C924.110291,1017.901672 923.344666,1017.631348 923.053772,1016.318848  z\"})),_path578||(_path578=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M927.752441,962.999878  C927.882263,963.309082 927.688660,963.564392 927.212036,963.883850  C926.999207,963.834900 926.998352,963.667908 926.996338,963.250488  C927.163391,962.999939 927.331726,962.999817 927.752441,962.999878  z\"})),_path579||(_path579=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M929.116638,975.211304  C929.309753,975.119446 929.565918,975.312500 929.887390,975.788696  C929.693176,975.883362 929.435486,975.691528 929.116638,975.211304  z\"})),_path580||(_path580=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M10.741014,955.694336  C8.320213,954.731140 8.916323,953.231018 9.736389,951.298584  C11.401107,952.561096 12.552065,953.627502 10.741014,955.694336  z\"})),_path581||(_path581=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M977.277100,1014.265930  C976.746033,1013.506592 976.485413,1013.010803 976.111145,1012.258667  C976.175903,1011.453979 976.354309,1010.905518 976.766357,1010.178589  C977.721375,1009.535339 978.173401,1009.971008 978.800537,1010.737427  C980.099121,1011.325500 981.200623,1011.655884 982.656006,1011.991943  C982.804749,1016.327332 979.953735,1014.948608 977.277100,1014.265930  z\"})),_path582||(_path582=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1008.379395,1013.067871  C1009.117737,1011.546631 1009.722839,1009.674500 1011.533081,1010.967529  C1012.429199,1011.607666 1012.308472,1013.260498 1011.518738,1014.143311  C1010.263794,1015.546021 1009.210022,1014.682007 1008.379395,1013.067871  z\"})),_path583||(_path583=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M993.697754,1010.864746  C993.673706,1012.101135 993.340088,1013.200806 993.002014,1014.650208  C992.554260,1014.999695 992.111023,1014.999390 991.335266,1014.998291  C990.259888,1014.387878 990.114624,1013.526489 990.011230,1012.319763  C990.387268,1009.571533 991.812134,1009.947815 993.697754,1010.864746  z\"})),_path584||(_path584=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M989.697021,1012.047180  C991.979370,1012.105957 991.167908,1013.409973 991.025391,1014.707764  C990.531311,1015.313171 990.059814,1015.628784 989.294189,1015.972229  C989.374695,1014.724854 987.084473,1013.187012 989.697021,1012.047180  z\"})),_path585||(_path585=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M995.150024,1007.550354  C993.693420,1007.990845 992.487671,1008.106140 992.264160,1006.492493  C992.165771,1005.782349 992.749268,1005.205017 993.460815,1005.226929  C994.738770,1005.266174 995.704529,1005.764954 995.150024,1007.550354  z\"})),_path586||(_path586=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M986.795044,1009.798340  C986.766479,1012.051270 985.240723,1011.993103 983.380981,1011.996582  C983.009766,1011.997559 983.000000,1012.000000 983.001221,1011.995117  C983.002441,1011.990234 983.002747,1011.500122 983.002563,1011.255066  C982.871887,1010.841919 982.741394,1010.673889 982.805420,1010.252930  C983.470642,1009.684937 983.941345,1009.369873 984.706055,1009.027405  C985.596558,1009.019592 986.131287,1009.204834 986.795044,1009.798340  z\"})),_path587||(_path587=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1014.337769,975.956177  C1013.742920,975.503235 1013.484863,975.008911 1013.115845,974.258545  C1014.103027,973.671570 1015.201233,973.340698 1016.648438,973.006104  C1016.901428,974.514221 1016.242432,975.577026 1014.337769,975.956177  z\"})),_path588||(_path588=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M979.025757,1010.688965  C978.502258,1010.738342 978.006897,1010.481628 977.255737,1010.112427  C977.163696,1008.969360 977.496643,1007.861450 978.772888,1008.264526  C979.836182,1008.600281 979.047852,1009.647583 979.025757,1010.688965  z\"})),_path589||(_path589=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M989.353394,1007.425720  C988.614868,1007.632446 988.346558,1007.374573 988.461426,1006.800720  C988.485229,1006.681580 988.654236,1006.521423 988.774658,1006.503479  C989.353882,1006.417114 989.596619,1006.698975 989.353394,1007.425720  z\"})),_path590||(_path590=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M973.944031,1011.680786  C973.102356,1011.898804 972.340698,1011.623901 972.047729,1010.313721  C972.884155,1010.099915 973.653381,1010.366333 973.944031,1011.680786  z\"})),_path591||(_path591=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M986.964172,1009.719360  C986.452332,1009.824280 985.904663,1009.645508 985.178467,1009.233398  C985.902588,1007.995422 986.524475,1008.233215 986.964172,1009.719360  z\"})),_path592||(_path592=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M983.789062,1019.116821  C983.881531,1019.311096 983.688232,1019.567688 983.208679,1019.886108  C983.116211,1019.691650 983.309875,1019.435364 983.789062,1019.116821  z\"})),_path593||(_path593=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M988.880859,1016.050781  C989.000000,1016.000000 988.746338,1016.421936 988.746338,1016.421936  C988.746338,1016.421936 988.761719,1016.101562 988.880859,1016.050781  z\"})),_path594||(_path594=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M1012.479065,1008.465820  C1012.519958,1008.444092 1012.438171,1008.487488 1012.479065,1008.465820  z\"})),_path595||(_path595=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M982.848145,1010.095093  C983.000854,1010.168274 983.001770,1010.336609 983.002563,1010.757446  C982.900391,1010.736755 982.798279,1010.463501 982.848145,1010.095093  z\"})),_path596||(_path596=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M385.417847,962.034668  C385.026276,961.857239 384.996002,961.669006 384.958160,960.868774  C385.347656,959.263245 385.887482,958.291992 385.386780,956.830139  C385.331268,955.783875 385.560577,955.152039 386.218872,954.336914  C390.075043,951.732849 391.613129,948.719360 389.382751,944.204102  C389.255341,943.391602 389.309540,942.928162 389.637329,942.176331  C392.252594,941.395752 394.017883,942.108582 394.817993,944.478943  C395.117096,941.909729 390.920685,938.677673 395.282623,936.605103  C398.233368,935.203186 399.201996,937.870728 399.886627,940.273682  C400.007721,940.360779 399.886993,940.045105 400.106628,939.727051  C403.755402,934.441406 405.845306,928.220398 410.350464,923.199036  C415.754761,925.443481 417.136780,929.648010 414.422943,934.485718  C411.026184,940.540955 411.451569,942.056396 417.961578,946.545288  C418.797607,943.186890 416.260223,939.907288 417.992371,936.349670  C418.154205,935.793762 418.237823,935.577271 418.518768,935.074341  C419.268707,934.331726 419.913971,934.140137 420.949860,934.163696  C421.484039,934.285400 421.688202,934.364990 422.150635,934.640503  C422.862274,934.906860 422.538055,936.225220 423.793152,935.402466  C425.526642,935.182373 426.788055,935.640015 428.225891,936.629883  C429.670593,938.700500 429.959106,940.832520 430.543945,943.228882  C430.666870,944.793884 429.994965,945.764893 429.458496,947.129395  C429.331116,947.669189 429.276428,947.883911 429.140747,948.418945  C429.022614,952.901550 431.594757,956.871216 429.842682,961.454590  C429.583923,961.936768 429.458496,962.114685 429.103333,962.510864  C427.154968,963.761047 428.169464,964.532227 429.336975,965.562805  C430.201691,966.830505 430.517273,967.938171 430.406433,969.492432  C430.165161,970.019714 430.005554,970.197205 429.516876,970.506836  C428.954895,970.654236 428.721985,970.669617 428.149658,970.614258  C426.918304,970.177856 426.256531,969.517456 425.558899,968.877014  C424.076233,967.515991 424.910858,969.429993 424.372009,969.937012  C424.041412,970.383423 423.865021,970.530579 423.373169,970.827881  C422.608154,971.111084 422.149567,971.193909 421.331848,971.220581  C419.489868,971.024170 418.301331,970.387024 417.704468,969.230286  C418.089172,970.460693 419.137390,972.144958 416.196411,972.787598  C415.122589,972.685913 414.495819,972.367981 413.667816,971.684509  C411.315216,967.922180 408.566620,964.912903 405.729401,961.537842  C404.042755,962.593689 403.341187,965.256348 400.474213,964.858826  C398.969177,964.518616 397.995270,963.890076 396.848633,962.887573  C395.874725,961.865967 395.574036,960.761414 394.426025,960.028564  C394.005371,959.938660 393.834900,959.930115 393.428864,959.972473  C393.193298,960.023376 392.835236,960.313782 392.772736,960.545532  C392.676880,961.110718 392.573975,961.421143 392.212189,961.875366  C389.944092,961.194641 387.862091,961.456726 385.417847,962.034668  z\"})),_path597||(_path597=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M392.810181,959.327332  C393.149261,959.254883 393.538116,959.308228 393.734131,959.298950  C394.643097,959.499817 395.085663,960.033875 395.657043,960.914490  C396.118378,962.983948 396.240295,964.863586 398.855347,965.434204  C399.333405,965.766846 399.501617,965.931274 399.862579,966.390747  C400.533020,967.898743 400.855011,969.132935 400.879303,970.458252  C400.904694,971.844360 400.185272,973.655334 401.881592,974.374939  C403.529236,975.073975 404.404907,973.346741 405.505341,972.479858  C405.886597,972.179504 406.243439,971.847290 406.963623,971.383301  C409.130402,970.570557 410.846405,970.877075 412.767456,972.128357  C413.213867,972.571411 413.362793,972.772827 413.634583,973.322510  C413.901367,974.941833 413.580139,976.324341 412.272064,976.401978  C408.606537,976.619446 408.400269,979.389893 407.767334,981.919800  C406.134155,988.447693 407.639160,990.709656 414.138092,991.833679  C416.410309,992.226562 417.057922,990.816162 417.604431,989.189453  C418.777008,985.699097 420.850800,985.938049 423.268982,987.811707  C425.243652,989.341736 427.345459,990.619324 430.037537,991.567993  C430.852173,991.775513 431.291931,991.967468 431.990845,992.446045  C432.722168,993.279846 432.916229,993.964783 432.922729,995.051453  C432.540649,996.823120 431.430328,998.195068 432.685883,1000.050659  C432.972626,1001.748413 432.656952,1003.084534 432.473389,1004.775452  C432.432343,1006.292969 432.436829,1007.461975 432.983521,1008.934814  C433.194214,1010.057373 433.174164,1010.815430 432.880798,1011.937683  C432.580627,1012.511108 432.418579,1012.717285 431.866028,1012.970581  C431.310577,1013.017456 431.104279,1013.082092 430.986603,1013.007324  C426.211151,1009.972168 421.484741,1010.742310 416.818237,1013.238525  C416.050507,1013.649170 415.116058,1014.228210 414.576508,1013.587036  C411.911682,1010.420227 410.956085,1013.224548 409.313965,1014.927246  C408.816956,1013.084045 408.091461,1011.192932 406.800415,1010.044678  C404.127289,1007.667358 400.349457,1005.791565 406.291656,1002.909546  C406.613556,1002.753418 406.949646,1001.859802 406.793915,1001.598633  C403.558441,996.169739 404.807983,989.137817 400.544739,984.112793  C399.839661,983.281799 399.151031,982.439880 397.705536,982.434448  C392.524384,982.414856 389.041107,977.549927 390.899628,972.855835  C392.201660,969.567322 392.501099,966.272949 392.021179,962.440247  C392.060303,961.596802 392.097748,961.151550 392.170105,960.373169  C392.293732,959.826721 392.382416,959.613281 392.810181,959.327332  z\"})),_path598||(_path598=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M385.755341,1003.242432  C392.959534,1001.899719 395.175751,1003.049255 397.604645,1009.104126  C395.782837,1010.523804 394.865814,1007.406494 392.891663,1008.399292  C392.146637,1009.242371 395.315186,1011.720032 391.706604,1012.067322  C389.155853,1012.312744 387.665131,1011.843567 387.191925,1009.182312  C386.997864,1008.090881 387.215820,1006.773560 385.603363,1005.990662  C384.416534,1004.989990 384.944305,1004.208557 385.755341,1003.242432  z\"})),_path599||(_path599=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M386.173828,1002.717773  C385.842529,1003.812683 385.636047,1004.566895 385.349487,1005.600342  C384.225189,1007.364990 383.181000,1008.850281 382.074951,1010.660095  C381.542603,1010.711853 381.072083,1010.439209 380.354797,1010.048340  C380.053955,1009.493408 379.999878,1009.056824 379.951752,1008.289612  C380.507355,1007.559570 380.706635,1007.034546 380.386475,1006.100220  C380.269867,1005.481201 380.292633,1005.135315 380.358429,1004.532593  C382.868378,1001.515869 382.683777,998.020813 383.102722,994.340271  C383.063110,993.560547 382.981964,993.122192 382.838989,992.355042  C384.001251,991.111755 385.225372,990.197205 386.747528,989.148438  C386.796600,993.468506 386.547638,997.922729 386.173828,1002.717773  z\"})),_path600||(_path600=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M390.379272,1029.050781  C390.013794,1029.001099 389.567871,1028.901367 389.340820,1028.875732  C387.535400,1027.067261 386.462311,1025.027710 385.931854,1022.290894  C385.864594,1021.072754 386.048950,1020.303101 386.797729,1019.343872  C389.904022,1018.681763 390.695709,1020.961487 391.672943,1022.724670  C392.375122,1023.991577 392.535095,1025.566162 394.643982,1025.955811  C395.339569,1029.439331 394.050751,1030.647705 390.379272,1029.050781  z\"})),_path601||(_path601=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M387.070801,1018.663818  C387.123138,1019.854187 387.137421,1020.620911 387.151276,1021.772400  C386.118378,1022.720642 385.282166,1022.274353 384.267456,1021.341980  C383.851166,1020.479675 383.650238,1019.913940 383.202881,1019.166992  C382.639954,1016.592285 382.323364,1014.198792 382.012573,1011.396606  C387.563202,1010.727234 386.661774,1014.923645 387.070801,1018.663818  z\"})),_path602||(_path602=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M389.514557,1015.718994  C391.147644,1014.955444 391.979248,1015.090027 392.315552,1016.028259  C392.455261,1016.417969 392.499542,1017.190308 392.313568,1017.292969  C390.884521,1018.081909 390.428314,1016.670105 389.514557,1015.718994  z\"})),_path603||(_path603=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M395.003784,1026.005127  C395.007538,1026.010376 395.249054,1025.589600 395.249054,1025.589600  C395.249054,1025.589600 395.227539,1025.898804 395.108734,1025.945801  C394.989929,1025.992798 395.000000,1026.000000 395.003784,1026.005127  z\"})),_path604||(_path604=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M400.527161,1011.483276  C400.547028,1011.521606 400.507263,1011.444885 400.527161,1011.483276  z\"})),_path605||(_path605=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M404.476105,1014.457275  C404.526001,1014.429199 404.426208,1014.485291 404.476105,1014.457275  z\"})),_path606||(_path606=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M559.008118,946.740723  C558.515564,947.573608 558.019836,948.159546 557.260864,948.873535  C556.248169,949.001099 555.498840,949.000488 554.374756,949.000000  C554.247681,948.194946 554.495300,947.389893 554.872681,946.292419  C556.067810,946.000000 557.133240,946.000000 558.598083,946.000000  C558.997559,946.000000 559.004883,946.493835 559.008118,946.740723  z\"})),_path607||(_path607=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M561.464844,984.521423  C561.442627,984.479919 561.487000,984.562927 561.464844,984.521423  z\"})),_path608||(_path608=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M44.280190,972.702515  C39.190174,972.231689 36.870190,968.738281 34.998783,964.377197  C38.025135,963.519409 37.031845,957.974060 41.639038,958.998535  C43.022194,959.692688 43.808243,960.619568 44.782616,961.788330  C44.774349,965.464722 45.491310,968.967224 44.280190,972.702515  z\"})),_path609||(_path609=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M42.291100,1002.843018  C41.676624,1002.263794 41.111298,1001.543091 41.062252,1000.788818  C40.703014,995.264038 43.049477,989.645935 40.654633,984.209595  C39.630474,981.884827 42.002613,980.643250 41.987892,978.355957  C43.360584,978.089233 44.637573,979.131287 44.380867,980.107483  C42.972122,985.464478 46.449631,991.216370 43.573029,996.109741  C42.152245,998.526611 45.740479,1001.040039 42.291100,1002.843018  z\"})),_path610||(_path610=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M41.284668,1011.985840  C39.096893,1011.595581 38.364479,1012.893433 38.172825,1016.017029  C36.112083,1007.897278 36.511101,1007.172302 41.788353,1007.227234  C43.431648,1008.809204 41.298607,1010.265564 41.284668,1011.985840  z\"})),_path611||(_path611=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M40.314159,1024.924316  C39.017017,1022.961914 36.463692,1020.827209 40.659637,1019.040710  C41.762802,1020.997803 43.196022,1023.035767 40.314159,1024.924316  z\"})),_path612||(_path612=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M45.001320,961.602966  C43.486458,961.902344 42.422188,961.242432 42.045036,959.334656  C42.003128,958.997559 42.002018,958.498779 42.001091,958.249390  C42.815441,958.341980 43.623730,958.773193 44.761196,958.103149  C45.008869,959.074158 45.006367,960.138794 45.001320,961.602966  z\"})),_path613||(_path613=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M48.044563,1015.447510  C48.718269,1015.817383 48.727280,1016.189392 48.245033,1016.517822  C48.144138,1016.586487 47.910610,1016.583679 47.812355,1016.511963  C47.342018,1016.169495 47.359756,1015.797913 48.044563,1015.447510  z\"})),_path614||(_path614=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M38.330933,1029.954102  C38.092884,1029.112427 38.360874,1028.349609 39.667625,1028.036987  C39.908012,1028.879761 39.639980,1029.642700 38.330933,1029.954102  z\"})),_path615||(_path615=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M123.448563,1029.191772  C121.855804,1028.279663 120.547729,1027.486328 121.576180,1025.695923  C121.738625,1025.413208 122.618553,1025.171997 122.800888,1025.331055  C124.042519,1026.414062 125.198105,1027.603027 125.111526,1029.452393  C124.658524,1029.414917 124.205521,1029.377441 123.448563,1029.191772  z\"})),_path616||(_path616=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M127.406784,999.026001  C128.380753,997.882996 129.409653,996.574951 130.589737,997.982544  C131.380615,998.925903 130.634293,1000.361206 129.796783,1000.960571  C127.977364,1002.262573 127.895142,1000.332764 127.406784,999.026001  z\"})),_path617||(_path617=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M130.788239,1017.243408  C131.680252,1017.848755 131.619064,1018.406494 130.901306,1018.684631  C130.573654,1018.811584 129.848541,1018.634705 129.703781,1018.373779  C129.302368,1017.649963 129.819580,1017.304016 130.788239,1017.243408  z\"})),_path618||(_path618=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M133.528992,1023.091736  C133.036224,1023.877075 132.487030,1024.060181 131.923737,1023.556396  C131.809570,1023.454285 131.870621,1022.949463 132.020523,1022.797119  C132.504044,1022.305725 133.058289,1022.136169 133.528992,1023.091736  z\"})),_path619||(_path619=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M130.955505,1028.551270  C130.283295,1028.182251 130.274689,1027.811157 130.755661,1027.483398  C130.856262,1027.414795 131.089432,1027.417603 131.187317,1027.489014  C131.656006,1027.830811 131.639084,1028.201660 130.955505,1028.551270  z\"})),_path620||(_path620=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M115.001556,1014.002441  C115.003120,1014.004883 114.744698,1014.423706 114.744698,1014.423706  C114.744698,1014.423706 114.758774,1014.101074 114.877335,1014.049194  C114.995888,1013.997314 115.000000,1014.000000 115.001556,1014.002441  z\"})),_path621||(_path621=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M805.056946,1007.317444  C805.329102,1005.902588 805.660583,1004.800293 805.997314,1003.347778  C807.905945,1004.010803 808.470459,1005.593140 807.561768,1007.478882  C807.009094,1008.625977 806.037292,1009.331970 805.056946,1007.317444  z\"})),_path622||(_path622=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M963.650269,997.079102  C963.578613,999.107056 965.728333,1001.025757 963.903137,1003.304138  C963.232605,1001.342712 960.522278,999.774719 963.650269,997.079102  z\"})),_path623||(_path623=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M962.760620,1006.125000  C962.828003,1007.788025 963.576294,1009.337402 961.856262,1010.639465  C960.676453,1008.898560 961.388489,1007.278137 961.770630,1005.685120  C961.784912,1005.625610 962.058044,1005.583618 962.195740,1005.610352  C962.349365,1005.640076 962.485962,1005.757568 962.760620,1006.125000  z\"})),_path624||(_path624=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M957.822632,1008.643616  C956.259766,1010.071594 956.178528,1008.874512 956.136719,1007.904724  C956.109863,1007.280640 956.347473,1006.424500 957.192566,1006.739075  C957.574158,1006.881165 957.674011,1007.780212 957.822632,1008.643616  z\"})),_path625||(_path625=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M958.551575,1017.043091  C958.181091,1017.717346 957.808411,1017.728027 957.479248,1017.244202  C957.410461,1017.143005 957.413269,1016.908997 957.485046,1016.810669  C957.828247,1016.340271 958.200562,1016.356567 958.551575,1017.043091  z\"})),_path626||(_path626=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M956.783569,1000.373047  C957.008362,1000.326965 957.137268,1000.384155 957.266174,1000.441345  C957.073364,1000.453003 956.880493,1000.464600 956.783569,1000.373047  z\"})),_path627||(_path627=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M945.002441,1009.997559  C945.111755,1010.122437 945.218628,1010.249756 945.325439,1010.377075  C945.250366,1010.333435 945.175354,1010.289795 945.047729,1010.125488  C944.995117,1010.004883 945.000000,1010.000000 945.002441,1009.997559  z\"})),_path628||(_path628=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M977.001709,724.637207  C978.176941,725.972290 979.272339,726.862183 980.926025,727.526611  C982.857300,731.565857 984.822266,735.186157 988.736206,737.770813  C990.515564,746.899719 996.326843,753.775269 1000.660034,761.188293  C1003.338745,765.770813 1004.128784,770.890442 1006.920654,775.634399  C1002.274292,777.378662 1000.974243,773.583435 998.880615,770.777100  C996.509338,767.598511 994.009155,764.484741 990.316284,762.108521  C989.235840,761.377258 988.666443,760.632019 988.037720,759.482300  C984.120361,751.839294 978.109863,746.257202 972.689941,740.314331  C968.035461,735.210571 963.383972,729.974182 957.800293,725.754456  C956.452087,724.735413 955.567871,723.322205 955.175903,721.274414  C956.494629,716.272522 963.007507,714.555054 967.137817,718.220154  C969.131165,719.988953 972.132446,720.687744 973.127625,723.725159  C973.646362,725.308350 975.430542,724.423889 977.001709,724.637207  z\"})),_path629||(_path629=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M988.698547,758.698669  C989.838318,759.554626 989.992065,760.391663 990.011047,761.616211  C987.542419,765.187927 991.499207,766.792358 991.934570,769.656006  C991.744690,770.252197 991.427856,770.409241 991.219971,770.649292  C990.724609,771.221313 989.460815,770.627930 989.485229,771.671326  C989.491455,771.936157 990.698669,771.854492 991.678711,771.967896  C995.556458,775.314087 995.357483,780.779175 999.167114,784.148438  C1000.552917,785.374023 996.612976,788.016174 998.846436,790.677307  C997.941162,790.844788 996.461304,791.357483 996.367188,789.595398  C996.132263,785.192627 993.983276,786.306458 991.316345,787.946411  C990.879517,787.690857 990.687317,787.435730 990.211670,787.117310  C989.781250,784.940552 991.099976,784.428711 992.726929,783.651733  C994.810913,782.656372 994.340271,780.538025 993.187073,779.067322  C991.814453,777.316589 989.756348,778.024780 989.150696,779.563293  C987.273438,784.331909 984.943054,781.537720 982.312927,780.141113  C981.754272,779.195312 981.506104,778.390686 981.130127,777.292969  C983.470886,775.781128 982.903015,773.484863 983.006897,771.411011  C983.122314,769.106262 982.158569,766.265869 985.881287,765.709839  C986.487610,765.619324 986.986023,764.816895 986.606995,764.160461  C986.334351,763.688232 985.666077,763.175964 985.160828,763.161865  C984.063965,763.131287 982.958557,763.408081 981.533020,763.603638  C981.699890,761.865295 981.848816,760.314270 981.998901,758.381592  C984.245361,756.190125 986.359192,756.485718 988.698547,758.698669  z\"})),_path630||(_path630=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M992.001221,771.663757  C991.333191,773.267761 990.465149,774.099243 988.888184,773.443665  C987.581482,772.900452 985.766052,772.735840 986.156067,770.686035  C986.571228,768.503784 988.119995,769.796448 989.255005,769.880615  C989.902771,769.928711 990.551758,769.961243 991.586670,770.004028  C991.981323,770.449036 991.989502,770.890686 992.001221,771.663757  z\"})),_path631||(_path631=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M1012.775146,780.744751  C1013.361816,781.748596 1013.651611,782.551331 1013.987549,783.672729  C1013.703979,784.088501 1013.448181,784.282837 1013.150024,784.790222  C1010.593262,784.727600 1007.685547,784.754089 1010.811768,780.992798  C1011.544983,780.601379 1011.987183,780.485962 1012.775146,780.744751  z\"})),_path632||(_path632=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M1013.086914,780.621521  C1012.645569,780.947693 1012.219116,780.949524 1011.475952,780.933838  C1011.142578,780.492920 1011.125916,780.069397 1011.094238,779.327820  C1011.146545,778.756592 1011.213928,778.503418 1011.464478,777.901001  C1012.604736,778.216614 1012.924622,779.219116 1013.086914,780.621521  z\"})),_path633||(_path633=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M114.983322,715.471191  C115.558800,714.412292 116.136726,713.785278 116.978806,712.968140  C118.648010,713.228943 119.497566,714.304688 120.371117,715.739868  C120.548820,717.141907 121.242188,718.030762 121.703705,719.361450  C121.481865,722.565369 118.684456,723.423218 116.958130,725.572693  C116.057358,726.163574 115.386932,726.362732 114.330872,726.169556  C113.839958,726.012939 113.671898,726.010742 113.251770,726.004272  C113.928009,722.686768 115.869095,719.572693 114.983322,715.471191  z\"})),_path634||(_path634=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M121.203011,719.379761  C120.055405,718.394226 119.833298,717.536011 120.330437,716.256348  C121.456200,716.891418 122.439331,717.771179 123.718918,718.776855  C126.873322,720.046326 129.531067,718.622620 132.681564,718.270142  C133.658936,718.392029 134.096359,718.692444 134.495850,719.584961  C133.026489,724.825806 128.706146,723.458252 125.343994,723.912903  C122.521263,724.294556 121.847893,721.963501 121.203011,719.379761  z\"})),_path635||(_path635=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M431.470367,1013.330933  C431.574738,1012.845276 431.673981,1012.672791 431.915344,1012.237732  C432.344940,1011.083008 434.500122,1011.001892 432.923126,1009.227661  C431.864227,1007.989685 432.200104,1006.569336 431.358032,1005.202759  C431.280121,1003.480530 431.383362,1002.020264 431.420593,1000.200806  C431.448151,999.693054 431.541718,999.544617 431.774536,999.185059  C432.106567,998.692505 432.174347,998.383728 432.028595,997.812622  C431.795898,997.264465 431.665588,996.945801 431.436371,996.381287  C431.420135,995.375122 431.515564,994.609619 431.636536,993.458191  C436.660278,991.764832 441.029724,994.405640 440.711121,999.204224  C440.450287,1003.132385 441.942596,1004.023376 445.323944,1004.166077  C447.250397,1004.247375 449.180878,1004.856384 451.467896,1005.218933  C452.459442,1005.661316 452.970795,1006.145325 453.481445,1007.100952  C453.629639,1007.668457 453.648621,1007.904175 453.593262,1008.485840  C453.303131,1009.249573 453.033478,1009.628174 452.443207,1010.189575  C452.008118,1010.560242 451.828491,1010.700745 451.370880,1011.038025  C449.735870,1012.046509 448.461517,1012.999329 446.662445,1013.723083  C442.839630,1013.298279 439.968903,1015.203491 436.492706,1016.275146  C434.750793,1016.458069 433.447021,1016.341003 432.045166,1015.124084  C431.645721,1014.454895 431.555481,1014.049500 431.470367,1013.330933  z\"})),_path636||(_path636=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M431.191040,1024.167603  C430.929901,1023.520813 430.946045,1023.077881 430.913208,1022.305542  C430.977356,1020.839539 431.090454,1019.702942 431.349213,1018.257690  C432.434174,1017.484985 433.300201,1016.804993 434.821838,1017.010620  C437.070557,1018.725037 440.127014,1019.199829 440.274170,1022.674500  C437.956909,1022.553101 435.905762,1021.499329 434.714844,1024.811890  C433.906860,1027.059326 432.468292,1025.382690 431.191040,1024.167603  z\"})),_path637||(_path637=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M436.391968,1017.878052  C434.837799,1018.016479 433.628540,1017.981628 431.957092,1017.947998  C431.532104,1017.175415 431.569336,1016.401733 431.671265,1015.244141  C433.211121,1014.902527 434.686279,1014.944763 436.599731,1014.990173  C437.875549,1016.001343 437.525391,1016.877441 436.391968,1017.878052  z\"})),_path638||(_path638=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M436.066772,1018.352173  C436.351685,1017.246948 436.656311,1016.442505 436.999451,1015.315735  C440.008087,1013.783691 442.542633,1010.669800 446.666992,1012.913940  C447.402191,1013.274719 447.657928,1013.667358 447.852600,1014.483887  C447.873688,1015.817139 447.507111,1016.680786 446.796387,1017.777100  C446.419739,1018.212830 446.252319,1018.370544 445.814575,1018.735596  C443.700958,1019.917175 443.787109,1022.676331 441.230774,1023.129517  C440.924316,1022.984558 440.501923,1022.981201 440.291748,1022.977783  C440.553253,1019.866699 436.115387,1021.297852 436.066772,1018.352173  z\"})),_path639||(_path639=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M441.065857,1023.282837  C443.368225,1022.020569 441.690674,1018.228088 444.836670,1017.817627  C446.228516,1019.362671 446.428253,1020.820862 445.322296,1022.756104  C444.193787,1023.979004 443.390289,1024.858154 442.326172,1025.894897  C441.779480,1025.228638 441.493469,1024.404907 441.065857,1023.282837  z\"})),_path640||(_path640=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M446.238586,1018.351196  C446.426361,1017.240601 446.643463,1016.425964 447.015503,1015.325684  C447.652405,1013.032043 449.897552,1012.368591 450.819489,1010.295532  C451.032318,1010.057312 451.009857,1010.017395 451.032013,1010.023010  C451.435608,1009.560913 452.003845,1009.521973 452.757446,1009.230225  C452.992798,1008.901062 453.000366,1008.727356 453.011627,1008.292969  C454.314270,1006.249329 456.622284,1006.566467 458.628662,1005.385864  C459.492767,1005.170837 459.999939,1005.155334 460.883911,1005.301147  C464.156494,1007.518372 469.207001,1006.302490 470.199341,1011.572998  C469.810455,1012.153259 469.542603,1012.371948 469.169434,1012.831787  C468.910858,1013.211243 468.757568,1013.349548 468.819916,1013.710205  C469.035583,1013.932434 469.076721,1013.938904 469.098846,1013.936768  C470.049835,1015.764221 471.532898,1017.376770 471.166931,1019.862183  C470.574799,1020.390137 470.117462,1020.544495 469.255798,1020.474121  C468.261353,1019.980835 467.798370,1019.416138 467.195007,1018.500977  C463.464050,1013.417847 458.903717,1012.251526 455.045044,1015.476685  C454.435455,1016.535706 453.775177,1017.110657 452.899963,1017.905762  C451.971375,1018.546204 451.181305,1018.719421 450.159424,1019.096191  C449.723389,1019.311951 449.545654,1019.393066 449.088135,1019.566406  C448.417297,1019.731323 448.024414,1019.739136 447.346924,1019.599976  C446.724182,1019.289551 446.458984,1019.002625 446.238586,1018.351196  z\"})),_path641||(_path641=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M464.418518,1029.879150  C464.022888,1029.965698 463.858765,1029.927368 463.444641,1029.852051  C462.110931,1029.036621 460.893311,1028.908569 459.304901,1029.123047  C458.208252,1028.863403 457.421143,1028.558350 456.350159,1028.101562  C455.085663,1027.462280 453.892273,1027.508545 452.768799,1026.514648  C452.052826,1025.772461 451.710175,1025.179810 451.312042,1024.220093  C451.161072,1023.658997 451.124939,1023.427979 451.106049,1022.845825  C451.589600,1020.519043 452.845764,1020.582764 454.667389,1021.333862  C456.355835,1021.551025 457.730011,1021.548340 459.376404,1022.035828  C460.875488,1022.724060 461.904541,1023.599915 463.504028,1024.085327  C464.358795,1024.606567 464.797028,1025.097412 465.366791,1025.911621  C465.745270,1026.580933 465.884094,1026.994141 465.944153,1027.754639  C465.501495,1028.638916 465.075775,1029.196655 464.418518,1029.879150  z\"})),_path642||(_path642=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M465.184875,1027.063965  C464.570404,1026.641724 464.289886,1026.185059 464.012146,1025.451294  C463.418732,1024.419800 462.701263,1023.748596 462.294495,1022.444946  C462.146149,1021.598267 462.169128,1021.109680 462.386658,1020.277344  C463.197235,1018.849243 464.265259,1018.238647 465.675171,1017.501099  C466.511230,1017.320251 466.989563,1017.366943 467.738281,1017.765259  C468.299347,1018.468201 468.576172,1018.944397 468.847565,1019.709595  C468.830841,1021.163940 468.647644,1022.294739 468.090149,1023.701721  C467.969147,1024.446411 467.924500,1024.855225 467.842285,1025.570068  C467.294464,1026.759521 466.439758,1026.960083 465.184875,1027.063965  z\"})),_path643||(_path643=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M468.358917,1023.975403  C466.839813,1022.676208 466.416931,1021.351379 468.523315,1020.066589  C469.318176,1020.010376 469.794189,1020.022095 470.624390,1020.059204  C470.993195,1021.820007 470.704437,1023.375000 468.358917,1023.975403  z\"})),_path644||(_path644=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M464.994263,1027.299561  C465.393799,1026.268066 466.228485,1026.018555 467.477661,1025.909668  C467.943085,1026.886841 467.599640,1027.608398 466.252075,1028.001953  C465.613403,1027.956665 465.350189,1027.763062 464.994263,1027.299561  z\"})),_path645||(_path645=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M445.920105,1018.047363  C446.486755,1018.184814 446.711731,1018.376221 446.991272,1018.828064  C448.775848,1021.247925 449.119263,1023.939636 449.702576,1026.900757  C449.554474,1027.494385 449.449249,1027.718994 449.016418,1028.119751  C446.265503,1027.716797 446.128815,1025.444702 445.140564,1023.398438  C445.011963,1021.691284 445.026642,1020.282837 445.046814,1018.455811  C445.245148,1018.038025 445.438019,1018.038757 445.920105,1018.047363  z\"})),_path646||(_path646=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M449.975769,1029.163330  C449.399475,1029.164917 449.154388,1028.960327 448.825470,1028.494141  C448.688843,1028.295898 448.941681,1028.067627 449.069153,1027.954712  C449.403534,1027.869019 449.610443,1027.896118 450.023193,1028.159180  C450.237396,1028.603516 450.245758,1028.812012 449.975769,1029.163330  z\"})),_path647||(_path647=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M450.818848,1030.180298  C450.426208,1030.144409 450.185455,1029.937378 449.837860,1029.498779  C449.697357,1029.306152 449.930237,1029.072998 450.046265,1028.955933  C450.556610,1028.784180 450.875153,1028.920410 451.148804,1029.501221  C451.169556,1029.780396 450.937103,1030.048218 450.818848,1030.180298  z\"})),_path648||(_path648=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M452.671722,1025.834473  C454.130341,1026.088501 455.085907,1026.461304 455.908020,1027.674805  C455.254120,1028.601685 454.441925,1029.253540 453.314697,1029.951904  C452.999634,1029.998535 453.007996,1030.005615 453.013397,1030.009644  C451.837494,1029.269287 450.978027,1028.353149 451.478821,1026.450439  C451.872925,1025.955444 452.093353,1025.813599 452.671722,1025.834473  z\"})),_path649||(_path649=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M459.273560,1029.400757  C460.315613,1027.646606 461.628510,1027.503540 463.063141,1029.502197  C461.980316,1029.754395 460.766052,1029.693726 459.273560,1029.400757  z\"})),_path650||(_path650=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M383.892212,1021.391479  C384.881775,1021.312927 385.711426,1021.580444 386.845978,1022.002563  C387.777740,1024.152710 388.404602,1026.148315 389.072632,1028.497070  C387.403534,1028.307007 385.577728,1027.515259 385.301331,1030.725464  C385.085114,1030.929077 384.592773,1030.864868 384.354004,1030.795776  C384.239777,1027.719604 381.900604,1024.817383 383.892212,1021.391479  z\"})),_path651||(_path651=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M451.865875,1025.827637  C452.189240,1027.192993 452.466003,1028.287476 452.880798,1029.697998  C452.604858,1029.977783 452.190918,1029.941772 451.473267,1029.843140  C450.991425,1029.525879 450.782593,1029.299805 450.352661,1028.970459  C450.003937,1028.567017 449.805786,1028.328247 449.382202,1027.982178  C448.327637,1025.208984 446.500336,1022.834351 447.067261,1019.424927  C447.424133,1019.020386 447.749908,1019.017212 448.320892,1019.009521  C449.278595,1018.630676 449.641052,1019.175598 450.249390,1019.799438  C450.669678,1020.339539 450.876038,1020.668335 451.158508,1021.278809  C451.394379,1021.896179 451.520905,1022.250610 451.789917,1022.844482  C451.938995,1023.081604 451.911591,1023.504578 451.885559,1023.714905  C451.775574,1024.467285 451.681854,1025.009155 451.865875,1025.827637  z\"})),_path652||(_path652=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M968.814575,741.741455  C972.768005,744.420044 972.689392,749.646667 976.569031,752.282715  C977.734863,753.074829 977.945618,756.871399 976.202881,758.154541  C974.677063,759.277893 972.261353,758.026733 971.017212,756.373413  C965.258728,748.721741 956.473633,744.565918 949.880920,737.788269  C944.192993,731.940735 937.749512,726.728516 930.407959,722.742554  C927.829041,721.342407 928.527100,718.530823 930.686646,716.180298  C931.393494,715.660156 931.832520,715.459961 932.699463,715.471436  C935.153137,718.338806 938.522705,717.018860 941.227905,717.930664  C946.264221,719.628174 950.920837,721.616150 954.724060,725.933411  C955.420471,726.385864 955.770325,726.704346 956.281128,727.357605  C956.965393,729.946167 958.636597,730.930237 961.016357,731.612610  C961.515808,731.869202 961.707092,731.985046 962.162842,732.301941  C963.055481,733.098877 963.658936,733.721924 964.602905,734.449951  C965.818115,735.542236 966.546509,736.588989 967.088745,738.119019  C967.406860,739.155884 967.436401,739.965698 968.106934,740.844421  C968.394836,741.223877 968.509583,741.375977 968.814575,741.741455  z\"})),_path653||(_path653=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M956.239258,728.222107  C955.705444,727.864441 955.451599,727.671570 955.132568,727.198425  C953.310608,725.091309 951.140442,723.445923 951.692688,720.104553  C953.264771,718.979919 954.436707,719.395508 955.752686,720.687073  C961.250977,727.573425 967.995667,732.706726 973.491516,739.022217  C978.890259,745.226135 985.221375,750.713257 988.970398,758.644531  C986.958374,758.625061 984.983521,757.679810 982.402649,758.000000  C981.757507,752.394836 976.498596,749.585571 974.594666,744.832458  C973.893677,743.082275 972.618042,740.336487 969.231567,741.715210  C969.004761,741.954834 968.520874,741.956543 968.278931,741.959351  C967.120361,741.356812 967.052856,740.217468 966.229248,739.201416  C966.049133,737.540283 965.053589,736.621033 964.137939,735.296387  C963.456787,734.472473 962.934448,733.929688 962.201477,733.197998  C962.002441,732.997559 962.000000,733.000000 962.001221,732.998779  C960.256897,731.362183 957.987610,730.365295 956.239258,728.222107  z\"})),_path654||(_path654=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M933.334229,716.249146  C932.555725,716.000183 932.113953,715.997864 931.340942,715.991699  C931.252869,711.932373 930.770508,708.778320 925.348572,710.883057  C924.137268,711.353271 922.736755,710.924500 921.191040,710.032349  C921.544678,709.124756 922.260681,708.401245 923.007324,707.369629  C923.560486,706.595581 924.082886,706.129761 924.864014,705.627197  C928.639954,705.393738 931.997314,706.227783 935.660400,707.384277  C937.367310,709.886902 938.039795,712.348877 937.569153,715.410034  C936.343567,716.990601 935.088196,717.164673 933.334229,716.249146  z\"})),_path655||(_path655=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M151.940308,700.353943  C151.945023,699.240662 151.963577,698.498596 152.014709,697.386658  C152.842407,696.289490 152.732010,695.181274 153.152618,694.335754  C154.677139,691.271301 155.913071,692.298035 157.120193,694.862793  C157.861603,690.728699 157.821564,686.421265 160.584442,682.573853  C162.126541,681.596497 163.122833,680.525513 164.245865,679.611023  C166.705933,677.607727 169.142487,677.127136 171.591370,680.298584  C172.522430,684.842102 175.130356,688.647766 174.388214,693.514771  C174.204437,694.105042 174.111206,694.332825 173.818054,694.866577  C171.738007,697.437317 168.837082,696.646545 166.182739,697.677490  C160.886353,699.879028 160.094940,703.630798 164.153549,707.022705  C160.066025,711.433594 155.014221,713.450195 148.851593,712.950684  C147.395096,708.025146 151.368378,704.851257 151.940308,700.353943  z\"})),_path656||(_path656=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M161.507080,650.308411  C161.970795,645.198669 162.514282,640.323303 162.140915,635.350708  C161.886093,631.956848 163.323639,628.833923 165.268219,626.269226  C166.246658,624.978760 167.481918,624.086304 166.391464,622.630615  C165.664398,621.660095 164.180954,620.542542 163.169876,620.658386  C161.472748,620.852966 160.251892,622.657776 160.472748,624.267944  C161.013000,628.206726 158.641312,631.634338 158.912399,635.492920  C159.003448,636.788696 158.229248,637.944763 156.597061,638.976379  C155.667435,633.996216 155.334717,629.539124 157.073013,625.100830  C157.845871,623.127563 158.565628,621.164307 155.246841,620.859131  C154.198761,620.762756 153.166412,619.985901 153.545837,618.892395  C153.826538,618.083313 155.443832,616.892578 155.588593,617.004700  C159.734604,620.214905 159.043213,614.620667 161.045486,614.056641  C161.520065,613.922852 161.963425,613.678406 162.675232,613.269104  C163.916199,611.968506 165.159546,611.688293 166.920410,612.000000  C168.663773,612.734131 169.112381,613.985962 168.924362,615.288269  C168.536972,617.971497 170.586594,617.325806 172.184952,617.944397  C173.248459,620.070068 172.573227,621.816833 171.754044,623.403564  C168.315628,630.063782 167.968613,637.230225 168.142273,644.880859  C168.314514,646.367432 168.215454,647.437866 167.592438,648.830994  C165.766922,650.574890 163.900574,650.918884 161.507080,650.308411  z\"})),_path657||(_path657=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M161.312439,682.620239  C158.804932,688.248535 159.946060,694.698120 156.303497,699.986877  C154.017914,697.681152 157.356903,695.374878 155.153778,693.606079  C153.345184,693.972961 154.457947,696.514526 152.380539,696.945862  C151.370178,691.797791 154.250763,686.668457 152.655396,681.123901  C154.370102,679.953186 155.241165,678.731873 155.158691,676.912170  C155.085205,675.290588 155.101685,673.669800 156.745453,672.236206  C156.983261,671.985291 157.000000,672.000000 156.992188,671.991455  C157.549301,671.469849 158.206451,671.203308 159.321991,671.326782  C161.352356,672.524231 160.928452,674.163025 160.739822,675.731628  C160.551773,677.295532 160.016617,678.887207 161.353104,680.624390  C161.609589,681.400330 161.612656,681.861450 161.312439,682.620239  z\"})),_path658||(_path658=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M137.518692,714.468079  C137.086487,714.010681 137.020157,713.718689 136.845444,712.990845  C136.008820,711.643188 135.990982,710.674377 136.740906,709.355713  C136.987823,707.349792 136.998947,705.651001 137.002014,703.534058  C139.260864,697.946167 141.621552,692.796692 139.741745,686.537598  C142.658447,687.500916 143.254929,688.902222 142.550980,690.956604  C142.239120,691.866699 142.365982,692.709290 143.421951,692.801392  C144.473999,692.893250 144.499298,692.037598 144.659988,691.143372  C145.168457,688.313843 147.094116,685.964844 147.165802,681.990295  C148.530151,685.117737 150.436279,686.775146 149.980362,689.739868  C144.488174,696.583679 142.384903,704.278320 141.569122,712.853333  C140.463959,714.256226 139.315048,714.789124 137.518692,714.468079  z\"})),_path659||(_path659=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M141.357117,713.190430  C139.012085,705.648926 144.887314,691.945435 149.612579,690.148438  C148.644302,694.209961 149.884491,698.639587 148.354828,703.050537  C149.110855,704.363647 149.148636,705.383606 148.697876,706.786865  C147.805176,707.582153 147.047592,707.728210 146.292892,707.250549  C145.769089,706.919067 145.435730,706.480652 146.012207,705.889893  C144.937088,706.223267 145.707779,706.910583 145.803833,707.362793  C146.119858,708.850525 145.690918,710.213562 145.155853,711.951965  C144.871460,712.524719 144.727509,712.741516 144.279785,713.212158  C143.200958,713.803345 142.424973,713.799805 141.357117,713.190430  z\"})),_path660||(_path660=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M168.276154,612.714722  C166.534668,612.963257 165.149673,612.984009 163.346985,613.029053  C162.638779,612.259827 162.348251,611.466309 162.009888,610.359558  C160.437759,605.848816 161.725250,601.839111 163.036606,597.937988  C163.656494,596.093811 165.063019,594.517395 163.526398,592.164185  C163.325333,591.467041 163.305511,591.094360 163.292542,590.441650  C164.103409,588.964294 165.307953,588.809448 166.959732,588.951416  C168.208969,589.283020 169.119812,589.495422 170.215088,590.073364  C170.349579,593.644653 169.367447,596.756836 168.134552,599.735474  C167.228912,601.923462 167.519577,603.470825 169.599426,605.126953  C170.733551,608.015930 170.344131,610.362061 168.276154,612.714722  z\"})),_path661||(_path661=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M146.294067,662.097290  C146.395752,660.920715 146.769547,659.863037 147.169647,658.465149  C147.820129,654.669434 150.202515,651.374268 148.123260,647.330444  C148.095078,646.243347 148.092514,645.500244 148.103958,644.386108  C150.912079,642.478088 151.992599,639.867432 152.809280,636.799377  C153.537750,641.587830 156.462219,646.230530 153.548965,650.990356  C152.075897,653.397217 152.513367,656.176086 151.233856,658.485229  C150.211029,660.331055 148.958755,662.022339 146.294067,662.097290  z\"})),_path662||(_path662=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M168.244385,589.670166  C166.639313,589.990051 165.344803,590.031677 163.674820,590.117493  C162.033295,587.411377 165.524338,585.427124 164.592041,582.700378  C162.671387,582.153992 162.763290,584.341492 161.007065,584.598083  C159.695862,583.201660 159.665466,581.925781 160.525665,580.294312  C160.901535,578.967285 161.066101,577.978821 161.302094,576.621338  C161.776932,575.465027 162.483032,575.265320 163.664642,575.351868  C166.171249,576.550903 166.204895,578.541809 166.168472,580.063843  C167.439896,578.008423 166.092331,573.539673 171.425201,574.096924  C173.094620,579.906311 171.185532,584.724548 168.244385,589.670166  z\"})),_path663||(_path663=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M157.490479,663.185669  C157.484528,659.408813 158.971497,656.460754 160.521423,653.194946  C161.188644,652.605591 161.676285,652.429749 162.601578,652.484680  C167.805969,659.388855 167.152496,664.132812 160.393311,668.681763  C156.337982,668.459595 156.507141,666.166626 157.490479,663.185669  z\"})),_path664||(_path664=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M163.233978,592.248047  C165.075516,592.401917 166.837723,593.852661 165.608658,595.307007  C162.079651,599.482910 163.657394,604.713684 161.999603,609.629150  C160.763809,610.621826 159.508118,611.337891 158.544174,609.760315  C157.793198,608.531250 158.089737,607.401672 158.806351,606.122620  C161.148056,601.943237 161.359299,597.045471 163.233978,592.248047  z\"})),_path665||(_path665=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M156.570099,671.987549  C156.524872,673.845520 156.311462,675.635315 156.841995,677.601196  C157.501312,680.044434 156.215134,681.210510 153.279602,680.875244  C152.908630,678.909607 153.035233,676.988831 152.962952,675.075623  C152.875839,672.769043 154.003510,671.891113 156.570099,671.987549  z\"})),_path666||(_path666=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M148.198730,707.520630  C148.388626,706.229736 148.370392,705.203064 148.405670,703.801636  C149.817078,702.757202 150.647736,701.580505 151.673477,700.165466  C153.733887,701.953491 152.937592,703.589722 151.627747,705.550537  C150.492889,707.249512 150.038452,709.403076 149.147354,711.698120  C148.815857,712.150513 148.620270,712.260376 148.108063,712.253052  C146.704041,710.632690 146.927429,709.189636 148.198730,707.520630  z\"})),_path667||(_path667=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M157.358536,662.960815  C158.014725,664.551697 156.722458,666.720093 159.337433,667.997192  C160.978271,668.854065 160.905975,669.987793 160.091614,671.526001  C159.061157,671.884094 158.369904,671.939758 157.331512,671.989136  C155.619232,669.010742 154.404984,666.039734 157.358536,662.960815  z\"})),_path668||(_path668=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M163.313522,653.177490  C162.437042,652.995850 161.956970,652.985046 161.114746,652.949219  C160.837921,652.208862 160.923248,651.493469 161.082245,650.425537  C162.735428,649.680481 164.314941,649.287903 166.250793,648.890747  C167.599579,649.254822 167.728699,650.083069 167.609329,651.400818  C166.578812,653.182983 165.253601,653.535889 163.313522,653.177490  z\"})),_path669||(_path669=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M157.477386,592.182129  C157.189758,591.618042 157.227707,591.212524 157.320984,590.506104  C157.768555,589.077820 159.035263,588.260986 158.527359,586.512390  C158.477005,585.107239 159.090881,584.626587 160.415863,584.667114  C160.726379,584.794861 160.867126,584.892883 160.933563,584.947144  C160.991241,586.815918 161.007034,588.630981 160.967514,590.444885  C160.917984,592.719177 159.910431,593.466003 157.477386,592.182129  z\"})),_path670||(_path670=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M155.866348,600.226379  C155.821411,599.863831 155.943680,599.462463 156.001251,599.261108  C160.345337,600.856140 156.323227,602.654236 156.589096,605.050293  C154.552399,603.220093 156.361572,601.861084 155.866348,600.226379  z\"})),_path671||(_path671=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M820.789856,636.194214  C826.918152,636.172424 828.444519,638.098206 827.868347,644.020264  C827.430481,648.520203 828.209717,652.597473 833.408569,654.062744  C834.716125,654.431335 835.131104,655.493713 835.755859,656.456055  C837.788330,659.586792 839.889893,662.603577 844.421326,661.412476  C845.310547,661.178711 846.186951,661.511536 846.376038,662.446716  C846.682800,663.963013 845.417542,663.825073 844.480347,663.983215  C839.344055,664.850037 836.054565,661.922852 832.948547,658.483521  C831.535461,656.918823 829.890198,654.719543 828.262939,658.792847  C824.720032,659.919189 823.298950,657.640869 821.970337,655.351929  C820.905457,653.517212 820.701721,651.283997 819.168091,649.286255  C818.777466,648.859741 818.631165,648.681274 818.296509,648.214966  C816.576538,644.927734 814.910706,642.040588 811.580750,640.082520  C811.057861,639.123535 810.941895,638.410339 810.952393,637.302734  C812.219238,634.524292 810.471680,631.993042 811.476807,629.247986  C812.069275,628.626770 812.513428,628.438721 813.367737,628.444458  C816.722412,630.509155 816.495300,635.314026 820.789856,636.194214  z\"})),_path672||(_path672=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M814.424805,629.074097  C813.532410,629.107361 813.095764,629.088074 812.331421,629.076538  C809.782043,629.855713 813.091858,633.247070 809.524048,633.530701  C804.183167,630.955444 803.549744,626.151062 803.866150,621.545044  C804.183105,616.930298 802.114380,612.761841 802.381653,608.243347  C802.498413,606.270020 799.879700,606.206787 799.173401,604.232727  C798.922974,603.391907 798.865784,602.899475 798.889648,602.042725  C799.050415,600.563354 799.582153,599.470032 799.096436,597.962769  C798.973694,596.896240 799.063049,596.196350 799.532654,595.221375  C799.958069,594.821960 800.178528,594.721802 800.708984,594.811096  C802.392395,595.065186 803.631714,594.764099 804.738953,593.872192  C805.642761,593.144165 806.904297,593.097961 807.269043,594.182434  C808.192627,596.927856 810.232483,600.586182 809.211609,602.438232  C806.839966,606.741150 809.073486,609.291626 811.014771,612.694946  C811.098145,614.729797 811.100037,616.402832 811.125610,618.494629  C811.558960,619.481018 812.015137,620.010437 812.701660,620.802856  C813.031860,622.174377 813.505676,623.068420 814.693115,623.870056  C815.982910,625.710632 816.499573,627.383972 814.424805,629.074097  z\"})),_path673||(_path673=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M828.662964,664.125366  C830.388245,663.982361 831.994934,663.954773 832.528870,665.362488  C835.068298,672.058777 841.849182,675.132812 845.551086,680.825134  C846.251831,681.902710 847.278320,683.047607 848.419128,683.513428  C854.659973,686.061829 858.307251,690.705872 859.998291,697.450012  C860.167297,697.974731 860.327454,698.131592 860.415039,698.618408  C860.041199,699.301514 859.661804,699.530212 858.873413,699.662109  C858.308899,699.609680 858.087585,699.548767 857.572021,699.307373  C856.746643,698.675110 856.331848,698.126038 855.784180,697.247681  C855.146362,695.941101 854.342651,695.510803 853.245667,695.455811  C849.749329,695.280701 847.567017,693.129333 845.618530,690.492981  C842.840027,686.733521 839.612610,683.429993 834.993958,681.210449  C834.474243,680.930603 834.279602,680.794373 833.853027,680.387085  C833.431213,679.676758 833.338135,679.217957 833.417664,678.397827  C835.349060,675.029480 833.032349,674.191711 830.630310,673.071350  C829.420898,672.400757 828.730164,671.689758 827.990112,670.497314  C827.108887,668.121826 826.308411,666.082275 828.662964,664.125366  z\"})),_path674||(_path674=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M871.223145,701.209778  C869.186340,696.658264 865.999634,693.502869 862.341370,691.048523  C859.497070,689.140198 858.541138,686.833069 858.535645,683.599854  C862.466858,683.444153 864.973694,685.116089 867.241089,688.193970  C869.739624,691.585327 873.580933,693.860474 875.580200,697.827148  C876.331482,699.317810 877.155151,700.358398 875.174683,701.756775  C873.650208,703.045532 872.500000,702.541077 871.223145,701.209778  z\"})),_path675||(_path675=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M828.972290,663.618164  C827.695862,665.724915 828.165161,667.509338 828.957703,669.652588  C826.323120,671.868042 824.750793,670.100159 823.377869,668.180786  C822.136536,666.445251 821.743774,664.289551 820.685791,662.043823  C819.428406,659.049683 817.740356,656.642822 817.013733,653.450439  C817.003113,652.856384 817.018005,652.619507 817.097351,652.034729  C817.515320,650.580627 817.723267,649.416992 818.708923,648.235779  C821.836792,648.459167 821.837646,651.027649 822.396606,652.955933  C823.201294,655.731812 824.682922,657.692505 827.699219,658.862183  C828.317505,660.419434 828.614441,661.838928 828.972290,663.618164  z\"})),_path676||(_path676=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M813.982300,629.486572  C815.341125,627.927856 814.942200,626.314819 814.972046,624.416382  C818.076233,627.251221 818.265991,631.878601 820.754150,635.758484  C820.841003,637.424622 821.419678,638.972534 819.942688,640.870361  C819.134155,636.255493 814.296509,634.437500 813.982300,629.486572  z\"})),_path677||(_path677=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M870.717590,700.872803  C872.126465,701.222046 873.215332,701.591248 874.648560,701.988525  C875.029358,702.395813 875.065796,702.775024 875.121094,703.437866  C874.929443,703.840332 874.718872,703.958984 874.186646,704.244751  C872.952881,705.076416 871.936523,705.186829 870.484863,704.862061  C868.811646,703.916687 867.426208,703.181213 866.878052,701.293823  C868.113281,699.502380 869.263062,700.972717 870.717590,700.872803  z\"})),_path678||(_path678=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M859.890320,699.337646  C859.991333,698.811890 859.988159,698.613708 859.996033,698.116638  C861.760498,698.194824 863.602173,698.370178 864.916870,700.248047  C865.021667,700.787109 865.045837,701.011230 864.785034,701.421509  C864.057739,701.737000 863.605957,701.784790 862.805908,701.705200  C861.364807,701.266846 860.281494,700.863647 859.890320,699.337646  z\"})),_path679||(_path679=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M866.654236,700.897766  C868.007446,701.609131 869.022949,702.291870 870.166565,703.262634  C867.935120,705.844849 866.266113,704.583008 864.894775,702.062378  C865.022766,701.468079 865.017273,701.287415 865.004700,700.834961  C865.437195,700.665100 865.876892,700.767151 866.654236,700.897766  z\"})),_path680||(_path680=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M812.908203,620.755371  C812.035950,620.913757 811.290222,620.587219 811.145203,619.235840  C812.018127,619.092773 812.733948,619.446838 812.908203,620.755371  z\"})),_path681||(_path681=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M388.226440,109.249947  C388.086884,106.944702 389.623657,106.515022 391.162598,105.717819  C394.548126,103.964050 397.769989,101.814987 399.395203,98.130630  C400.431458,95.781372 402.977264,93.252083 398.147949,91.592026  C395.757996,90.770493 398.355591,88.386086 398.070312,86.079407  C398.560577,85.020264 399.064606,84.738693 399.513306,84.018562  C399.906097,83.272903 400.215576,82.806976 400.787048,82.184654  C402.110474,81.391891 403.244843,80.806458 404.685242,80.131775  C405.526154,80.579872 406.080994,80.571709 406.710022,79.787567  C407.225250,79.170883 407.683044,78.869850 408.410400,78.506699  C411.735504,77.929535 414.832855,77.508385 417.092072,74.472885  C418.057129,73.130524 419.074860,72.461151 420.690155,72.095795  C421.718231,71.990936 420.986938,72.279137 421.537811,71.995415  C432.421661,66.389847 443.826569,70.824242 454.966583,70.137199  C449.685669,69.912437 444.409851,69.604362 439.123627,69.437874  C436.669586,69.360596 433.801880,69.251724 434.633911,65.047272  C434.783569,64.725410 434.586334,64.512688 434.622131,64.372124  C439.734406,63.535328 444.166718,60.643093 449.605591,59.825905  C450.398865,59.683376 450.831512,59.667778 451.589050,59.651360  C455.366241,59.009686 458.831238,58.224689 462.251648,60.803188  C463.435944,64.670006 465.667633,66.177460 469.476135,65.879913  C471.921082,65.688896 476.854706,71.855202 476.339935,74.167534  C475.927124,76.021912 474.281036,76.222076 472.767487,76.156334  C460.212402,75.610970 449.228607,80.420433 438.524048,86.161545  C437.310822,86.812241 436.094147,87.292313 434.747284,87.240868  C432.278870,87.146561 430.221130,88.117790 428.277985,89.483795  C420.059875,95.260994 411.666565,100.778931 402.982147,105.821457  C398.554749,108.392174 393.574005,109.349007 388.226440,109.249947  z\"})),_path682||(_path682=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M434.456421,64.680283  C434.841766,67.697807 436.705750,68.008339 439.168823,68.043983  C446.208282,68.145882 453.288025,67.892807 460.344421,69.445976  C458.695068,71.294800 452.957642,72.659996 449.255890,71.792328  C445.614410,70.938797 441.050293,72.535370 438.648956,71.315735  C432.132355,68.006004 427.353149,73.352303 421.274902,72.943008  C420.568237,72.515533 420.470428,72.073608 420.804016,71.324226  C421.813354,70.756271 422.589966,70.455894 423.558777,69.908691  C426.318909,67.582687 429.707031,67.175255 432.623413,65.118805  C433.256500,64.766602 433.692871,64.700882 434.456421,64.680283  z\"})),_path683||(_path683=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M462.335388,61.256615  C458.929199,61.084187 455.729340,58.921757 452.767822,61.498528  C452.515076,61.109486 452.262299,60.720444 451.961761,59.990967  C452.346649,59.068333 452.779327,58.486130 453.443237,57.746735  C455.735077,56.421207 457.974304,56.389141 460.666382,56.578568  C462.372070,56.631363 463.656342,56.662140 465.324158,56.655624  C466.663666,56.264030 467.640625,55.977951 468.916626,55.622471  C470.178406,55.421684 471.149414,55.316933 472.487061,55.230782  C473.557922,55.774956 473.745697,56.501747 473.530579,57.701744  C471.082733,60.477184 467.695374,60.191051 464.551636,61.559044  C463.654297,61.733124 463.145782,61.670647 462.335388,61.256615  z\"})),_path684||(_path684=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M502.761230,56.347847  C503.457581,55.921227 503.908417,55.782810 504.700562,55.551319  C505.204224,55.519909 505.366577,55.581577 505.769196,55.739666  C506.575867,55.959290 507.129700,55.867962 508.018066,55.665218  C511.768494,55.291809 515.099182,56.011726 518.817749,56.605270  C519.992676,57.688385 520.131775,58.746017 519.807251,60.266609  C517.350281,63.412136 514.299500,61.455421 511.254150,61.918346  C510.414948,61.987228 509.940155,62.004826 509.123444,61.983055  C507.904694,61.886795 507.030548,61.738060 505.806213,61.838570  C505.004730,61.838230 504.551666,61.754951 503.789276,61.452358  C502.882874,60.815517 502.467712,60.219875 502.093903,59.161400  C501.930176,58.018162 502.079834,57.293064 502.761230,56.347847  z\"})),_path685||(_path685=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M449.672241,59.473923  C445.704987,62.998436 440.959320,64.880470 435.074158,64.438858  C438.958374,60.779388 443.671204,58.545593 449.672241,59.473923  z\"})),_path686||(_path686=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M528.586792,57.987442  C529.685486,58.096447 530.371033,58.214859 531.388916,58.435970  C532.879028,58.792435 533.666504,59.623196 534.794861,60.579479  C535.948120,61.769939 536.628601,62.807758 536.347168,64.568024  C531.066711,67.471970 526.334595,65.559113 524.342773,59.700607  C525.329529,57.813690 526.814087,58.084530 528.586792,57.987442  z\"})),_path687||(_path687=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M519.169189,57.036728  C514.985291,57.201717 510.963226,57.061710 506.478333,56.931915  C505.815826,56.846825 505.616180,56.751518 505.168671,56.435513  C504.920837,56.214813 504.939758,55.833122 504.990784,55.645683  C506.638733,52.874516 509.848083,53.056404 511.490631,53.708115  C513.833557,54.637703 516.351624,54.383934 518.765320,55.820324  C519.108154,56.328873 519.219543,56.530304 519.169189,57.036728  z\"})),_path688||(_path688=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M473.436584,58.210159  C473.073059,57.228119 473.001251,56.565750 472.891571,55.576382  C477.869202,55.276035 482.846497,53.926231 488.036469,55.163803  C487.334167,58.106255 484.683716,56.994884 482.630310,58.107605  C479.394745,58.584965 476.605927,59.841179 473.436584,58.210159  z\"})),_path689||(_path689=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M534.356018,61.218071  C532.829773,60.898415 532.074646,60.311539 531.777222,58.832375  C533.013611,57.090668 534.457947,56.997623 536.095947,57.959419  C537.706543,58.905052 539.478760,59.094353 541.707947,58.742310  C542.264954,58.694874 542.423157,58.760948 542.832825,58.882759  C543.620422,59.464157 544.156494,59.989811 544.825073,60.771080  C544.210876,61.990280 543.155090,62.284142 541.595215,62.411217  C540.625488,62.461380 540.071167,62.470940 539.101318,62.458942  C537.254028,62.529472 535.959229,62.064953 534.356018,61.218071  z\"})),_path690||(_path690=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M420.649536,71.008255  C421.005859,71.472870 420.975006,71.889084 420.891296,72.614075  C419.978546,73.387169 419.118652,73.851486 418.066406,74.540436  C416.020569,77.321899 413.224213,77.273369 410.196167,77.155334  C411.928955,72.419853 416.328094,72.097290 420.649536,71.008255  z\"})),_path691||(_path691=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M409.681030,77.027771  C412.305573,76.219109 414.721893,75.560211 417.506104,74.833183  C416.722351,79.763290 412.569580,78.725182 408.903137,78.779381  C408.944214,78.022240 409.208466,77.599892 409.681030,77.027771  z\"})),_path692||(_path692=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M482.126587,57.334679  C483.524353,55.426758 485.610626,56.283363 487.791443,55.637772  C490.183411,55.587601 492.180298,55.679607 494.606812,55.786354  C495.170319,56.022072 495.304199,56.243046 495.457031,56.851791  C492.021179,60.182121 486.090118,60.384743 482.126587,57.334679  z\"})),_path693||(_path693=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M432.451782,64.850174  C431.523224,68.952980 427.278778,68.115089 424.133240,69.715408  C425.226746,65.801353 429.126465,66.154037 432.451782,64.850174  z\"})),_path694||(_path694=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M460.966766,56.276188  C459.277344,58.923374 456.786377,57.684761 454.118805,57.718391  C455.424683,54.240387 457.962402,54.339443 460.966766,56.276188  z\"})),_path695||(_path695=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M528.775146,57.677391  C528.177795,59.184185 526.844116,58.872272 525.327454,59.163338  C524.574890,59.493046 524.144104,59.635052 523.335571,59.621689  C521.848328,59.066204 521.125061,58.213696 520.872803,56.652901  C523.630676,55.435001 526.118530,56.205482 528.775146,57.677391  z\"})),_path696||(_path696=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M520.597412,56.242916  C521.537537,57.032406 522.162354,57.757652 522.894775,58.754608  C523.872925,62.367958 521.740295,61.874676 519.389038,61.270554  C519.010681,59.998333 518.998291,59.024963 518.996582,57.696659  C519.018250,57.138985 519.029236,56.936249 519.018555,56.430473  C519.425232,56.144516 519.853577,56.161591 520.597412,56.242916  z\"})),_path697||(_path697=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M495.355103,57.284866  C495.017700,56.763161 495.014648,56.571003 495.023987,56.089973  C496.388489,54.681217 497.930695,54.920429 499.750641,55.380722  C500.164032,55.857483 500.302521,56.133659 500.261780,56.838959  C498.695343,58.362652 497.221649,58.359497 495.355103,57.284866  z\"})),_path698||(_path698=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M499.874084,57.352100  C500.007172,56.768307 500.012573,56.531940 500.021790,55.938438  C500.778168,55.665401 501.530823,55.749500 502.645081,55.946617  C503.007599,56.806622 503.008484,57.553608 503.007385,58.674610  C502.632324,59.388924 502.190399,59.568977 501.328644,59.534256  C500.285248,59.061005 499.886169,58.470398 499.874084,57.352100  z\"})),_path699||(_path699=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M397.957458,85.963547  C397.149780,85.922935 396.347656,85.900475 395.149414,85.790932  C395.075470,84.491608 395.960083,83.993660 397.445892,83.838829  C398.298798,84.171410 398.515808,84.647545 398.186401,85.613991  C397.947571,85.964142 397.963043,85.981712 397.957458,85.963547  z\"})),_path700||(_path700=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M468.876892,55.369637  C468.622711,56.725338 467.629974,57.050957 466.047974,56.730995  C466.240692,55.315155 467.205994,54.885254 468.876892,55.369637  z\"})),_path701||(_path701=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M400.680756,81.976440  C400.794128,82.506584 400.612183,83.035866 400.208557,83.749054  C399.728363,84.042717 399.469818,84.152466 399.014648,83.889587  C399.002533,82.659531 399.535370,82.156265 400.680756,81.976440  z\"})),_path702||(_path702=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M406.455566,79.512772  C406.779846,80.212555 407.114929,81.126228 406.060120,81.386230  C405.814392,81.446800 405.420837,80.907631 405.043274,80.343460  C405.375397,79.879555 405.759552,79.716591 406.455566,79.512772  z\"})),_path703||(_path703=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M398.556946,83.596237  C399.005646,83.606606 399.193329,83.696251 399.683960,83.859428  C399.905182,84.854980 399.646637,85.651802 398.274109,85.927681  C397.931732,85.489685 397.915894,85.015236 397.837158,84.188110  C397.948151,83.782127 398.122040,83.728813 398.556946,83.596237  z\"})),_path704||(_path704=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M915.020630,718.666016  C914.549255,718.953308 914.117737,718.940369 913.362183,718.924438  C912.921204,718.716675 912.804138,718.511902 912.769409,717.963013  C913.343445,717.461792 913.835083,717.304688 914.715942,717.154419  C915.090210,717.562683 915.075317,717.964172 915.020630,718.666016  z\"})),_path705||(_path705=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M323.042633,159.340881  C325.217865,156.124756 326.478699,152.210907 331.312378,152.348511  C332.412201,152.379791 332.960480,150.364838 332.943604,149.017258  C332.900055,145.536194 335.275940,143.817596 337.981750,144.188660  C343.938751,145.005524 347.547943,141.429993 350.372467,137.602036  C353.786133,132.975555 358.715698,131.312210 363.285614,128.807190  C365.593231,127.542274 367.998535,126.455597 370.677856,125.141907  C374.839203,125.756706 378.426178,123.167511 382.593689,124.309586  C384.480591,126.480453 383.164886,127.863510 381.853119,129.183441  C380.802368,130.240738 379.393066,130.871460 378.362244,131.970306  C375.328888,135.203857 375.558380,136.280777 379.988831,138.405182  C383.612122,143.338303 383.636475,143.365158 379.416412,147.193649  C377.296783,149.116562 376.505981,151.104965 378.747467,153.849869  C379.173340,155.434967 379.014252,156.636322 378.365509,158.138992  C374.699097,163.680450 370.067627,168.012054 366.658020,173.321472  C364.350555,176.914597 359.767761,176.717514 356.425690,178.767715  C352.797455,180.993530 349.471771,183.020340 347.407074,186.831467  C346.529266,188.451736 345.194611,189.728500 342.928223,190.281433  C340.715057,190.575989 338.962738,190.359512 337.123840,189.006378  C335.323456,186.522858 336.568481,184.746811 337.646912,182.799332  C341.593353,175.672501 347.584564,170.009094 351.427460,162.765717  C349.409454,163.949570 348.424347,166.094025 347.204834,167.968658  C345.682495,170.308823 344.044739,172.291641 340.878845,171.975357  C338.987213,171.786392 337.892761,173.011780 336.664581,174.202240  C333.984528,176.799988 331.202454,179.192413 326.989532,177.193192  C324.948364,176.224548 324.712708,177.761566 324.899841,179.216751  C325.551331,184.282791 322.887634,187.809494 319.460358,190.912033  C316.551514,193.545273 314.236664,196.473541 313.354340,200.392776  C312.983948,202.037964 312.374268,203.751572 310.899506,204.617645  C307.360229,206.696121 305.682983,210.082230 303.887054,213.868988  C301.406097,216.845108 299.613037,219.811142 298.505554,223.548859  C298.354492,225.215225 297.960266,226.401901 296.694519,227.572205  C293.456635,228.936874 290.097626,228.385040 287.322388,230.201599  C286.455505,230.769028 285.379883,230.632095 284.671509,229.677979  C283.900452,228.639343 283.829803,227.370438 284.458313,226.380463  C289.783875,217.991730 291.787445,207.805038 298.599640,200.234711  C300.806061,197.782684 300.565338,195.133591 299.330627,192.009918  C298.657562,188.949722 300.167969,186.814514 301.425842,184.745667  C302.894958,182.329361 304.120728,179.908295 305.042023,177.197891  C306.373688,173.280258 309.981537,170.469574 313.628479,170.722702  C317.734772,171.007736 318.936707,169.022736 320.258881,166.329330  C321.318451,164.170853 323.704407,162.556534 323.042633,159.340881  z\"})),_path706||(_path706=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M383.297852,124.824738  C381.062958,125.072243 379.081940,124.713776 377.350159,126.082184  C375.247864,127.743401 373.374725,126.831627 371.312714,125.164383  C373.416992,122.494019 377.021118,121.206635 377.513916,116.781464  C377.736389,114.783363 380.855865,113.825203 382.983765,113.103394  C384.864380,112.465462 386.298004,111.667381 386.952118,109.361130  C387.000854,109.003754 387.496277,108.996674 387.743866,108.992218  C394.760468,107.159973 402.276947,106.231369 407.439514,101.560555  C410.656219,98.650246 414.601135,96.440201 417.863525,94.228043  C422.093414,91.359825 426.752258,85.854446 431.048096,86.190750  C438.039001,86.738045 441.316559,78.987457 447.939789,80.731949  C448.394135,80.851616 449.080994,80.174599 449.632721,79.825378  C456.635376,75.392708 464.316254,74.125618 472.444061,74.899986  C473.418243,74.992798 474.433380,75.173164 475.585815,74.144028  C474.448181,72.641983 471.700562,72.285995 472.564850,69.043671  C473.310455,66.246605 470.249908,66.902092 468.677246,67.333817  C463.523224,68.748695 462.433655,65.629028 461.983978,61.347214  C462.458923,61.029530 462.900116,61.025772 463.672363,61.024719  C469.113342,61.300404 474.250427,62.015717 479.225098,60.084618  C479.381866,60.023766 479.578705,59.991119 479.714722,60.039391  C485.326569,62.031059 490.694336,58.553032 496.574097,59.458397  C498.626312,62.822918 495.525482,62.993595 494.079468,64.249954  C494.208466,64.433548 494.498505,64.455406 494.871277,64.490875  C497.429108,64.734192 501.338989,63.554298 502.002014,66.419739  C502.843842,70.057739 498.680145,72.134903 496.546448,74.686150  C494.667572,76.932671 492.236023,75.210426 490.265076,73.962524  C488.578644,72.894745 487.038300,71.565056 484.477570,71.642906  C484.911865,74.065063 484.772491,76.457153 483.006256,78.393097  C482.435791,79.018356 482.114929,79.626236 482.157745,80.580009  C482.406555,86.125191 481.091248,87.515289 475.726044,87.418037  C473.211578,87.372459 470.711151,87.125671 468.703613,84.768814  C468.411041,83.034599 469.245972,82.340126 470.426086,81.898170  C465.313171,81.992798 464.519775,82.469452 462.654633,87.079277  C462.068359,88.528290 460.933044,89.037949 459.642853,89.356628  C457.661133,89.846100 456.130981,91.189873 453.999908,92.122078  C453.004913,92.410103 452.317963,92.506218 451.328735,92.817383  C448.018555,93.197952 445.300232,94.127304 442.867157,96.317429  C442.708374,96.488747 442.575165,96.793213 442.575165,96.793213  C442.575165,96.793213 442.919586,96.868103 443.153809,96.732468  C444.826660,95.858490 446.290039,95.171646 447.663483,94.305290  C449.067413,93.419701 450.614166,92.581917 452.090607,93.977074  C453.473389,95.283752 453.075867,96.924004 452.399292,98.481041  C452.140686,99.076126 451.725861,99.585678 451.312927,100.498688  C447.697571,103.239670 451.399689,106.488960 450.024902,109.467781  C449.686157,109.934464 449.526794,110.103012 449.069824,110.451202  C446.508728,111.007614 444.414703,111.770508 442.370605,113.503235  C441.866882,113.793381 441.655396,113.893059 441.110413,114.103607  C435.538727,115.849045 431.055237,118.931252 426.515106,121.844818  C423.163147,123.995888 420.787201,128.639343 415.615204,124.987930  C414.687469,124.332954 412.892273,125.902267 411.676178,126.686462  C406.948029,129.735489 403.097198,133.789948 398.984680,138.039856  C395.988495,138.931046 393.494415,140.133286 390.647766,141.383972  C390.095398,141.526581 389.869812,141.556488 389.309082,141.558411  C384.905334,140.183151 387.259003,143.378448 386.752747,144.920807  C386.283813,146.421738 385.318604,147.004364 384.015442,147.701340  C381.311401,149.110168 382.968689,150.612762 383.520691,152.387039  C383.527161,153.538605 383.150421,154.156021 382.151367,154.798859  C380.678802,155.273224 379.630463,155.153915 378.332336,154.260345  C374.125061,150.647324 373.819336,149.095627 378.427216,146.411774  C382.099823,144.272629 381.747284,142.494705 380.006775,139.360916  C378.730377,137.015320 380.447784,136.462280 381.584564,135.567642  C396.729492,123.648605 414.655182,116.693062 431.400299,107.631172  C434.253723,106.086998 437.250061,104.732712 439.886322,101.817116  C435.516968,100.692566 432.189362,101.331955 429.206970,103.902870  C426.501160,106.235413 423.511230,107.922600 419.456177,107.617661  C417.143768,106.239044 420.172089,102.297104 416.260345,102.112320  C412.972595,101.957024 411.670837,104.125046 410.815765,106.818970  C410.723053,107.111107 410.376312,107.305077 409.814453,107.685371  C408.704193,108.272797 407.778717,108.362198 406.645325,108.878952  C405.715637,109.272705 405.071045,109.471420 404.138550,109.864494  C401.211243,110.235260 399.256531,111.683342 397.181763,113.627808  C395.808441,114.246506 394.690216,114.309593 393.245544,114.125511  C392.400787,113.947319 391.881836,113.740425 391.110718,113.646072  C390.886658,113.655235 390.502014,113.818497 390.397583,113.992844  C390.315155,114.484932 390.407745,114.781013 390.676270,115.325005  C390.935974,116.215065 390.914612,116.834717 390.645020,117.768448  C388.396332,120.467621 385.342438,121.868919 383.297852,124.824738  z\"})),_path707||(_path707=/*#__PURE__*/React.createElement(\"path\",{fill:\"#413332\",opacity:1,stroke:\"none\",d:\" M322.578125,158.999222  C325.840393,158.856430 326.298553,160.262939 324.788086,162.263123  C322.983551,164.652664 321.601654,167.279007 319.968536,169.741364  C318.854767,171.420700 318.403748,175.488907 314.097229,171.920471  C312.493835,170.591858 307.003113,174.222763 306.664581,176.763412  C305.931641,182.263489 301.537689,185.478012 300.047607,190.649261  C300.005188,193.836884 298.186310,195.854935 296.822601,198.068680  C292.598969,204.924927 289.337982,212.259399 286.087219,219.599380  C284.727448,222.669632 282.449890,223.664551 278.938812,222.432831  C277.681671,221.123856 277.352570,219.850861 277.379120,218.053131  C277.491058,217.273880 277.629395,216.896698 277.952698,216.278992  C279.439667,214.663193 279.887695,212.889435 280.660339,210.910278  C283.265472,209.079498 286.554840,208.360947 286.612885,204.250427  C286.725861,200.158340 290.231903,197.498749 289.831543,193.286789  C290.197449,192.336655 290.642639,191.719879 291.329834,190.945496  C297.217255,187.206604 298.527893,180.788788 301.699219,175.169357  C301.826111,174.833206 301.833954,174.995377 301.816650,174.915314  C302.871338,174.396896 303.153351,173.353836 303.773376,172.184540  C303.924408,171.915207 303.975800,172.007721 303.939758,171.968658  C304.570557,171.460129 305.096680,170.850220 305.718567,169.943024  C306.091949,169.204132 306.353180,168.746155 306.853271,168.162796  C307.772675,167.299973 308.202759,166.411758 308.834229,165.313904  C309.220245,164.811981 309.385132,164.507767 309.800446,164.115845  C314.791107,166.933685 316.739014,166.374710 317.974091,161.273834  C318.628326,158.571930 320.444855,159.147430 322.578125,158.999222  z\"})),_path708||(_path708=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M329.153168,142.134521  C330.760071,138.724258 334.374573,137.123795 336.020996,133.430542  C337.482086,132.393738 338.857697,131.681259 340.567657,130.935837  C339.899750,134.902405 332.891449,141.882111 329.153168,142.134521  z\"})),_path709||(_path709=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M370.288330,112.652565  C368.170319,110.889664 367.193909,113.186195 365.824127,113.552437  C365.015961,113.768509 364.099976,114.131905 363.620911,113.263672  C363.147278,112.405373 363.841827,111.726562 364.564514,111.290710  C366.354736,110.211014 367.929901,108.561577 370.343018,109.066765  C371.343536,109.276222 372.360626,109.553345 372.488281,110.716766  C372.628357,111.993530 371.401367,112.159058 370.288330,112.652565  z\"})),_path710||(_path710=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M780.892456,513.080627  C784.244141,515.677246 783.993774,519.924255 785.849792,523.271973  C787.636902,526.495300 788.371155,530.304565 791.639404,532.953857  C792.889099,535.786621 793.798523,538.555054 794.870605,541.653992  C796.964050,544.246338 796.807678,546.838562 796.064453,549.890320  C795.745605,550.503662 795.584656,550.725342 795.070679,551.141052  C793.106873,551.339661 792.268677,550.228149 792.007324,548.940308  C791.287476,545.394165 788.995056,542.818542 786.707703,539.792114  C785.307861,537.494202 784.614441,535.306396 785.097717,533.025757  C785.518433,531.040039 784.699768,529.601685 783.540283,527.811951  C783.171082,527.084473 783.014099,526.646912 782.814453,525.859131  C782.326111,524.149048 783.060120,522.411560 781.118042,521.304565  C780.645325,521.010254 780.485168,520.838989 780.153992,520.347778  C779.473145,518.543762 779.445679,517.023438 779.712402,515.092651  C779.941345,514.177551 780.195129,513.707520 780.892456,513.080627  z\"})),_path711||(_path711=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M795.083435,551.362549  C795.051147,548.288452 795.014282,545.587097 795.005310,542.435120  C799.383240,543.114563 798.908264,547.143494 799.940857,550.239258  C800.283813,551.267456 799.653687,552.565063 800.771790,553.411560  C803.930664,555.803223 803.930298,555.803711 800.402588,558.797607  C796.340210,558.070312 796.719543,554.200317 795.083435,551.362549  z\"})),_path712||(_path712=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M801.800964,565.798950  C802.599121,569.196838 803.122437,572.426331 803.746033,575.636353  C804.365295,578.823303 803.675415,581.203918 799.803711,582.059509  C796.950195,580.914429 797.396729,578.493469 797.044434,576.024414  C799.152893,572.251465 798.337708,568.304443 799.434204,564.377258  C799.885620,563.951904 800.114746,563.838745 800.704590,563.854858  C801.233643,564.530029 801.401855,565.075989 801.800964,565.798950  z\"})),_path713||(_path713=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M794.839722,550.995850  C797.686707,552.867371 798.680298,555.696472 799.868225,558.802002  C800.174316,559.763794 800.198425,560.501160 800.278931,561.604492  C800.157166,562.122253 799.979004,562.274109 799.455994,562.497437  C796.751404,562.323486 796.892761,559.699158 795.145325,558.362854  C793.681702,556.070679 792.829712,553.985046 793.829285,551.293030  C794.094788,551.014709 794.591431,551.001953 794.839722,550.995850  z\"})),_path714||(_path714=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M801.260742,563.817017  C800.889221,563.986206 800.713074,563.988281 800.272827,563.991638  C799.675354,563.602478 799.527649,563.148071 799.728882,562.317078  C799.916687,561.996094 800.123718,561.994080 800.229553,561.982239  C801.220825,562.188599 802.004944,562.474487 801.260742,563.817017  z\"})),_path715||(_path715=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M736.537231,317.862915  C736.970215,320.492096 737.141785,322.923584 738.404541,325.464722  C741.581726,335.301788 744.092407,344.967560 745.860413,355.229797  C745.487915,358.866730 747.630920,361.632355 747.734741,365.168945  C747.959229,366.047302 748.079468,366.550995 748.257812,367.437744  C748.348816,368.595917 748.291077,369.363647 748.066772,370.496277  C747.754211,371.584534 747.431763,372.262329 746.976074,373.280396  C747.571838,380.802856 744.295227,387.879333 746.318481,395.471313  C746.877380,397.620209 747.492004,399.384094 746.786377,401.640686  C744.575928,404.855713 742.071289,406.611664 737.948975,405.324036  C737.005859,405.112030 736.508057,404.881775 735.758057,404.271240  C734.516479,395.968994 734.161316,387.911072 733.517456,379.880341  C732.657349,369.153046 731.490967,358.516205 728.478760,348.149200  C728.062195,346.715546 727.717712,345.268127 727.817505,343.376740  C730.345154,339.092499 730.758728,335.064545 728.647217,330.848633  C728.171692,329.899323 728.173889,328.668488 728.840332,327.994629  C731.684570,325.118805 732.332886,320.973145 735.189453,317.816528  C735.760742,317.686676 735.998169,317.680084 736.537231,317.862915  z\"})),_path716||(_path716=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M745.720459,396.423035  C743.882385,394.370636 743.754700,392.159210 744.056885,390.048584  C744.866150,384.396027 745.192749,378.729919 745.442871,372.919006  C748.518616,373.193512 749.158691,375.691528 750.707275,377.766846  C751.374756,379.056946 751.814026,380.088318 752.286621,381.459137  C753.338135,386.630280 753.256348,391.613281 754.509216,396.811493  C754.853394,398.151093 755.021851,399.116089 755.232788,400.446228  C755.520264,401.266876 755.660217,401.752594 755.624390,402.642212  C755.448669,404.165894 755.495728,405.476837 753.834412,405.476196  C752.152710,405.475555 751.074463,404.402893 750.400208,403.029755  C749.246643,400.680847 748.570496,398.029480 745.720459,396.423035  z\"})),_path717||(_path717=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M745.433594,396.494446  C748.863708,395.766998 750.608826,397.197845 751.074158,400.665192  C751.327698,402.553955 751.292175,405.732758 754.989014,403.280090  C755.236694,402.851990 755.414185,402.745605 755.845032,402.818512  C756.116699,403.400909 756.134949,403.804047 756.174561,404.506592  C756.117065,405.627106 756.038147,406.448151 755.933472,407.678802  C754.803040,409.084381 754.214111,410.149078 755.693848,411.693634  C755.934509,413.050110 755.940186,414.171021 755.915527,415.711334  C752.493408,418.154663 750.744507,416.238800 749.580017,413.363159  C748.555115,410.832336 747.934021,408.141388 746.467651,405.362366  C746.037354,404.266998 745.919861,403.511230 746.094238,402.349396  C745.910522,400.266327 745.650940,398.559387 745.433594,396.494446  z\"})),_path718||(_path718=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M745.236938,356.286133  C742.791321,346.180756 740.546326,336.362549 738.408447,326.159729  C740.811523,327.343414 741.007019,330.032135 741.480774,332.299408  C743.214417,340.597534 747.136841,348.404053 747.087891,357.535950  C745.608521,358.599640 745.672852,357.410492 745.236938,356.286133  z\"})),_path719||(_path719=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M731.937012,306.754822  C732.352173,306.861145 732.676880,306.744781 732.849243,306.750427  C733.911133,307.971375 734.132385,309.534210 735.292908,310.968323  C736.001709,311.955353 736.199585,312.823364 736.480347,313.944397  C736.454651,314.651001 736.502686,315.036194 736.555908,315.712341  C736.509521,316.285583 736.457886,316.567871 736.080811,317.131042  C734.890381,317.904266 733.943176,318.201904 732.978333,318.352570  C730.959045,318.667786 728.916382,318.563721 727.658081,316.726959  C726.291748,314.732452 726.805847,312.585907 728.077820,310.742554  C729.084595,309.283508 729.947021,307.650269 731.937012,306.754822  z\"})),_path720||(_path720=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M750.969360,377.577393  C748.031799,377.848694 747.817383,374.888428 745.967651,373.111938  C746.034119,372.315155 746.298096,371.822784 746.798584,371.174103  C747.730957,370.300262 748.055176,369.499451 747.418091,368.224884  C747.175049,367.501312 747.108276,367.075562 747.030945,366.326599  C747.392456,365.684692 747.825623,365.549286 748.588989,365.793396  C751.736572,369.304047 750.899780,373.307037 750.969360,377.577393  z\"})),_path721||(_path721=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M754.775879,396.734039  C751.225891,392.829956 752.114136,387.702179 752.219727,382.264862  C755.257019,386.259216 754.616638,391.348877 754.775879,396.734039  z\"})),_path722||(_path722=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M748.900208,365.618988  C748.456238,366.011658 748.046326,366.009521 747.328430,366.005371  C745.612244,363.108704 745.038208,360.027771 745.004517,356.416138  C745.550232,356.563507 746.064209,357.128052 746.832336,357.834717  C747.086487,357.976868 747.195496,358.337738 747.213867,358.525330  C747.710571,359.621063 747.986938,360.613281 748.571716,361.806274  C748.799927,363.120361 748.867126,364.172241 748.900208,365.618988  z\"})),_path723||(_path723=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M736.589478,313.870972  C735.951355,313.712036 735.496094,313.158234 734.912109,312.361877  C734.145081,311.054718 733.926819,309.944916 734.679199,308.400940  C734.936340,308.043427 735.106873,307.880127 735.189758,307.793030  C737.903809,309.075409 736.885803,311.393311 736.589478,313.870972  z\"})),_path724||(_path724=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M748.814331,361.724670  C747.288391,361.749908 746.963257,360.736694 747.165833,359.075012  C748.524963,359.141907 749.041138,360.055176 748.814331,361.724670  z\"})),_path725||(_path725=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M735.414795,317.422943  C735.651611,316.805145 735.876526,316.531891 736.331299,316.130981  C737.485657,316.281464 737.850159,316.811096 737.088745,317.893280  C736.658875,318.114563 736.478699,318.176819 736.020020,318.303650  C735.628601,318.167969 735.515808,317.967712 735.414795,317.422943  z\"})),_path726||(_path726=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M756.281128,402.812592  C755.924866,402.993500 755.751404,402.989227 755.318542,402.971680  C755.072144,402.478058 755.085144,401.997772 755.186707,401.164398  C756.116943,401.125153 756.957947,401.439392 756.281128,402.812592  z\"})),_path727||(_path727=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M679.533447,189.984192  C679.869446,190.064911 680.150269,190.449631 680.300659,190.634308  C681.123962,192.045837 681.855103,193.253281 681.698853,195.080811  C681.533691,195.629852 681.427307,195.835144 681.037720,196.238205  C678.744751,196.988266 678.087402,195.086731 676.552185,194.075043  C675.551453,193.292618 674.994751,192.567184 674.325500,191.493073  C673.055969,188.453949 671.687439,185.923019 668.590576,184.407776  C666.203369,183.745667 664.157166,183.146942 661.976562,181.916153  C659.700439,179.582672 658.269714,176.906204 655.072632,176.058960  C653.225159,175.569382 651.785034,174.156281 652.423889,171.982574  C653.107361,169.656952 655.163147,170.401733 657.606445,170.646240  C654.032471,169.327301 652.336243,167.380051 651.607666,164.363174  C651.065918,162.120087 649.842529,160.109619 647.489624,158.632721  C646.044861,158.076508 645.004456,157.508575 643.795654,156.533646  C640.660889,152.315201 636.859863,149.599747 632.247620,147.985748  C630.220825,147.276505 628.302551,146.334183 626.152100,145.077805  C623.365295,142.931183 623.025208,140.335388 623.604004,137.112167  C623.386047,135.611084 623.090027,134.451401 623.701904,132.977203  C624.322571,132.397064 624.778137,132.222855 625.641052,132.140228  C627.041748,132.326782 627.809692,132.924347 628.691284,133.966614  C629.673340,137.902313 633.830200,137.899246 635.837708,140.707520  C637.095520,141.638931 638.120483,142.327942 639.439819,143.110626  C641.274292,143.767868 642.013245,145.037384 642.828613,146.661682  C643.516663,147.216522 643.967834,147.557831 644.646423,148.068329  C649.536804,156.353043 655.830322,163.216370 663.029785,168.931839  C666.105225,171.373322 666.919128,174.488358 668.609741,177.299820  C671.501587,182.108856 677.483765,184.208649 679.533447,189.984192  z\"})),_path728||(_path728=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M573.857788,79.129532  C576.463989,78.718475 578.172424,80.384209 580.602173,81.077507  C582.260071,81.774666 583.686035,82.221939 584.731445,83.767776  C586.205872,85.118904 587.344666,86.378235 588.766113,87.802505  C589.680542,88.935081 590.265625,90.492653 591.091553,90.633034  C597.634277,91.745110 596.187378,97.145790 596.593079,101.187202  C596.777527,103.024231 596.506104,104.723869 598.146729,106.390396  C598.737122,108.103508 599.552917,109.067917 601.507324,109.213669  C604.029541,110.638634 606.791809,111.618324 605.640442,115.463867  C601.120850,116.240364 596.271851,113.436676 594.485229,108.623184  C590.790710,98.669472 584.211182,91.006699 576.286255,84.287949  C575.145935,83.321152 573.986572,82.380623 573.458679,80.507607  C573.474854,79.889404 573.535645,79.645416 573.857788,79.129532  z\"})),_path729||(_path729=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M628.353760,135.201874  C627.588684,134.367508 627.055603,133.810760 626.282959,133.090851  C624.377075,131.979156 623.745422,129.861023 621.536987,129.034134  C621.067810,128.733673 620.888611,128.596542 620.478882,128.206238  C619.581421,126.957436 619.160522,125.905022 619.703369,124.401245  C627.698792,126.106239 631.818359,132.128860 635.780884,138.758362  C632.511475,139.773865 630.667847,137.385651 628.353760,135.201874  z\"})),_path730||(_path730=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M619.678589,123.977417  C620.225403,125.243484 620.536621,126.363289 620.803711,127.833054  C619.291138,129.136246 617.882324,128.500381 616.130127,127.854683  C615.368958,127.411285 614.982605,127.090500 614.390686,126.436661  C613.369507,124.170883 611.457703,123.414131 609.946899,122.215942  C608.567078,121.121582 606.848816,120.146042 608.074646,117.623627  C609.400696,116.889610 610.418701,116.883522 611.764893,117.652458  C612.784058,117.960579 613.462708,118.053604 614.480103,118.197739  C616.607605,119.109726 616.631958,121.101303 617.790771,122.739624  C618.499207,123.251587 618.971069,123.541367 619.678589,123.977417  z\"})),_path731||(_path731=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M612.034668,117.532394  C611.113647,117.871651 610.121948,117.875748 608.758789,117.880432  C607.083435,118.072487 606.100525,117.529121 605.188477,116.206696  C605.545837,113.143288 603.813782,111.513725 601.967529,109.573273  C607.052124,109.577736 609.787292,113.031616 612.034668,117.532394  z\"})),_path732||(_path732=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M628.121277,135.280121  C630.484436,136.270416 632.846985,137.616547 635.543152,139.024597  C635.962219,139.498245 636.047729,139.909988 636.101929,140.635803  C633.082153,139.684860 629.418335,139.430420 628.121277,135.280121  z\"})),_path733||(_path733=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M618.033813,122.580292  C615.511414,122.756004 615.471252,120.648529 614.873596,118.588051  C617.801025,118.009109 618.024231,120.019447 618.033813,122.580292  z\"})),_path734||(_path734=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M643.055908,146.487457  C641.361572,146.537003 640.549377,145.252090 639.792236,143.525635  C642.224243,142.583801 643.071838,143.842377 643.055908,146.487457  z\"})),_path735||(_path735=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M301.536713,174.952423  C301.711365,181.851959 297.343323,189.303024 291.984619,190.852325  C292.359924,186.076584 295.912231,182.827042 298.024048,178.433365  C299.161652,177.091293 300.204468,176.081467 301.536713,174.952423  z\"})),_path736||(_path736=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M289.450012,193.092804  C292.788605,193.587845 292.439880,195.572449 291.047394,197.233780  C289.517944,199.058487 288.792358,201.118759 288.034729,203.627472  C287.036377,205.484695 286.208862,207.184647 283.628540,206.039673  C284.641907,201.250107 285.695038,196.682831 289.450012,193.092804  z\"})),_path737||(_path737=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M271.635376,226.114594  C272.234680,225.241364 272.705383,224.618484 273.466187,223.916840  C274.241882,224.045319 274.597626,224.387589 274.942139,225.225586  C275.142822,226.084900 275.162384,226.585724 275.067230,227.456573  C274.783722,228.766418 274.387634,229.667053 274.226257,231.003540  C273.417145,233.952484 272.372559,236.425659 271.095032,239.217804  C270.758820,239.761383 270.595367,239.962891 270.105530,240.383820  C269.005798,240.895584 268.228729,240.900040 267.113403,240.410553  C265.413116,237.521286 267.162842,235.601440 268.591980,233.219696  C269.232635,231.551712 269.649841,230.215332 270.137848,228.534943  C270.500214,227.481903 271.067047,226.968597 271.635376,226.114594  z\"})),_path738||(_path738=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M268.484009,232.952362  C269.575439,235.379944 267.529968,237.130203 267.106415,239.681763  C267.203674,240.254303 267.311768,240.457153 267.358032,240.999695  C266.397156,242.613068 265.902649,244.308884 263.655029,244.412964  C263.328613,244.309845 263.158325,244.149170 263.073059,244.068939  C262.401154,243.293533 262.194366,242.510117 262.623749,241.240875  C262.727509,236.976135 265.194092,234.828812 268.484009,232.952362  z\"})),_path739||(_path739=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M255.614746,254.026459  C256.083923,256.854736 258.511841,260.377441 253.429642,261.977539  C249.994431,258.215393 250.426590,256.633636 255.614746,254.026459  z\"})),_path740||(_path740=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M283.173279,205.764465  C285.019012,206.232864 286.180023,205.263657 287.669128,204.160660  C288.260712,208.328400 285.876495,210.362640 281.531525,211.036209  C280.964294,210.857758 280.767334,210.663315 280.680420,210.068558  C280.790436,209.668259 280.820496,209.302872 280.920898,209.149490  C281.620972,208.411606 282.155243,207.773743 282.611267,206.748779  C282.658600,206.175613 282.784576,205.972000 283.173279,205.764465  z\"})),_path741||(_path741=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M274.341583,226.236206  C274.018982,225.534607 273.977997,225.045181 273.846619,224.196899  C273.756256,223.838074 273.787231,223.860367 273.789917,223.871368  C274.718719,223.395599 274.791992,222.500046 274.839966,221.280228  C274.920654,219.571365 275.595276,218.540634 277.056519,217.734100  C278.867981,218.373077 279.014496,219.732651 278.994629,221.583038  C279.115295,222.719345 278.963928,223.397232 278.449402,224.342880  C277.223724,225.604355 276.283569,226.748962 274.341583,226.236206  z\"})),_path742||(_path742=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M262.481750,240.937805  C262.871094,241.642212 262.932800,242.424728 262.991150,243.597992  C261.556335,243.992096 260.599823,244.943588 259.255768,245.855927  C256.990295,243.423813 256.990295,243.423813 262.481750,240.937805  z\"})),_path743||(_path743=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M280.463745,209.813049  C280.857513,209.897217 280.924622,210.126190 281.076477,210.703674  C280.914093,212.932312 280.645752,214.802170 278.471191,215.973694  C278.561859,213.931931 278.625000,211.706680 280.463745,209.813049  z\"})),_path744||(_path744=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M274.568054,221.172607  C276.474854,222.124420 275.550201,222.939148 274.102997,223.803375  C273.974121,223.053818 274.155609,222.225296 274.568054,221.172607  z\"})),_path745||(_path745=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M282.333557,206.585388  C282.890320,207.454712 282.872711,208.368637 281.374481,208.931366  C280.892487,208.030304 281.320923,207.316208 282.333557,206.585388  z\"})),_path746||(_path746=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M271.461853,225.959473  C271.963776,226.805115 271.709961,227.543488 270.510803,228.092834  C270.074615,227.278046 270.218048,226.488708 271.461853,225.959473  z\"})),_path747||(_path747=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M171.520844,573.968628  C167.740921,575.109314 168.832458,579.139526 166.432648,580.988098  C164.769638,580.006470 165.251465,577.783386 163.952148,576.107605  C163.528885,575.456360 163.372543,575.083374 163.339294,574.358643  C163.414688,573.454834 163.495697,572.857178 163.381348,571.946167  C163.357529,571.216431 163.466522,570.820129 163.951843,570.327759  C164.850647,567.745789 165.457977,565.281921 166.133850,562.442749  C166.310516,561.841003 166.418640,561.614563 166.887070,561.279419  C171.395569,558.928101 170.847488,554.426758 171.781357,550.848816  C172.425476,548.381165 172.708771,545.693237 173.227722,543.028625  C174.418762,543.484558 174.591309,545.445679 176.606659,544.952820  C179.246567,547.396973 178.011093,550.059814 176.891464,552.306946  C175.363281,555.373962 175.054199,558.369263 174.989716,561.755981  C174.910538,565.913818 174.953339,570.413208 171.520844,573.968628  z\"})),_path748||(_path748=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M160.757416,584.395447  C159.938507,585.074341 159.323090,585.526184 159.077972,586.694946  C158.872360,587.106445 158.715042,587.219238 158.300690,587.196899  C156.513763,585.522705 154.236572,584.440613 155.280121,581.516968  C156.262909,578.763550 157.359192,576.982849 160.442749,579.914856  C160.754135,581.302490 160.771286,582.649292 160.757416,584.395447  z\"})),_path749||(_path749=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M164.230988,573.685181  C163.957001,574.392334 163.913574,574.794006 163.826904,575.492676  C163.178345,575.898743 162.573029,576.007690 161.670609,576.184509  C160.982361,573.845642 161.244781,571.666260 163.864990,570.192383  C164.281342,570.581299 164.319397,570.952942 164.378021,571.605835  C164.596313,572.377197 164.617279,572.874695 164.230988,573.685181  z\"})),_path750||(_path750=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M167.195297,560.807007  C167.086273,561.445129 166.880920,561.681091 166.416870,561.972961  C164.324249,560.056885 166.077484,558.658569 167.318283,557.008179  C167.448502,558.074524 167.295853,559.258972 167.195297,560.807007  z\"})),_path751||(_path751=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M157.905182,587.365112  C158.043655,587.061829 158.535919,587.019348 158.782806,587.006470  C160.531113,588.684814 159.095856,589.300049 157.650085,590.108398  C156.985153,589.279358 157.279160,588.458984 157.905182,587.365112  z\"})),_path752||(_path752=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M238.631851,331.234131  C237.253098,327.297943 238.438232,324.256592 239.896286,320.569427  C243.139389,312.368225 244.441467,303.422974 247.070831,294.947357  C248.842712,289.235687 248.418350,282.689240 253.378632,277.835388  C256.417877,279.314758 253.535568,281.927826 254.872223,284.159302  C255.806442,289.584625 251.996552,293.152802 250.610977,297.519073  C248.374054,304.568207 247.017441,311.653748 247.552383,319.012543  C247.715118,321.251160 247.385010,323.008392 245.478943,324.178375  C243.359741,325.479065 242.258484,327.465851 241.155792,329.972412  C240.463409,330.955200 239.834412,331.374054 238.631851,331.234131  z\"})),_path753||(_path753=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M220.424515,375.529358  C217.639542,376.117737 218.321869,378.346283 217.261780,379.773254  C215.996185,380.077698 214.979218,380.162354 213.813446,379.264893  C212.762634,375.600677 214.865585,373.027161 216.256104,369.924377  C216.864441,369.176056 217.282089,368.703003 217.536331,367.772827  C217.764511,367.062286 217.990692,366.700287 218.514725,366.149414  C220.816360,362.763947 223.638016,359.826141 221.708008,355.196960  C221.680786,353.693359 221.995422,352.569092 222.650589,351.184387  C223.761581,349.110046 224.678146,347.333893 225.773712,345.264832  C227.384354,345.308929 228.816010,345.645905 230.617737,345.987793  C232.467667,347.540070 231.825272,349.095367 230.790924,350.440887  C229.775375,351.761993 229.504669,353.047821 230.175812,354.925537  C230.101105,358.858337 229.261124,362.233185 227.349945,365.674347  C226.079330,367.132935 224.807785,368.141266 224.190186,370.045715  C223.944733,370.543549 223.831909,370.734039 223.514832,371.182434  C222.138184,372.410828 221.407562,373.677948 220.424515,375.529358  z\"})),_path754||(_path754=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M263.226410,244.652679  C265.016663,243.861313 264.774841,241.691452 266.554657,240.950928  C268.418518,242.288956 267.657288,243.911026 267.083374,245.378159  C265.479034,249.479370 264.537781,253.799072 262.884583,258.238708  C262.879150,258.847778 262.857117,259.092010 262.753418,259.696655  C262.508636,260.523682 262.314301,260.976776 261.900452,261.734802  C259.933807,264.832520 259.835144,268.263428 258.230743,271.097870  C257.287842,272.763550 256.556976,274.670624 254.137115,275.221130  C252.221420,270.694305 252.674164,266.702576 256.146820,263.341248  C258.526093,261.038269 259.810059,258.017242 259.803711,254.956635  C259.795715,251.111603 260.981293,247.970062 263.226410,244.652679  z\"})),_path755||(_path755=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M229.573853,355.249390  C225.974854,351.497986 231.305603,349.701782 230.993866,346.363403  C233.047073,342.073608 235.106354,338.154510 237.404144,333.987122  C238.610687,333.709412 239.585312,333.634125 240.771027,334.350159  C241.362686,334.930237 241.566727,335.347534 241.652023,336.161560  C241.504272,337.407318 240.876984,338.089966 240.496521,339.229248  C240.374680,339.978027 240.291534,340.404877 240.110916,341.149353  C239.517181,343.995911 236.682541,345.819366 237.818207,349.187561  C237.788879,350.006348 237.665131,350.456085 237.255325,351.167145  C234.339737,352.206848 232.440369,354.402496 229.573853,355.249390  z\"})),_path756||(_path756=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M253.792908,275.407104  C257.911652,271.457886 257.840057,265.784943 260.755157,261.217987  C261.271881,260.885406 261.506439,260.770782 262.056183,260.889771  C264.162689,269.067688 260.415894,280.207764 254.267960,284.056458  C249.960144,282.189240 255.455994,280.306458 253.781326,278.062317  C253.727676,277.035309 253.759995,276.384888 253.792908,275.407104  z\"})),_path757||(_path757=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M241.381287,335.055481  C240.013901,334.771088 239.085190,334.531281 237.899536,334.015137  C237.780090,333.065979 237.917557,332.393097 238.164520,331.393005  C238.750839,330.851349 239.227661,330.636963 239.860138,330.202698  C241.475784,329.055176 242.578918,329.676300 243.242416,330.971985  C244.144531,332.733582 243.414886,334.108276 241.381287,335.055481  z\"})),_path758||(_path758=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M746.667236,403.929382  C748.766785,406.594635 750.035828,409.412231 750.664429,412.470367  C751.177612,414.966888 752.552673,416.203125 755.504395,416.083832  C755.380249,423.252930 758.511536,429.687622 759.883606,436.448608  C760.309692,438.547852 760.601807,440.232666 759.502625,442.062134  C756.673706,446.770569 757.377319,451.621368 759.297974,456.330383  C760.752502,459.896729 759.877625,464.678070 765.632080,466.198639  C767.347473,466.651917 768.428284,471.639496 768.768616,474.665497  C769.282349,479.234436 770.990112,483.264465 772.751038,487.708069  C769.057922,489.758240 768.278748,486.759308 767.153809,484.534241  C766.418213,483.079315 766.799194,481.202972 765.995117,479.837006  C765.416138,478.853485 765.267395,480.289734 764.659668,480.809052  C762.885925,482.256561 760.446106,482.243195 759.470825,484.822693  C758.196899,485.578400 757.436462,485.030365 756.459595,484.144470  C755.713867,483.095886 755.272400,482.266113 754.546448,481.198883  C754.274231,480.414337 754.229492,479.944733 754.339478,479.123871  C754.995239,477.386932 756.163757,476.383575 756.856140,475.066345  C758.209595,472.491516 758.469177,470.079468 756.017273,467.919830  C755.014526,467.036560 754.216553,465.961670 754.698120,464.149109  C758.193237,460.510315 755.990601,457.385315 754.082825,454.705719  C752.379822,452.313568 750.888489,449.891479 749.533325,446.937317  C748.847900,446.082153 748.487915,445.443054 748.043701,444.417908  C747.773071,443.566833 747.685608,443.063416 747.618408,442.165588  C747.563660,441.263306 747.563110,440.747131 747.608398,439.843689  C750.841187,433.254669 746.901367,427.205322 747.179749,421.029785  C747.383728,416.504303 747.461365,411.837646 745.451904,407.473877  C744.924438,406.328613 744.971069,404.833252 746.667236,403.929382  z\"})),_path759||(_path759=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M763.697754,481.356262  C764.052246,479.000854 763.769653,476.803009 766.016296,475.479553  C769.319824,479.179626 765.981506,485.847290 772.378906,488.037445  C773.481384,490.380615 773.423767,492.970886 775.424927,495.120544  C775.958862,495.382629 776.172058,495.484558 776.584412,495.879028  C777.219177,498.208710 778.350525,500.109009 777.984619,502.653320  C778.491882,504.376495 779.003845,505.749176 779.681091,507.448364  C779.806335,508.060852 779.766296,508.346863 779.473755,508.985077  C778.215027,510.059204 777.112976,510.158386 775.571594,509.660339  C772.547607,501.694000 767.964478,494.912842 764.017822,487.795990  C762.994263,485.950165 762.324097,483.832794 763.697754,481.356262  z\"})),_path760||(_path760=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M755.944458,411.545105  C754.569580,411.984894 753.222778,411.981842 753.103516,410.132538  C753.011047,408.696808 753.809448,408.076111 755.541748,408.074799  C755.925110,409.112610 755.942505,410.136780 755.944458,411.545105  z\"})),_path761||(_path761=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M768.618652,451.009827  C768.643616,452.169281 768.304626,453.322235 767.855957,454.830353  C765.927063,454.638123 765.968079,453.166107 766.043213,451.321899  C766.802246,450.968079 767.528503,450.985718 768.618652,451.009827  z\"})),_path762||(_path762=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M774.070801,481.277008  C776.062073,481.304138 776.008667,482.808472 775.940491,484.677490  C773.874084,484.697876 774.002014,483.149933 774.070801,481.277008  z\"})),_path763||(_path763=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M764.042480,442.310486  C765.595337,442.211853 766.303162,442.951752 765.373779,444.756531  C764.188049,444.494568 764.020874,443.618195 764.042480,442.310486  z\"})),_path764||(_path764=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M776.125610,496.270233  C775.883118,496.053680 775.789551,495.670258 775.767578,495.475464  C775.826965,495.038635 775.908264,494.796631 776.111694,494.189453  C777.508118,494.172699 778.004822,495.068665 777.990967,496.665070  C777.262939,497.412628 776.794128,497.016479 776.125610,496.270233  z\"})),_path765||(_path765=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M765.157959,447.208771  C766.051025,447.165924 767.020569,447.349976 766.244324,448.820557  C765.735596,448.501007 765.430664,448.007538 765.157959,447.208771  z\"})),_path766||(_path766=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M204.653625,404.063049  C205.122223,405.987305 204.279160,407.737213 203.355103,409.765076  C201.274872,407.581573 202.639664,405.824402 204.653625,404.063049  z\"})),_path767||(_path767=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M199.515717,420.993988  C199.878098,422.007751 199.923386,423.128601 199.923065,424.669067  C197.451385,424.133972 197.490051,422.759644 199.515717,420.993988  z\"})),_path768||(_path768=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M195.560196,440.983246  C195.968445,442.093781 196.191879,443.351532 194.278137,443.892731  C194.000916,442.810516 193.915329,441.617615 195.560196,440.983246  z\"})),_path769||(_path769=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M793.914612,550.668152  C794.654846,553.102234 795.214844,555.189697 795.954102,557.593201  C797.434387,560.070557 797.301575,562.650330 798.263794,564.961426  C799.521362,567.981873 800.063721,571.250244 798.048401,574.650085  C798.453979,577.096130 798.817078,579.197937 799.313171,581.688232  C799.482483,583.736145 799.518921,585.395569 799.575867,587.468750  C799.461609,588.066772 799.326843,588.251099 798.893555,588.598633  C796.621094,589.247803 795.249756,588.356567 794.075012,586.623291  C793.322571,586.000366 793.699097,586.601135 793.617004,587.101868  C792.154358,592.312012 792.037537,597.143677 793.771484,602.028870  C794.909180,605.234131 794.613037,608.560608 793.701477,611.802734  C792.519104,616.008118 791.309814,616.479736 786.589905,614.269531  C784.290161,609.484924 786.372925,604.513123 784.410156,599.639465  C783.221802,596.715210 783.691284,594.245850 784.767029,591.421021  C785.489807,589.677307 786.262146,588.324463 785.879761,586.777771  C783.849304,578.565002 785.402466,569.970459 783.191223,561.782471  C782.885254,560.649475 782.345337,559.135254 782.990112,558.415161  C787.862244,552.974304 783.350403,547.533936 783.276611,541.727356  C783.933411,539.987000 785.058350,539.306274 786.781128,538.830933  C791.291748,541.547729 793.200562,545.543884 793.914612,550.668152  z\"})),_path770||(_path770=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M797.718018,588.287659  C798.219666,587.985962 798.493103,587.967712 799.181458,587.916016  C802.053284,589.534546 800.496155,592.083191 801.010071,594.585938  C800.801636,594.995972 800.584412,594.991333 800.041504,594.976318  C798.172668,595.033386 797.736633,593.824097 797.059204,592.413574  C796.844788,591.585327 796.796814,591.099548 796.829468,590.244202  C796.990723,589.403625 797.194214,588.965332 797.718018,588.287659  z\"})),_path771||(_path771=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M208.783279,417.289734  C208.725998,416.206177 208.804718,415.467743 208.930634,414.360779  C210.007965,412.862488 211.592285,412.150604 211.840881,410.018127  C212.687439,407.912994 214.291687,406.763092 215.496307,404.882385  C215.973038,404.510193 216.187683,404.392273 216.758911,404.179749  C217.605042,404.049164 218.089554,404.080933 218.900497,404.332458  C221.595245,408.298035 224.911499,411.777069 223.670120,416.899200  C223.222229,418.747223 224.780487,418.998901 226.159958,419.831543  C227.426514,422.628235 226.624161,425.066406 225.666016,427.336578  C223.550812,432.348450 222.953156,437.522644 222.874329,442.921906  C222.779083,449.445740 221.715973,455.620789 217.094162,461.017029  C213.655960,465.031250 210.916336,469.995514 215.057968,475.503296  C215.571091,476.185730 215.776917,477.446289 215.072952,477.794159  C210.124100,480.239777 210.958679,485.323242 209.573395,489.388184  C209.348312,490.048676 208.796219,490.446655 207.881226,490.919617  C203.763443,492.048767 203.348022,488.074280 200.916122,486.467987  C200.037582,485.120178 200.187332,483.979980 200.448792,482.829956  C202.753448,472.692871 205.246353,462.585602 204.923340,452.061737  C204.887848,450.905334 205.352310,449.787781 205.826691,448.345032  C206.640427,446.514221 207.313370,445.008514 208.323425,443.300323  C209.163239,442.541138 210.073944,442.725616 210.690521,442.106567  C210.117416,441.561462 209.678131,442.506470 208.860596,442.060364  C208.261276,441.510376 208.031799,441.096832 207.770935,440.294312  C207.000366,435.732117 209.139099,432.241974 210.753143,428.702637  C212.683060,424.470612 212.663940,420.808044 208.783279,417.289734  z\"})),_path772||(_path772=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M207.002991,447.655334  C205.267090,451.925385 207.266479,456.041718 206.267761,460.105164  C204.224548,468.418335 204.537994,477.227997 201.038925,485.634399  C201.082458,486.662659 201.061813,487.318329 200.782501,488.280518  C199.751709,490.583252 198.991974,492.635773 198.222809,495.049225  C198.019775,495.582123 197.923935,495.791595 197.651627,496.301483  C195.931824,498.379272 195.505768,501.996063 191.437286,499.879639  C191.002045,499.475281 190.856628,499.284790 190.637573,498.743103  C192.887650,491.829742 194.708664,485.144989 195.451843,477.925720  C195.248428,477.324707 195.013962,477.066010 194.416290,476.829285  C193.933243,476.732239 193.733795,476.687988 193.240631,476.507385  C192.787201,476.211945 192.627441,476.052826 192.318558,475.579163  C192.011719,474.296906 192.004242,473.345947 192.674591,472.132507  C192.963150,469.192596 193.060501,466.569427 193.206207,463.510010  C193.930008,462.244232 193.975220,461.195923 194.384918,459.948853  C195.048965,459.030853 195.598694,458.406891 196.004059,457.305908  C197.293076,454.303375 198.884613,451.752411 199.062881,448.351929  C198.592712,441.254333 197.847794,434.476898 202.497681,428.597900  C203.460785,427.380219 202.260864,426.072601 202.168701,424.800079  C202.044998,423.092621 202.119659,421.430756 204.125778,423.820312  C205.299957,425.218933 205.573288,424.070526 206.105194,423.198608  C207.238358,421.341095 206.389008,418.874390 208.334045,417.070557  C213.918182,418.992584 215.024124,421.410004 213.297928,426.413940  C211.799316,430.758148 208.797760,434.590668 208.733185,439.872314  C206.684723,442.302948 207.754807,445.022980 207.002991,447.655334  z\"})),_path773||(_path773=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M195.181259,460.110840  C195.031372,461.429077 195.024475,462.456207 193.539902,462.994110  C192.533218,460.240265 194.387207,457.638794 194.018311,454.416931  C195.110580,453.876770 196.915726,454.276062 196.514328,452.541321  C196.006332,450.345856 197.663010,449.645325 198.816040,448.189697  C201.892151,451.663391 198.018234,454.288818 197.405182,457.727295  C196.460754,458.508087 195.891724,459.160065 195.181259,460.110840  z\"})),_path774||(_path774=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M217.285492,404.655396  C217.002335,405.003571 216.514420,405.023438 216.270294,405.027191  C213.446030,404.991364 213.472900,402.979584 213.390045,401.284180  C213.326508,399.984314 213.715134,398.661896 212.489609,397.298157  C212.224945,396.585205 212.167679,396.131683 212.097168,395.335083  C213.385452,393.050720 214.559372,389.794434 216.759705,394.791504  C219.048279,396.947388 218.646255,399.391418 218.375702,402.238647  C218.170258,403.273956 217.923309,403.815186 217.285492,404.655396  z\"})),_path775||(_path775=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M212.215363,397.368896  C213.952591,397.026306 215.367783,397.418671 214.642349,399.510956  C213.976654,401.430969 214.858948,402.942505 215.767242,404.795471  C216.471329,407.322906 214.448532,408.085297 213.151123,409.698486  C212.785919,410.120422 212.587540,410.244507 212.068207,410.225464  C210.270142,408.440033 211.738556,406.450409 211.088623,404.362061  C210.860535,401.813721 212.964279,400.007050 212.215363,397.368896  z\"})),_path776||(_path776=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M210.801208,404.233643  C213.983765,405.307587 211.908127,407.495300 212.002884,409.645142  C211.592285,411.142853 210.789825,411.626038 209.266815,411.233612  C206.734695,408.161682 210.396805,406.733795 210.801208,404.233643  z\"})),_path777||(_path777=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M208.941925,411.387878  C209.763519,410.764740 210.583282,410.513641 211.699081,410.130371  C211.995117,409.998199 212.489899,409.997925 212.737106,409.997131  C213.082993,412.290741 212.390259,413.939514 209.354446,413.988159  C208.965240,413.248138 208.952667,412.503998 208.941925,411.387878  z\"})),_path778||(_path778=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M203.343628,418.973236  C203.628830,418.402222 203.946045,418.095886 204.263245,417.789551  C204.427933,418.150177 204.795731,418.565063 204.716782,418.860596  C204.527908,419.567810 204.041641,419.890320 203.343628,418.973236  z\"})),_path779||(_path779=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M219.147537,366.699127  C218.541733,367.080353 218.310547,367.277802 218.087036,367.785645  C218.392258,368.410950 218.520416,368.880920 218.140808,369.698303  C215.480026,372.225952 215.215851,375.484100 213.953171,378.646606  C214.574356,379.672668 214.700806,380.422974 214.153809,381.557739  C213.349564,382.175873 212.818176,382.493927 211.981567,382.879639  C211.011612,379.412384 213.058960,376.261078 213.130447,372.419281  C215.040619,370.947510 215.074783,369.124237 215.007797,367.312164  C214.920059,364.938171 215.181625,362.939209 217.583984,361.500153  C219.997620,360.054291 218.706268,357.778809 218.089264,355.415466  C220.789749,355.145081 220.545334,352.111511 222.527252,350.984314  C223.043777,352.104126 222.870636,353.259186 222.150238,354.678314  C223.444458,359.335358 220.987885,362.777252 219.147537,366.699127  z\"})),_path780||(_path780=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M196.775497,496.232941  C197.019119,495.795807 197.021744,495.627655 197.029144,495.207214  C198.919250,493.283905 200.595352,491.511749 200.035477,488.339844  C200.175262,487.455872 200.349304,486.907288 200.755829,486.179810  C202.877640,486.066254 205.160904,485.516113 204.470139,488.887787  C204.269806,489.865601 205.520798,489.879120 206.657135,489.991791  C207.329742,490.309784 207.542847,490.687103 207.662140,491.451843  C207.159210,493.207336 206.723831,494.648285 206.556122,496.493774  C202.411728,501.384583 202.411728,501.384583 201.214447,511.846130  C201.060303,512.420776 200.982758,512.647583 200.749939,513.200439  C199.411362,514.851318 199.248779,516.547302 199.080750,518.170593  C198.568680,523.117432 198.256424,528.065735 194.198776,531.784180  C193.248001,532.655457 192.891159,534.218811 193.099625,535.511414  C193.629456,538.796448 192.361969,541.638489 191.297256,544.903076  C192.038437,549.273010 189.919724,552.254395 187.517120,555.132202  C188.500412,554.223083 189.524384,554.084229 190.986816,554.633301  C193.037338,557.795898 191.283539,559.731201 189.002930,561.827515  C187.126587,562.876404 185.842621,561.973328 184.194550,561.231323  C183.113724,560.887085 182.073776,560.286011 181.698608,561.303284  C180.460602,564.660156 177.936172,567.624390 178.448181,571.886108  C179.217209,577.659302 176.512283,582.533203 175.938812,587.767151  C175.646133,590.438354 173.412903,591.491455 170.325836,590.097900  C169.397934,590.087158 168.817749,590.194031 168.085693,590.124634  C168.342606,584.770447 171.217072,580.113281 171.125702,574.403198  C172.236832,568.536438 175.348480,563.256836 172.412567,557.491577  C171.995987,556.673523 172.161133,555.843384 172.931305,555.305420  C176.288101,552.960632 176.364487,549.245667 176.965881,545.343262  C177.061218,544.231995 177.173187,543.529602 177.349121,542.476807  C180.434830,532.942810 183.705078,523.871582 189.338303,515.875122  C189.817703,515.194702 190.582031,514.553955 190.626480,513.766907  C190.983322,507.447632 194.477829,502.223480 196.775497,496.232941  z\"})),_path781||(_path781=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M196.679688,496.038086  C197.412186,498.216858 196.692398,500.357971 195.723206,502.217438  C194.013977,505.496796 193.729782,509.158844 192.583450,512.431641  C191.073273,516.743347 190.091614,521.920776 185.297836,524.639038  C183.281921,525.782166 182.859619,528.860046 183.042862,530.406494  C183.645157,535.489624 179.586853,538.051392 177.699707,541.994812  C172.366272,537.019226 176.119492,531.326782 177.899048,527.028809  C179.446747,523.290833 180.742264,520.565796 179.021835,516.820557  C178.643997,515.998047 178.947922,514.862305 178.936096,513.458374  C180.257217,511.191956 180.169235,508.755951 181.531952,506.897125  C183.952271,503.595673 186.651886,500.649841 190.904602,499.019287  C194.801743,501.352448 194.674957,497.114655 196.679688,496.038086  z\"})),_path782||(_path782=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M191.178864,498.931610  C190.233871,502.768188 185.795166,502.819305 183.778412,505.975433  C181.186966,510.030975 180.567276,510.019897 183.341675,513.401123  C181.716019,514.917969 180.785828,512.453796 179.157990,512.874390  C178.737473,513.035828 178.540634,513.025696 178.046631,512.996216  C178.076614,510.921631 177.877716,508.761047 179.096405,506.494446  C183.516891,504.889038 182.461166,500.636292 183.976715,497.427185  C184.043869,497.061737 184.506683,496.985138 184.741211,496.989258  C185.451324,496.498962 186.024292,496.243042 187.002029,496.371277  C187.818619,496.861450 187.181076,496.288544 187.695633,496.712433  C187.792603,496.590271 187.614395,496.579346 187.566498,496.186035  C187.802628,494.808441 188.527176,494.420044 189.906921,494.676514  C191.212265,495.888031 191.007782,497.108154 190.878601,498.677521  C191.034195,499.015656 191.116882,498.920837 191.178864,498.931610  z\"})),_path783||(_path783=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M588.950317,87.687302  C586.981812,87.733215 585.653625,86.629036 584.960327,84.364166  C587.048584,84.155952 588.295532,85.369896 588.950317,87.687302  z\"})),_path784||(_path784=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M774.780334,509.623352  C776.146729,509.035828 777.295898,509.070435 778.874146,509.148132  C779.769897,509.166077 780.209717,509.266327 780.860840,509.726379  C781.110535,510.704742 781.126038,511.430603 781.191650,512.514832  C781.156799,513.356506 781.071777,513.839783 780.937134,514.687256  C779.202148,516.312927 777.986938,514.984497 776.387024,514.081909  C775.956543,513.720520 775.796875,513.560852 775.444275,513.122192  C774.818909,512.031006 774.607727,511.160309 774.780334,509.623352  z\"})),_path785||(_path785=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M775.898071,496.431580  C776.405762,496.300323 776.928406,496.546997 777.720093,496.900482  C778.123413,497.304932 778.309998,497.564972 778.738892,497.936218  C778.875854,499.560791 779.276062,501.080231 778.242798,502.745483  C776.476257,501.210907 776.679810,498.848328 775.898071,496.431580  z\"})),_path786||(_path786=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M781.280884,509.798950  C780.607605,509.837769 780.120239,509.696686 779.468018,509.373413  C779.344543,508.937836 779.385803,508.684387 779.636719,508.102905  C780.696960,508.116821 782.044556,508.022064 781.280884,509.798950  z\"})),_path787||(_path787=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M707.981201,244.010178  C710.928406,244.635880 710.691162,247.871094 713.093628,249.231964  C713.785522,250.756531 714.218018,252.127075 714.774841,253.837936  C716.097900,256.842957 718.162109,259.214966 717.473267,262.794922  C716.784668,263.473755 716.265137,263.639740 715.285706,263.558533  C710.539917,257.774780 706.940186,251.800568 707.981201,244.010178  z\"})),_path788||(_path788=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M723.971191,272.649902  C723.554688,274.200195 723.076111,275.397675 722.373657,276.828613  C718.634644,276.661011 719.631775,273.355103 718.598572,271.394409  C717.606689,269.512390 716.847778,267.445862 717.271973,264.811829  C718.370483,263.151215 719.284302,263.769379 720.460754,264.803467  C721.786865,267.511597 722.847961,269.904358 723.971191,272.649902  z\"})),_path789||(_path789=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M720.784424,264.755310  C720.028076,264.809631 719.330322,264.500427 718.372192,264.055420  C717.724548,263.897980 717.415039,263.727356 717.129150,263.154297  C717.657776,259.875824 714.695190,257.838989 714.905762,254.555298  C718.398621,256.699310 718.989685,260.912872 720.784424,264.755310  z\"})),_path790||(_path790=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M604.729797,115.795471  C605.996277,116.408203 606.928711,116.941284 608.124207,117.677689  C608.263306,120.407127 610.582031,120.774101 612.017700,121.839806  C613.281738,122.778069 615.002991,123.177666 615.234192,125.487091  C615.092651,126.141678 614.773132,126.536537 614.562195,126.448311  C609.611328,124.376846 604.454407,124.005470 599.156921,124.263451  C597.663513,124.336189 596.491943,123.094910 595.544250,121.893196  C594.587463,120.679932 593.403015,119.729088 591.794312,119.822601  C588.591736,120.008774 586.778992,119.036102 586.982849,115.381355  C587.117432,112.970215 585.509521,112.732841 583.630432,113.614067  C582.590942,114.101562 581.634094,114.792313 580.052917,114.733902  C575.721863,112.312401 576.416565,107.486107 574.063477,103.857101  C573.763306,100.871765 573.821777,98.204834 570.690186,96.918137  C569.207642,96.309006 568.696533,94.678658 568.689575,93.158051  C568.676880,90.378105 567.012024,88.505760 565.826111,86.215500  C563.608826,81.933517 559.636841,80.150291 556.677551,77.828003  C557.310303,78.861641 558.609253,80.014839 559.950012,81.166885  C561.288025,82.316582 563.221252,83.562996 562.180725,85.621925  C561.103699,87.753113 559.048523,86.742928 556.970032,86.177673  C554.739502,85.296463 552.966125,84.353783 551.240723,82.628983  C547.544495,77.629707 543.145447,75.116264 537.070007,75.411018  C532.615662,75.627121 528.416809,73.408127 523.573181,73.220306  C520.716858,71.923119 516.353210,71.741180 517.686157,67.700302  C518.882568,64.073174 522.518494,66.454620 525.124146,66.544434  C525.958923,66.573219 526.726562,66.914909 527.479797,67.260323  C522.232300,65.611412 522.232300,65.611435 516.537354,67.528679  C513.359619,68.598480 510.043091,65.754761 509.775818,61.272850  C512.729675,58.481495 515.471985,61.459259 518.614746,60.979820  C520.383362,60.810577 522.024841,61.514145 522.929077,59.375774  C523.440491,59.056007 523.878601,59.085693 524.640747,59.174385  C526.671143,63.515339 530.181885,65.288025 535.735107,64.271591  C536.339783,63.657749 536.742065,63.431042 537.573730,63.370697  C540.221985,64.267410 541.822021,66.570534 544.868042,66.647835  C546.362793,66.848434 547.491028,67.119408 548.957397,67.485008  C549.781372,67.554031 550.254883,67.583557 551.088623,67.639450  C553.352722,67.989723 555.232971,68.426643 557.458496,68.967529  C559.442993,69.658684 560.354065,71.162712 562.023438,72.216827  C563.764465,73.310265 565.162659,74.327278 566.827942,75.559555  C569.168396,77.128586 571.785400,77.554756 573.731689,79.780388  C577.198425,83.051964 580.561340,85.942589 583.631592,89.116394  C588.803223,94.462456 593.328186,100.254135 595.477844,107.597145  C596.774963,112.028214 601.074707,113.385948 604.729797,115.795471  z\"})),_path791||(_path791=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M549.204468,68.778091  C547.892029,68.680130 546.795166,68.371574 545.356506,68.025970  C543.496033,65.930527 540.650940,64.830116 540.713623,61.463142  C541.986206,61.119484 543.066956,61.080837 544.552734,61.034447  C545.387024,61.078289 545.816345,61.129883 546.563965,61.242477  C549.039001,62.601849 551.584839,63.053173 554.034180,64.518723  C554.732910,64.678001 555.099854,64.755402 555.736328,64.913849  C557.180908,66.235641 558.547180,67.375282 558.146851,69.688568  C555.856689,70.106331 553.773071,69.932678 551.404785,69.034271  C550.580811,68.478195 550.051575,68.325577 549.204468,68.778091  z\"})),_path792||(_path792=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M558.142700,70.320557  C557.342651,68.568771 556.705383,67.121002 556.036987,65.334061  C559.837036,65.599808 560.621887,69.042313 562.308472,71.996040  C560.235107,73.629356 559.423096,71.755241 558.142700,70.320557  z\"})),_path793||(_path793=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M567.936218,75.773903  C567.727356,74.115929 565.343018,72.449486 567.878906,71.446304  C570.313599,70.483109 570.887024,72.549232 570.909424,74.956390  C570.734741,75.459488 570.586182,75.577362 570.213989,75.875061  C569.653076,76.253998 569.290771,76.387032 568.612000,76.446564  C568.160034,76.304054 568.004028,76.181206 567.936218,75.773903  z\"})),_path794||(_path794=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M569.914551,75.216827  C570.088379,75.032143 570.477661,75.207649 570.680420,75.274635  C571.192200,76.946182 572.890259,77.258934 573.916382,78.621399  C574.093811,79.053604 574.068420,79.249573 574.005066,79.739777  C571.489380,79.303772 569.062378,78.478195 567.180908,76.120857  C567.095093,75.774803 567.552124,75.607445 567.788208,75.548447  C568.229614,75.443916 568.434937,75.398399 568.950317,75.295670  C569.420532,75.292816 569.580627,75.347168 569.914551,75.216827  z\"})),_path795||(_path795=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M554.200195,64.304626  C551.536499,64.819954 549.326904,63.362064 546.996887,61.611626  C549.602905,61.315327 552.030701,62.101425 554.200195,64.304626  z\"})),_path796||(_path796=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M188.047394,496.694458  C187.230576,497.007538 186.479263,496.996887 185.351852,496.989807  C185.267014,495.885529 185.558289,494.777679 185.919052,493.332428  C187.267960,491.646118 187.386429,489.682037 188.526978,487.908997  C190.534637,483.571350 189.248672,478.934143 191.090286,474.487000  C192.565674,473.622986 192.353775,474.813690 192.835754,475.756805  C193.269363,476.029694 193.487564,476.063324 194.030258,476.162933  C194.838181,476.850281 194.958008,477.572296 194.889740,478.704895  C194.663269,479.804565 194.372314,480.498688 194.093719,481.591858  C192.399109,486.008240 192.130646,490.425690 190.234894,494.716370  C189.052612,495.077637 188.344727,495.418610 188.047394,496.694458  z\"})),_path797||(_path797=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M188.263153,487.753235  C188.843048,489.652802 188.556244,491.531036 186.340240,492.924835  C185.728958,490.946320 186.550888,489.322540 188.263153,487.753235  z\"})),_path798||(_path798=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M193.037720,475.579956  C192.556412,475.473450 192.061630,474.950836 191.362396,474.254211  C191.077179,473.919159 190.996460,473.758087 190.812683,473.346466  C191.223267,472.724182 191.736908,472.352448 192.558167,471.898224  C192.918625,472.931793 192.971451,474.047821 193.037720,475.579956  z\"})),_path799||(_path799=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M681.026306,195.757935  C680.828308,194.123428 680.551270,192.804276 680.362671,191.152039  C681.445251,190.939133 682.498291,191.072952 682.946228,192.109924  C685.148376,197.207550 688.883850,201.582062 690.057983,207.542282  C689.555908,207.680679 689.042236,207.444305 688.259583,207.112289  C687.810730,206.919205 687.630798,206.821762 687.232666,206.509033  C686.644470,205.810852 686.305725,205.303818 685.703613,204.613770  C685.392029,204.208939 685.273926,204.041367 684.994629,203.611511  C684.490295,202.588776 683.954285,201.955566 683.298462,201.018280  C682.502930,199.142609 681.492249,197.716339 681.026306,195.757935  z\"})),_path800||(_path800=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M725.826843,291.756470  C726.370911,293.078033 726.660645,294.187134 726.958801,295.641632  C726.298462,297.918640 725.827087,299.870941 726.390747,302.281433  C727.361511,306.437561 728.374390,310.170685 726.174805,313.987915  C725.275818,315.548035 725.681396,317.492188 726.252869,319.244781  C726.808960,320.950256 727.466309,322.650757 726.485474,324.797607  C725.255615,325.823456 724.266846,325.642242 722.985474,324.787201  C722.182800,323.892822 721.895264,323.162292 721.631592,322.013733  C721.509827,320.882324 721.304260,320.168427 720.818298,319.151184  C717.552490,311.826996 715.412537,304.481354 712.700684,297.348724  C711.578613,294.397400 711.474121,291.408905 712.336853,288.543549  C713.577026,284.424805 712.455627,280.976776 710.021606,277.827179  C708.033264,275.254303 706.877014,272.491913 706.338379,269.264008  C705.525696,264.394043 702.156494,261.040375 698.443848,258.196960  C695.997803,256.323547 694.251587,254.240891 694.731750,251.125275  C695.268494,247.643173 694.496460,244.568802 692.862610,241.561142  C692.059631,240.083099 691.604065,238.475540 692.334961,236.441681  C694.951111,234.491898 696.114990,236.154617 697.068542,238.000809  C699.420166,242.554123 701.808350,247.023102 707.105103,248.872787  C707.875488,249.141815 708.468445,249.951065 708.589172,250.760574  C709.575928,257.377930 713.601929,262.733185 716.173462,269.048279  C716.549805,269.731720 716.693420,270.147919 716.809570,270.901154  C716.847534,272.028748 716.716370,272.840210 716.927246,273.939270  C717.096252,274.617310 717.192993,275.006714 717.356018,275.694885  C717.710205,277.872040 719.460754,278.555664 720.724243,280.071594  C721.842529,282.013031 722.232117,283.826965 722.414062,286.041626  C722.283325,288.240875 722.677856,289.834900 724.818848,290.897217  C725.244507,291.247803 725.408447,291.395935 725.826843,291.756470  z\"})),_path801||(_path801=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M725.749146,325.325745  C721.698242,317.779938 727.635010,310.094208 724.995178,302.397034  C725.709778,301.322784 726.420837,300.642548 727.777344,300.317657  C730.469543,300.105072 730.831543,301.938660 731.634521,303.833252  C731.959229,304.821075 732.086853,305.502319 732.283325,306.522339  C730.862671,307.311890 731.793152,309.150360 730.985046,309.624725  C728.491028,311.088806 727.527466,313.539276 728.471008,315.736816  C729.551819,318.253937 732.561157,316.536346 735.041870,317.061432  C735.520935,317.282501 735.615173,317.486603 735.725464,318.029480  C733.942932,321.994110 732.658447,325.816406 729.913208,329.062927  C729.184631,329.924561 730.578613,334.213898 731.516785,335.906708  C733.463562,339.419159 730.977600,340.036652 729.244019,341.797180  C726.603699,341.951447 726.710693,339.957184 726.447632,338.505188  C725.679138,334.263123 723.643799,330.089142 725.749146,325.325745  z\"})),_path802||(_path802=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M716.003052,272.334351  C716.002991,271.554077 716.006165,271.111816 716.002197,270.337952  C714.876343,267.992340 713.796753,265.969238 714.794495,263.228699  C715.541931,262.926544 715.983093,262.929474 716.755310,262.905945  C717.363708,263.057495 717.608704,263.272522 717.966553,263.722046  C717.962952,268.481018 721.589355,272.010071 721.856262,276.800079  C722.670715,278.197021 723.191528,279.332001 723.850098,280.756744  C725.486084,283.227173 724.946960,285.982849 726.138184,288.644592  C726.218933,289.749725 726.190918,290.491089 726.122070,291.600677  C725.889282,291.987152 725.697388,292.005341 725.216309,292.024323  C723.464722,290.722351 721.815979,289.559631 721.260986,287.162231  C721.354431,284.744873 720.301575,282.838776 719.874207,280.420227  C719.873535,277.761719 717.170471,278.033813 716.280762,276.155457  C716.068848,275.469055 716.069092,275.056000 716.062378,274.333252  C716.032593,273.573364 716.016113,273.122955 716.003052,272.334351  z\"})),_path803||(_path803=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M728.415894,300.467682  C727.581238,301.706818 726.705872,301.968842 725.353271,301.990723  C724.582642,299.846649 723.379150,297.519165 726.637817,296.050598  C727.274719,296.143524 727.582275,296.299988 728.064087,296.649841  C728.859863,297.873871 729.169128,298.946655 728.415894,300.467682  z\"})),_path804||(_path804=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M726.454834,288.732666  C722.830139,287.478241 724.372742,284.370972 723.983704,281.462891  C726.559021,282.910370 727.055237,285.523285 726.454834,288.732666  z\"})),_path805||(_path805=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M728.461243,300.915344  C728.130066,299.751129 728.110291,298.693878 728.164429,297.239929  C731.487549,297.863220 731.906616,300.499084 731.891968,303.743958  C729.891968,304.003387 730.277710,301.585236 728.461243,300.915344  z\"})),_path806||(_path806=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M734.756348,307.904388  C734.930847,309.131500 734.925354,310.219604 734.851624,311.713501  C732.354248,311.328918 733.157837,309.262604 733.006592,307.167572  C734.097534,306.233368 734.037598,307.460541 734.756348,307.904388  z\"})),_path807||(_path807=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M989.018982,737.709595  C984.045349,737.375916 981.906250,734.833801 981.095215,728.173462  C981.524048,727.837708 981.909180,727.915466 982.579712,728.065186  C983.124634,728.964294 983.479858,729.707886 984.747864,729.940063  C986.253845,731.133301 987.443359,732.317078 988.808472,733.762573  C989.520020,734.642151 989.701782,735.355286 989.344421,736.475952  C989.105713,736.998718 989.079468,737.201660 989.018982,737.709595  z\"})),_path808||(_path808=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M1004.300293,760.948364  C1005.722717,761.134277 1006.507751,762.095520 1006.680664,763.830811  C1005.211182,763.709595 1004.219238,762.909180 1004.300293,760.948364  z\"})),_path809||(_path809=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M989.387268,736.963684  C989.076538,736.104614 989.021179,735.413452 988.974976,734.373291  C990.513916,734.469910 990.848877,735.807129 991.297241,737.416260  C990.766479,737.543640 990.204590,737.337646 989.387268,736.963684  z\"})),_path810||(_path810=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M714.932739,262.609436  C714.589417,265.134521 715.779968,267.103516 715.994873,269.608795  C712.982056,269.103729 712.158325,265.393921 712.010803,263.900238  C711.567627,259.414429 706.094177,256.939545 707.746338,251.953323  C707.896484,251.500305 707.336365,250.328705 706.957520,250.255051  C699.332520,248.772491 697.853394,241.858978 694.623535,236.490753  C694.487732,236.264923 694.039001,236.227280 693.374390,236.047729  C691.033875,236.165985 691.173767,234.592651 690.860657,233.014313  C689.748962,228.348267 689.565918,223.923691 688.938477,219.562912  C688.777649,218.445099 688.090942,217.402466 688.851318,215.975494  C694.397095,217.762344 695.578918,223.256729 697.278931,227.393234  C699.642517,233.144226 704.207153,236.903397 707.531616,242.010101  C707.950012,242.482590 708.049988,242.864288 708.246033,243.526367  C707.825928,247.865891 710.207642,251.151047 711.365601,254.744980  C712.206726,257.355804 713.611328,259.785095 714.932739,262.609436  z\"})),_path811||(_path811=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M688.932068,215.431732  C689.809082,219.270248 693.587585,222.295837 690.357605,226.572479  C689.575256,227.608307 694.440857,228.582565 692.251831,231.753540  C686.190857,230.631424 684.410645,225.833115 682.612183,220.648010  C682.539795,217.263870 680.675903,214.770142 680.112000,211.522003  C679.883850,210.417648 679.878418,209.670319 680.036682,208.550613  C680.338196,207.451874 680.717712,206.810364 681.513428,206.012085  C685.291504,205.422440 685.937622,208.511078 687.754761,210.737610  C688.270325,212.369415 687.784546,213.882782 688.932068,215.431732  z\"})),_path812||(_path812=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M688.014954,210.595566  C684.886475,210.952942 684.857117,207.342575 682.295898,206.158554  C680.916809,206.201126 679.912170,206.054672 678.776733,205.049362  C677.546387,201.661255 679.132874,199.196396 680.738281,196.381012  C680.997314,196.088623 681.084778,195.772720 681.095093,195.607651  C682.930420,196.441940 683.560913,198.296921 684.489380,200.354431  C684.705811,201.393188 685.040100,201.986221 685.682007,202.806305  C685.892761,203.079285 686.076843,203.442795 686.156128,203.630447  C686.519104,204.527634 687.070557,205.053299 687.610596,205.920792  C687.720154,206.179581 687.848083,206.600388 687.919373,206.808533  C688.002258,208.077011 688.013794,209.137375 688.014954,210.595566  z\"})),_path813||(_path813=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M217.320618,403.236267  C217.000626,400.634552 217.001938,398.269409 217.005280,395.462463  C218.989441,389.938995 220.971573,384.857300 222.952026,379.396179  C222.473587,378.459686 222.140991,377.835022 222.038651,376.742462  C222.295578,374.798798 222.241074,373.167847 222.817352,371.296967  C222.987381,370.997375 223.017502,370.520294 223.031952,370.281738  C224.073914,368.979584 224.656845,367.614166 225.677582,366.167664  C227.712143,362.806183 227.926559,359.171906 229.185165,355.467743  C231.273224,353.230560 232.312057,349.738556 236.582153,350.998108  C238.189529,353.451660 236.868958,355.521912 235.860092,357.545441  C233.630920,362.016541 231.917938,366.662598 231.159119,371.588654  C230.004837,379.081879 226.542404,385.817627 224.441864,392.988647  C223.356049,396.695557 223.993286,401.046906 219.564987,403.577820  C218.653336,403.771423 218.136932,403.693054 217.320618,403.236267  z\"})),_path814||(_path814=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M222.596695,375.732544  C222.944443,376.734283 222.962128,377.494904 222.965073,378.636169  C221.368790,379.019867 220.001587,378.748932 219.994781,376.350708  C219.978424,375.983643 219.992889,375.991852 219.988312,375.985352  C220.660934,375.424103 221.421082,375.257812 222.596695,375.732544  z\"})),_path815||(_path815=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M214.211899,381.879730  C213.906662,381.150604 213.932388,380.443359 213.957367,379.380981  C214.825531,379.186005 215.694458,379.346191 216.787231,379.756104  C216.497177,381.039825 215.775909,381.803894 214.211899,381.879730  z\"})),_path816||(_path816=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M912.495667,717.476685  C912.854919,717.914062 912.898926,718.203064 913.010986,718.703613  C912.014282,720.373840 910.296631,720.743408 908.874878,721.568420  C905.827332,723.336731 904.738647,725.998474 905.542175,729.542908  C901.203979,727.794006 898.794495,724.154297 895.539429,721.620667  C891.294800,718.316711 887.101318,717.406738 882.151001,718.157043  C881.175903,718.304810 879.680115,719.083130 879.339905,718.717896  C876.267456,715.419250 871.886108,714.222168 868.519897,711.908691  C864.461487,709.119751 861.065308,707.200500 856.389526,708.161804  C854.157593,708.620667 852.646973,708.794800 850.616028,707.014648  C848.447937,705.114441 845.079224,705.277710 842.120056,704.968323  C838.381348,704.577393 835.112366,703.606384 833.479431,699.469116  C832.663513,697.401855 831.273132,694.498718 827.910095,697.056458  C826.107178,698.427856 824.396790,697.113220 823.665161,695.838562  C821.110901,691.388306 816.123657,691.335449 812.311035,689.254700  C810.286377,688.149780 807.927979,689.197998 805.877686,690.724609  C804.041321,692.091858 803.225098,692.960632 805.834900,694.049683  C807.210388,694.623596 807.871460,695.693237 808.423279,696.922424  C808.764343,697.682068 809.146973,698.518921 808.460693,699.238098  C807.708801,700.026062 806.932373,699.372009 806.198364,699.070007  C800.953735,696.912292 799.253113,693.599060 801.017578,689.077209  C801.250916,688.479248 801.173584,687.761475 802.029297,687.567810  C802.953308,687.358643 804.079041,689.874084 804.675415,687.596130  C805.109009,685.940125 802.882263,685.946472 802.130798,685.006775  C799.870056,682.179810 795.870056,680.312195 796.835327,675.345825  C796.873901,674.801086 796.767334,674.592346 796.871582,674.102295  C799.078857,673.700073 799.479980,675.901428 801.008423,676.526001  C800.401245,674.368530 797.020020,672.062683 801.732056,670.246460  C804.381958,670.855225 805.197754,673.327332 807.482178,674.537231  C813.331848,682.341736 821.163330,686.271240 829.923035,688.868286  C835.306641,690.464478 840.708679,692.093750 845.620239,694.964478  C849.255188,697.089111 853.557800,697.101257 857.735962,698.746094  C858.065125,698.925232 858.002441,698.992188 858.034424,698.956299  C859.135498,700.304382 860.731445,700.630798 862.634155,701.079590  C863.439758,701.213867 863.904358,701.294678 864.698547,701.512085  C865.996765,703.553223 867.939453,703.341553 869.945374,703.651001  C871.249878,703.764709 872.205139,703.978760 873.512695,704.302368  C877.629150,707.896729 882.873413,707.620117 887.296692,709.575195  C893.835083,712.465149 900.537476,715.300110 908.059387,716.601929  C909.685913,716.772339 910.912720,717.053467 912.495667,717.476685  z\"})),_path817||(_path817=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M147.762695,647.164734  C153.920929,650.756531 149.195953,654.282227 147.520538,658.005554  C144.265015,654.466309 145.464386,650.896484 147.762695,647.164734  z\"})),_path818||(_path818=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M140.723206,712.975464  C141.820404,712.925842 142.574677,712.942993 143.699127,713.036865  C144.862442,714.032837 144.815186,715.000549 143.965897,716.272156  C141.580780,717.794128 138.735443,717.215393 136.588776,719.398071  C135.746475,719.670654 135.250443,719.664246 134.435745,719.332031  C133.824783,719.028381 133.567825,718.868530 133.218140,718.467957  C133.098679,718.112183 133.105698,717.942993 133.167999,717.526794  C134.762741,716.958984 135.753693,715.857117 136.960861,714.546204  C138.228638,713.882507 139.304459,713.462341 140.723206,712.975464  z\"})),_path819||(_path819=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E9EBE7\",opacity:1,stroke:\"none\",d:\" M136.568832,708.973145  C136.883286,709.987244 136.789886,710.925903 136.716782,712.209839  C135.435394,713.189941 134.178543,713.463867 133.865768,711.546814  C133.593002,709.875000 134.129547,708.681946 136.568832,708.973145  z\"})),_path820||(_path820=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M956.132446,720.691284  C954.886108,720.696960 953.784058,720.384216 952.338623,720.030823  C951.786377,719.885071 951.577637,719.779968 951.120056,719.429688  C948.094177,714.084167 943.374023,710.803772 939.336060,706.520508  C939.447571,705.436707 939.765198,704.802368 940.506409,704.010071  C946.290710,704.818237 950.373718,708.669373 955.190552,711.084473  C955.904541,710.333984 955.806519,709.195068 956.734497,708.198914  C957.577759,708.130920 958.149719,708.282104 958.961670,708.615112  C960.318359,711.721130 962.299805,713.551636 965.905457,713.707581  C967.096008,714.215881 967.912354,714.817688 968.889221,715.679932  C969.169617,718.619385 970.946899,719.555542 973.606689,719.987915  C973.927979,722.218994 976.186584,722.661072 977.203064,724.445923  C974.619141,727.518372 972.061340,728.235291 971.140198,723.503418  C970.315552,719.267212 968.192993,722.996948 967.037659,722.658264  C965.373291,721.442749 967.851501,717.790161 965.774353,718.726135  C962.545715,720.180908 958.162598,713.783386 956.132446,720.691284  z\"})),_path821||(_path821=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M956.812012,707.706543  C956.998169,709.140137 957.001343,710.300720 956.979065,711.460876  C956.963074,712.294861 956.947815,713.218445 956.087524,713.624146  C954.651184,714.301453 954.743103,712.640564 954.047913,712.190735  C949.928162,709.525452 945.759277,706.936096 941.302246,704.164307  C939.615234,704.824829 938.883362,704.296875 938.788208,702.461853  C942.383484,702.728699 945.787842,703.380615 949.609009,704.006531  C952.223267,705.131470 954.420776,706.282410 956.812012,707.706543  z\"})),_path822||(_path822=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M303.629395,172.033875  C303.958740,173.128555 304.146515,174.415070 302.164307,174.838013  C302.311035,173.941025 302.822693,173.046799 303.629395,172.033875  z\"})),_path823||(_path823=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M308.798523,165.190720  C309.035919,166.243134 309.071533,167.395844 307.419434,167.974548  C307.114502,167.627716 307.136810,167.217987 307.196991,166.501495  C307.670502,165.884888 308.106079,165.575058 308.798523,165.190720  z\"})),_path824||(_path824=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M305.530762,169.772064  C305.917877,170.673584 305.745270,171.541092 304.254700,171.901184  C303.968719,171.002487 304.479614,170.364380 305.530762,169.772064  z\"})),_path825||(_path825=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M938.625549,702.044556  C939.101685,702.949463 939.434509,703.660889 940.688416,703.955322  C940.817078,704.555969 940.636658,705.104675 940.221252,705.831543  C938.970276,706.983887 938.561340,708.796997 936.300903,708.235718  C932.341370,708.125488 928.778381,707.652954 925.250977,705.901001  C925.180969,705.405457 925.239258,705.220398 925.396973,704.761963  C925.836060,704.383972 926.175598,704.279358 926.772095,704.099365  C928.840881,703.169495 930.849060,702.796082 932.901855,701.639893  C933.614868,701.413025 934.011780,701.303528 934.717041,701.169739  C935.893921,702.234497 937.142334,701.900757 938.625549,702.044556  z\"})),_path826||(_path826=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M932.888977,701.401367  C931.944519,703.530762 929.898193,703.900757 927.398682,704.058838  C927.623291,703.581726 928.217590,703.139404 929.032593,702.513306  C930.355530,701.979797 931.457764,701.630005 932.888977,701.401367  z\"})),_path827||(_path827=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M785.383118,673.030396  C780.740479,672.570557 777.232605,669.916321 772.114136,671.108032  C767.611694,672.156250 762.536865,668.935669 759.162048,664.303223  C755.311951,661.390198 751.904663,658.536011 749.774109,654.404236  C748.305908,651.557190 746.217468,650.902100 743.834229,653.356506  C740.034363,657.269897 734.589844,656.209717 730.089905,658.006348  C729.123840,658.392090 727.690002,657.942505 726.808105,657.130981  C724.376343,654.893433 721.941528,653.990295 718.328796,654.363647  C715.098389,654.697632 712.653076,651.245911 710.107178,649.261353  C707.270691,647.050171 704.432678,645.370056 700.914368,644.631836  C698.468750,644.118591 696.132751,643.107178 694.258484,641.354919  C692.552979,639.760315 690.776062,639.052979 688.372498,639.772644  C685.728333,640.564453 683.804260,639.294434 682.760071,636.856079  C681.625183,634.205994 679.910156,632.948303 676.908142,633.537903  C674.707458,633.970154 673.445618,631.613403 671.494934,631.316284  C668.558899,630.869080 665.501770,630.160217 662.703674,631.693054  C660.039795,633.152405 658.159851,632.431702 656.972778,629.921326  C655.586609,626.989807 653.566406,625.627380 650.259338,626.065552  C646.930115,626.506714 646.238159,622.513672 643.526001,621.467041  C643.588989,628.671265 639.795959,631.793030 630.834229,631.837402  C629.785706,631.268433 629.303406,630.659729 628.848694,629.531982  C628.590515,628.329529 628.457092,627.518005 628.527710,626.281372  C628.458923,622.368896 628.766785,618.857727 628.207397,614.971436  C627.991821,614.045654 627.963196,613.505859 628.068359,612.563843  C628.355652,611.391602 628.751648,610.714478 629.567444,609.869873  C631.016418,609.073242 632.231934,609.176208 633.181763,609.892578  C635.463440,611.613342 637.689148,611.328735 640.214172,610.413391  C644.419067,608.888977 648.780273,609.991272 653.054871,610.255798  C655.758118,610.423035 656.856934,612.566895 657.464478,615.004089  C658.292725,618.326660 660.199829,619.800903 663.913269,619.803467  C668.304443,619.806458 672.922668,619.702881 676.707458,622.856445  C677.946045,623.888489 679.163025,623.386780 680.021240,621.992981  C682.301025,618.290405 685.020081,618.894714 687.953857,621.189331  C689.084473,622.073669 690.323303,623.533203 691.856628,622.305725  C693.126709,621.289001 692.239319,619.821655 691.739746,618.626465  C690.304504,615.192688 690.074890,611.529846 689.510742,607.917847  C689.062134,605.045654 689.484680,602.670898 692.814270,602.482056  C696.934143,602.248413 695.262939,605.403198 695.333008,607.470947  C695.350037,607.974609 695.391602,608.459473 696.453796,609.238342  C698.356506,606.495544 697.200928,601.925415 701.368286,600.278320  C704.967163,599.615417 706.211609,601.265503 706.143799,604.653687  C702.109741,611.136841 701.911560,617.594299 704.100403,624.363281  C704.725525,626.296509 704.987732,627.891846 707.695557,626.698425  C710.908020,625.282776 713.835144,626.982361 714.568298,629.709839  C715.633850,633.673828 719.095459,635.759583 720.536865,639.279907  C721.565735,641.792725 723.974915,641.496155 726.127686,641.424805  C727.622803,641.375244 728.363098,640.581299 727.615295,639.141235  C724.707275,633.541565 723.249756,627.437744 716.990906,623.472839  C713.051819,620.977600 708.873779,616.557495 708.428345,610.340515  C708.562317,609.494202 708.801331,609.077087 709.459778,608.528564  C710.254822,608.213318 710.737488,608.168091 711.572632,608.332153  C713.955933,609.436401 714.109680,613.595825 718.098877,611.876953  C719.180725,611.829163 719.880310,611.960693 720.851196,612.435364  C721.949280,616.407410 723.987793,619.244080 726.649719,622.140564  C730.060120,625.851501 731.044800,631.314148 734.250977,635.374084  C734.750610,636.006714 734.920471,636.905029 736.069641,637.305481  C737.917664,635.922485 738.344910,632.963074 741.192139,631.939331  C744.978882,630.105103 748.453064,628.468750 751.806396,632.282471  C753.210022,625.020264 754.372620,623.747009 759.643066,623.666077  C765.390869,620.263550 765.766907,620.348633 769.321838,625.669128  C769.877136,626.500183 770.738770,627.284912 770.844849,628.225403  C771.616089,635.063660 775.965393,639.452026 779.981506,644.679688  C783.732300,649.561951 786.257202,656.376099 787.476624,663.034973  C787.599060,663.703308 787.711670,664.501221 787.257507,664.963013  C784.378052,667.890991 787.047668,670.007812 788.128540,672.673096  C787.254822,673.010498 786.506104,673.018494 785.383118,673.030396  z\"})),_path828||(_path828=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M797.120850,673.668396  C796.996948,674.174316 796.994507,674.341370 796.986328,674.759155  C793.392151,675.513184 793.627319,671.620850 791.298767,670.166077  C787.785583,670.018738 786.648560,668.161743 788.123840,665.636719  C789.403259,663.446960 789.100159,661.563721 788.638611,659.462280  C786.611816,650.235474 783.740295,641.422241 776.490967,634.763916  C776.244202,634.537231 775.808350,634.209351 775.883606,634.015564  C777.199097,630.629944 773.854248,629.563477 772.743652,627.383667  C771.310669,624.570862 768.796692,622.930420 766.777771,620.763550  C764.299805,618.103943 762.492493,615.287109 763.354553,611.384399  C763.676514,609.927246 763.445312,608.400818 762.917114,606.609863  C763.501526,601.872559 762.316162,598.148438 758.929688,595.136780  C758.335938,594.608704 757.918335,593.577698 758.155029,592.832825  C760.099121,586.715698 755.703674,583.017395 752.760986,578.865967  C751.637390,577.280884 752.101746,576.488647 753.203613,575.570801  C754.889160,574.166809 756.728088,573.045898 758.863220,573.068298  C754.615234,570.470459 756.032227,565.915222 756.247681,562.376526  C756.471863,558.695007 756.247742,555.593201 754.389954,552.419495  C753.166199,550.328918 751.807739,547.922913 754.641113,545.538086  C755.480774,545.419250 756.169373,545.386047 756.393982,545.734619  C759.851990,551.102722 766.041260,554.278015 768.863525,559.853882  C771.988831,566.028503 772.697449,573.824402 769.458313,579.535950  C767.201294,583.515808 767.935913,584.834167 770.076965,587.304871  C770.629761,587.942810 770.938904,588.741760 770.999084,589.579529  C771.563416,597.437439 775.414124,604.421875 776.755005,612.074829  C777.187256,609.194214 776.305603,606.501343 775.976013,603.742615  C775.741394,601.778870 775.299316,599.361511 777.739197,598.638672  C780.289734,597.883179 781.672180,599.750122 782.382202,602.020081  C782.632080,602.818604 782.893188,603.593140 783.586792,604.567322  C784.451660,607.130310 785.585938,609.242310 785.943481,611.959717  C785.556152,614.235107 786.287659,615.967102 786.967041,618.072510  C787.269592,619.389404 787.256958,620.365356 787.101440,621.708496  C787.028748,628.393372 785.931152,634.940918 791.622925,639.859192  C793.908813,641.834473 794.910400,644.806580 794.122803,647.574829  C792.990173,651.556152 794.841125,654.242859 797.115906,657.368164  C797.404785,657.906982 797.485962,658.139404 797.583374,658.739746  C794.622498,663.776489 795.244385,668.535706 797.120850,673.668396  z\"})),_path829||(_path829=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M763.729004,605.751648  C765.456543,607.324524 765.269348,609.181946 764.921082,610.681458  C763.601257,616.363647 766.725586,619.477051 770.908569,622.276611  C772.078003,623.059265 773.263489,624.407288 773.603027,625.713867  C774.242554,628.174988 774.837769,629.511292 777.398499,627.468140  C778.104736,626.904602 779.133057,627.013367 779.575439,627.842590  C780.159851,628.937866 779.362915,629.643005 778.494934,630.273132  C776.325439,631.848083 775.198364,633.352234 778.852722,634.506836  C780.007751,634.871643 780.456665,635.936584 781.085327,636.966003  C782.910522,639.954712 783.216980,644.097290 787.267334,645.512451  C787.594360,645.626770 787.950928,646.392334 787.884705,646.786438  C786.891113,652.692566 790.137817,657.625366 791.503723,662.986694  C791.769958,664.031677 791.177979,665.150940 790.306519,665.537354  C786.793213,667.095215 788.867859,668.356140 790.701538,669.850342  C790.903015,671.514893 790.244324,672.578491 788.340210,672.960693  C787.428528,671.630493 786.050598,671.380859 784.955505,670.679626  C783.464417,669.724976 782.305481,667.820801 784.099792,666.630798  C787.325439,664.491272 786.037231,662.604065 784.714783,660.199768  C783.676208,658.311584 786.041504,655.205688 782.376526,654.036438  C780.651611,653.486206 779.897034,651.019470 780.333313,649.874695  C781.717407,646.243530 778.487671,644.991150 777.316467,642.712952  C777.096802,642.285583 776.792542,641.763000 776.393982,641.587708  C772.037903,639.672668 771.241943,638.378845 770.913452,632.799194  C770.673584,628.726196 767.926270,625.761169 765.605469,622.938660  C763.270386,620.098755 763.114929,625.909424 760.369141,624.983032  C758.780212,624.511230 758.368347,623.263306 757.329590,622.193665  C756.647156,621.569580 756.094727,621.294128 755.270935,620.837952  C752.676331,616.211426 747.274109,614.953857 744.470459,610.479370  C743.660828,609.356445 743.266602,608.432068 742.936890,607.059326  C742.784058,605.286926 743.181885,604.058960 744.321777,602.706360  C748.027405,599.439941 749.002563,593.147705 746.480774,587.555054  C745.198669,584.711670 745.246643,582.560181 747.740112,580.561035  C750.399719,578.428772 752.603577,578.882751 754.034180,582.016724  C756.618103,587.677185 759.341064,593.309937 758.307190,599.845215  C757.673035,603.853394 761.405579,603.924561 763.729004,605.751648  z\"})),_path830||(_path830=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M870.728149,825.791138  C873.772583,828.754822 876.291199,831.751221 880.032837,833.417847  C881.406860,834.029846 881.241028,835.565491 879.995850,836.664856  C878.919800,837.614868 875.491760,837.115051 874.199463,836.171997  C871.973022,834.547241 870.574890,831.863464 867.349182,831.044678  C863.851440,832.223511 862.398987,830.297791 861.174683,827.539185  C861.167542,826.178345 861.701843,825.168396 861.022705,823.890015  C860.526123,823.285217 860.184326,822.856140 859.641174,823.039795  C857.991821,823.597595 857.047546,826.907471 854.817078,824.784119  C852.973633,823.029114 852.352966,820.000000 853.388428,817.922729  C855.056274,814.576782 854.956055,812.888611 851.325134,811.149780  C849.243774,810.153015 850.814575,808.000427 852.014038,806.240173  C855.004883,802.646973 850.706726,804.009888 849.854919,802.719666  C846.564941,800.897217 844.139343,797.726929 839.938782,799.420105  C838.837708,799.863892 837.800842,798.675781 837.489014,797.512451  C837.052734,795.885315 835.675598,795.319580 834.260254,794.239380  C831.536682,791.675049 829.697754,789.263672 832.407104,785.875366  C833.852539,784.067810 831.184021,782.005371 832.571411,780.175110  C833.739319,778.634338 835.036621,777.191589 836.860596,776.002014  C835.879333,781.800110 842.590149,783.299561 842.727112,788.221436  C842.758789,789.360046 844.589600,788.495605 844.954956,787.164734  C845.347412,785.734924 847.242126,784.394958 847.303406,785.815918  C847.461487,789.486206 850.638611,789.447327 852.279602,791.096069  C854.363525,793.189880 857.259827,794.581116 854.545715,798.154968  C853.848389,799.073059 854.478760,800.423401 855.361694,800.704956  C859.239197,801.941162 860.537781,806.271057 864.004333,807.784973  C866.731995,808.976318 865.322021,810.205078 864.255737,811.797485  C863.489380,812.427551 863.337524,812.949585 863.789673,813.788086  C867.450439,814.692810 868.531128,816.915344 867.988525,820.594727  C865.579285,824.274902 868.345825,824.751526 870.728149,825.791138  z\"})),_path831||(_path831=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M825.260498,834.190186  C824.690491,833.531067 824.373718,833.058472 824.029663,832.290527  C826.675537,831.737610 827.159241,829.952454 826.918213,827.730408  C826.692627,825.651428 825.260803,825.039001 823.409180,825.010193  C822.071228,824.989319 820.915100,824.808594 819.832825,823.716492  C817.921143,821.787659 816.539978,819.214966 813.060730,819.108948  C812.005188,819.076721 810.606323,816.690857 810.458923,814.272827  C813.050232,815.130432 815.490662,814.752075 817.816650,816.731873  C819.095703,817.820496 822.017761,816.967224 824.198608,817.010864  C826.609985,817.059265 827.356995,817.891785 825.563049,819.932495  C823.179443,822.644104 824.573669,823.656860 827.418091,823.978516  C827.911194,824.034302 828.445007,824.145508 828.903015,824.021179  C830.508423,823.585693 831.833435,827.124878 833.031250,824.838379  C834.015564,822.959595 831.113159,823.310364 830.132324,822.424194  C829.030884,821.428955 829.243530,820.419556 829.912170,819.323730  C830.571716,818.242981 832.258789,818.162354 832.287231,818.788147  C832.407837,821.445435 840.456909,819.128418 835.860596,824.754944  C834.975830,825.838074 837.268982,827.735107 839.642700,827.994080  C841.717163,828.962402 841.824280,831.763733 844.671692,831.889893  C845.856140,832.237793 846.687744,832.601624 847.939758,832.696228  C850.549133,835.152588 851.315125,831.501038 853.346375,831.516541  C855.339783,831.459778 856.654968,832.405029 858.541748,833.528320  C856.810669,837.327942 853.134827,839.903931 853.762390,844.655823  C853.848999,845.311646 853.092163,845.787598 852.357361,845.741211  C850.402588,845.617859 850.024963,844.022583 849.768188,842.584961  C849.180420,839.295105 848.316467,837.964844 844.471313,839.751343  C840.886292,841.416809 841.900330,842.977356 843.956421,844.121094  C846.279541,845.413452 848.371399,846.259949 847.410950,849.447998  C847.375061,849.567322 847.582458,849.741333 847.596863,849.897278  C847.831543,852.431702 853.114685,853.244019 851.065063,855.009216  C849.499756,856.357422 845.125305,854.460815 842.006409,853.969971  C841.548279,853.897827 841.123047,853.616516 840.650513,853.418579  C840.756165,850.942444 843.615723,851.664246 844.487427,850.081116  C842.699402,846.818298 839.835938,848.719788 837.233948,848.232422  C835.493713,845.700745 836.871338,841.887512 832.895447,840.744385  C831.946655,840.471680 832.837158,838.749451 833.979858,837.869568  C831.489685,838.877502 832.497803,841.768982 830.668030,842.931152  C828.429199,844.353149 826.653381,843.607239 825.081726,841.337769  C825.258667,840.504333 825.517273,840.008667 825.887939,839.256470  C826.356201,837.404358 827.201050,835.757324 825.260498,834.190186  z\"})),_path832||(_path832=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M852.972534,805.676392  C852.470947,807.345337 851.941895,808.690735 851.411194,810.040283  C856.943054,811.058411 857.566223,812.429565 854.746887,817.329163  C854.094482,818.462830 854.094543,818.462830 855.687561,824.341736  C858.484192,824.364136 857.133728,819.125000 860.747986,820.289062  C862.192810,820.754333 861.888062,822.107605 861.997070,823.609619  C862.380310,824.385559 862.527527,824.845764 862.220886,825.690247  C861.648193,829.208374 864.829163,829.286743 866.656677,830.934204  C866.942993,832.134399 867.118530,833.376038 865.337708,833.935425  C863.239136,837.078552 861.456909,833.873474 859.345459,834.011475  C859.004883,834.004883 859.000000,834.000000 858.997559,833.997559  C858.524109,833.523621 857.997253,833.007935 857.976562,832.344849  C857.850708,828.322327 855.781982,829.190674 853.177612,830.625000  C847.023010,829.769775 845.564209,827.000610 848.723328,822.469849  C850.197571,820.355286 851.785278,818.243347 850.373535,815.775085  C848.724365,812.891907 846.027039,814.442383 843.341064,814.957275  C840.232361,814.374695 840.136780,812.149414 840.010010,809.967346  C839.914185,808.317139 840.090393,806.617554 839.747986,805.025452  C839.458435,803.679138 838.926331,801.631531 836.940735,802.501953  C835.469299,803.146973 835.918762,804.755493 836.909851,805.869812  C838.764465,807.955139 837.342224,809.553772 836.100037,811.082275  C835.490173,811.832642 834.595703,811.672485 834.026367,810.837646  C832.962830,809.277893 831.386414,808.108215 833.105103,805.663147  C834.616699,803.512756 835.792725,800.763184 833.428650,797.990173  C832.958618,797.438843 833.716675,795.840576 833.955444,794.363770  C835.425354,795.198303 840.675903,791.213196 838.537781,797.345154  C838.459778,797.568848 839.742859,798.519531 839.771118,798.492126  C844.792358,793.617432 846.484680,800.523071 849.933838,801.661194  C851.025818,803.078857 852.497559,803.765930 852.972534,805.676392  z\"})),_path833||(_path833=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M792.337952,765.926880  C791.555054,765.999756 791.110046,765.999573 790.331299,765.998413  C789.805115,764.881470 789.994568,763.139221 789.358154,762.751099  C785.262207,760.253052 787.365417,757.471130 788.849609,754.331421  C789.290955,753.295349 790.513428,753.414978 790.387695,752.399292  C790.382080,752.353943 789.828735,752.358765 789.266235,752.157043  C787.935364,751.852051 785.995789,752.099426 786.519165,750.536011  C788.078064,745.878723 788.382507,741.008484 789.739746,736.139465  C791.957336,735.778870 793.128906,734.865906 792.791565,732.742493  C792.304199,729.674927 794.439636,729.627563 796.127563,730.363647  C797.922913,731.146423 799.207458,733.196533 801.507324,731.311340  C801.912842,730.978821 802.794312,731.689453 802.725952,732.444885  C802.671692,733.043762 802.398804,733.734985 801.991760,734.167786  C800.973206,735.250854 799.530884,734.917175 798.236450,735.037170  C796.889587,735.162170 795.885071,735.723267 796.341309,737.215149  C796.683655,738.334656 796.929932,740.204773 798.907593,739.000488  C799.948547,738.366699 800.755249,738.270264 801.402466,739.331299  C801.929321,740.195129 801.322571,740.834106 800.780090,741.500549  C798.466736,744.342102 798.482422,744.354858 801.461182,746.869751  C796.186523,751.685608 791.643494,756.814941 793.555237,764.818726  C793.617432,765.078918 792.984741,765.505066 792.337952,765.926880  z\"})),_path834||(_path834=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M863.384216,868.912109  C861.619446,869.015320 860.355469,869.135986 859.997620,870.895203  C859.453369,873.570984 857.633850,873.126526 855.236389,872.421265  C857.992920,869.721191 860.540222,867.069519 856.332886,863.734802  C855.460388,863.043274 856.508423,861.671021 857.283386,860.703857  C859.105103,858.430176 859.815247,855.714661 859.999268,852.835693  C860.323181,847.768860 861.383423,847.027100 867.338074,847.683167  C867.268738,850.120972 864.258362,849.233582 863.585266,850.953003  C869.125488,854.837402 869.259155,855.764709 865.051331,861.641479  C864.539978,864.263062 866.086060,866.892273 863.384216,868.912109  z\"})),_path835||(_path835=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M843.162964,815.233032  C845.606812,811.303711 848.834045,811.157776 851.713989,814.237183  C854.395508,817.104248 852.324219,820.186035 850.534241,822.572449  C847.141602,827.095642 847.090210,827.480164 852.639404,829.955566  C853.698120,830.210632 854.090637,830.698425 854.128601,831.694458  C852.292053,832.916443 850.963013,834.820068 848.307617,834.026123  C847.019958,833.705811 846.699402,832.166809 845.169556,832.795166  C841.825562,833.371094 840.194397,831.925171 840.007202,828.386292  C839.998230,827.837830 839.998962,827.670715 839.999817,827.253052  C841.549255,824.346191 842.648499,821.370300 845.399048,819.576782  C846.370667,818.943115 845.918579,818.199646 845.212158,817.248657  C844.441956,816.487854 843.883972,815.978149 843.162964,815.233032  z\"})),_path836||(_path836=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M802.810791,837.250183  C803.316589,836.529053 803.630737,836.058167 803.972473,835.293640  C810.769531,837.072571 812.593567,839.856140 810.058228,844.668823  C808.874329,845.237244 807.760559,845.548706 806.625549,845.693481  C805.119202,845.885803 803.701233,848.862366 802.539551,846.868652  C801.463013,845.020874 800.932922,842.047729 803.365540,840.141541  C804.275146,839.428772 805.088745,839.010132 803.315979,838.061401  C802.875244,837.833435 802.747192,837.666931 802.810791,837.250183  z\"})),_path837||(_path837=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M844.760742,817.252197  C846.353027,817.217163 848.351318,816.369690 848.691895,818.437866  C849.003540,820.330505 847.260315,820.575317 845.807556,821.100525  C843.200500,822.043091 843.192810,825.589966 840.305298,826.841431  C840.802734,823.501831 838.565430,818.553589 844.760742,817.252197  z\"})),_path838||(_path838=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M806.306274,736.962402  C802.615723,735.796448 805.562561,734.773865 806.164246,734.002258  C806.970825,732.967957 808.054260,733.423401 808.523560,734.472168  C809.321594,736.255615 808.247681,736.867188 806.306274,736.962402  z\"})),_path839||(_path839=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M870.836304,825.700684  C865.861694,825.566406 865.431396,825.005310 867.637329,821.083923  C867.531982,823.295715 869.533569,824.084900 870.836304,825.700684  z\"})),_path840||(_path840=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M795.273804,786.856934  C794.661377,786.186523 794.222473,785.380859 794.902100,784.247681  C797.398071,784.457642 796.972168,785.484985 795.273804,786.856934  z\"})),_path841||(_path841=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M868.330688,872.995544  C868.001770,872.834961 868.001160,872.667480 868.000122,872.248779  C868.670837,871.268494 869.707214,870.565369 870.242615,871.630920  C870.939331,873.017212 869.437134,872.787659 868.330688,872.995544  z\"})),_path842||(_path842=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M863.999817,813.666687  C863.364502,813.897827 862.602600,813.839844 862.558716,813.043823  C862.542114,812.743225 863.117493,812.410034 863.710327,812.045898  C863.998230,812.444458 863.998962,812.888916 863.999817,813.666687  z\"})),_path843||(_path843=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M866.210938,841.846924  C865.350769,841.560486 865.032471,841.039429 865.793396,840.151001  C866.651733,840.437988 866.969116,840.959534 866.210938,841.846924  z\"})),_path844||(_path844=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M630.703735,631.290771  C635.204712,631.591675 637.839355,627.498657 642.044739,627.378235  C643.790405,627.328308 642.070496,625.029968 641.495117,623.774658  C640.886475,622.446777 639.081299,620.980408 641.914001,619.866699  C644.058350,619.023743 645.852173,618.766296 646.633728,621.452881  C647.313232,623.788635 648.478455,625.798035 651.130981,624.701599  C654.839417,623.168823 656.230652,625.036072 657.516907,627.948792  C658.550354,630.289062 659.336426,633.459778 662.748962,629.577209  C664.448975,627.642944 667.109253,630.066040 669.444153,629.403931  C673.601379,628.225098 676.516663,633.998230 681.081665,631.783875  C681.346252,631.655518 682.560791,632.726013 682.795715,633.420471  C684.213318,637.611450 685.888062,640.854553 690.968689,637.204834  C691.571777,636.771484 692.501343,637.535889 693.048828,638.227478  C696.038879,642.003967 700.311646,643.244385 704.761047,644.121826  C709.710876,645.097839 711.895874,650.111328 716.248291,651.994263  C717.056519,652.343872 717.546387,654.117615 718.526733,653.444946  C722.459717,650.746399 724.933716,652.349243 727.025696,655.844971  C727.246094,656.213257 727.853455,656.380127 728.310364,656.571228  C730.011353,657.282898 741.905762,654.120789 742.552124,652.443481  C743.515747,649.942871 745.254639,649.786194 747.327393,650.091431  C749.241943,650.373352 750.632385,651.160034 751.094177,653.401123  C752.029663,657.941040 757.106201,659.360413 758.956543,663.652588  C757.863770,663.901489 756.681824,663.970337 755.595459,663.680725  C753.279846,663.063416 751.852234,663.442749 752.618164,666.187317  C753.246948,668.440552 751.933899,669.290833 750.263245,669.693604  C748.073242,670.221497 748.587402,668.677246 748.534546,667.311584  C748.471130,665.671997 746.863586,666.201416 745.838867,665.933594  C743.670532,665.366943 742.950195,663.479980 742.042786,661.369141  C742.215637,660.769775 742.458923,660.553711 742.722412,660.361572  C742.985779,660.169495 742.897400,660.232849 742.223755,660.779358  C739.163208,661.341675 736.098633,660.044617 733.695007,663.030884  C732.479980,664.540466 730.713562,663.225952 730.262756,661.755188  C729.439453,659.068970 728.866943,658.354614 726.424072,660.682007  C723.967957,663.021973 721.502686,661.792786 721.481995,658.258179  C721.465271,655.399292 720.610718,655.262512 719.227478,657.257874  C718.080505,658.912415 716.905579,658.981567 716.262817,657.576782  C713.845581,652.293884 709.095337,650.448914 704.083008,648.370239  C703.959900,647.644043 703.808838,647.339905 703.260803,647.053467  C698.644409,648.574585 694.964661,647.041809 691.490295,644.515625  C690.840759,644.043335 689.889221,643.117004 689.495544,643.300049  C686.360229,644.758118 684.620972,642.691162 682.294739,641.172974  C676.314087,637.269470 672.468323,638.356689 668.489258,644.305542  C667.516907,645.759399 666.263916,647.025635 664.662354,648.952698  C664.925232,645.539734 664.672302,642.839050 660.579224,644.837463  C659.700439,645.266541 658.607239,644.846924 658.079773,643.344666  C657.573486,642.491211 657.054199,642.332825 656.218262,642.778076  C654.399536,642.995117 653.005676,643.215881 653.076416,645.357178  C653.182434,648.569214 656.219238,646.639404 658.388611,647.908020  C654.748596,649.302063 652.127075,651.041687 649.031616,648.725952  C647.604736,647.658386 645.703918,647.599731 644.262085,648.116760  C638.814148,650.070435 634.853882,648.942749 632.294250,643.171997  C631.328796,642.482849 630.968201,641.784790 630.684875,640.609253  C630.528442,638.909363 630.549011,637.583374 629.917297,635.952026  C629.606323,634.172485 629.665771,632.826111 630.703735,631.290771  z\"})),_path845||(_path845=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M629.231812,683.757690  C629.170898,685.164124 629.139587,686.189514 629.105042,687.599915  C630.236877,693.849060 626.697266,699.018250 626.669495,704.878296  C626.650635,708.870300 626.481873,713.069153 625.953613,717.567383  C625.912048,718.418396 625.891846,718.844727 625.833740,719.588867  C621.827637,723.463562 622.879822,729.255066 619.695557,733.543213  C619.373596,734.028503 619.219238,734.206055 618.760925,734.565674  C615.643372,734.456604 612.095581,738.306763 610.147644,732.925781  C610.286804,732.143799 610.455872,731.729126 610.887390,731.084229  C611.598633,730.184753 612.342224,729.744995 612.869263,728.714050  C613.135132,728.279907 613.248840,728.110352 613.558289,727.704590  C614.654846,726.653442 615.637756,725.910400 616.291748,724.466553  C617.532654,722.284241 618.619812,720.380310 619.721924,718.110657  C619.365723,711.477905 620.644958,705.328064 621.449158,699.134521  C621.599487,697.976746 621.377747,696.856201 620.533630,695.531738  C620.264038,694.699341 620.231018,694.202942 620.390808,693.335815  C624.179138,690.464294 623.948303,685.377319 627.672119,682.597534  C628.573486,682.647156 628.977600,682.924011 629.231812,683.757690  z\"})),_path846||(_path846=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M683.913330,679.680603  C684.004761,680.498962 683.851318,681.068542 684.037720,681.486511  C687.399414,689.025085 686.068970,694.691467 678.275513,698.791077  C676.473206,699.739258 676.017090,703.333313 675.059143,705.756287  C674.692383,706.683960 674.665161,707.902832 673.244568,707.319336  C672.370056,706.960266 672.540771,706.153992 672.692078,705.230347  C673.134949,702.526184 674.914978,699.573486 671.535645,697.325012  C670.802368,696.837158 671.071411,695.289307 671.691406,695.144348  C676.175232,694.096008 676.694763,688.880676 680.554565,687.100952  C678.695190,684.163879 674.652527,682.114624 676.951416,677.359863  C676.996704,676.553650 676.998230,676.109802 677.001099,675.332947  C677.503601,674.426575 678.149963,674.187988 679.243896,674.237427  C679.803528,674.392395 680.015198,674.488831 680.495239,674.802246  C681.861023,676.412659 682.923889,677.830444 683.913330,679.680603  z\"})),_path847||(_path847=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M684.214111,679.783508  C681.872925,679.829224 681.506775,677.753235 680.154053,676.289185  C680.384705,675.878052 680.508972,675.632568 680.188782,675.129333  C679.250549,675.000000 678.501160,675.000000 677.377075,675.000000  C676.342041,674.091125 675.309387,674.122681 674.354065,673.886292  C673.086426,673.572571 671.500916,673.285095 671.317810,671.761536  C671.079102,669.775330 672.962036,669.628235 674.642700,669.044678  C676.035339,668.213989 677.151917,669.310730 678.503052,668.738464  C678.083313,667.218445 676.699646,667.419006 675.328857,667.059448  C671.724854,665.878296 672.464233,662.741089 673.429749,661.322205  C674.802551,659.305054 677.559326,660.700562 678.987793,661.943787  C680.612671,663.358032 682.076111,664.250488 684.595764,663.999756  C686.916687,665.557800 688.637939,666.496460 689.448364,662.976807  C689.818665,661.368530 690.986206,660.977417 692.746887,661.775879  C693.744446,662.819580 694.269897,663.744141 694.385010,665.271851  C694.422791,668.172974 693.697815,670.382202 691.648376,672.481079  C690.692871,673.478027 690.049866,673.297852 689.222290,672.316650  C685.871277,672.778137 687.393372,675.350525 687.000000,677.591980  C686.350830,678.863892 685.228271,678.950806 684.214111,679.783508  z\"})),_path848||(_path848=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M693.235413,666.234619  C693.000000,664.935120 693.000000,663.867737 693.000000,662.400208  C696.130371,661.955872 699.820557,660.077393 701.272034,665.062622  C701.657166,666.385315 703.270752,665.173035 704.661255,665.038330  C705.001648,666.388916 705.000854,667.777771 705.000000,669.583374  C702.694031,669.858337 700.709229,670.116211 701.004333,673.605774  C699.805298,673.495605 698.608215,672.991211 697.203125,672.240967  C695.240540,670.522034 695.126465,668.003052 693.235413,666.234619  z\"})),_path849||(_path849=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M665.744019,684.243286  C667.040833,685.164307 668.226196,685.987061 669.892151,685.548401  C672.086914,684.970581 672.376465,686.659851 672.715698,688.058167  C672.828674,688.523865 672.246887,689.158203 671.982727,689.715454  C668.081543,687.809387 670.305054,696.392700 665.539368,693.430786  C664.097839,692.534912 661.992249,692.743896 660.318115,691.171692  C658.878540,690.906738 657.272339,691.442749 656.782959,690.392151  C656.007935,688.728516 658.844482,689.138306 658.937561,687.330078  C663.394226,690.403259 663.782593,690.252747 665.744019,684.243286  z\"})),_path850||(_path850=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M626.203247,717.752930  C623.490112,710.948242 625.543823,703.958252 626.742004,697.119690  C627.235046,694.305176 627.604004,691.314087 628.804199,688.249695  C630.121277,688.918579 631.018921,690.150452 630.556274,691.439209  C628.851013,696.189331 628.608582,701.140198 627.818665,706.033936  C627.200806,709.861755 628.564758,713.921814 626.203247,717.752930  z\"})),_path851||(_path851=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M619.112915,734.310669  C621.038025,729.327087 619.066895,722.949829 625.453247,719.983154  C627.547119,722.021057 625.524536,724.030273 624.757385,725.142212  C622.212036,728.831604 625.192078,733.670959 621.496826,737.054932  C619.940796,736.763977 619.620544,735.650879 619.112915,734.310669  z\"})),_path852||(_path852=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M692.990479,661.614563  C691.445374,662.054993 689.808594,662.093262 690.303467,664.379333  C690.609253,665.792053 691.629700,667.547729 689.259583,667.817383  C687.207153,668.050964 685.295471,667.346924 685.012573,664.377075  C686.151794,662.969788 688.794434,663.559570 688.671631,661.361755  C688.552002,659.219421 685.795471,659.533569 684.527222,658.251099  C689.255981,655.918030 691.106140,656.589172 692.990479,661.614563  z\"})),_path853||(_path853=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M631.650757,639.759521  C631.981323,640.771667 631.981812,641.514709 631.981567,642.629272  C630.055542,646.851685 631.023987,650.193115 633.863037,653.132568  C634.712952,654.012512 634.505371,654.467712 633.222351,654.951050  C631.663086,656.269470 630.184326,656.794556 628.071045,656.218628  C626.109009,653.881775 627.778137,651.643555 627.525574,649.454224  C627.307739,647.565918 627.880615,645.561096 626.435913,643.476807  C626.023499,642.291077 626.018616,641.473267 626.438721,640.274902  C627.036926,639.482910 627.512817,639.180481 628.478882,638.902710  C629.784485,638.760742 630.598511,638.960205 631.650757,639.759521  z\"})),_path854||(_path854=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M627.704590,656.222900  C629.332336,655.372681 630.658508,654.775208 632.546875,655.003052  C632.945984,655.449036 632.983154,655.892639 633.028320,656.669861  C633.018250,657.445679 633.000122,657.887878 632.965698,658.661499  C632.929932,659.415283 632.910400,659.837585 632.860596,660.575500  C632.462402,661.470093 631.905334,661.744446 630.942261,661.905945  C629.388611,661.879272 628.254333,662.924805 626.716858,662.059326  C626.114136,661.198486 625.994141,660.516602 626.044128,659.439392  C626.320007,658.094116 626.728577,657.199463 627.704590,656.222900  z\"})),_path855||(_path855=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M619.029297,733.989014  C620.542603,734.129639 621.001770,735.116882 621.109985,736.799561  C621.165161,737.554199 621.164551,737.945374 621.204590,738.627686  C619.348572,740.200867 618.718445,743.201050 615.358276,742.991455  C613.378540,740.802795 613.865234,738.776672 616.192688,737.851685  C617.944824,737.155396 618.081970,735.918518 618.742065,734.308472  C618.958801,734.007324 619.005737,733.994873 619.029297,733.989014  z\"})),_path856||(_path856=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M674.998169,667.334229  C675.738586,666.036377 676.773560,665.204834 677.911194,665.491272  C679.366821,665.857788 680.567200,667.022461 680.721802,668.565002  C680.806152,669.406067 680.279663,670.720276 679.602905,671.148743  C677.557678,672.443665 676.996826,669.824646 675.293579,669.151733  C674.999634,668.555786 674.999207,668.111572 674.998169,667.334229  z\"})),_path857||(_path857=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M629.540039,684.005371  C628.950745,683.853760 628.699341,683.568787 628.197876,683.149109  C626.728455,682.212769 626.205994,681.080139 626.455933,679.262817  C628.796387,677.693726 628.102661,673.943176 631.564636,673.736206  C632.193054,677.439941 632.022583,680.855347 629.540039,684.005371  z\"})),_path858||(_path858=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M631.906921,673.608765  C628.690735,674.169067 631.316650,678.964233 627.527344,679.066162  C624.332581,675.427063 625.992493,673.086731 629.933105,671.260681  C630.669922,671.302917 630.959229,671.376892 631.599121,671.729614  C631.942444,672.435486 631.935181,672.862488 631.906921,673.608765  z\"})),_path859||(_path859=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M665.706238,679.048157  C667.183533,679.239075 669.026794,678.348511 669.382446,680.000977  C669.743225,681.676758 668.117065,682.406982 666.346069,682.955139  C666.844055,681.542297 662.885010,680.809326 665.706238,679.048157  z\"})),_path860||(_path860=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M789.000000,752.332520  C789.144653,751.924011 789.288330,751.846130 789.434082,751.772339  C790.663269,751.150391 791.614807,749.468445 793.284668,750.557617  C793.683655,750.817749 793.920471,751.757202 793.808228,752.295959  C793.313965,754.669312 791.302002,753.762817 789.412292,753.995728  C789.003296,753.551758 789.001648,753.108459 789.000000,752.332520  z\"})),_path861||(_path861=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M629.864380,661.388794  C630.816711,661.035767 631.490845,660.989868 632.497620,660.917603  C632.993713,663.069946 633.322144,665.253662 632.386597,667.711548  C631.889893,668.139160 631.642029,668.262207 631.021729,668.198853  C629.251404,666.082520 628.894409,663.977478 629.864380,661.388794  z\"})),_path862||(_path862=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M658.998779,687.001221  C657.770508,686.587769 656.223145,688.854614 655.279297,686.651672  C654.909729,685.789307 655.765259,685.219482 656.499634,684.817261  C658.168274,683.903442 658.903931,684.557190 658.994141,686.650024  C659.002441,686.997559 659.000000,687.000000 658.998779,687.001221  z\"})),_path863||(_path863=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M708.995239,664.674622  C708.250671,665.000000 707.498840,665.000000 706.371094,665.000000  C706.548828,664.096436 706.705200,662.701172 707.956787,662.580566  C709.033447,662.476746 708.852722,663.620789 708.995239,664.674622  z\"})),_path864||(_path864=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M656.339966,642.991638  C656.106323,642.353821 656.165466,641.596191 656.960388,641.556152  C657.260803,641.541077 657.590881,642.114929 657.953735,642.706482  C657.557312,642.993469 657.114563,642.994263 656.339966,642.991638  z\"})),_path865||(_path865=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M703.116150,647.212524  C703.359680,646.505676 703.817871,646.086975 704.382996,646.572021  C704.569946,646.732483 704.403687,647.304321 704.196045,647.848877  C703.685730,647.884827 703.432129,647.689941 703.116150,647.212524  z\"})),_path866||(_path866=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M633.173035,658.854553  C632.286560,658.536865 632.043152,657.993408 632.815125,657.144043  C633.702515,657.459534 633.953247,658.002869 633.173035,658.854553  z\"})),_path867||(_path867=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M632.173767,671.872681  C631.765686,672.007446 631.581543,672.006470 631.121216,672.000977  C630.551025,671.560669 630.434509,671.081604 630.661987,670.218018  C631.061340,669.777344 631.294128,669.677917 631.849121,669.779419  C632.781921,670.496948 632.978149,671.066895 632.173767,671.872681  z\"})),_path868||(_path868=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M632.149658,669.653442  C631.978821,669.986694 631.786438,669.992920 631.305237,670.000793  C629.224304,670.018188 629.482483,669.122192 630.537415,668.030151  C631.129639,668.012634 631.330811,668.010681 631.834900,668.012451  C632.134521,668.452881 632.131287,668.889709 632.149658,669.653442  z\"})),_path869||(_path869=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M643.928955,983.654785  C641.909363,983.991211 640.029419,983.461548 637.837891,981.658325  C640.704895,981.077271 642.476379,981.507446 643.928955,983.654785  z\"})),_path870||(_path870=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M704.304626,976.820679  C704.542419,975.304016 705.241150,974.844177 706.312073,975.607910  C706.595459,975.809937 706.784973,976.546692 706.641541,976.872314  C706.095459,978.111755 705.248718,977.959473 704.304626,976.820679  z\"})),_path871||(_path871=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M676.574158,974.354370  C676.366882,973.614502 676.626099,973.346924 677.200073,973.461365  C677.319336,973.485107 677.479675,973.654358 677.497620,973.774902  C677.583740,974.354797 677.301880,974.597961 676.574158,974.354370  z\"})),_path872||(_path872=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M574.869751,855.570435  C574.829834,855.931152 574.774597,856.292236 574.773193,856.474854  C574.592224,857.469849 573.951904,857.966980 573.271545,858.790771  C572.694336,859.720642 572.309875,860.428406 571.880859,861.436279  C569.979675,863.869873 570.191650,867.169800 567.452576,869.138916  C566.755310,869.876526 565.131714,868.979553 565.789673,870.801025  C565.046082,873.773621 564.116272,876.538513 563.142334,879.671509  C559.690247,876.932617 557.724182,872.988342 556.359680,868.657043  C555.696594,866.552185 557.113708,865.708801 558.354004,864.574158  C559.156006,863.840637 560.234558,862.739441 559.248962,861.607666  C558.268921,860.482361 557.079773,861.497192 556.108887,862.023254  C555.401489,862.406494 554.748413,862.978394 554.224731,863.596497  C552.264954,865.909485 550.089539,864.803345 549.447815,862.978821  C547.877502,858.514343 545.098145,859.925476 542.290894,860.891418  C540.749634,861.421875 539.115906,862.739197 537.785767,860.963074  C536.077026,858.681641 538.035645,858.261597 539.723022,857.777893  C540.365906,857.593750 540.170471,856.993347 539.951782,856.544006  C539.505737,855.627686 538.912537,854.654785 540.417236,854.197449  C541.466736,853.878418 542.296326,854.320374 543.029846,855.162598  C544.155457,856.455261 545.138000,858.827576 547.284302,857.366455  C549.469299,855.879028 546.271057,854.246704 546.912903,852.238770  C547.973267,851.306030 549.054504,851.531921 550.419739,851.529663  C550.945496,851.516174 551.155945,851.500549 551.675903,851.410217  C553.200745,850.851562 554.369568,850.175354 556.076416,850.545898  C556.941895,851.062988 557.397156,851.553345 557.620422,852.187561  C558.257812,853.997925 557.862610,857.174377 561.387817,855.252625  C563.809021,853.932678 566.945618,852.691833 563.682190,849.098511  C562.883057,848.218689 562.791931,846.989746 563.012817,845.494690  C563.217529,844.916260 563.386536,844.672119 563.597412,844.460449  C563.817444,844.239441 563.719849,844.267456 563.010620,844.631836  C561.776978,844.757324 561.046570,844.390625 560.431580,843.245483  C560.464600,839.039917 561.656494,835.518921 563.864075,832.339539  C567.417114,827.222473 568.161682,820.546448 573.190979,815.840942  C574.185730,815.204956 574.932983,815.053711 576.094971,815.186768  C576.681885,815.392151 576.898560,815.512634 577.344910,815.917603  C578.489746,818.348572 577.510376,820.365601 577.155823,822.427490  C576.715576,824.987000 576.038330,827.591431 578.643799,829.824219  C581.140625,830.770569 583.513000,829.356018 585.910522,830.747192  C584.754150,834.768921 584.297058,839.061218 580.183655,841.711670  C579.894104,842.116028 579.792175,842.268250 579.652344,842.322021  C573.810364,844.565369 573.809937,844.564270 575.940430,850.647461  C575.597046,852.397278 575.253357,853.803467 574.869751,855.570435  z\"})),_path873||(_path873=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M511.427277,964.726318  C510.933929,965.134827 510.601624,965.310364 510.106567,965.720947  C506.421234,964.612366 503.771637,961.463013 499.029327,962.713135  C495.754578,963.576416 498.388885,959.752930 497.120972,958.186279  C496.593048,957.597595 496.360840,957.202454 496.078857,956.450317  C496.115936,953.514282 491.106689,951.018066 495.829559,948.321350  C495.453308,947.960693 494.923157,947.976685 494.201050,947.587402  C493.635345,947.057556 493.436737,946.670227 493.340393,945.910278  C493.463989,944.758179 493.996582,944.089478 494.255737,943.006958  C494.165039,941.866821 494.142700,941.029785 494.346497,939.869446  C495.365265,937.401428 495.998840,935.140564 496.565582,932.891113  C497.532867,929.052124 499.412811,927.355469 503.652832,929.157471  C506.633026,928.471436 506.029449,926.314026 505.957916,924.621033  C505.767029,920.103271 507.014374,915.763977 507.466949,911.329712  C507.565125,910.367737 507.595734,908.738953 509.058716,908.522705  C510.384552,908.326721 511.392578,909.474548 511.576080,910.518311  C512.225586,914.213074 516.100769,911.248962 517.538452,913.611755  C518.224731,914.739807 520.664062,915.408997 519.562988,916.947327  C518.316101,918.689331 517.585266,916.432434 516.677612,915.737854  C515.811035,915.074951 514.151733,914.990112 514.556213,916.156738  C515.902710,920.040710 512.631836,920.852783 510.724792,922.029724  C507.809937,923.828613 506.967163,926.331055 508.830261,928.526184  C510.869110,930.928467 506.099976,933.315247 509.467346,935.096252  C510.911316,934.348450 510.700623,932.533569 511.583740,931.411011  C514.094604,933.156799 516.466919,934.729919 513.430664,937.881775  C513.041687,938.285583 513.086365,939.823669 513.492798,940.163635  C516.721680,942.864319 516.570435,944.814941 512.662842,946.690857  C511.624084,947.189575 512.282166,948.558655 513.456177,948.828552  C514.929688,949.167114 516.362976,949.504028 517.789001,950.758911  C514.803162,953.928284 514.364746,958.285461 512.438477,962.172119  C512.243042,963.205933 511.915680,963.849609 511.427277,964.726318  z\"})),_path874||(_path874=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M501.658691,914.754150  C501.577118,918.224792 502.267303,921.797668 499.170532,924.656616  C497.917511,928.424866 496.558868,931.763184 494.194183,934.594849  C493.222473,935.758484 492.131165,936.921875 490.454590,936.402954  C488.859711,935.909302 488.313812,934.443542 488.088348,932.924561  C487.822906,931.136597 487.717255,929.323975 487.136658,927.204468  C487.412079,915.709106 486.439026,904.676270 484.697021,893.342651  C484.718719,890.076599 482.012451,889.606995 480.146210,887.942993  C479.728729,887.534607 479.577118,887.355652 479.248688,886.872803  C477.809174,883.461853 477.787048,880.445190 479.649200,877.525940  C481.089447,875.268250 481.115906,873.236755 478.782959,871.426758  C477.486908,870.421082 476.777344,868.886047 478.211578,867.586060  C480.862457,865.183228 480.009125,862.536865 479.079773,859.461914  C478.921692,858.645325 478.887512,858.170776 478.906525,857.336304  C478.502014,850.956543 474.304504,846.984619 470.639435,843.014954  C468.523438,840.722961 468.232635,839.280579 469.442902,836.642090  C472.295380,830.423157 473.374725,824.101135 469.020874,817.983643  C467.798248,816.265625 467.501770,814.338623 467.774475,812.317383  C467.995209,810.681580 468.463989,809.052673 467.160400,807.221069  C466.526215,805.405212 466.307892,803.869812 465.863617,801.971558  C465.566376,800.184937 465.610687,798.820496 466.437988,797.170654  C470.170654,795.151550 471.802948,797.145508 472.250000,800.125610  C474.206146,813.165283 478.681915,825.721985 478.832886,839.159363  C478.900208,845.151917 482.638916,850.657715 485.178528,856.615723  C485.530273,857.159973 485.656006,857.383606 485.917603,857.960693  C486.585144,859.882263 486.096130,861.701538 487.399963,863.435425  C487.720825,864.197998 487.829742,864.656311 487.893707,865.478149  C487.448944,867.453613 487.948334,869.001404 488.343689,870.911743  C488.646332,872.927917 488.924988,874.590393 489.054016,876.636719  C488.632782,879.813599 488.835205,882.590271 489.425842,885.367798  C491.079407,893.143799 491.273560,901.114014 492.514496,908.946655  C493.064209,912.416504 494.608459,915.494263 495.792816,918.696228  C498.609100,918.124451 498.443420,914.355347 501.658691,914.754150  z\"})),_path875||(_path875=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M550.390503,844.000977  C549.899719,842.606262 549.325439,841.458679 548.020935,840.136902  C545.461914,844.943970 542.710510,849.366333 537.338257,851.149536  C535.902466,851.626221 534.271484,852.932800 534.598389,849.944824  C534.759827,848.469666 535.680115,846.427063 534.311157,845.789124  C531.992432,844.708679 532.469727,847.971375 531.098328,848.647949  C530.669128,848.859680 530.136292,848.861267 529.279785,848.959412  C528.427612,848.482178 527.923706,847.890869 528.036011,847.247314  C529.086060,841.229309 530.775757,835.477417 535.611938,830.851196  C536.481262,830.668640 536.979492,830.630432 537.832764,830.638794  C539.671753,831.505676 540.105713,830.299866 540.995117,829.238342  C541.759216,829.002319 542.216003,828.973145 543.019287,829.075317  C545.753967,830.071411 546.127136,832.213135 546.579285,834.536072  C546.784851,831.966858 547.343811,829.874023 549.357178,828.094971  C551.300842,826.377747 553.073792,824.172729 553.578857,821.489624  C554.344971,817.420959 557.522583,815.994751 560.685181,814.522034  C562.127930,813.850098 563.618347,813.974426 564.812317,815.208435  C566.042664,816.479919 565.798950,817.913086 565.190918,819.368103  C564.304443,821.489319 562.272949,823.028320 562.063843,825.847656  C562.000671,826.659607 561.907532,827.114319 561.626953,827.876465  C558.132324,831.670898 556.069397,835.692566 556.345337,840.995483  C556.786682,843.435059 556.395264,844.920410 553.448181,844.297546  C552.349121,844.061096 551.568726,844.034119 550.390503,844.000977  z\"})),_path876||(_path876=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DBA58B\",opacity:1,stroke:\"none\",d:\" M537.061951,831.732300  C536.012451,832.166199 534.683289,832.288879 534.602905,832.672974  C533.461914,838.123230 529.517151,842.541443 528.925537,848.567810  C528.908630,848.959778 528.856567,849.373840 528.860291,849.582458  C528.199585,850.817871 527.797119,852.063293 526.296631,852.790894  C522.480896,857.910217 521.216370,863.604309 520.261597,869.789062  C519.109253,870.668091 519.054321,871.758911 518.331604,872.784363  C518.141785,873.474426 518.122803,873.926636 518.118896,874.718262  C518.030212,875.628052 517.808533,876.144165 517.229980,876.791321  C517.030823,876.994934 516.978882,877.483276 516.976318,877.728760  C514.931641,880.435486 515.020386,883.767883 513.285278,886.724365  C513.040649,887.172424 513.020508,887.342590 512.992310,887.769775  C512.828796,888.175293 512.673279,888.323853 512.326538,888.732300  C511.063751,889.457703 510.294464,890.170349 510.154297,891.734253  C509.683441,893.864746 508.952728,895.483154 506.819824,896.499146  C502.856262,895.615784 503.899048,893.341309 505.001068,891.177979  C511.191528,879.026184 515.098511,866.011169 519.775879,853.268738  C522.667786,845.390564 526.061768,837.586670 529.689453,829.989807  C532.277527,824.570007 534.661743,819.136292 536.723877,813.107605  C539.231384,809.047546 541.576965,805.398010 542.767944,801.045959  C543.408508,798.705322 544.156738,795.830139 547.854065,795.664856  C549.191528,796.923767 549.401550,798.300415 548.888428,799.540710  C545.871704,806.832336 545.610413,815.096985 540.979126,821.822510  C540.240295,822.895386 540.162231,824.323303 539.430359,825.847656  C539.222412,826.686462 539.073792,827.153442 538.776917,827.948364  C538.593018,828.514160 538.534119,828.744629 538.412659,829.327148  C538.197754,830.393982 537.895996,831.029602 537.061951,831.732300  z\"})),_path877||(_path877=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M553.089355,844.433350  C554.696289,844.001404 556.321533,843.965393 555.162964,841.314819  C556.515015,836.700500 557.928040,832.365051 560.779785,828.288208  C561.053162,827.583923 561.074646,827.142029 561.107056,826.368530  C563.410278,823.163147 565.215942,820.063782 566.073792,816.423889  C566.820251,813.256531 568.869263,811.228210 572.452209,810.499451  C574.852539,811.643677 575.461609,813.221863 574.290344,815.686462  C569.390869,824.610596 564.575500,833.120300 561.167480,842.721313  C559.854736,845.845642 561.235535,850.039917 556.290161,850.924683  C554.821838,851.568848 553.730713,852.230652 552.317383,852.946228  C551.637939,852.709839 551.253601,852.461731 550.651001,851.965332  C550.085327,850.418091 550.528564,849.411621 551.658875,848.290283  C552.278381,846.950134 552.663757,845.864380 553.089355,844.433350  z\"})),_path878||(_path878=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M501.970032,914.570801  C499.102325,915.626587 499.885712,918.900269 498.092590,920.363464  C496.625916,921.560364 495.069397,923.168518 494.066162,920.142517  C489.467682,906.272461 488.809998,891.779846 487.709229,877.181641  C491.611938,877.483582 489.593689,881.166626 491.387756,883.146179  C493.205078,890.629456 495.940826,897.588867 495.483093,905.164124  C495.363037,907.151184 496.196930,909.014893 498.057556,910.247009  C499.942627,909.525757 500.228058,906.776978 502.899231,906.870972  C503.458862,907.452942 503.529724,907.918335 503.275024,908.718262  C502.715881,910.749817 502.347778,912.469971 501.970032,914.570801  z\"})),_path879||(_path879=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M487.619141,926.872009  C489.241272,928.186218 489.794647,929.830505 489.570312,931.417236  C489.344177,933.016235 489.142883,934.761536 490.632111,935.314270  C492.897247,936.154846 492.681610,933.283569 493.868134,932.472717  C496.518066,930.661743 495.307220,926.634338 498.656708,925.039307  C500.267975,926.439636 501.396515,928.077515 503.669983,928.876587  C503.944733,929.181335 503.909973,929.485657 503.905273,929.485229  C497.214722,928.824707 497.740173,934.097229 496.714020,938.140564  C496.570038,938.707947 495.957062,939.156189 495.234894,939.827942  C493.940918,940.527832 493.390778,941.334290 493.222076,942.750977  C493.079987,943.263916 493.013947,943.468018 492.820740,943.970337  C491.827240,945.774780 490.815857,947.203369 490.080261,949.171387  C489.784851,949.668640 489.644135,949.856750 489.218506,950.260742  C488.474365,950.651367 487.998260,950.722168 487.143707,950.625610  C485.345032,949.867981 484.356293,948.759277 483.574493,946.986145  C483.068085,941.209839 484.268097,935.929626 484.756989,930.593079  C484.912567,928.895386 485.374115,927.369568 487.619141,926.872009  z\"})),_path880||(_path880=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M503.456940,909.009338  C503.065155,908.588440 503.046356,908.147217 503.023499,907.374878  C501.779083,904.776184 503.278900,902.735901 503.612122,900.222229  C503.977173,898.235352 504.846863,897.067932 506.698303,896.215698  C507.798187,894.728943 508.161011,893.169434 509.841248,892.183960  C510.255035,892.186279 510.433716,892.293579 510.464233,892.433228  C511.065033,895.183105 506.244110,907.188782 503.456940,909.009338  z\"})),_path881||(_path881=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M513.444580,886.987793  C512.878662,883.586792 513.305542,880.392212 516.627441,878.048096  C516.424683,881.148499 517.473267,884.881042 513.444580,886.987793  z\"})),_path882||(_path882=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M551.528503,848.035767  C551.620544,849.128418 551.348022,850.221008 551.040161,851.653992  C551.139038,852.159424 551.273254,852.324463 551.182312,852.715332  C549.849915,852.707886 548.742676,852.474487 547.322632,852.094360  C546.842468,848.995483 548.791809,848.291138 551.528503,848.035767  z\"})),_path883||(_path883=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M526.432739,852.983887  C526.573242,851.832458 526.992981,850.603271 528.568481,849.901123  C529.062805,851.425720 528.971985,852.872742 526.432739,852.983887  z\"})),_path884||(_path884=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M518.477051,872.947021  C518.031372,871.856750 517.871582,870.679077 519.661621,870.120239  C519.969116,871.176880 520.113281,872.342346 518.477051,872.947021  z\"})),_path885||(_path885=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M517.307007,876.964355  C517.223145,876.446533 517.415405,875.898132 517.870850,875.203613  C519.055054,876.007263 518.692200,876.580017 517.307007,876.964355  z\"})),_path886||(_path886=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M520.007751,947.005493  C519.904175,946.884033 519.792847,946.757080 519.681580,946.630127  C519.756897,946.675659 519.832214,946.721191 519.959351,946.890930  C520.011047,947.015198 520.000000,947.000000 520.007751,947.005493  z\"})),_path887||(_path887=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M517.479309,947.464233  C517.521484,947.441711 517.437134,947.486755 517.479309,947.464233  z\"})),_path888||(_path888=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M512.319702,888.872986  C512.190674,888.683289 512.342041,888.432312 512.786865,888.132935  C512.892273,888.314026 512.732239,888.556458 512.319702,888.872986  z\"})),_path889||(_path889=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M550.001343,844.754150  C549.893066,844.733765 549.791382,844.460205 549.841187,844.090698  C549.992676,843.994812 550.000000,844.000000 550.003662,844.003662  C550.007324,844.007324 550.007996,844.500977 550.001343,844.754150  z\"})),_path890||(_path890=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M550.003662,844.997314  C550.113281,845.122131 550.219177,845.249573 550.325073,845.377075  C550.250122,845.333801 550.175110,845.290466 550.047485,845.127258  C549.994751,845.007324 550.000000,845.000000 550.003662,844.997314  z\"})),_path891||(_path891=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M824.610107,854.010376  C825.155640,855.690979 824.482544,856.877014 822.905579,857.562378  C821.608643,858.126038 820.765930,859.130981 820.395325,860.486694  C818.713806,866.637634 814.523865,868.185608 809.215149,864.508423  C807.944641,863.628418 806.595581,863.234436 805.159241,862.791931  C803.277649,862.212280 800.179260,862.475220 802.425232,858.517029  C804.218384,855.356812 799.760742,856.711182 798.787598,854.660278  C800.934570,854.062988 802.174805,852.453064 803.402588,850.571350  C805.467163,847.407227 807.835083,847.655640 809.348450,850.764771  C812.680847,857.610840 813.377075,857.884949 820.466064,855.250854  C821.699097,854.792786 822.966370,854.426880 824.610107,854.010376  z\"})),_path892||(_path892=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M824.840332,841.173584  C827.655212,842.324402 830.141602,844.366394 831.470276,839.211670  C831.930847,837.424927 833.868713,834.397888 837.548889,835.450256  C836.823975,837.680664 833.705261,837.703247 833.712646,840.551819  C840.248230,839.989380 838.029480,843.882568 837.002197,847.608826  C835.629700,847.828979 833.972778,848.511841 833.077393,846.351440  C833.272461,845.737122 833.519043,845.451904 833.737549,845.142578  C833.129822,844.868469 833.843994,844.996521 833.225830,845.767761  C830.886108,847.727234 827.459229,847.342468 826.051331,850.643921  C824.054260,851.932129 822.593384,851.036499 821.123535,849.365723  C820.610229,846.276306 822.627075,844.653625 823.935913,842.340332  C824.236084,841.791870 824.462952,841.574280 824.840332,841.173584  z\"})),_path893||(_path893=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M844.221069,869.375854  C842.682373,865.526917 840.837158,863.353394 836.765625,866.037048  C836.011536,866.533997 835.068298,866.195129 834.664307,865.359680  C834.299988,864.606201 834.930420,864.239685 835.581909,863.959412  C837.232666,863.249084 838.165955,861.715271 838.675293,860.234924  C839.351318,858.269897 840.838196,857.521240 842.403320,857.508179  C844.860779,857.487549 842.764648,859.548645 843.396667,860.481262  C844.520691,862.139832 845.727844,864.258972 847.655762,864.357910  C849.833191,864.469788 848.684448,862.059570 849.063904,860.791809  C849.594299,859.019836 850.629456,859.169189 851.567993,860.205933  C853.314880,862.135437 854.040527,864.400940 851.465820,866.113342  C849.331665,867.532715 846.854065,868.435608 844.221069,869.375854  z\"})),_path894||(_path894=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M820.759766,849.231323  C822.446655,849.637512 823.885742,850.280823 825.662415,850.962036  C826.815186,851.176636 827.719482,851.323547 827.748108,852.392944  C827.784790,853.764526 826.722290,853.874207 825.356445,853.991455  C825.002441,854.002441 825.000000,854.000000 824.998779,853.998779  C824.819946,852.293152 823.618286,852.047913 822.218201,851.963074  C820.647949,851.867920 819.710022,851.236328 820.759766,849.231323  z\"})),_path895||(_path895=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M825.005493,834.388550  C825.888489,833.755981 827.074524,832.733093 827.582458,833.996033  C828.233154,835.613770 828.713074,837.538818 826.354126,838.915283  C824.609924,837.840576 825.109497,836.235657 825.005493,834.388550  z\"})),_path896||(_path896=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M819.098511,843.715759  C818.124817,842.980774 817.900146,842.195374 818.707336,841.600830  C819.285706,841.174805 819.998718,841.575073 820.322327,842.164795  C820.839172,843.106689 820.402893,843.651733 819.098511,843.715759  z\"})),_path897||(_path897=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M830.246887,855.778198  C830.308350,854.814148 830.650085,854.294250 831.373230,854.696594  C831.633972,854.841614 831.811707,855.562927 831.685486,855.888977  C831.409302,856.602295 830.853333,856.669006 830.246887,855.778198  z\"})),_path898||(_path898=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M846.034058,856.739502  C846.621460,856.599792 847.028381,856.648499 847.435303,856.697205  C847.270447,857.050537 847.184326,857.617981 846.924622,857.713562  C846.348267,857.925476 845.648499,857.948303 846.034058,856.739502  z\"})),_path899||(_path899=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M833.220093,850.887939  C833.172424,850.156006 833.311401,849.645203 833.896790,849.844849  C834.532837,850.061829 834.824463,850.650818 834.404358,851.253723  C834.301880,851.400757 833.679504,851.185486 833.220093,850.887939  z\"})),_path900||(_path900=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M802.728638,837.038757  C803.002441,837.000000 803.002319,837.500000 803.002808,837.750000  C802.602356,838.494324 802.042725,838.993225 801.596802,838.273560  C801.177063,837.596130 801.845032,837.256348 802.728638,837.038757  z\"})),_path901||(_path901=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M858.044373,877.448853  C858.716431,877.817749 858.724854,878.188782 858.244385,878.516541  C858.143860,878.585083 857.910706,878.582214 857.812744,878.510803  C857.344299,878.169006 857.361267,877.798340 858.044373,877.448853  z\"})),_path902||(_path902=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M799.479187,841.465759  C799.519836,841.444275 799.438538,841.487244 799.479187,841.465759  z\"})),_path903||(_path903=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M824.788513,841.117554  C824.878967,841.308777 824.686584,841.563721 824.211426,841.882446  C824.120972,841.691223 824.313293,841.436279 824.788513,841.117554  z\"})),_path904||(_path904=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M854.479248,849.465698  C854.519836,849.444275 854.438599,849.487183 854.479248,849.465698  z\"})),_path905||(_path905=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M599.078430,916.356995  C601.370544,916.000000 603.741150,916.000000 606.555847,916.000000  C607.156616,917.931458 609.222473,918.677490 609.865234,920.693970  C606.477234,919.341248 602.286926,919.370789 599.078430,916.356995  z\"})),_path906||(_path906=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M589.256531,800.745117  C589.054565,801.484009 589.049072,801.915955 589.040894,802.671997  C589.060852,806.073547 586.915039,808.073730 585.205017,810.164795  C586.386230,811.915161 588.081970,811.222168 589.727844,811.808167  C589.973083,813.037476 589.935425,814.076782 589.857361,815.504150  C589.083862,816.862732 588.028625,816.803711 587.126526,816.446228  C583.907593,815.170593 580.728638,815.380737 577.263916,816.211670  C577.000000,815.994141 577.000000,816.000000 577.002808,816.000000  C573.684998,814.247192 574.291199,811.590149 575.934082,809.297180  C577.231079,807.486877 578.548523,805.391052 580.868164,804.489563  C576.795227,803.907410 576.982727,810.424377 572.442383,809.522705  C570.816589,808.792175 570.140564,805.634033 567.931763,808.563599  C567.410706,809.254761 566.085693,808.641113 564.968018,807.892700  C564.239441,807.203552 563.869690,806.649719 563.318970,805.818298  C562.673401,804.793518 562.159546,804.081482 561.402771,803.130127  C560.843811,800.531372 557.817566,798.935730 559.669922,795.906982  C563.869385,795.785583 567.703552,795.674988 570.064209,791.264282  C570.742432,790.758789 571.188232,790.577881 572.031372,790.473999  C576.303772,792.671448 581.243469,793.205566 583.654297,797.810608  C584.238586,798.926758 585.738098,798.340393 586.863037,798.299683  C588.325806,798.246582 589.485046,798.642456 589.256531,800.745117  z\"})),_path907||(_path907=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M576.986938,816.395264  C580.984924,811.820068 585.051697,814.292969 589.462036,815.868530  C590.770874,818.396606 587.792786,820.197144 588.851501,822.909241  C589.097961,823.897400 589.095581,824.652100 589.173462,825.781616  C589.016602,826.681702 588.779541,827.206970 588.310913,827.909302  C583.139282,829.916748 583.935486,825.648376 582.881592,823.451721  C582.307312,826.175415 581.698486,829.106628 578.344238,830.780518  C575.862244,830.345886 574.544739,827.278625 575.205566,823.979614  C575.689331,821.564087 576.377014,819.189270 576.986938,816.395264  z\"})),_path908||(_path908=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M589.435120,801.039551  C587.795227,797.161621 583.676636,802.143433 582.227356,798.857727  C581.046631,796.180847 579.479492,793.897949 576.166687,794.034668  C574.175354,794.116821 573.145996,793.196228 572.266968,791.250671  C570.267822,788.023743 571.165771,785.848999 574.431030,784.262451  C576.816711,783.657288 576.148682,787.930237 579.004761,786.253784  C580.211060,785.806702 581.132507,785.728943 582.417603,785.843384  C584.459351,786.492737 586.333740,787.888062 585.283020,789.397461  C582.172058,793.866577 585.410767,795.064697 588.647339,796.834717  C589.241272,797.037842 589.603516,796.927063 589.886902,797.031067  C591.480347,797.615662 594.103699,795.114441 594.487610,797.338074  C594.891357,799.676758 592.389038,801.022278 589.435120,801.039551  z\"})),_path909||(_path909=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M589.082397,796.702026  C586.663025,797.148499 584.406189,797.422913 582.975830,794.976440  C581.822937,793.004333 579.807251,791.187195 583.708374,789.836609  C585.544922,789.200867 584.425659,788.107178 583.258606,787.149292  C582.460938,786.484802 582.218994,785.870911 582.650085,784.579468  C583.499878,783.770264 583.987000,783.524292 584.727173,783.175964  C587.465332,783.158691 589.650513,783.762756 590.816467,786.693542  C591.298950,790.298645 590.706787,793.405579 589.082397,796.702026  z\"})),_path910||(_path910=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M591.152893,786.797119  C589.114868,785.856079 587.277283,784.691650 585.209961,783.300415  C586.390015,781.292725 588.350342,780.495178 590.493103,780.129944  C591.489197,779.960144 592.461487,780.116028 592.777283,781.403320  C593.706299,785.190491 593.720337,785.187073 598.052612,784.446167  C599.368042,785.728394 597.656921,787.189270 598.290710,788.606140  C598.922607,790.018555 599.978149,792.220825 597.610474,792.661804  C595.569946,793.041870 593.900818,791.228638 593.685059,789.102051  C593.514465,787.420593 593.620056,786.074219 591.152893,786.797119  z\"})),_path911||(_path911=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M590.242065,811.821289  C588.659546,812.674316 587.240906,813.346436 585.746155,812.728027  C584.577148,812.244324 582.857544,812.383972 582.403748,810.934875  C581.782898,808.952393 583.797424,809.038696 584.822510,808.509277  C586.979187,807.395447 586.624756,804.631775 588.728516,803.162903  C590.663452,804.096924 591.878052,805.416260 591.263916,807.799683  C590.544434,808.430054 590.216003,808.904358 590.797302,809.802368  C590.838379,810.562012 590.655884,811.103210 590.242065,811.821289  z\"})),_path912||(_path912=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M579.776367,780.156372  C580.557129,779.131409 581.421326,779.022156 582.665771,779.044739  C583.002014,780.515686 581.616089,781.893799 582.880493,783.716797  C583.012756,784.016174 583.003601,783.999268 583.010498,784.002930  C580.829773,785.387146 578.823547,785.907898 577.749573,782.403320  C577.928833,781.948792 577.965698,781.996765 577.959473,781.967529  C578.546326,781.465149 579.067322,780.916809 579.776367,780.156372  z\"})),_path913||(_path913=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M591.026367,809.685120  C589.890259,809.780640 588.032471,810.615356 587.803772,809.104797  C587.571167,807.568665 589.362915,808.210571 590.678101,808.002869  C591.040833,808.454712 591.036377,808.902039 591.026367,809.685120  z\"})),_path914||(_path914=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M684.374756,680.000000  C684.119934,678.588196 684.952820,678.003296 686.650513,678.008057  C686.999756,678.444458 686.999573,678.888916 686.998474,679.666687  C686.248169,680.000000 685.498840,680.000000 684.374756,680.000000  z\"})),_path915||(_path915=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M749.845825,689.810303  C753.719727,688.745789 752.799194,691.163147 752.566284,693.477844  C750.375366,693.055847 750.379272,691.417847 749.845825,689.810303  z\"})),_path916||(_path916=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M748.388306,685.001282  C748.476868,683.975769 749.202515,683.255615 750.681396,683.033203  C751.988159,683.989441 754.790527,682.523621 754.409851,684.748901  C754.012878,687.068787 752.043213,685.145386 750.768555,685.123962  C750.104065,685.112793 749.440491,685.044861 748.388306,685.001282  z\"})),_path917||(_path917=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M753.521484,696.535950  C753.479492,696.558472 753.563477,696.513428 753.521484,696.535950  z\"})),_path918||(_path918=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M911.540527,960.022034  C911.245911,961.141602 910.707520,961.834961 909.770569,961.452637  C909.097168,961.177856 909.020630,960.352356 909.429993,959.793518  C910.006592,959.006470 910.775330,959.023376 911.540527,960.022034  z\"})),_path919||(_path919=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0D0F10\",opacity:1,stroke:\"none\",d:\" M926.109863,958.469849  C924.979919,958.574768 924.466248,958.045044 924.452820,957.120605  C924.450073,956.928345 924.848755,956.543884 925.021484,956.566162  C926.003052,956.692566 926.205322,957.468384 926.109863,958.469849  z\"})),_path920||(_path920=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M613.668030,745.980835  C613.992188,746.460754 613.998169,746.910950 614.007935,747.699097  C613.310425,748.794556 612.367065,749.164429 611.247559,749.813843  C611.018433,750.008606 611.000000,750.002441 611.004395,750.011292  C608.952881,752.378113 606.000244,753.214355 603.061035,754.718018  C601.182678,755.508911 601.194763,757.218933 600.173157,758.595459  C592.469910,766.573364 583.799988,772.410461 573.370789,775.472717  C572.444580,775.744751 571.640564,776.432800 570.415283,776.993530  C568.061707,773.121643 572.878845,772.216309 573.539978,769.084534  C573.757996,768.304749 573.938477,767.882568 574.397217,767.224121  C575.587708,766.169800 577.235779,767.102539 578.214050,765.448608  C583.850220,763.782654 588.577576,761.704285 589.321472,755.171509  C589.555054,753.120361 591.584290,752.465698 593.101990,751.471619  C595.785400,749.714111 599.162048,749.664917 602.113892,747.688477  C603.406921,746.935242 604.539124,746.735229 605.910156,746.207336  C606.604492,745.815918 607.013611,745.612061 607.755249,745.295288  C608.528259,745.026550 608.987244,744.935181 609.809875,744.889648  C610.636353,744.963745 611.077209,745.123840 611.790039,745.548706  C612.509094,745.809021 612.929443,745.880066 613.668030,745.980835  z\"})),_path921||(_path921=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M577.551270,781.955566  C578.430969,784.576111 580.535095,783.855652 582.620422,784.005249  C583.009216,784.755005 583.001038,785.503418 582.981934,786.625916  C581.912415,786.997437 580.853760,786.994812 579.397583,786.992432  C577.969543,786.754333 576.998535,786.404236 576.150391,785.276672  C572.246338,784.891174 572.681946,787.981018 572.011719,790.618652  C571.691467,791.118225 571.433899,791.308167 571.116089,791.786926  C568.112305,792.635498 566.098450,796.170227 562.235107,794.250000  C566.906555,789.812134 570.044189,783.350159 577.551270,781.955566  z\"})),_path922||(_path922=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M574.619080,768.717773  C574.878052,772.435791 570.702759,773.237793 570.058594,776.705688  C569.989746,777.441589 569.928711,777.823792 569.824280,778.493469  C568.341003,780.730286 566.866211,782.630859 563.790894,782.725769  C563.207520,782.522339 562.989014,782.396484 562.535278,781.969482  C561.816589,780.713074 561.728027,779.696045 561.901428,778.266296  C562.209229,777.130493 562.614685,776.476746 563.402588,775.623779  C566.049255,774.177979 567.794312,772.219727 569.716736,770.477539  C571.019653,769.296814 572.175598,767.731750 574.619080,768.717773  z\"})),_path923||(_path923=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M563.177124,784.616272  C562.412476,785.797791 561.909851,786.660339 561.171021,787.713074  C560.138123,788.397827 558.938660,788.485168 558.933411,790.141907  C558.644714,791.319214 558.037292,791.920837 557.139526,792.691040  C556.827393,793.057556 556.782715,793.239075 556.702332,793.698792  C556.431824,795.197510 555.608948,795.620850 554.093628,795.492065  C552.531311,794.625549 552.057068,793.495911 552.070312,791.754578  C552.257996,790.645508 552.562256,789.969727 553.057678,788.985352  C554.544006,787.056946 555.212219,784.962708 557.238342,783.493042  C559.262329,783.087097 560.469849,781.463562 562.584717,781.694580  C562.856812,781.867920 562.928162,781.933716 562.963867,781.966675  C563.579224,782.682617 563.716919,783.450195 563.177124,784.616272  z\"})),_path924||(_path924=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M600.297485,758.896851  C600.452698,757.237305 598.107544,754.846802 601.623718,754.019409  C603.432617,754.046448 604.862061,753.772583 606.320984,753.461975  C608.478516,753.002502 609.951477,753.642395 609.201416,756.632935  C608.972229,756.972229 608.911377,757.430664 608.861511,757.655762  C606.040039,757.848816 603.742615,761.291504 600.297485,758.896851  z\"})),_path925||(_path925=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M561.692139,794.070557  C565.070251,794.888855 567.190491,791.543030 570.603516,791.998474  C570.647888,793.711182 567.609009,793.825928 568.517334,796.383484  C568.925415,797.532471 567.965515,797.670532 567.016235,797.487488  C564.920288,797.083313 562.817810,796.713013 560.365845,796.175415  C559.881958,795.851257 559.750305,795.680603 559.805664,795.246094  C560.476990,794.719360 560.961304,794.456421 561.692139,794.070557  z\"})),_path926||(_path926=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M616.924622,764.415771  C617.830017,763.220764 618.738220,762.388916 619.789124,761.285889  C621.897644,760.948364 623.297058,761.360168 622.173279,763.778748  C621.071167,766.150879 619.863647,768.435181 616.597473,769.010010  C616.476562,767.611572 616.701965,766.195251 616.924622,764.415771  z\"})),_path927||(_path927=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M559.663818,794.966003  C559.996521,795.155579 560.000305,795.328796 560.008911,795.761963  C558.889160,798.668518 563.309021,799.560486 561.990845,802.632996  C558.573792,804.942505 557.379822,802.454468 556.024719,799.640381  C555.726196,797.696289 555.976990,796.318115 557.618652,795.097900  C558.456909,794.934937 558.895874,794.942261 559.663818,794.966003  z\"})),_path928||(_path928=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M563.297729,784.953674  C562.942383,784.201843 562.969666,783.468384 562.998230,782.367310  C565.901245,782.680359 566.432922,778.713684 569.431152,778.839478  C570.244995,783.305786 567.130554,784.304382 563.297729,784.953674  z\"})),_path929||(_path929=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M557.846619,794.703552  C557.682007,796.049255 557.346130,797.170959 557.005493,798.647095  C556.801086,799.144287 556.601501,799.287109 556.032288,799.420166  C554.378174,799.021362 553.513123,798.228882 553.228699,796.509155  C553.306458,795.905884 553.383606,795.672241 553.710083,795.166199  C554.694641,794.677979 555.429932,794.462097 556.416016,794.111572  C557.002930,794.144470 557.339111,794.312012 557.846619,794.703552  z\"})),_path930||(_path930=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M557.237183,792.873047  C557.151428,792.103455 557.430786,791.330811 557.849243,790.277527  C558.402466,789.480225 558.770996,788.909424 559.780518,788.891968  C560.021423,790.811890 559.807007,792.484558 557.237183,792.873047  z\"})),_path931||(_path931=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M560.283569,788.900452  C559.560181,789.284119 559.039978,789.529602 558.254150,789.885986  C558.094971,788.527527 557.816772,786.667847 560.644592,787.784363  C560.894287,788.246399 560.744934,788.532715 560.283569,788.900452  z\"})),_path932||(_path932=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M579.653076,780.004639  C579.903992,780.865723 579.649841,781.651428 578.277893,781.909119  C578.062378,781.051392 578.370850,780.312500 579.653076,780.004639  z\"})),_path933||(_path933=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M648.042114,734.336914  C649.633423,734.211243 651.815002,733.686279 651.228027,736.786682  C649.487976,736.901550 648.423279,736.242493 648.042114,734.336914  z\"})),_path934||(_path934=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M645.762695,720.522217  C645.498596,718.790955 646.690674,718.640747 647.743835,718.460815  C647.954407,718.424866 648.546326,719.075317 648.494446,719.301880  C648.193359,720.614380 647.242676,720.978882 645.762695,720.522217  z\"})),_path935||(_path935=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M640.001221,718.998779  C640.490540,719.291138 640.978699,719.584717 641.466797,719.878357  C641.297058,720.076721 641.127319,720.275024 640.957581,720.473389  C640.664917,720.163818 640.372253,719.854309 640.038574,719.273560  C639.997559,719.002441 640.000000,719.000000 640.001221,718.998779  z\"})),_path936||(_path936=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M714.853455,998.937134  C712.821655,1000.171753 711.546997,999.656189 710.205872,997.564758  C712.308105,997.297241 714.176147,995.525635 714.853455,998.937134  z\"})),_path937||(_path937=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M732.224487,990.246094  C733.187927,990.308167 733.707458,990.650513 733.306152,991.373047  C733.161438,991.633545 732.440186,991.811218 732.114319,991.685120  C731.401123,991.408936 731.335022,990.852905 732.224487,990.246094  z\"})),_path938||(_path938=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M701.001831,999.751221  C700.843994,999.834229 700.669556,999.678162 700.544983,999.489197  C700.514099,999.442444 700.644531,999.289185 700.854065,999.091187  C701.006104,999.165039 701.004883,999.332520 701.001831,999.751221  z\"})),_path939||(_path939=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M892.001221,909.998779  C892.109375,910.123291 892.216309,910.248962 892.323242,910.374634  C892.249084,910.330811 892.174866,910.286987 892.049133,910.122803  C891.997559,910.002441 892.000000,910.000000 892.001221,909.998779  z\"})),_path940||(_path940=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M578.379272,831.124512  C580.645508,827.276978 582.498901,823.359375 580.658875,817.477295  C584.751770,821.150696 583.166199,826.245422 587.690247,828.045471  C587.948669,829.138977 587.557556,830.051331 586.411072,830.848328  C583.652100,830.630615 581.262085,833.017639 578.379272,831.124512  z\"})),_path941||(_path941=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M576.222229,850.789307  C575.114075,849.126282 572.238586,848.568909 572.566772,846.031250  C573.094910,841.946899 575.687561,841.051514 579.659912,841.999023  C579.990845,845.338379 578.042480,847.879089 576.222229,850.789307  z\"})),_path942||(_path942=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M792.696655,913.171631  C793.494934,913.259460 793.989929,913.518860 794.741211,913.890381  C795.006958,915.853943 794.478760,917.583740 792.268250,916.699524  C790.149353,915.851868 791.269653,914.440735 792.696655,913.171631  z\"})),_path943||(_path943=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M566.750610,869.287659  C568.574158,866.773804 568.926392,863.812927 571.527771,861.876038  C571.098145,864.762451 571.674622,868.439941 567.437256,869.968750  C566.884155,869.874573 566.681641,869.717346 566.750610,869.287659  z\"})),_path944||(_path944=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M566.655029,869.012695  C567.028687,869.184875 567.035156,869.354431 567.064148,869.777954  C566.815063,870.222534 566.543518,870.413208 566.124023,870.806335  C564.939331,870.776733 563.015198,871.525146 563.037415,870.263489  C563.067383,868.560669 565.065002,869.191345 566.655029,869.012695  z\"})),_path945||(_path945=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M573.404419,858.940918  C573.088074,858.120728 573.386169,857.386902 574.492798,856.800415  C574.897339,857.617371 574.791321,858.468140 573.404419,858.940918  z\"})),_path946||(_path946=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M609.306274,756.797729  C608.880066,755.519531 609.044128,753.839539 606.652466,754.643005  C605.258057,755.111450 603.845337,755.251526 602.211426,754.241272  C604.546509,752.308411 607.285095,750.925964 610.643677,750.054810  C610.800781,752.272583 611.802551,754.775757 609.306274,756.797729  z\"})),_path947||(_path947=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M611.351929,750.014771  C611.429688,748.912231 612.198303,748.248901 613.689453,748.053650  C614.017395,748.210876 614.022888,748.384705 614.043396,748.819824  C613.445801,749.844849 612.596558,750.010986 611.351929,750.014771  z\"})),_path948||(_path948=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M668.365356,1018.987915  C667.840759,1017.686401 667.739319,1016.365479 667.511230,1015.066833  C667.293213,1013.825378 666.278015,1011.984009 667.977722,1011.680908  C669.931091,1011.332581 671.418762,1013.228455 671.521057,1015.031738  C671.613159,1016.655518 671.323669,1018.853943 668.365356,1018.987915  z\"})),_path949||(_path949=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M668.001221,1019.001221  C667.920410,1019.035156 667.838379,1019.067932 667.876953,1019.049133  C667.997559,1018.997559 668.000000,1019.000000 668.001221,1019.001221  z\"})),_path950||(_path950=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M692.992676,666.374023  C696.666687,665.947266 696.869446,668.549133 696.994934,671.602783  C695.518066,672.007263 694.019104,671.885071 692.336792,672.850708  C691.833191,673.127869 691.666321,673.255798 691.249756,673.191162  C691.661743,670.914307 692.323547,668.830017 692.992676,666.374023  z\"})),_path951||(_path951=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M690.743469,672.886963  C691.166687,672.998962 691.333313,672.999329 691.750000,672.999878  C690.938843,674.823181 692.373352,677.229492 690.311646,678.945801  C688.812012,677.075317 688.985229,674.930725 689.000000,672.405884  C689.495667,672.258423 689.991272,672.516785 690.743469,672.886963  z\"})),_path952||(_path952=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M704.797729,674.159546  C705.308899,674.120911 705.563965,674.313171 705.882629,674.788391  C705.641846,675.493958 705.184753,675.911621 704.619385,675.432068  C704.431824,675.272949 704.593506,674.701843 704.797729,674.159546  z\"})),_path953||(_path953=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M551.949768,892.879333  C551.893066,892.875244 551.786133,892.750488 551.679199,892.625732  C551.752625,892.670044 551.826111,892.714355 551.949768,892.879333  z\"})),_path954||(_path954=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M552.998779,886.000671  C553.106018,886.124817 553.214417,886.248291 553.322876,886.371765  C553.249390,886.327576 553.175964,886.283325 553.051819,886.118286  C553.001160,885.997559 553.000000,886.000000 552.998779,886.000671  z\"})),_path955||(_path955=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M804.253662,918.497253  C803.407227,918.862610 802.762207,918.839783 802.594788,918.100769  C802.543701,917.875244 803.059021,917.308472 803.373596,917.257080  C804.043152,917.147766 804.552979,917.473633 804.253662,918.497253  z\"})),_path956||(_path956=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141416\",opacity:1,stroke:\"none\",d:\" M787.880310,901.050659  C788.000000,901.000000 787.745483,901.423218 787.745483,901.423218  C787.745483,901.423218 787.760620,901.101379 787.880310,901.050659  z\"})),_path957||(_path957=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M608.214355,745.828003  C607.902283,746.369812 607.722717,746.620667 607.252258,746.919067  C606.079529,746.973633 605.098938,747.039978 603.906311,746.392578  C602.153320,744.363586 603.255981,742.352600 603.255310,740.435486  C601.782654,740.024475 601.004211,740.876587 600.278137,741.830872  C599.292480,743.126343 598.461304,744.992920 596.382751,743.695801  C594.645935,742.612000 593.380493,741.004150 593.267456,738.836975  C593.160095,736.778442 594.595825,735.851013 596.310425,735.447693  C599.556824,734.683960 602.580322,733.195496 606.187622,732.594238  C606.973511,732.603149 607.435303,733.249695 607.974121,732.321960  C608.180176,731.633423 608.398743,731.272522 608.969360,730.754272  C610.058350,730.419434 610.715942,730.612000 611.093567,731.664551  C611.144775,733.701660 611.257935,735.974976 613.645264,734.202026  C615.410706,732.890869 616.739441,734.175354 618.600098,733.999512  C619.274109,736.045776 619.796448,738.052368 616.791748,738.714478  C615.105835,739.085999 614.954773,740.724915 615.000549,742.614258  C614.257446,743.010010 613.519836,743.027344 612.413330,743.049438  C611.718384,743.331482 611.394043,743.610779 610.807739,744.073120  C609.737488,744.541382 608.986694,744.916504 608.214355,745.828003  z\"})),_path958||(_path958=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M609.747070,743.349121  C610.430481,743.028442 610.891418,743.020142 611.698364,743.032959  C612.044739,743.727844 612.045105,744.401489 612.067078,745.406616  C611.608887,745.786255 611.128967,745.834595 610.289368,745.837463  C609.380554,745.160522 609.262207,744.447205 609.747070,743.349121  z\"})),_path959||(_path959=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M994.354126,970.426208  C993.614624,970.633301 993.346069,970.375061 993.460938,969.800537  C993.484802,969.681152 993.653931,969.520935 993.774475,969.502930  C994.354675,969.416504 994.597351,969.698792 994.354126,970.426208  z\"})),_path960||(_path960=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M998.478760,978.465454  C998.519592,978.443787 998.437866,978.487061 998.478760,978.465454  z\"})),_path961||(_path961=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M293.368958,678.211670  C291.229889,677.580994 293.167389,673.304199 289.315918,674.873169  C282.739471,676.899719 280.575500,682.658447 277.369049,687.438904  C276.536560,688.680115 275.852142,690.033997 274.746613,691.069275  C273.764435,691.989014 272.686554,692.977783 271.250488,692.119080  C270.049866,691.401184 270.253845,690.098389 270.457367,688.952576  C271.082550,685.433411 271.112976,681.918152 274.449097,679.191467  C277.286469,676.872314 278.653442,673.031860 278.666504,669.331848  C278.682831,664.696594 278.958923,660.176453 281.129578,655.019714  C277.919525,656.665405 277.880798,659.983398 274.988708,660.875000  C272.367950,661.363220 271.425995,662.969604 270.851440,665.358032  C264.560760,672.134521 263.199005,680.981689 260.407349,688.811218  C258.142181,695.164001 255.885681,702.653381 258.941772,710.304321  C259.819092,716.803894 259.293671,717.754211 254.025314,719.010620  C249.321701,717.011230 250.044540,713.091370 249.780396,709.139160  C250.732498,698.328918 250.318298,687.780090 256.031677,678.113892  C258.140381,674.546326 260.835419,669.577454 256.865051,664.560913  C254.838120,659.535583 256.052277,654.636719 256.602783,650.024292  C257.930054,638.904358 257.146515,627.936890 255.986755,616.930054  C255.680740,614.025879 256.054993,611.607544 259.122192,610.406372  C260.482208,609.873779 261.315460,608.823853 261.563080,607.467163  C263.623993,596.174255 268.968964,585.765076 270.515076,573.935486  C270.622467,573.038879 270.704620,572.534302 270.938965,571.682617  C271.556366,569.747070 273.535645,569.033203 273.521729,566.790039  C273.451141,565.219910 273.623138,564.033081 274.052399,562.515747  C274.681152,561.083557 275.589172,560.176941 275.727356,558.519897  C279.053986,551.721375 279.531738,544.496521 281.656006,537.743286  C282.296936,535.705627 282.547729,533.533264 284.066406,531.447876  C284.855988,529.774719 287.172577,532.429504 287.224487,529.890442  C287.423218,520.164734 293.906067,513.084900 297.841522,504.953674  C302.257172,495.830383 306.629669,486.740692 307.937378,476.185852  C308.009033,474.661224 308.338501,473.561554 309.095306,472.254883  C309.767365,471.302002 310.520142,470.820740 310.814575,469.651794  C310.935822,468.919434 311.000916,468.494904 311.126953,467.739807  C311.562805,466.068726 311.555969,464.663910 311.953125,462.961853  C315.253998,456.084717 315.021729,448.433533 318.726837,442.058838  C319.054169,441.495667 318.966919,440.760193 318.994141,440.094604  C319.270813,433.322296 321.057343,426.982788 324.331482,421.039917  C328.296173,413.843689 330.428162,405.963379 332.859558,397.819580  C333.382355,396.422852 334.312256,395.633545 334.593750,394.154114  C334.745544,393.401337 334.871582,392.983978 335.158966,392.282745  C335.924103,390.945282 336.777740,389.970490 336.355530,388.276978  C336.377930,387.749817 336.409668,387.539673 336.561371,387.033051  C337.654205,385.635071 338.704163,384.582825 339.145966,382.754883  C339.925659,380.980560 340.335999,379.291046 341.430786,378.164978  C343.862549,375.663696 343.566437,373.408813 341.187805,370.735168  C340.486389,368.613281 340.462067,366.878998 341.826996,365.008667  C345.000458,364.412170 346.877197,362.824921 348.077423,360.177155  C348.674316,358.860504 349.510284,357.193848 351.328644,357.665894  C353.375427,358.197205 353.166656,360.169189 353.193756,361.811584  C353.212921,362.972565 353.450012,364.430908 352.823425,365.233582  C348.958221,370.184540 349.454620,376.803589 347.280640,380.367035  C349.391968,377.049591 350.423767,371.190582 353.176849,366.130066  C355.503906,361.852631 357.387909,357.361176 359.841644,353.110596  C362.617249,348.302460 363.322754,342.166809 363.812653,336.410736  C364.028809,333.870483 364.110596,331.413025 365.731110,329.365692  C367.922150,326.597565 366.272766,323.156555 367.501709,319.903809  C367.763947,318.522827 367.879791,317.437164 368.530884,316.440399  C367.866211,317.110596 367.885559,317.965454 367.564545,319.040405  C367.386139,321.241486 366.630737,322.922211 365.741760,324.905396  C363.858887,326.410461 362.750793,327.987793 362.549805,330.464752  C364.323792,338.235199 359.919830,343.890198 357.064087,349.980225  C356.644592,350.874969 355.964264,351.634918 355.470795,352.507355  C353.102356,356.694519 352.544342,356.748230 348.268280,352.971497  C346.870087,348.289093 347.053284,343.947784 348.147278,339.247986  C348.847168,337.830048 349.764862,336.991608 350.307495,335.516510  C350.582062,335.002228 350.714996,334.808746 351.111694,334.382019  C356.910889,331.387390 356.706238,325.251190 358.920135,320.642731  C360.200226,317.978027 362.040985,314.788361 360.484558,311.153442  C359.644440,309.191345 361.371216,308.154236 363.281708,308.032013  C365.105804,307.915344 366.924286,307.818604 368.849152,307.478760  C367.669678,304.386536 365.288788,300.961823 371.330170,300.538361  C372.819550,300.433929 372.465363,298.683502 372.494415,297.607452  C372.570007,294.808655 373.157867,292.321014 376.105103,290.679932  C379.363647,290.983856 379.488342,294.362335 382.012573,295.634766  C382.526917,295.863007 382.726562,295.968536 383.206177,296.265564  C385.148987,298.265076 386.903351,299.969879 389.193115,301.587280  C389.619507,302.272705 389.743835,302.715637 389.772949,303.528412  C389.238312,305.896576 388.131378,307.642822 386.973297,309.728241  C386.636078,310.164642 386.488922,310.326447 386.094299,310.695465  C384.828186,311.580109 383.737122,312.160553 382.715912,313.325653  C381.753601,314.281128 381.361481,315.180908 381.216064,316.545837  C381.026764,317.302460 380.867188,317.725403 380.503479,318.448090  C378.258972,321.289337 377.685455,324.366882 376.981049,327.446747  C374.997833,336.117371 374.216614,345.054413 370.342590,353.308807  C368.480743,357.275757 369.847076,361.791443 370.471130,366.398315  C370.741425,367.471588 370.676056,368.178528 370.206848,369.158997  C368.829163,370.542664 368.116852,371.784912 368.812561,373.783813  C368.878204,374.550720 368.844330,374.987061 368.659241,375.728455  C366.843994,377.760895 368.181915,378.857452 369.485962,380.311768  C369.646149,381.124420 369.579071,381.596588 369.224609,382.379028  C366.716766,384.189728 366.875183,386.616821 366.702423,388.893372  C366.428497,392.502655 367.063049,396.162323 365.951538,400.073608  C363.644745,402.703888 362.857758,399.683289 360.825256,399.140076  C362.063782,402.345642 364.112000,405.123077 363.251404,408.854919  C363.140106,409.458923 363.079132,409.699463 362.886292,410.291321  C360.965088,414.641296 361.513336,419.159729 359.766846,423.524658  C354.875214,425.473389 355.779755,421.326538 354.600128,419.274719  C354.172729,420.718597 354.581543,422.140930 355.260895,423.556183  C356.455017,426.043671 356.597137,428.086700 353.843719,429.965668  C351.489227,431.572296 351.866272,434.721283 351.259613,437.218842  C350.867310,438.833740 352.494324,439.415009 353.820160,439.668549  C355.667877,440.021973 355.589630,438.580994 355.568878,437.438904  C355.514099,434.425659 356.316650,431.517914 356.574554,428.543610  C356.716675,426.904938 356.866364,425.158142 359.199310,424.385803  C361.417542,423.970551 362.525391,424.737793 362.845184,426.988708  C361.182251,432.101440 360.645142,436.839203 362.769775,441.593964  C363.389709,442.981323 363.488220,444.459320 363.441895,446.310425  C363.382538,447.142670 363.334686,447.615723 363.209473,448.435059  C361.920746,451.127869 363.164703,453.258728 363.791046,455.797424  C363.887878,456.620300 363.861053,457.091675 363.688599,457.900940  C362.251312,459.801422 362.324585,463.330994 358.927429,462.065216  C356.167450,461.036896 354.576447,455.643982 356.279327,453.152466  C357.091003,451.964874 357.645721,450.959381 357.286804,449.246674  C356.925751,451.223236 356.332550,452.808685 354.231171,452.738190  C352.381470,452.676147 351.392670,451.439392 350.472260,449.922424  C350.036682,449.204529 351.735016,446.505005 348.496704,447.962646  C343.721283,452.946503 341.991638,459.175903 343.712769,464.945801  C346.437042,474.078369 342.858673,481.941620 340.979370,490.243286  C340.656311,491.670288 339.826172,492.758972 338.193420,492.511169  C334.102600,491.890289 334.369629,494.726562 334.504242,497.229736  C334.619415,499.372040 335.389801,501.499847 334.275482,503.592285  C333.607788,504.846008 332.750702,505.811737 331.161652,505.584686  C329.771484,505.386108 329.139923,504.362671 329.074921,503.137054  C328.807129,498.087311 326.711609,492.911835 330.142792,488.093201  C331.255035,486.531189 331.405701,484.660431 331.050446,482.802460  C330.460510,479.717041 330.783386,476.866882 332.715729,474.252869  C333.882721,472.674194 333.973846,470.828125 333.343079,468.997559  C331.628601,464.022095 331.039795,459.336243 334.543579,454.604370  C336.060669,452.555511 334.449127,449.356812 335.771515,446.160065  C333.981323,447.345612 332.846191,449.439178 331.030823,448.086121  C329.372101,446.849731 330.257019,445.176453 330.676544,443.525787  C332.876007,434.872253 337.584198,426.891937 336.911591,418.786713  C334.481598,422.514587 332.011169,427.486389 332.782990,433.630371  C333.133270,436.418793 331.617096,439.115082 330.959198,441.854706  C330.238312,444.856781 328.597504,447.862823 332.756836,449.944824  C334.099304,450.616821 333.855957,452.570190 333.577118,454.111572  C331.781555,464.037140 329.497467,473.834351 325.922455,483.289795  C325.188354,485.231323 325.298706,487.115112 325.519196,489.154938  C326.247864,495.895538 322.910828,501.176636 316.543549,503.798370  C316.261017,503.914734 315.744843,503.785431 315.676941,504.077179  C313.982086,511.357666 307.286499,517.144287 309.299438,525.884094  C309.851776,530.813171 306.313538,534.377441 306.141174,539.166016  C305.852112,540.004761 305.625916,540.452087 305.145874,541.173828  C302.632843,545.071045 301.958527,549.020020 302.450531,553.563110  C302.659363,555.090576 303.145935,556.208984 303.147217,557.777710  C302.057556,562.334167 297.528168,563.613586 295.570251,567.072021  C295.338501,567.481262 294.435791,567.382996 294.735565,568.185242  C295.062012,567.767822 295.549194,567.453186 296.012909,567.596313  C299.197723,568.578674 301.546906,576.073975 299.159607,578.350647  C295.588287,581.756409 293.492249,585.161804 294.682434,590.537720  C295.484497,594.160767 293.284637,597.982971 293.618927,601.880188  C294.612457,597.237671 297.326935,592.936584 296.044556,587.838562  C295.720856,586.551758 296.085846,585.179504 296.457916,583.899414  C296.866760,582.492920 297.087494,580.656433 299.010345,580.702026  C300.969482,580.748352 301.090027,582.492432 301.243927,583.908997  C303.059387,576.380005 305.183105,568.786743 304.307404,560.459229  C304.577850,558.292236 305.949921,556.399719 303.851166,554.419800  C302.800598,552.373108 302.983002,550.528687 303.461975,548.368591  C305.856567,547.698792 308.304077,547.498108 306.767029,543.762939  C307.195435,540.997986 307.876526,538.667786 309.238342,536.201660  C313.258881,534.853516 313.258881,534.853516 317.160950,529.509033  C319.222595,528.903809 320.009369,527.571594 320.614075,526.001526  C321.144257,524.624939 321.771881,523.257568 323.976807,523.679321  C325.414978,525.008911 325.171570,526.569580 325.552795,528.741272  C327.718781,523.731506 331.774841,520.377441 330.973572,514.615662  C330.560730,511.646851 332.423279,508.966644 335.554321,507.217651  C338.509613,506.593933 340.299988,507.632080 341.327972,510.141449  C341.063324,506.002533 338.369934,502.286896 339.576538,497.628326  C342.233124,491.065430 342.443939,484.176880 345.453979,477.752686  C348.569153,476.545471 349.829376,477.990814 350.308563,480.476654  C350.796692,483.008575 350.134705,485.371002 349.153809,487.710266  C347.467773,491.731293 346.946838,495.816803 347.388855,500.279053  C347.839691,504.830261 346.497742,509.381042 344.780975,514.060669  C343.634155,514.999390 342.623840,515.191895 341.213806,515.258362  C337.568634,516.518982 337.021515,518.673645 338.878479,523.820312  C339.270477,528.758362 336.044983,533.947327 332.600220,536.203979  C330.738800,537.423462 329.304626,533.785095 328.383759,536.221558  C327.750702,537.896484 330.447632,538.999878 330.188873,541.092163  C329.778046,544.414062 329.176208,547.724670 328.016541,550.808228  C326.544617,554.722046 325.800018,558.818420 324.464386,562.756714  C323.876556,564.489990 322.680084,566.781921 326.288971,567.523438  C326.898468,567.951843 327.392670,568.144287 327.305237,568.712891  C327.652252,568.134583 326.910187,568.132324 326.599426,567.518799  C325.293304,565.266785 325.845093,563.397766 326.985657,561.236206  C329.377472,559.582214 330.394806,557.128662 332.695587,555.433228  C334.416290,555.163574 335.624268,555.571167 337.034424,556.541016  C338.299316,559.455322 337.875275,562.206421 337.796692,565.267578  C337.143494,567.252319 334.784851,567.022461 334.274597,569.137329  C334.074615,569.671814 333.981537,569.881897 333.720154,570.395142  C329.612640,575.708618 326.044586,580.932495 324.166168,587.118958  C323.746948,588.499756 323.067719,589.764160 321.428040,589.372498  C318.693268,588.719238 318.216217,590.515808 317.987427,592.391418  C316.675720,603.144897 313.643036,613.433472 310.327881,623.719971  C308.368652,629.799255 306.444122,635.949036 305.133942,642.287842  C304.543030,645.146973 300.946747,647.376160 302.756042,651.460205  C302.739471,652.031860 302.704010,652.257812 302.533478,652.796509  C301.538605,654.099060 300.371826,654.812683 299.553284,656.295105  C298.999725,656.870728 298.615997,657.115540 297.849213,657.346924  C296.212708,657.153015 295.328827,656.287292 294.210022,654.833374  C294.744415,661.335999 290.288391,667.585144 295.829590,673.511963  C296.252991,675.890076 296.436859,677.866089 293.368958,678.211670  z\"})),_path962||(_path962=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M273.776520,660.265503  C275.535309,659.279663 276.909576,658.552185 277.115295,656.510986  C277.261780,655.057800 277.770477,653.291687 279.599854,653.270081  C280.828491,653.255554 282.473480,653.724243 283.219391,654.590515  C284.962219,656.614502 281.884918,656.637817 281.552612,657.777466  C280.772278,660.453308 279.768585,663.152466 280.057434,666.003662  C280.729950,672.641846 278.529358,677.778015 273.515106,682.407654  C271.667755,684.113220 272.076660,688.262451 271.846680,691.488525  C276.033661,687.720093 278.704651,682.884949 281.295044,678.120056  C282.514587,675.876648 282.475372,673.150024 285.974762,675.594299  C286.420593,675.905640 287.526215,675.272278 288.673462,675.037720  C289.096252,680.566772 287.241913,685.880676 286.734222,691.307495  C286.258789,696.389221 285.719055,701.812439 287.279846,706.788208  C288.947968,712.106079 286.651154,716.246643 284.321869,720.823608  C281.629059,720.050110 281.562836,717.806030 281.317596,716.666382  C281.912750,718.347473 280.202911,720.231628 279.202637,722.674683  C278.964813,723.227844 278.862640,723.448303 278.585327,723.992493  C275.175568,728.845764 274.574524,734.332886 272.882294,739.426331  C272.243011,741.350403 272.078339,743.831726 268.746277,743.699402  C266.467194,742.375244 266.890167,740.523621 267.115143,738.549011  C266.061646,740.102112 266.552277,742.268677 264.488281,743.419800  C263.070007,743.574829 262.318756,743.039612 261.700348,742.170471  C261.251068,741.539062 261.473816,740.700012 260.958099,740.115479  C260.942230,740.942322 260.935760,741.771057 260.237091,742.744751  C257.551239,748.117371 257.376709,753.673706 257.002441,759.596680  C256.051361,761.016113 254.453659,761.588074 254.874390,763.503540  C255.122910,764.635010 254.927490,765.829529 254.384735,766.852051  C253.525360,768.471375 253.472336,771.271973 250.965591,770.949463  C248.398529,770.619263 247.885544,768.325684 248.403976,765.976196  C248.762711,764.350464 247.949921,763.144348 247.018494,761.552490  C246.179703,758.041260 246.263824,754.844910 246.518433,751.253662  C246.675629,750.101562 246.841202,749.353882 247.211975,748.285950  C248.206970,745.109436 248.001694,742.003906 249.538101,738.979492  C249.661774,738.186035 249.765259,737.739441 250.005814,736.972900  C251.422409,733.395447 252.959869,730.535706 250.527557,726.679504  C249.117844,724.444519 251.307327,721.113953 252.745453,718.224060  C258.964752,718.612305 257.955475,714.372314 257.992157,710.427490  C256.384430,708.154785 257.085602,706.236938 257.959625,704.440186  C260.412933,699.396790 262.405365,694.261047 263.509918,688.689636  C264.570679,683.339294 267.228973,678.497131 270.185425,673.505615  C273.071320,670.117920 273.711975,666.502136 273.070831,662.192993  C273.143402,661.373657 273.303070,660.937073 273.776520,660.265503  z\"})),_path963||(_path963=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M251.060760,873.327271  C252.508286,870.655151 250.581451,868.895020 249.763275,867.146606  C246.417908,859.997742 249.820679,853.601379 251.687515,847.029419  C251.941025,846.137024 253.256622,845.129639 252.403763,844.398438  C246.944000,839.717224 250.746445,834.177917 250.820633,829.007446  C250.857864,826.412781 251.590881,823.900208 248.974380,821.779663  C246.351639,819.654175 248.336365,816.474182 248.000000,813.396606  C254.397217,810.429077 257.098206,805.251465 258.013153,798.081482  C258.187225,796.722351 258.508911,796.174622 259.459534,795.339417  C262.054382,796.121887 263.605988,795.853455 263.930817,793.270508  C264.320068,790.175415 266.090790,787.874756 267.793427,785.383972  C270.902496,789.444946 270.549591,796.569092 267.219238,800.175415  C266.998657,800.414185 266.491547,800.689331 266.531677,800.824951  C268.720673,808.217957 261.211609,812.889832 261.255402,819.667542  C261.258606,820.161438 260.954590,820.724731 261.107361,821.140320  C264.081360,829.230347 261.407013,837.314392 260.833252,845.335754  C260.447845,850.723938 258.530182,856.002625 257.149658,861.665161  C256.439423,863.736206 253.776672,864.015869 254.008240,866.654663  C255.063904,869.415710 254.729309,871.829224 253.984436,874.622986  C252.835464,874.946655 251.604874,875.102051 251.060760,873.327271  z\"})),_path964||(_path964=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M336.639648,583.061462  C339.210724,585.355591 337.449463,587.761292 336.948547,590.054321  C335.505280,596.660950 335.422058,596.642761 340.859711,597.807007  C337.989716,603.402771 334.694885,608.876160 341.647614,614.700439  C338.799896,615.077026 336.761688,611.853882 335.907837,613.197083  C333.848694,616.436401 331.443512,619.824768 331.543030,624.019470  C331.594055,626.169617 332.043396,628.325195 331.938110,630.459839  C331.848938,632.266602 333.426971,635.766846 328.603149,633.768738  C326.668671,632.967407 325.795990,636.274963 324.999908,638.154175  C323.161804,642.493103 323.684143,647.435303 321.949982,651.685059  C319.596954,657.451660 321.167847,663.633118 319.144836,669.677734  C318.835785,670.173157 318.669159,670.348816 318.251221,670.262207  C317.439484,668.817810 316.411957,667.639465 316.402039,666.452698  C316.365509,662.082458 314.206116,661.626038 310.396118,662.986389  C309.065857,662.324341 308.819641,661.313416 308.653046,659.873352  C308.750946,657.539307 309.416626,655.617493 308.941833,653.275513  C308.852142,650.024902 309.591003,647.436707 311.181030,644.948730  C314.438446,639.851685 314.159668,633.851501 315.069427,628.164368  C315.540283,625.220825 315.858063,622.247070 316.015320,619.278503  C316.195862,615.869934 315.605286,612.234070 320.350128,611.307617  C320.729614,611.233459 320.845581,610.143250 321.334686,609.254028  C325.340973,608.233398 326.887207,609.384216 326.753693,612.840027  C326.670868,614.983826 325.214447,616.826416 325.311127,619.357727  C327.200104,618.875977 329.027985,618.958984 328.289398,616.092285  C325.322327,604.575439 327.910461,594.140503 334.901428,584.284546  C335.445923,583.628601 335.837708,583.344604 336.639648,583.061462  z\"})),_path965||(_path965=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M223.357300,783.051697  C222.941055,781.872253 223.121338,780.626953 221.340576,780.066833  C220.822525,779.451172 220.641983,778.899963 220.227203,778.168213  C218.671005,776.837830 217.733215,775.559631 218.777206,773.344849  C218.995346,772.997131 218.998520,772.498535 218.999268,772.249268  C219.149750,771.206726 219.395691,770.417664 219.048752,769.301270  C218.881714,766.863770 219.051437,764.770569 219.946289,762.387451  C219.983841,760.159851 221.277756,758.571594 221.007904,756.342529  C220.997635,755.557190 221.001389,755.114319 221.008667,754.339417  C221.918060,752.973938 223.515366,751.701172 224.337997,752.354187  C228.345032,755.534851 231.313004,751.910583 235.050140,751.260559  C236.097397,751.688416 236.583527,752.228455 237.045441,753.269165  C237.345627,754.349487 237.349197,755.088135 237.316284,756.181396  C237.224579,759.626770 235.882767,762.663147 236.949005,766.148987  C237.041367,767.483032 236.821899,768.385742 235.827667,769.331177  C233.560898,769.722290 232.105850,770.455139 232.102341,772.751526  C232.099121,774.869141 231.608582,776.963379 231.816345,779.092590  C231.763397,777.227478 231.932587,775.379395 232.385239,773.239380  C233.653442,771.769043 235.318115,772.030396 236.607498,771.337219  C239.177261,769.955688 240.587494,768.294189 237.797012,765.387329  C236.091782,762.654724 237.894867,760.373108 238.048981,757.652588  C238.222855,756.629517 238.484375,755.983276 238.770813,754.971558  C238.979446,754.409363 239.079910,754.188965 239.376663,753.658569  C240.397461,752.361755 241.361237,751.639160 243.058868,751.852356  C245.548447,754.759705 245.874100,758.236694 247.284378,761.655090  C248.860016,764.456482 249.116592,767.168579 247.426895,769.404724  C245.883804,771.446899 247.764236,773.657043 246.244492,775.755981  C245.557343,775.998413 245.113083,775.999207 244.335632,776.000000  C244.002441,776.000000 243.743256,775.608337 243.743256,775.608337  C243.743256,775.608337 243.274200,775.622742 243.137085,775.811401  C242.999008,777.069092 242.998032,778.138123 242.993958,779.608521  C241.599304,779.984070 240.276474,779.852295 240.006760,778.085938  C239.797989,776.718750 239.040268,775.966370 237.624237,776.174683  C236.112366,776.397156 236.299088,777.806885 235.822632,778.815369  C234.327972,781.979004 235.940811,786.698853 231.167984,788.228210  C232.117188,790.027710 231.290237,791.919189 231.478806,793.743347  C231.609909,795.011658 231.822769,796.381897 230.277817,796.413147  C228.579514,796.447388 229.187683,794.744385 228.988068,793.707153  C228.213257,789.681030 227.914261,785.418152 223.357300,783.051697  z\"})),_path966||(_path966=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M298.789917,656.291260  C298.969055,654.411743 299.209442,653.021240 301.632751,653.010071  C303.801147,654.488220 304.830933,656.602661 306.245514,658.397034  C307.811127,660.382996 308.719635,663.089905 307.636017,665.414368  C305.419220,670.169739 305.702606,675.442383 303.993774,680.631653  C303.197327,687.043640 302.717987,693.146606 300.052399,698.784912  C299.631653,699.674927 299.646088,700.835815 298.270447,700.672119  C297.269196,700.552917 297.046631,699.639526 296.835571,698.848755  C295.663513,694.457214 295.255371,690.009460 296.950439,685.702332  C297.643158,683.942200 298.587891,682.371216 297.285583,680.646729  C297.038788,680.320007 295.982178,680.266174 295.513062,680.505554  C293.659729,681.451172 294.077423,683.300110 294.008881,684.921082  C293.967529,685.898743 294.001251,686.879456 294.001251,688.758789  C291.016418,685.029114 291.995453,681.907593 292.942932,678.396667  C295.656952,677.538269 294.810638,675.417358 294.991486,673.390503  C294.200806,671.781494 294.019623,669.827393 294.797302,669.315735  C298.259033,667.038269 295.462463,663.654175 296.754822,660.742798  C297.495331,659.158386 298.026886,657.863098 298.789917,656.291260  z\"})),_path967||(_path967=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M267.704468,743.019165  C273.203827,741.687317 271.830170,736.817200 272.847809,733.457581  C273.943146,729.841187 274.888947,726.310425 277.723724,723.213440  C277.819763,719.938538 281.583191,717.600586 279.585907,714.102051  C279.321716,713.639221 280.291687,712.173767 281.478882,712.271973  C283.113464,712.407104 283.275665,713.871033 282.786438,714.846008  C281.662537,717.085571 283.274902,718.549500 283.956238,720.655945  C283.767670,726.866394 282.724091,732.597290 281.160645,738.636230  C280.832397,739.128845 280.664825,739.257629 280.244995,739.194397  C279.247437,739.003601 278.502228,739.004883 277.384399,739.010376  C275.699158,737.307800 275.323090,738.663757 274.842987,739.678040  C273.606628,742.289978 273.545227,745.414917 271.135132,747.860107  C270.578430,748.351074 270.255005,748.590454 269.902863,748.789978  C269.885712,748.799683 270.102478,748.888062 270.745056,749.084839  C272.118317,750.561584 272.286316,751.932495 271.242981,753.699341  C269.669098,755.093933 270.010956,756.276245 270.933136,757.388306  C272.251862,758.978577 272.106506,760.310974 270.193420,761.739563  C269.308746,762.580017 268.543304,762.730530 267.357269,762.235413  C265.105438,758.757568 267.427002,754.654846 264.895721,751.540405  C264.506653,751.061646 264.086151,750.608582 263.329529,750.071777  C262.594849,750.354614 262.140106,750.491943 261.319336,750.222778  C260.817657,747.856934 261.419373,745.649658 260.264404,743.266052  C259.942108,742.334961 259.942352,741.681335 259.828339,741.048279  C259.586731,739.706726 258.340363,738.262207 260.081299,737.133606  C260.688232,736.740051 261.885040,736.342346 262.241394,736.637085  C263.668915,737.817627 262.590759,739.288818 262.350708,740.662231  C262.189880,741.582397 262.771210,742.162720 263.717834,742.846558  C265.135681,744.101379 266.273712,743.142273 267.704468,743.019165  z\"})),_path968||(_path968=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M246.264236,776.261963  C246.139359,773.920532 245.956253,772.003174 241.816238,771.112122  C248.084320,769.729553 247.261780,766.138306 247.000519,762.387268  C247.166672,761.872314 247.332718,761.744568 247.747864,761.808350  C250.420868,762.408936 250.194565,764.259094 249.808960,765.835876  C249.387238,767.560181 248.960190,769.072693 251.275162,770.326782  C253.080780,766.955078 254.901031,763.718811 252.238251,759.957764  C253.843079,758.832336 255.023895,760.276855 256.645050,759.993469  C259.481415,761.685608 259.726318,763.929321 259.699615,766.872009  C259.647369,772.629395 259.073181,777.330566 253.677475,781.221130  C251.709946,782.639771 252.532516,787.977295 251.085617,791.357422  C250.542496,792.626221 250.540955,794.053894 248.726868,793.840698  C246.868118,793.622253 247.866318,792.174927 247.619202,791.179688  C246.418076,786.342285 246.978897,781.400513 246.264236,776.261963  z\"})),_path969||(_path969=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M315.283173,729.845642  C313.393250,735.025879 312.378021,740.115845 313.710022,745.713745  C314.432953,746.714722 314.073120,747.214355 313.272095,747.823975  C311.430420,749.483154 312.198090,751.427185 312.011169,753.594971  C312.667023,755.020569 313.029785,756.086243 312.259613,757.644897  C310.977051,762.044617 311.936249,766.087463 311.984192,770.550781  C310.509369,771.401855 309.804504,768.503296 308.075897,770.074463  C307.293243,770.785767 306.607391,772.439575 305.394623,770.985657  C304.632385,770.071899 304.482605,768.761963 304.694885,767.280945  C306.000885,758.170166 310.727631,749.616211 309.178528,740.047424  C313.694061,735.092651 311.220551,728.411804 313.447113,722.939331  C314.089203,721.361267 314.666321,720.510742 313.040222,719.266113  C311.868866,718.369629 311.529938,717.014160 313.668213,716.062622  C315.907043,717.715942 318.579376,719.015808 317.240723,722.687683  C315.517883,724.087097 316.869751,725.238220 316.954193,726.677063  C317.005280,728.152954 316.719360,729.149780 315.283173,729.845642  z\"})),_path970||(_path970=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M290.961517,816.644897  C290.600433,817.274658 289.955566,817.479980 289.826080,817.860657  C288.365540,822.154480 285.580139,822.896790 281.373901,821.005005  C282.214355,817.801331 283.071869,814.489258 284.568787,811.359619  C285.424866,809.569763 287.748413,806.842163 283.261963,805.678711  C281.567291,805.239258 281.843964,803.869019 283.669067,803.147583  C287.792664,801.517639 287.772003,801.465332 290.663635,804.934937  C290.849243,807.502686 294.363098,812.191162 287.490662,810.493469  C287.464203,813.328064 290.606354,813.965576 290.961517,816.644897  z\"})),_path971||(_path971=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M291.401489,804.988892  C290.977539,800.838867 291.979218,796.760254 290.282593,792.507263  C289.184784,789.755371 289.668945,786.337769 291.368317,784.081543  C293.631592,782.543579 292.208160,789.351868 295.467529,785.114441  C296.050964,784.355957 297.672485,786.434448 296.629517,788.246582  C295.111938,790.883240 295.314575,792.215271 297.744965,794.429749  C299.708008,796.218506 298.170776,799.788391 297.664215,802.332397  C297.150757,804.910828 293.874023,804.237549 291.401489,804.988892  z\"})),_path972||(_path972=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M304.313751,680.851807  C303.450562,680.424500 302.362579,679.457214 302.455750,679.325500  C304.799225,676.012695 302.984894,671.741821 304.813171,668.503967  C307.346619,664.017334 307.068787,660.370117 303.155945,656.905029  C302.421326,656.254517 302.379700,654.821533 302.009155,653.374756  C305.270569,651.526184 305.502258,655.432312 307.819763,656.303467  C308.843475,656.982849 309.023468,657.890076 309.774933,658.777527  C309.999298,660.067261 310.001038,661.132080 310.005066,662.596008  C310.068573,668.333496 308.820984,673.398865 306.960022,678.367615  C306.498138,679.600830 305.603821,680.116760 304.313751,680.851807  z\"})),_path973||(_path973=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M322.737183,686.783325  C322.153717,691.170105 321.303955,695.340210 320.707764,699.771545  C321.940369,700.928223 322.271759,702.053955 322.067627,703.688293  C321.686279,705.343689 319.812134,705.723816 320.018829,707.672729  C320.013428,709.714539 320.011475,711.429138 320.010864,713.572144  C317.629211,718.484436 317.325317,718.640869 314.876434,716.347778  C316.579773,710.993713 317.039917,705.876709 317.258331,700.632446  C317.353058,698.358276 317.019379,696.583740 316.042847,694.352661  C317.823914,691.230164 316.981262,686.137146 322.737183,686.783325  z\"})),_path974||(_path974=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M258.000000,797.996338  C256.584869,798.806152 256.173828,801.878601 253.871994,800.430603  C252.153397,799.349548 252.695099,796.932129 253.216797,795.375916  C255.122498,789.691284 257.383759,784.125916 259.834442,778.581970  C260.387787,783.816589 261.644836,788.973938 259.996399,794.579712  C259.993896,795.001038 260.000000,795.000000 260.000610,794.997192  C259.196564,795.670349 258.809235,796.614990 258.181885,797.765015  C257.992920,798.003174 257.999847,798.000000 258.000000,797.996338  z\"})),_path975||(_path975=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M323.288696,686.755798  C320.660706,687.692566 318.351471,688.297852 318.819366,691.660706  C318.987793,692.871338 317.903107,693.633606 316.337219,693.950195  C313.856445,690.693970 313.089844,687.495056 316.839752,684.305176  C318.594482,683.385498 319.323151,682.121399 319.817200,680.259460  C322.032104,680.323120 322.500183,676.430725 324.283325,677.873840  C325.933563,679.209412 325.006775,681.841736 324.794128,683.890442  C324.700043,684.796631 323.999268,685.639832 323.288696,686.755798  z\"})),_path976||(_path976=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M271.339539,753.934814  C270.995026,752.512756 271.113770,751.014038 270.147034,749.332031  C269.868652,748.830627 269.739746,748.666077 269.803589,748.254272  C272.441498,744.701721 272.159729,740.235657 274.701935,736.965210  C275.316437,736.174683 274.750610,734.132202 276.466339,734.624268  C278.676697,735.258118 277.260468,737.004028 277.046539,738.668335  C277.001312,744.604858 275.061981,749.502319 271.339539,753.934814  z\"})),_path977||(_path977=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M267.016052,762.415466  C267.761871,762.001404 268.504181,762.002869 269.617676,762.005859  C270.888153,766.911194 267.408905,771.756958 270.102203,776.719299  C263.544434,775.894897 263.544739,775.895020 265.472351,770.061890  C266.250183,767.708008 267.263977,765.404175 267.016052,762.415466  z\"})),_path978||(_path978=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M240.419250,821.212036  C239.339523,817.917297 238.671585,814.831726 238.001831,811.373047  C238.752228,811.000000 239.504471,811.000000 240.632812,810.999878  C242.845200,810.698853 243.426132,811.714661 243.221649,813.661804  C242.999863,814.447449 243.000336,814.892395 243.001648,815.671143  C244.438797,818.676331 244.349060,820.735962 240.419250,821.212036  z\"})),_path979||(_path979=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M289.973877,733.127808  C288.781342,735.682434 289.721222,738.933472 286.334686,740.422058  C285.851471,737.137695 285.434509,734.227051 287.545868,731.680115  C288.349884,730.710205 287.328766,727.919373 289.746063,728.780151  C291.719879,729.482971 290.045288,731.380066 289.973877,733.127808  z\"})),_path980||(_path980=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M320.012115,679.548462  C320.586304,682.169861 323.279022,685.521118 317.324127,684.140137  C317.006439,682.933594 317.010406,681.869934 317.017700,680.407349  C317.445099,679.604980 317.799683,679.156311 317.979187,678.288208  C318.003571,675.629456 318.001434,673.258850 317.999634,670.444153  C318.167084,669.999268 318.334137,669.998596 318.751831,669.997803  C320.640167,672.890930 319.805786,676.057800 320.012115,679.548462  z\"})),_path981||(_path981=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M243.363342,813.989441  C242.968597,812.866699 242.544861,811.938293 241.290833,811.149597  C241.163879,809.468689 240.506989,807.428467 242.884827,807.120300  C244.586899,806.899780 246.672775,806.453735 246.983063,809.606201  C245.435211,810.934265 246.639816,814.150513 243.363342,813.989441  z\"})),_path982||(_path982=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M314.739136,715.996094  C318.036774,719.492554 317.534027,713.742065 319.730225,714.140015  C319.936829,717.165710 320.880219,720.588806 317.370789,722.989624  C317.593414,720.179260 314.700531,718.967102 314.045349,716.348755  C314.002441,715.997559 314.493561,715.997131 314.739136,715.996094  z\"})),_path983||(_path983=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M290.012634,716.376099  C290.265106,715.296997 290.424866,713.989929 291.439270,714.911743  C292.181244,715.586243 292.662079,717.017883 292.559631,718.042053  C292.403778,719.600464 292.277344,721.404175 290.634369,722.375061  C290.402405,722.512146 289.870880,722.515503 289.717499,722.353699  C288.410828,720.975403 289.389771,719.595093 289.771545,718.207153  C289.902191,717.732239 289.920380,717.226257 290.012634,716.376099  z\"})),_path984||(_path984=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M277.033356,843.372925  C280.461914,842.692383 280.481079,845.684937 281.069824,847.639465  C281.635925,849.518738 279.638824,848.736450 278.352844,849.001038  C277.681885,847.254211 277.356415,845.506042 277.033356,843.372925  z\"})),_path985||(_path985=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M310.031281,823.283630  C310.791992,823.137634 311.576355,823.283752 312.360443,823.431152  C313.436554,823.633545 315.525604,822.199829 315.400482,824.182495  C315.235382,826.799316 313.068024,825.267212 311.315674,825.031372  C310.665710,824.520325 310.360260,824.048279 310.031281,823.283630  z\"})),_path986||(_path986=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M262.057495,756.863831  C264.089569,757.524719 264.089569,757.524719 263.313507,761.515198  C261.370117,760.411438 262.225372,758.628540 262.057495,756.863831  z\"})),_path987||(_path987=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M284.345642,851.935669  C283.690033,851.531006 283.371796,851.059753 283.025909,850.293518  C283.252045,849.719116 283.449829,849.403931 283.814209,848.874817  C284.216064,848.673645 284.403442,848.655823 284.809540,848.816467  C285.028259,848.994995 285.499908,848.989807 285.735352,848.985352  C285.944458,850.123352 286.125549,851.358154 284.345642,851.935669  z\"})),_path988||(_path988=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M261.011047,750.365540  C261.451263,750.003601 261.887909,750.002319 262.651733,750.000488  C262.684601,751.131897 263.714844,753.019470 261.854523,753.194702  C260.786896,753.295288 261.130554,751.644409 261.011047,750.365540  z\"})),_path989||(_path989=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M243.250610,776.000244  C242.505081,775.599365 242.009216,775.039856 242.728714,774.595215  C243.406052,774.176575 243.744324,774.844604 243.962830,775.726624  C243.835373,776.000122 243.668289,776.000244 243.250610,776.000244  z\"})),_path990||(_path990=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M317.771423,678.178589  C318.995697,678.891418 318.775696,679.516785 317.301392,679.968201  C317.193054,679.458008 317.365082,678.907593 317.771423,678.178589  z\"})),_path991||(_path991=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M280.031982,739.276306  C280.160553,739.001892 280.328461,739.001404 280.748169,739.000427  C281.496216,739.401367 281.991425,739.960938 281.270294,740.406860  C280.592346,740.826111 280.251160,740.160583 280.031982,739.276306  z\"})),_path992||(_path992=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M341.372192,728.135681  C342.038422,725.347473 339.113312,722.917053 341.127472,719.732788  C341.955078,718.424438 338.888397,719.610168 337.292908,719.957886  C333.330078,716.051758 335.595337,711.837219 336.719543,707.344116  C337.142059,705.127380 336.894043,703.468628 335.085510,702.332703  C334.109406,701.719666 334.111633,700.652893 334.707886,699.735413  C335.889191,697.917725 335.962769,700.261414 336.523712,700.249268  C339.090302,700.193481 337.886261,698.107056 337.933167,696.999756  C338.090515,693.285828 339.463593,692.673279 342.667725,694.939209  C343.329651,695.343872 343.512512,695.758118 343.523804,696.576599  C341.766785,700.594421 343.853180,703.500305 345.571960,706.831970  C346.542358,709.446899 345.112274,711.940857 346.406311,714.566772  C346.738190,716.421204 347.345520,717.905334 346.241486,719.700562  C346.002319,721.825806 345.947449,723.649536 346.010040,725.469177  C346.124908,728.808411 344.677582,729.676147 341.372192,728.135681  z\"})),_path993||(_path993=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M332.386475,815.926636  C329.380341,813.817261 330.701996,808.805725 326.262268,807.815430  C326.086792,807.776245 325.877075,806.809143 326.051086,806.455200  C327.488556,803.530884 326.688019,802.460266 323.491669,801.291626  C320.866608,800.331970 321.887299,797.090393 322.856079,794.359131  C324.226807,793.276184 325.095703,794.430786 326.479797,794.640869  C328.210052,794.973511 329.188660,796.051147 330.720825,796.792297  C332.813293,799.481079 331.411469,803.294250 334.419678,805.283691  C328.224823,807.903442 337.114258,812.928589 332.386475,815.926636  z\"})),_path994||(_path994=/*#__PURE__*/React.createElement(\"path\",{fill:\"#131416\",opacity:1,stroke:\"none\",d:\" M330.831360,796.634766  C329.572479,796.697083 328.151062,796.394104 326.366577,796.045532  C325.243927,795.332031 324.809814,794.407227 323.967834,793.423340  C323.489624,792.649414 323.530487,792.031006 323.185699,791.228027  C322.997742,790.996765 323.000000,791.000000 323.001343,791.001221  C321.740082,789.854675 320.763214,788.526794 320.264771,786.484863  C320.085938,785.662048 320.052124,785.181213 320.066772,784.334839  C320.157318,782.924805 320.762787,782.183594 321.750275,781.257874  C323.433960,780.448669 324.432281,778.378784 326.691803,779.876038  C328.557465,785.344482 330.028412,790.712769 330.831360,796.634766  z\"})),_path995||(_path995=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M363.781677,712.786987  C364.001984,713.496399 364.154236,714.051575 363.981171,714.473145  C363.400665,715.887268 366.068542,717.854919 363.550110,718.705078  C361.476257,719.405090 361.528137,716.606506 360.159271,715.735229  C358.744080,717.287292 356.798462,718.356873 357.749817,721.074097  C358.257996,722.525513 357.147278,723.508667 355.345154,723.955200  C353.469635,722.750488 354.260956,721.419495 354.942078,720.167847  C355.706024,718.763977 356.042328,717.510559 354.188629,716.260498  C353.309662,714.978394 352.912201,713.905273 353.715942,712.337036  C356.145966,712.267334 357.467285,710.917480 358.378418,709.360352  C359.051331,708.210327 357.622131,705.771790 360.535614,706.029968  C362.725281,706.223999 364.078278,707.344971 364.215759,709.782593  C363.181519,710.743164 362.626343,711.530945 363.781677,712.786987  z\"})),_path996||(_path996=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M354.112610,711.741455  C353.999542,713.065491 353.999115,714.133484 353.997498,715.601929  C351.722290,714.807495 349.875854,714.576660 350.015289,718.017456  C350.126434,720.760620 348.751373,720.885925 346.361755,720.045288  C345.699554,718.578003 345.394928,717.151978 345.046967,715.361816  C345.688599,714.346130 346.359406,713.676636 347.534882,713.092407  C349.470795,712.538513 350.137299,711.151489 351.005127,709.945312  C351.994934,708.569702 353.134918,707.743286 354.794434,709.720093  C354.740906,710.493469 354.483063,710.989441 354.112610,711.741455  z\"})),_path997||(_path997=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M333.351135,782.569092  C333.206299,780.978027 332.289001,779.125366 333.945282,778.806335  C335.496552,778.507507 335.943207,780.505737 335.858398,781.674683  C335.647858,784.575378 337.275055,786.654419 338.440765,789.000244  C339.097931,790.322754 340.646576,791.647034 339.032318,793.744019  C335.989899,790.629700 334.687347,786.808472 333.351135,782.569092  z\"})),_path998||(_path998=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M335.000000,755.333801  C336.049011,754.414246 336.629852,752.417358 338.190399,753.459839  C339.665771,754.445435 338.456024,755.853333 338.100922,757.029663  C337.352600,759.508301 336.427032,756.673401 335.296204,757.033997  C335.000000,756.548523 335.000000,756.106873 335.000000,755.333801  z\"})),_path999||(_path999=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M320.706177,785.997070  C322.286774,787.146790 322.305359,788.861633 322.964050,790.655212  C321.072510,790.357117 318.508514,790.499634 318.766174,787.204041  C319.405090,786.578186 319.805145,786.140747 320.706177,785.997070  z\"})),_path1000||(_path1000=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M321.631378,781.000122  C321.756378,781.805054 321.507965,782.610046 321.129181,783.707520  C320.612946,784.378357 320.153229,784.525024 319.309784,784.219849  C319.001770,783.251099 319.003571,782.502197 319.012695,781.379028  C319.766052,781.003235 320.511993,781.001770 321.631378,781.000122  z\"})),_path1001||(_path1001=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M323.767883,792.709167  C325.038239,793.476868 325.758820,794.202209 325.973145,795.681396  C324.812469,796.012756 324.158813,795.202637 323.266663,794.190552  C323.017059,793.837402 323.016876,793.669434 323.016357,793.249512  C323.182495,792.806946 323.348938,792.616272 323.767883,792.709167  z\"})),_path1002||(_path1002=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M318.998871,784.374390  C319.444183,784.000000 319.888367,784.000000 320.665649,784.000000  C320.999634,784.443909 321.000488,784.887878 321.001282,785.664673  C320.527954,786.312866 320.054718,786.628113 319.285828,786.968994  C318.992737,786.245911 318.995239,785.497375 318.998871,784.374390  z\"})),_path1003||(_path1003=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M323.988220,792.698486  C323.852875,792.994080 323.685425,792.995544 323.267029,792.997253  C323.008636,792.552979 323.001282,792.108398 322.995819,791.330322  C323.317169,791.465942 323.636597,791.935120 323.988220,792.698486  z\"})),_path1004||(_path1004=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M233.000931,902.001221  C233.293564,901.513123 233.585251,901.023743 233.876953,900.534363  C234.075592,900.703613 234.274246,900.872925 234.472900,901.042236  C234.162308,901.333801 233.851730,901.625305 233.269653,901.957214  C232.998169,901.997559 233.000000,902.000000 233.000931,902.001221  z\"})),_path1005||(_path1005=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M253.994049,878.996643  C256.007111,879.647156 258.269501,875.189148 259.252777,878.164551  C260.133545,880.829468 258.750885,884.613220 254.533295,885.655640  C253.749161,883.534485 255.399567,881.473694 254.035492,879.340698  C253.991684,878.988098 254.000092,879.000000 253.994049,878.996643  z\"})),_path1006||(_path1006=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M256.465698,873.520874  C256.443817,873.479736 256.487549,873.562073 256.465698,873.520874  z\"})),_path1007||(_path1007=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M284.203400,848.757751  C283.877533,849.310608 283.685059,849.564880 283.209839,849.881836  C283.179169,849.452759 283.360046,848.906982 283.776917,848.186646  C284.144592,848.179077 284.276306,848.346069 284.203400,848.757751  z\"})),_path1008||(_path1008=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M284.256165,849.001587  C283.998779,849.002441 284.003326,848.507080 284.008118,848.259644  C284.323364,848.127625 284.580017,848.316345 284.905518,848.786621  C284.856689,848.996887 284.685120,848.998840 284.256165,849.001587  z\"})),_path1009||(_path1009=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M337.013214,582.628174  C336.880829,583.306824 336.688416,583.562439 336.212952,583.882141  C332.489075,583.625366 332.310638,583.346130 332.013550,577.434814  C332.008331,576.574951 332.083771,576.093933 332.372620,575.298340  C333.850616,573.807922 335.431274,572.798523 335.290100,570.328247  C335.524414,569.800354 335.653076,569.605408 336.051300,569.187134  C336.538605,568.881042 336.756317,568.798462 337.322876,568.725830  C338.086761,568.923889 338.332672,569.471802 338.631927,569.565369  C339.239349,569.755371 338.863281,570.220886 338.847717,569.648193  C338.825287,568.821594 337.908997,568.619385 336.933899,568.164795  C336.492188,567.494446 336.452972,567.040649 336.766785,566.297180  C336.972778,563.265198 335.175873,560.529419 336.945312,557.377319  C334.075684,554.427246 334.494537,550.802612 336.821716,549.151489  C341.786591,545.628967 340.980865,541.439575 339.870453,536.820496  C339.715454,536.175537 339.645874,535.513428 339.579041,534.470886  C339.613129,528.683105 341.396851,523.443237 341.077209,517.993225  C340.979980,516.335510 342.106323,515.312866 343.735291,514.289551  C345.736755,507.073578 345.309967,499.936584 345.905457,492.896942  C346.106995,490.514648 346.907684,488.527008 347.920654,486.405487  C349.265564,483.588562 350.723602,480.340363 346.421265,478.009644  C345.896606,477.803528 345.770630,477.619446 345.622498,477.102356  C345.711792,475.181030 347.793457,473.873993 346.140900,471.737244  C345.562744,470.055206 345.516327,468.642303 345.539795,466.871826  C345.584900,466.057159 345.608551,465.594299 345.636749,464.791840  C345.800507,462.452881 344.437469,460.558990 345.382141,458.225281  C346.242432,456.870453 349.018860,456.754791 346.974518,454.155609  C346.317017,451.683533 346.160583,449.584656 347.739380,447.320587  C348.526978,446.370789 349.048950,445.732788 349.593323,445.114502  C350.313080,444.296997 351.263153,443.787354 352.208679,444.453705  C353.213348,445.161713 352.937347,446.244995 352.271515,447.087433  C350.416534,449.434540 351.679657,451.088684 353.817108,451.591919  C356.563202,452.238495 355.765961,449.715759 355.998047,448.250702  C356.190491,447.035736 355.675934,445.102295 357.707184,445.380005  C359.529266,445.629120 357.989014,447.318024 358.348907,448.277557  C359.251556,450.684265 358.561066,452.301758 356.910614,454.459167  C354.616760,457.457672 359.535797,458.707153 359.448425,461.522552  C361.643524,461.044159 360.495850,458.451538 362.656769,458.064636  C364.403290,457.954895 365.436554,458.698090 366.590820,459.957336  C368.508392,465.954559 368.234344,471.696198 367.329071,477.820618  C367.161804,479.120361 366.924835,480.050537 367.190918,481.360413  C367.666412,485.055511 366.995056,488.649414 369.717773,491.836853  C370.825836,497.953491 374.377167,503.182159 373.235840,509.664307  C369.280701,508.743561 367.340363,506.441833 367.956238,502.261230  C368.324219,499.763245 368.207397,497.313660 365.287476,495.978943  C363.651306,495.231018 364.021606,493.435364 364.008545,491.970551  C363.981232,488.905304 364.000305,485.839630 363.364899,482.741302  C361.510101,486.696808 360.505768,490.617859 360.904785,495.038757  C361.157715,497.841034 361.498566,501.113678 358.724487,503.413605  C356.479980,505.274445 357.318176,507.379700 358.220581,509.708954  C358.975586,511.657745 360.871063,514.839355 355.947571,514.406494  C355.516388,514.368652 354.795166,515.066406 354.595276,515.574524  C354.310150,516.299255 355.068115,516.541565 355.601135,516.952454  C359.269257,519.779846 359.011505,523.502747 354.813416,524.722778  C352.606842,525.364136 351.992035,526.669250 351.155029,528.667603  C351.163300,529.683655 349.687714,530.713501 351.721771,531.022949  C353.822113,531.000488 355.691772,531.198303 357.303589,529.387817  C356.235046,533.299255 359.381683,538.476196 352.465790,539.744873  C348.422607,540.486694 348.542603,541.140686 351.689178,544.621826  C345.065491,545.385864 346.279755,551.030396 345.457336,555.313171  C343.121002,554.509888 344.861176,552.069092 342.772247,551.504944  C342.195374,553.135864 341.438629,554.753479 341.091339,556.454651  C340.885712,557.461853 340.572723,559.370667 342.018951,559.411072  C347.118164,559.553589 344.613831,562.359741 343.793274,564.304077  C343.045349,566.076416 343.145599,567.883606 342.865326,569.676147  C342.123077,574.423828 340.347229,578.703308 337.013214,582.628174  z\"})),_path1010||(_path1010=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M399.093140,569.661987  C398.858917,574.199036 396.192810,570.640320 395.009399,571.199646  C393.817261,572.549683 395.353119,572.977173 395.650085,573.775757  C396.294342,575.508240 394.849945,576.233826 393.885834,576.938110  C392.658813,577.834351 392.276733,576.362732 391.705414,575.694092  C389.852875,573.526062 388.074646,571.607544 384.694153,571.896057  C381.514191,572.167358 380.574951,569.369385 381.128662,567.125977  C382.677765,560.849792 377.818085,556.014832 377.822296,550.164429  C377.822754,549.548462 377.247742,548.543091 376.681885,548.930176  C372.821198,551.570740 374.713806,547.037842 373.248505,546.224976  C373.625092,540.755066 375.170227,535.646790 375.083557,530.283691  C375.048462,528.110535 375.799591,525.992676 378.602600,525.072021  C380.379852,525.875488 380.648010,527.325195 380.955902,529.122070  C380.782593,533.571716 382.144653,536.880981 386.067139,539.255493  C386.816071,539.979370 387.193298,540.558960 387.701263,541.466675  C388.794525,544.334351 390.178253,546.687683 391.407532,549.492798  C391.592590,550.038818 391.649780,550.263306 391.749908,550.832397  C392.878296,555.344360 395.559265,558.995605 394.654877,563.836853  C394.191406,566.317810 397.980194,567.171936 399.093140,569.661987  z\"})),_path1011||(_path1011=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M354.997864,709.627869  C353.572235,709.318481 352.229401,708.814880 351.970184,711.177307  C351.761658,713.078003 350.609528,713.941223 348.381165,713.988708  C345.458374,712.642456 345.971619,710.251892 345.961548,707.674438  C342.237335,704.960327 344.142639,700.786621 342.904968,697.329590  C343.000000,696.553162 343.000000,696.108704 343.000000,695.330933  C340.459351,689.246826 343.131744,683.705261 343.371552,678.060059  C343.651428,671.470398 344.465393,664.974121 344.999664,658.434021  C345.053772,657.771973 344.939728,657.061096 345.143402,656.453186  C345.649445,654.942627 345.529999,653.038940 347.351227,652.259521  C348.171417,651.908447 349.104736,652.100098 349.553406,652.890991  C350.409637,654.400269 349.454376,655.734009 348.964722,657.136414  C347.992859,659.919922 346.484680,662.862488 350.625885,664.945312  C351.309937,665.409607 351.450439,665.864014 351.196899,666.688599  C349.103607,667.109619 346.562958,666.448975 347.804443,670.001587  C348.350220,671.563416 347.008484,672.783569 346.689484,674.145447  C346.066681,676.804565 344.765808,680.298950 349.781342,680.330688  C350.745667,680.336792 351.760406,681.039124 351.543732,681.688110  C350.065704,686.115417 353.862213,691.068604 350.020355,695.291077  C348.772583,696.662476 349.015747,697.002747 351.087067,698.076111  C353.011475,699.073425 351.930145,700.657959 351.770111,701.825378  C351.454590,704.127563 349.528595,706.802124 354.219543,706.640137  C355.138214,706.608337 354.929657,708.294434 354.997864,709.627869  z\"})),_path1012||(_path1012=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M350.998474,667.412415  C350.999420,666.558167 351.000061,666.113953 351.000977,665.336609  C352.371765,663.076233 352.667114,661.184692 352.576294,658.623474  C352.283997,650.381165 351.884705,641.907837 353.538818,633.941467  C354.247345,630.529236 354.649109,627.540466 354.471710,624.118408  C354.259705,620.029053 359.037872,618.512817 360.245758,614.825317  C361.124756,618.737976 361.601471,622.605347 360.313354,626.348694  C358.518188,631.565491 358.810181,636.799438 359.532379,642.096191  C359.620636,642.743408 359.997375,643.733093 359.715271,643.992126  C354.927643,648.387634 357.635773,653.685913 358.088440,658.560608  C358.660034,664.715576 355.317505,669.702026 353.934662,675.258606  C353.708862,676.166016 353.232605,676.866333 352.215607,676.352783  C350.970306,675.723877 350.048950,674.706665 350.198120,673.202087  C350.376709,671.400085 350.723969,669.614868 350.998474,667.412415  z\"})),_path1013||(_path1013=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M358.943420,729.954712  C359.450806,734.370605 356.404968,737.839966 356.766907,742.093811  C357.278992,748.112610 355.305939,754.123047 356.360870,760.973206  C359.261871,757.992004 358.428467,754.436829 359.598053,751.633423  C361.481903,752.190308 361.149536,753.667114 360.932129,754.573547  C359.393494,760.989136 361.293304,767.641296 359.506165,774.021729  C359.382538,774.462952 359.372162,774.935974 359.309143,775.394165  C355.089355,774.397034 355.431122,779.037781 353.262512,780.454895  C351.761444,780.039551 351.719360,778.666687 352.080475,778.001953  C354.526459,773.499512 352.806366,768.626770 353.255737,763.977600  C353.638397,760.019043 352.585449,755.632202 350.393097,751.959961  C349.144653,749.868713 347.832123,748.165466 351.627625,747.655640  C353.213562,747.442688 352.355499,746.145508 352.576813,745.307190  C353.972504,740.020508 355.509247,734.767456 356.037354,729.292236  C356.111542,728.523376 356.115723,727.354492 357.284943,727.776367  C357.906738,728.000732 358.233429,729.043030 358.943420,729.954712  z\"})),_path1014||(_path1014=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M373.341370,510.067871  C372.317841,504.122894 369.034302,498.861176 369.000519,492.423492  C366.489319,487.070038 367.645294,481.734619 367.396942,476.565826  C367.315979,474.880371 368.326965,473.443756 370.432800,472.600647  C372.726654,472.823059 373.252350,474.238037 373.335175,475.782623  C373.795532,484.367889 375.554260,492.787567 376.523743,501.307068  C376.937408,504.942139 378.114258,508.401733 379.360779,511.814850  C379.943848,513.411438 380.445953,514.942932 379.880432,517.052002  C379.077087,518.430664 378.329132,518.383911 377.252380,517.348877  C376.014069,514.649353 375.451904,512.105896 373.341370,510.067871  z\"})),_path1015||(_path1015=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M370.696899,577.067139  C371.586121,577.491577 372.163727,577.978943 372.867676,578.725342  C373.786407,581.696228 374.315979,584.334534 373.244507,587.196655  C372.720337,588.596802 372.265656,590.863403 374.175629,591.603638  C377.650482,592.950317 377.780579,594.578369 375.255981,596.909973  C374.575623,597.538330 374.386871,598.166321 374.542023,599.082092  C374.823151,600.741150 376.054810,603.309082 373.490601,603.535767  C371.258331,603.733215 371.707825,600.695496 371.310974,599.155334  C369.444733,591.912537 368.339264,584.567505 370.696899,577.067139  z\"})),_path1016||(_path1016=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M336.603546,707.019470  C337.555847,711.077454 335.847961,715.150024 336.988037,719.613525  C336.200592,722.585205 336.346680,726.397339 331.375549,724.007202  C330.421692,723.312195 330.261322,722.538452 330.754028,721.341553  C331.308105,720.452820 332.027466,719.662170 331.865753,719.384216  C329.119751,714.664978 335.065033,711.968140 334.565552,707.781799  C334.544037,707.601440 335.638550,707.287964 336.603546,707.019470  z\"})),_path1017||(_path1017=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M359.436188,691.015686  C357.434174,693.690186 355.964722,692.334229 356.286865,690.431641  C357.408478,683.806824 354.902832,675.700500 363.229004,671.723450  C364.126465,671.294800 363.721497,669.699951 365.074799,669.566650  C366.315094,670.658386 365.330658,672.270386 364.877319,672.575073  C358.020874,677.182312 360.043304,684.280762 359.436188,691.015686  z\"})),_path1018||(_path1018=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M313.230408,748.188965  C313.241608,747.487000 313.503967,747.003052 313.873535,746.265625  C316.976318,745.350586 315.706177,742.889587 316.016968,741.117249  C316.257233,739.747070 316.546387,738.104980 318.261017,738.529053  C320.277954,739.027771 319.001038,740.248047 318.660339,741.548645  C317.844116,744.664673 319.103729,748.019897 317.993530,751.595337  C317.594849,752.497986 317.251495,753.053833 316.306152,753.127686  C315.171326,751.461609 314.326447,749.934326 313.230408,748.188965  z\"})),_path1019||(_path1019=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M377.041199,517.361572  C377.491211,517.250549 377.987976,517.510437 378.741760,517.882690  C381.811432,517.958008 381.925568,520.680054 382.296387,522.129944  C383.265686,525.919617 387.627594,528.540161 385.744385,533.348511  C382.790863,534.288513 381.443939,532.700562 380.152802,530.369385  C379.667206,528.584412 379.333221,527.168884 378.983795,525.387451  C379.466675,522.301697 377.880249,520.119507 377.041199,517.361572  z\"})),_path1020||(_path1020=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M346.118042,752.304077  C342.544525,749.042297 344.693390,744.499023 343.210724,740.711914  C342.775452,739.600159 344.214325,738.665405 345.420898,738.557373  C347.231293,738.395203 347.006897,739.926086 346.960052,740.969971  C346.791901,744.716187 347.571167,748.505310 346.118042,752.304077  z\"})),_path1021||(_path1021=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M330.686188,720.861572  C330.999207,721.753052 330.999603,722.501221 331.000000,723.623474  C326.456482,724.326416 325.939667,719.889771 323.571045,717.651917  C323.411987,717.501709 323.608124,716.624146 323.881592,716.434448  C324.654541,715.898193 325.551331,716.132751 326.070160,716.823486  C327.262329,718.410522 328.381836,720.032104 330.686188,720.861572  z\"})),_path1022||(_path1022=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M320.811859,705.256470  C320.994476,703.624023 320.985321,702.241577 320.968689,700.446045  C322.702454,699.755371 324.443634,699.477905 327.717285,698.956238  C324.416473,701.446106 324.543915,704.722168 321.359497,705.954102  C320.877411,705.838806 320.748749,705.672668 320.811859,705.256470  z\"})),_path1023||(_path1023=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M363.763733,697.794434  C363.730682,699.568481 364.713226,701.417725 362.973053,702.589050  C362.331604,703.020752 361.350891,702.587097 361.359100,702.030518  C361.389191,699.979553 357.253998,698.664246 360.660034,696.077026  C362.209625,695.939880 362.872406,696.766052 363.763733,697.794434  z\"})),_path1024||(_path1024=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M364.029724,697.655273  C362.856445,697.959351 361.928528,697.540344 361.148254,696.291260  C360.153534,694.640015 360.067139,693.409790 361.825317,692.244141  C362.855286,692.168335 363.710205,692.336670 364.782593,692.754944  C364.693878,694.433289 364.387756,695.861755 364.029724,697.655273  z\"})),_path1025||(_path1025=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M316.011230,753.392639  C316.505615,752.733521 316.995026,752.478149 317.737152,752.110840  C317.995331,754.692505 319.090179,757.028381 321.241028,759.830750  C316.242462,759.601318 315.952728,756.835510 316.011230,753.392639  z\"})),_path1026||(_path1026=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M367.000366,693.334839  C366.887299,690.133850 367.708679,687.535950 369.618378,685.194641  C368.684326,688.357117 369.969849,691.856995 367.379517,694.910339  C367.005951,694.562927 367.003357,694.116333 367.000366,693.334839  z\"})),_path1027||(_path1027=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M351.973267,530.698059  C351.784790,532.781921 350.614899,533.446411 348.651703,533.633789  C348.369843,531.751648 348.668518,530.228943 350.671692,529.065430  C351.318787,529.469666 351.632202,529.937805 351.973267,530.698059  z\"})),_path1028||(_path1028=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M339.105713,618.617065  C340.149506,620.104126 340.502258,621.517639 338.938965,622.593018  C338.674194,622.775208 337.818207,622.603699 337.647888,622.334534  C336.617401,620.706055 337.583313,619.575256 339.105713,618.617065  z\"})),_path1029||(_path1029=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M353.056396,783.484253  C354.086700,784.598206 354.384857,785.649963 353.091492,786.427673  C352.839081,786.579407 352.089996,786.309509 351.851746,786.010010  C350.856171,784.758423 351.465546,783.945740 353.056396,783.484253  z\"})),_path1030||(_path1030=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M315.291931,730.120850  C315.495636,729.115234 315.996521,728.235352 316.740356,727.175293  C318.158813,728.782349 319.269623,730.541748 315.291931,730.120850  z\"})),_path1031||(_path1031=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M363.999359,712.627075  C362.906860,712.883118 361.470154,713.203918 361.284546,711.607544  C361.131958,710.295227 362.259155,710.119202 363.637573,710.011047  C364.000000,710.750610 363.999969,711.501160 363.999359,712.627075  z\"})),_path1032||(_path1032=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M312.336426,757.945496  C312.012329,756.937012 312.009369,755.868103 312.011414,754.398376  C313.519073,755.080811 315.077148,756.154907 312.336426,757.945496  z\"})),_path1033||(_path1033=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M349.245972,744.780029  C349.308014,743.814514 349.649658,743.292603 350.374573,743.695984  C350.635712,743.841248 350.813232,744.564209 350.686737,744.891113  C350.410065,745.606018 349.853241,745.672791 349.245972,744.780029  z\"})),_path1034||(_path1034=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M341.756348,744.788208  C341.151154,745.679688 340.593658,745.618835 340.315857,744.901001  C340.188995,744.573303 340.365692,743.848389 340.626526,743.703857  C341.350281,743.302734 341.695801,743.820190 341.756348,744.788208  z\"})),_path1035||(_path1035=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M320.686646,705.058838  C321.003662,705.006409 321.003845,705.505615 321.005005,705.755249  C320.829407,706.550354 320.652679,707.095825 320.245667,707.820618  C318.814026,706.875305 318.668762,705.880066 320.686646,705.058838  z\"})),_path1036||(_path1036=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M336.633301,727.603149  C337.521271,727.273315 338.038025,727.524719 338.177795,728.250122  C338.206818,728.400757 337.851410,728.773010 337.647430,728.794067  C336.962341,728.864868 336.425812,728.637146 336.633301,727.603149  z\"})),_path1037||(_path1037=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M345.461243,755.441772  C345.890350,754.866516 346.322174,754.513428 346.662720,755.031860  C347.036346,755.600586 346.865173,756.243103 346.166687,756.449768  C345.989929,756.502136 345.634949,755.952271 345.461243,755.441772  z\"})),_path1038||(_path1038=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M349.642181,737.571045  C350.384918,737.363281 350.654755,737.622986 350.539734,738.200012  C350.515778,738.320007 350.346069,738.481445 350.224976,738.499512  C349.641479,738.586548 349.398956,738.301208 349.642181,737.571045  z\"})),_path1039||(_path1039=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M359.449310,744.955322  C359.818573,744.282776 360.189972,744.273682 360.517883,744.755249  C360.586517,744.856018 360.583801,745.089172 360.512329,745.187256  C360.170197,745.656494 359.799133,745.639038 359.449310,744.955322  z\"})),_path1040||(_path1040=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M316.147430,767.702332  C316.274017,767.307495 316.440857,767.115479 316.607727,766.923523  C316.686279,767.204651 316.764832,767.485779 316.843384,767.766968  C316.624847,767.813049 316.406281,767.859131 316.147430,767.702332  z\"})),_path1041||(_path1041=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M395.239014,639.230103  C394.543274,637.945496 393.535858,636.657654 394.311188,635.749878  C397.193817,632.374756 395.876404,628.833191 395.501282,625.118958  C395.303406,623.159546 394.729889,620.589844 396.954956,618.754639  C398.152100,617.767151 398.189667,616.098145 397.136200,614.320557  C396.984589,612.010071 394.737091,609.560181 398.475952,608.281372  C399.179382,608.317444 399.340118,608.910156 399.709473,608.797363  C399.994507,608.710144 399.857300,608.416870 399.171295,608.146484  C394.890289,604.581909 396.735291,599.203003 394.615234,595.119324  C394.053070,594.036438 395.773743,592.706238 396.779968,593.082703  C403.320038,595.529480 406.320374,590.381958 410.218842,587.114258  C410.597534,586.796814 411.087830,586.642944 411.933838,586.523254  C415.470734,589.809448 416.438324,593.948181 415.968536,598.214111  C415.403107,603.348206 412.755249,605.452637 407.530579,605.833008  C406.517303,605.906738 405.553040,605.917969 404.807739,607.178589  C404.790924,610.159607 406.656281,612.031494 407.700623,614.266113  C408.409332,615.782532 409.664001,618.307861 408.585175,618.861816  C404.120819,621.154358 407.179657,624.282288 407.207642,627.007935  C407.235596,629.729919 405.477325,631.661072 404.382599,633.840088  C402.879486,636.831970 402.386353,639.419983 405.257843,641.835571  C405.883636,642.362000 406.285919,643.136475 406.706970,643.857422  C409.720642,649.017639 409.604553,650.462097 405.499603,655.691589  C400.272797,654.854065 399.385468,653.427246 398.934143,645.356262  C398.873657,644.688416 398.685089,644.432434 398.215027,644.110352  C397.614777,642.227478 396.573822,640.828247 395.239014,639.230103  z\"})),_path1042||(_path1042=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M398.606293,644.999512  C401.614197,648.140503 400.110352,653.383179 404.984863,656.037964  C406.800476,658.752319 406.379303,661.747131 408.635498,664.052368  C409.680359,665.454529 410.627106,666.502502 411.480560,668.054565  C411.658691,668.891174 411.601257,669.371704 411.235779,670.142151  C401.770630,675.277527 400.733093,683.848083 401.835052,692.856079  C402.218231,695.988525 402.616241,699.076782 402.432007,702.213684  C402.314148,704.220947 402.048828,706.254150 399.207825,706.911804  C398.015289,706.816956 397.344543,706.473816 396.963013,705.357849  C395.866852,701.487061 392.595642,698.778198 393.138031,694.318420  C395.406921,689.649231 395.590912,685.519409 392.473969,681.262268  C390.920105,679.140015 391.536316,676.161926 390.878784,673.328247  C391.583405,670.367798 391.071716,667.312317 394.076019,665.644470  C395.025238,665.117432 394.558777,664.151245 394.173950,663.438049  C392.844330,660.974060 393.096375,659.408081 396.257080,658.925781  C398.953369,658.514343 399.284882,656.823914 398.262512,654.518066  C397.332214,652.419800 396.669708,650.200684 395.703918,648.120850  C394.351501,645.208191 396.177917,645.063782 398.606293,644.999512  z\"})),_path1043||(_path1043=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M390.756592,673.203735  C393.549164,677.182617 394.054413,682.181519 396.679474,686.456421  C398.184723,688.907654 396.006836,691.805481 393.307983,693.836304  C391.390991,692.983337 392.608307,690.809631 391.159485,689.596375  C388.091766,691.118347 392.636963,697.176819 386.425690,696.998169  C382.022949,697.770020 380.244324,694.363037 377.645569,692.521973  C377.033478,692.088318 377.059204,690.902161 377.494141,690.790710  C381.641602,689.727905 379.683777,686.447876 380.020630,684.051514  C380.644714,679.611816 382.250916,678.398499 386.013611,679.689575  C387.195892,678.734070 386.266754,677.968994 385.770142,677.176880  C385.214172,676.289978 384.761963,675.328125 385.724121,674.521423  C386.458008,673.906189 387.215454,674.302673 387.917694,674.888855  C390.033813,676.655334 389.727753,674.049438 390.756592,673.203735  z\"})),_path1044||(_path1044=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M403.331482,607.209106  C403.120911,603.376099 406.120148,604.198242 408.023376,604.133057  C412.503693,603.979614 416.515228,598.714111 414.454193,594.571594  C413.292297,592.236328 413.353363,589.822510 412.257446,587.273254  C410.750427,586.125793 409.568237,585.205261 409.158325,583.281982  C409.017670,582.551880 409.016876,582.109192 409.017090,581.334595  C409.873871,577.395081 409.522552,573.976562 407.428223,570.829834  C406.421448,569.317139 405.573822,567.764099 406.370728,565.529297  C406.908508,564.839172 407.395355,564.584106 407.861420,564.758545  C413.854797,567.003479 420.254730,578.610352 418.860413,584.995239  C417.844879,589.645508 420.232941,594.017334 419.546844,598.721497  C419.167999,601.318726 418.699188,604.195618 419.467896,607.300659  C419.261505,611.260803 417.416870,612.144226 414.114441,611.176208  C410.546265,610.130432 406.414825,610.710632 403.331482,607.209106  z\"})),_path1045||(_path1045=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M408.808655,583.221741  C410.398468,583.755127 411.545044,584.717834 411.955444,586.674561  C410.595276,589.402893 407.961578,590.590393 406.418610,593.059326  C405.464874,594.585449 402.914398,596.658447 400.036743,595.044800  C398.782562,594.341553 397.129913,593.251526 395.970276,594.552246  C394.764526,595.904602 397.184113,596.523743 397.337158,597.774475  C397.778259,601.379333 397.519287,605.158752 399.956299,608.644958  C395.515350,608.513550 398.745117,612.269043 397.242401,613.776733  C395.388092,613.336243 394.461945,611.692261 394.785828,610.425842  C395.979004,605.760132 391.597687,602.219299 392.537811,597.709961  C392.691406,596.973511 392.292755,596.578369 391.753906,596.088989  C389.119904,593.696899 388.047699,592.593567 391.278687,588.411987  C396.126465,582.138184 396.686035,584.922791 398.479156,589.577942  C398.791046,590.387695 399.803406,591.344788 400.604340,591.460938  C402.204834,591.692993 401.859467,589.850525 402.525513,589.026978  C404.270325,586.869446 404.205780,582.722595 408.808655,583.221741  z\"})),_path1046||(_path1046=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M407.178711,564.690186  C406.971497,566.860535 407.274597,568.388489 408.651520,569.982300  C411.402954,573.167175 412.136566,576.914978 409.391418,580.902466  C406.245728,577.378296 403.473358,573.754089 400.357727,570.062500  C400.382202,567.409912 400.726074,564.936646 398.761566,562.621643  C397.548218,561.191833 397.507050,559.236084 398.640442,557.163635  C401.155518,555.755371 402.342865,557.197083 403.179077,558.921326  C404.016113,560.647217 405.413696,561.789307 406.961700,563.338196  C407.241608,563.882812 407.303375,564.124390 407.178711,564.690186  z\"})),_path1047||(_path1047=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M398.701202,556.407593  C398.860840,559.515625 398.956665,561.885315 401.164246,563.710327  C403.825714,565.910706 403.206329,567.866821 400.219421,569.726440  C399.845032,569.996277 399.675537,569.997253 399.251831,569.999146  C395.427551,567.731018 390.230408,566.530823 393.519806,560.179932  C394.190552,558.885010 393.014313,556.706665 391.758484,555.283325  C390.795563,554.191895 389.513062,553.189819 390.739929,551.221008  C391.651031,550.876465 392.316559,550.829285 393.307831,551.069031  C395.866150,552.052063 396.877258,554.195129 398.701202,556.407593  z\"})),_path1048||(_path1048=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M378.227356,705.766235  C377.211548,705.687317 376.423126,705.374695 375.316711,705.031006  C373.549042,704.854736 371.639832,705.636353 370.766785,704.341675  C369.746033,702.827820 371.945770,702.343384 372.549866,701.292969  C372.794128,700.868347 372.837097,700.281311 373.160828,699.957031  C374.516479,698.598877 372.823730,694.837524 376.329468,695.393982  C379.355927,695.874329 379.487457,698.810486 379.936188,701.932861  C379.484863,703.639893 379.293274,704.747009 378.227356,705.766235  z\"})),_path1049||(_path1049=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M376.326660,555.345215  C376.505981,559.305115 380.485046,562.270142 378.012695,567.075684  C375.535889,563.062683 374.760223,559.126953 374.078827,555.184937  C373.896210,554.128540 374.443024,553.085327 375.738983,553.300049  C376.516083,553.428833 376.277496,554.361511 376.326660,555.345215  z\"})),_path1050||(_path1050=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M381.247589,575.756714  C382.644257,573.193298 384.589996,573.706604 386.283234,574.730225  C386.997925,575.162231 386.231079,576.233826 385.611603,576.788025  C383.914856,578.305969 382.404205,578.362549 381.247589,575.756714  z\"})),_path1051||(_path1051=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M379.391022,707.980774  C379.001099,707.554199 378.998535,707.110840 378.995728,706.334961  C379.056549,704.828674 378.845551,703.613159 379.762787,702.266724  C379.997559,701.998535 380.000000,702.000000 379.999390,701.998779  C382.971069,704.098877 383.311218,706.102966 379.391022,707.980774  z\"})),_path1052||(_path1052=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M395.012024,639.347595  C397.287384,639.580688 399.329529,640.340515 398.133667,643.694336  C396.290161,643.061584 394.993408,641.840149 395.012024,639.347595  z\"})),_path1053||(_path1053=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M384.623566,705.077393  C386.665649,706.428894 384.620514,707.883057 384.978607,709.672363  C382.152435,708.763855 382.296051,707.090454 384.623566,705.077393  z\"})),_path1054||(_path1054=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M371.401306,680.415955  C370.306702,680.877197 369.450317,680.827881 369.505188,679.716003  C369.527069,679.272705 370.284180,678.525269 370.727081,678.510010  C371.835968,678.471863 371.880829,679.325562 371.401306,680.415955  z\"})),_path1055||(_path1055=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M403.477539,580.464172  C403.520386,580.440979 403.434662,580.487366 403.477539,580.464172  z\"})),_path1056||(_path1056=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M316.728638,949.040588  C316.710693,949.490906 316.416229,949.978577 316.121765,950.466187  C315.923309,950.296875 315.724915,950.127563 315.526489,949.958252  C315.835052,949.664734 316.143585,949.371277 316.728638,949.040588  z\"})),_path1057||(_path1057=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M316.997040,948.997559  C317.172211,948.447876 317.350342,947.900635 317.761627,947.175049  C317.994781,946.996704 318.000000,947.000000 318.002991,947.002441  C317.827789,947.552124 317.649658,948.099426 317.238342,948.825012  C317.005157,949.003296 317.000000,949.000000 316.997040,948.997559  z\"})),_path1058||(_path1058=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M302.535522,972.477173  C302.557922,972.519165 302.513123,972.435242 302.535522,972.477173  z\"})),_path1059||(_path1059=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M393.681702,837.221558  C393.287628,833.149597 394.690613,830.816162 398.532898,829.670593  C401.509125,828.783203 402.969849,827.023865 400.599487,823.818298  C397.946533,820.230530 400.110901,816.195374 400.013245,812.363770  C399.958801,810.226929 399.982330,808.088013 399.952148,805.490601  C400.142700,804.914673 400.351868,804.798218 400.915588,804.734192  C403.222076,805.938416 403.626404,807.993530 403.657959,809.881897  C403.734985,814.492493 405.286499,818.729858 406.654236,823.372620  C408.277039,826.018005 407.602173,828.234680 406.334961,830.760925  C402.798706,837.951660 402.849518,838.309814 408.058411,842.125122  C408.887268,842.815735 409.299164,843.392639 409.721252,844.380493  C410.012665,845.662048 409.816284,846.559692 409.367096,847.748230  C408.999695,848.646240 408.665314,849.202637 408.555664,850.163879  C408.979980,852.179199 409.355103,853.887268 409.749268,855.939819  C409.754974,856.745300 409.642548,857.188477 409.239990,857.884644  C406.362671,858.822571 405.871765,860.653076 406.182373,863.100220  C406.507263,865.659424 406.269806,868.179626 403.779999,869.699707  C401.292206,871.218628 403.728516,872.044922 404.348114,873.440796  C405.369141,875.458008 405.681976,877.357605 404.252991,878.752380  C401.877960,881.070679 400.421570,876.922974 397.862488,877.749634  C396.924591,878.147034 396.278900,878.367310 395.296631,878.689575  C394.484650,878.857849 394.009949,878.868713 393.178345,878.750305  C391.372223,878.079163 390.325500,877.151245 390.211304,875.115723  C390.327087,874.527283 390.411072,874.301086 390.717773,873.791382  C391.309570,873.208557 391.705109,872.949951 392.444824,872.601013  C394.677826,871.197815 394.821564,869.188232 394.815704,867.206909  C394.809875,865.231018 394.729645,863.255615 394.917908,861.286255  C395.069794,859.697144 394.549713,857.747803 396.287750,856.808716  C398.608154,855.554993 399.133301,858.407104 400.883850,858.939514  C401.100677,858.844116 401.299866,858.491455 401.299866,858.491455  C401.299866,858.491455 400.843353,858.503540 400.546478,858.438232  C395.305084,854.544128 393.526062,849.004578 392.128815,843.273987  C391.612976,841.158386 391.367004,839.048889 393.681702,837.221558  z\"})),_path1060||(_path1060=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M401.261719,804.907532  C400.772583,805.020325 400.604980,805.021057 400.185455,805.026489  C399.612640,800.977478 399.291718,796.923767 398.979065,792.434387  C401.410370,791.952515 401.410370,791.952515 403.355591,794.044250  C402.039001,791.470642 400.034180,789.502991 400.030975,786.329224  C400.051392,785.992920 400.025330,785.504700 399.993958,785.262451  C399.999207,783.596741 400.035797,782.173218 400.117249,780.325317  C403.580841,778.751831 404.857117,781.441223 406.360626,783.498169  C407.413910,784.939148 407.817383,787.060669 410.093079,787.063660  C412.776215,787.067139 412.269318,784.568237 412.960144,783.045105  C413.458923,781.945496 414.065338,781.003052 415.568848,780.438843  C417.890686,780.410034 418.885071,781.905396 420.256348,783.448547  C420.634735,784.213379 420.735962,784.686157 420.699036,785.533264  C418.882263,789.976135 421.237396,792.866882 423.698639,796.103638  C424.363770,797.646301 424.420380,798.903809 424.127258,800.559814  C423.841919,801.411804 423.582550,801.845764 422.976257,802.484070  C417.766357,804.348389 416.319305,803.700256 413.660065,798.840210  C413.086945,797.792725 413.122223,795.721985 411.307007,796.257507  C409.606598,796.759094 409.661896,798.617493 409.921722,800.108826  C410.379028,802.733215 410.356781,805.400452 410.883545,808.354553  C411.047363,808.911926 411.100830,809.138062 411.203735,809.708496  C411.198029,811.663147 411.432770,813.795410 409.392609,814.004456  C407.310089,814.217896 406.423706,812.337463 406.120605,810.431458  C405.865814,808.828918 405.828278,807.193909 405.290131,805.636108  C404.496796,803.339417 403.157013,803.583008 401.261719,804.907532  z\"})),_path1061||(_path1061=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M393.584137,836.958618  C391.282349,843.493835 395.031097,848.658325 397.747070,853.968201  C398.522156,855.483521 400.110962,856.582642 401.658905,857.932983  C401.738678,859.352966 402.563934,860.891907 401.358978,862.159180  C399.066895,861.292969 399.711853,857.664856 396.301239,857.393433  C396.301239,860.479553 396.085602,863.493469 396.361694,866.461548  C396.639465,869.447876 396.179749,871.958557 393.362976,873.929749  C389.691559,870.948975 391.552704,866.384338 389.712006,862.523193  C389.576721,860.042908 389.299347,857.931763 389.461182,855.497559  C389.924744,854.471619 390.521881,853.898438 390.891418,852.583862  C392.262787,846.785522 390.624237,841.814697 389.546021,836.734192  C390.821960,835.827820 391.989136,837.265381 393.584137,836.958618  z\"})),_path1062||(_path1062=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M399.743103,786.151733  C402.793854,789.315979 403.838593,793.420593 405.919067,797.764038  C402.181610,796.912415 402.996582,792.311707 399.339111,792.051514  C395.555145,789.820923 398.565765,788.149963 399.743103,786.151733  z\"})),_path1063||(_path1063=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M391.233032,854.656494  C389.516724,857.079346 391.763428,859.176819 390.953552,861.653931  C390.230164,862.623352 389.446777,862.762207 388.266418,862.191895  C388.514069,858.807800 387.184937,855.887085 387.028015,852.434631  C387.041626,851.590942 387.054169,851.160217 387.066772,850.406616  C387.211914,849.936340 387.356995,849.788879 387.739075,849.841675  C388.799866,850.610291 389.623657,851.178650 390.713196,851.889282  C390.978943,852.031677 390.992859,851.999756 390.978149,852.001221  C391.521698,852.688477 391.709778,853.455078 391.233032,854.656494  z\"})),_path1064||(_path1064=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M387.892212,849.880859  C387.976044,850.041992 387.520386,850.053101 387.293610,850.068420  C387.200012,849.730103 387.331024,849.372131 387.892212,849.880859  z\"})),_path1065||(_path1065=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M423.290405,801.217834  C423.034119,799.584534 423.014893,798.205933 423.000397,796.413696  C421.467621,793.060181 420.998535,789.778687 419.989929,786.331238  C419.955109,785.569031 419.948975,785.136108 419.931396,784.378784  C419.183929,783.017334 418.267761,782.051453 418.789612,780.298340  C421.461365,778.951660 426.202728,779.824219 421.998596,774.363220  C420.059448,771.844421 424.797119,772.702148 426.341949,771.363770  C424.271973,766.344055 415.754242,763.356995 420.974365,755.447632  C426.695129,751.841370 431.090637,753.252441 434.565491,759.821228  C429.648346,765.677185 431.090363,771.516724 438.171844,774.597595  C439.399139,775.131470 440.773560,775.533020 441.468964,776.691772  C443.542908,780.147705 446.888214,781.357117 450.841431,782.324829  C451.742065,782.976379 452.149902,783.578369 452.554443,784.606873  C451.251587,788.028931 447.745941,789.156067 442.757446,787.818909  C437.805664,786.491577 432.379974,788.093811 427.560425,784.910706  C429.871582,789.067505 429.185760,793.238220 428.999725,797.229065  C428.859436,800.239319 427.495728,802.834900 423.290405,801.217834  z\"})),_path1066||(_path1066=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M403.204285,737.329041  C403.046204,736.828796 403.043640,736.660400 403.026337,736.239868  C402.759796,735.798767 402.533569,735.582947 402.187500,735.155884  C399.143921,733.018494 396.697784,730.782593 396.948486,726.458252  C395.715179,722.889587 396.291779,719.551941 396.171509,716.295105  C396.093536,714.184570 397.187531,712.492310 399.988159,712.157532  C400.919891,712.303040 401.402832,712.517151 402.132568,713.076660  C407.064911,718.823486 410.338287,725.154419 413.801605,731.774292  C415.030273,732.904602 415.685913,733.954285 415.790161,735.666382  C415.016998,738.425415 414.711456,740.926575 413.623779,743.579834  C408.989532,743.537292 406.773651,739.631836 403.204285,737.329041  z\"})),_path1067||(_path1067=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M412.890320,744.227234  C413.029449,741.345642 412.610352,738.692261 414.727661,736.215454  C417.060333,735.888855 417.812103,737.380676 418.684814,739.196533  C419.407013,741.057312 419.511200,742.881653 421.521027,743.947632  C425.559723,745.248352 427.570862,749.272583 431.903046,750.144653  C434.941711,752.169312 436.948029,754.562439 437.706329,758.222229  C437.455414,759.629150 436.814453,760.368835 435.648315,761.135376  C435.068146,761.320129 434.821503,761.340393 434.249725,761.181580  C431.866150,755.075623 427.263000,754.263428 421.437012,755.042358  C420.572601,755.002991 420.154663,754.932983 419.420593,754.829712  C418.527191,754.404297 417.980530,753.972046 417.159821,753.324585  C414.826630,753.174927 413.543457,751.996338 412.247253,750.209595  C410.246643,747.918152 411.007416,746.158569 412.890320,744.227234  z\"})),_path1068||(_path1068=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M401.131958,712.694336  C398.129303,712.997070 397.015503,714.409180 397.561371,717.095581  C398.125275,719.870605 398.423889,722.614502 397.115479,725.694092  C393.419128,725.379517 392.664764,722.165649 391.056183,719.341187  C391.918579,714.039062 390.852997,708.325134 396.671997,705.039673  C397.471375,705.294800 397.923035,705.626282 398.663269,705.996277  C400.792480,707.748840 401.674988,709.824097 401.131958,712.694336  z\"})),_path1069||(_path1069=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M408.902191,762.711548  C408.887085,763.605469 408.434113,764.358826 408.627838,764.864380  C410.007996,768.466431 407.941650,769.320496 405.018585,769.840149  C401.680725,770.433411 399.485077,768.917969 398.306580,766.118225  C397.033417,763.093750 399.003784,760.323792 400.851349,758.640564  C402.702942,756.953674 404.344482,760.297424 406.685242,760.854126  C407.593536,761.476929 408.178589,761.966553 408.902191,762.711548  z\"})),_path1070||(_path1070=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M412.746582,743.786865  C414.590210,746.081238 410.847198,747.201782 411.996979,749.648682  C406.956970,748.546448 405.034546,743.502930 401.210968,740.614258  C399.372528,739.225464 400.255676,737.714600 402.702026,737.035095  C407.013092,738.031128 410.223969,740.127869 412.746582,743.786865  z\"})),_path1071||(_path1071=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M411.772461,775.271851  C413.069641,774.982117 414.139618,774.988098 415.611206,774.985229  C416.371460,775.748718 416.730164,776.520996 417.122498,777.624146  C417.033508,778.445374 416.783051,778.861511 416.091614,779.384888  C414.026184,779.865479 412.933990,778.855347 411.728638,777.366821  C411.420197,776.549744 411.414825,776.058411 411.772461,775.271851  z\"})),_path1072||(_path1072=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M415.696289,779.427612  C416.124847,778.815369 416.375885,778.519043 416.891541,778.088867  C418.028320,778.075928 418.670441,778.477539 418.958710,779.685913  C419.311462,781.109375 419.604523,782.230713 419.908752,783.703125  C418.115417,783.984741 417.846405,782.078735 416.350281,781.147217  C415.677032,780.666748 415.493408,780.251343 415.696289,779.427612  z\"})),_path1073||(_path1073=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M416.960083,753.428711  C417.774658,753.076294 418.545502,753.270935 419.014160,754.501221  C418.165070,754.933655 417.417969,754.697021 416.960083,753.428711  z\"})),_path1074||(_path1074=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M402.146484,735.189941  C402.350586,735.092590 402.601776,735.287598 402.903625,735.772095  C402.695587,735.876709 402.442017,735.683594 402.146484,735.189941  z\"})),_path1075||(_path1075=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M415.561279,779.028564  C415.918213,779.528687 415.962616,779.945679 416.038239,780.676270  C414.500885,781.666931 414.097900,782.958008 413.936188,784.551331  C413.746063,786.424438 412.563629,789.840088 411.895721,789.297791  C409.986908,787.747986 405.482391,790.314819 405.684479,785.175171  C405.773865,782.902100 403.054535,781.220459 400.494141,779.970947  C398.782990,775.476929 399.529846,774.530273 404.564545,774.721313  C406.560211,773.944092 407.609955,774.762939 408.537537,776.416199  C408.602356,777.149902 408.110992,777.445801 408.137634,777.695374  C408.207031,778.344788 407.902039,777.719543 408.778381,777.361938  C409.733826,776.569763 410.524689,776.250244 411.723816,776.755615  C413.073669,777.625244 414.161224,778.285339 415.561279,779.028564  z\"})),_path1076||(_path1076=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M411.987976,776.634033  C411.169708,777.217285 410.353302,777.469360 409.237976,777.845703  C408.795319,778.099243 408.651581,778.228638 408.293549,778.162598  C407.929901,776.390442 407.090881,775.385376 405.234619,774.822144  C407.002533,771.983093 409.295746,774.608643 411.745850,774.723022  C411.996338,775.418396 411.993073,775.860596 411.987976,776.634033  z\"})),_path1077||(_path1077=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M389.949829,757.685059  C389.106262,757.903931 388.342133,757.629700 388.050201,756.317139  C388.895782,756.095337 389.657074,756.373413 389.949829,757.685059  z\"})),_path1078||(_path1078=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M379.646790,702.077026  C379.835999,703.169983 379.674438,704.341492 379.254211,705.757690  C378.995514,706.002380 378.497742,706.002136 378.248871,706.001099  C378.169739,704.630066 377.494171,702.975159 379.646790,702.077026  z\"})),_path1079||(_path1079=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M142.776489,716.273926  C143.821198,715.504333 144.056641,714.683105 144.086945,713.443237  C144.069305,713.113708 144.155884,712.744934 144.168152,712.555908  C144.841522,711.104980 145.923386,711.043274 147.479309,711.584900  C148.024887,711.882080 148.219711,711.927612 148.713013,712.006836  C149.409698,712.307129 150.024399,712.894653 150.174667,712.793396  C154.270630,710.031921 159.660797,710.635437 163.786865,707.269287  C163.453293,706.379395 163.188858,705.732239 163.257965,704.635620  C164.065887,702.501343 166.037521,701.248657 165.591858,698.635986  C165.540375,698.086792 165.550171,697.864624 165.738312,697.360352  C167.056152,693.384277 170.666534,697.399170 172.593704,694.995728  C173.785095,695.049744 174.411316,694.838196 174.605026,693.580444  C176.797745,688.468933 173.565308,685.128296 171.195999,681.253540  C168.976486,678.775085 166.974609,677.942810 165.035294,681.003052  C164.264557,682.219299 163.333405,682.989685 161.485962,682.925293  C161.083847,682.500671 161.041046,682.082703 160.981659,681.349365  C159.493973,678.196472 161.865967,677.180603 163.520142,676.058105  C165.836182,674.486450 168.356277,673.205933 170.485916,671.361816  C173.860855,668.439148 173.157455,666.963318 169.860825,664.074951  C166.672760,661.281677 166.180267,656.783203 166.676270,652.198364  C166.851654,651.147278 166.835861,650.384705 166.713593,649.254150  C166.677475,647.847046 166.747833,646.807983 166.800079,645.377075  C168.170425,643.355957 169.439453,641.779236 169.627853,639.413391  C169.982834,634.955444 171.122833,630.651001 172.592926,626.398743  C173.829529,622.821777 174.489548,619.188049 173.212036,615.255676  C172.102127,611.839172 174.345764,608.519653 174.744736,605.095032  C174.873596,603.989014 175.783264,603.003113 175.284912,601.416077  C174.925720,599.323792 175.283875,597.664734 175.957855,595.701660  C176.807480,593.641907 179.256500,592.652039 178.225006,589.870056  C177.927032,588.319336 178.183655,587.192871 178.978012,585.833740  C180.758301,583.930298 181.557907,581.819336 181.405487,579.745056  C181.102020,575.615417 182.054749,571.648865 182.310760,567.264282  C182.204285,566.454102 182.237778,565.991272 182.474716,565.212830  C183.924225,563.491089 185.701065,562.982239 187.706848,562.182617  C187.939804,559.404724 191.790131,558.692139 190.994690,555.369751  C189.891968,553.859741 190.057709,552.605835 190.815598,551.425659  C192.157669,549.335632 191.721313,547.428040 190.208817,545.276306  C188.650024,543.852234 189.598846,542.980591 190.386276,542.140320  C191.312897,541.151550 192.313171,540.057678 191.882645,538.676453  C190.398788,533.916016 192.171371,530.476501 195.825226,527.520447  C197.586105,526.095886 196.864288,523.859680 197.011459,521.931030  C197.243790,518.886475 197.382629,515.808411 199.629593,513.090332  C201.966812,515.261230 203.339417,515.489807 205.045471,512.414490  C207.553024,507.894440 211.595352,508.418396 214.112274,513.648621  C214.126266,519.893066 211.706757,525.595764 212.897873,531.615356  C213.464462,534.478882 212.324509,536.217957 208.998795,535.295532  C205.978775,534.457764 204.371475,535.373474 203.488220,538.626953  C202.422012,542.554199 198.185608,545.962585 202.031952,550.261353  C202.708221,547.128540 203.237167,543.775574 204.370209,540.508240  C206.364975,534.756042 207.123505,534.303589 213.485260,536.855225  C210.673706,543.033264 208.531189,549.091797 207.648148,555.565552  C207.515335,556.539185 206.873077,557.492737 207.113892,558.476196  C208.877411,565.678406 205.072632,571.189026 201.607788,576.800110  C201.257996,577.366577 200.711121,577.875244 200.786514,578.557129  C201.499207,585.002625 197.234604,590.231628 196.349274,596.089233  C194.794495,606.376099 188.768051,614.845764 186.125671,624.987915  C185.807434,625.521240 185.655151,625.718994 185.194153,626.122681  C184.642166,626.351013 184.398911,626.373413 183.812988,626.276489  C182.593750,625.723511 182.220551,624.661499 181.236603,624.361938  C179.528259,631.703125 179.850571,632.646179 185.207306,635.342773  C186.537354,636.525940 187.399490,637.974365 186.578964,639.076233  C183.377594,643.375549 184.935760,649.072632 182.055298,653.450684  C180.445374,655.897583 182.521362,658.638855 181.892990,661.255737  C180.850403,665.597717 179.948181,669.974487 178.445282,674.194458  C179.698044,671.643860 180.061752,668.645691 182.187683,666.531677  C183.493042,665.233643 184.943497,663.685669 186.898544,664.921204  C188.502731,665.934998 188.400253,667.847412 187.798660,669.455139  C186.988892,671.619202 186.424896,673.900696 184.890625,676.127441  C181.853668,677.685791 182.465851,680.843445 180.966263,682.855225  C181.631180,682.412537 181.953796,681.661072 183.125275,681.475891  C183.698486,681.537720 183.920532,681.613403 184.405640,681.922852  C187.102921,686.255859 184.711929,691.332153 187.418961,695.473022  C188.085419,696.492493 186.752563,697.747192 185.412750,697.481567  C182.688934,696.941284 182.378342,698.811279 181.328781,700.590820  C178.921478,704.672302 176.082413,708.479370 177.174133,713.892395  C176.426315,714.668091 175.595276,714.887573 175.243286,715.989380  C175.335449,720.335144 174.529251,724.489380 176.678177,728.656799  C176.343567,732.515320 176.269547,736.076050 175.545685,739.933228  C175.449509,741.827087 176.431107,743.090271 176.568909,744.567871  C176.752457,746.535706 176.164093,747.795288 173.554810,747.513916  C173.029572,747.154602 172.869873,746.944885 172.853882,746.366699  C172.998718,745.554749 172.999878,745.111267 173.001068,744.335083  C172.770142,743.787109 172.544357,743.566467 172.160599,743.169067  C170.827530,742.836975 169.657623,742.676331 168.243256,742.257874  C168.706970,741.454956 168.942703,740.614319 169.525269,739.610474  C169.985046,738.774902 171.200500,738.528076 170.056305,737.512024  C167.017624,738.029907 168.903778,740.145691 168.216980,741.737244  C165.485657,741.827148 164.893921,743.277161 164.983429,745.443970  C165.072983,747.611816 164.656891,749.668274 162.762451,752.020508  C162.448898,749.625549 158.948990,748.086060 163.323639,746.110535  C164.983200,745.361084 163.793945,742.404785 163.991089,740.463379  C164.230804,738.102905 162.974182,735.204895 166.586212,734.484558  C165.593567,731.920593 163.626892,734.498169 162.651718,733.142883  C163.300812,728.545105 170.205093,730.805603 170.912933,725.517151  C167.756760,726.041626 165.337952,729.408142 162.210419,727.091553  C162.271988,724.805725 163.993713,725.884521 164.860672,725.498474  C170.616684,722.934814 172.495438,719.550659 170.818237,713.485718  C170.310699,711.650391 169.075943,709.872986 167.774063,708.430115  C165.025665,705.384033 165.092026,709.855225 163.514786,710.232117  C159.575806,711.173462 157.697540,715.581421 153.431778,716.246765  C151.516907,716.545410 151.631943,718.832703 151.150024,720.346619  C150.113281,723.603394 152.547211,727.098450 150.362045,730.429443  C149.745392,731.369446 151.272995,731.987061 152.333984,731.702209  C153.604355,731.361084 154.816925,730.750610 156.971390,731.787842  C153.115891,733.112549 151.329910,736.088684 149.742416,738.719299  C148.139694,741.375183 148.152863,745.006165 146.733597,748.203430  C148.685349,743.641663 140.469574,739.144409 147.319427,734.519409  C148.107559,733.987183 147.978683,732.665344 147.117279,732.484436  C144.927658,732.024475 143.499695,734.391968 141.209717,734.357849  C140.053391,734.340576 140.011658,735.838867 140.455795,736.782349  C142.358047,740.823547 139.036728,744.951843 140.727737,749.007812  C141.088745,749.873596 140.483002,750.703613 139.492996,750.718262  C138.508469,750.732849 138.125717,749.921448 138.029938,749.028076  C137.678329,745.748474 137.164734,742.473633 137.048676,739.185120  C136.943695,736.210327 136.704605,733.347046 135.181900,730.447937  C133.482880,731.621887 134.272781,733.292114 133.880768,734.577820  C133.228165,736.718323 131.458939,738.795288 129.661819,737.666321  C127.061554,736.032959 124.553108,737.220642 122.065765,736.637024  C119.331367,735.995422 115.182175,737.181702 118.543137,731.976990  C119.063004,731.171936 117.697853,730.370911 116.348305,730.041748  C116.010956,729.997559 116.005463,729.498779 116.003494,729.249390  C115.153946,728.013672 115.055672,726.924072 115.778961,725.378540  C116.436859,722.144104 120.196320,722.361328 120.923691,719.387634  C124.734261,723.073608 130.042465,723.406799 134.013580,719.494019  C134.532166,719.089355 134.948853,719.044678 135.680420,718.988770  C138.201065,718.218140 140.497894,717.698120 142.776489,716.273926  z\"})),_path1080||(_path1080=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M176.253693,729.255371  C171.373917,726.057983 174.894852,721.386353 173.671997,717.700317  C173.490295,717.152588 173.863358,716.420898 173.987366,715.389832  C174.346436,714.427185 174.913376,714.343811 175.755463,714.171509  C176.191101,711.432556 174.569748,708.799988 176.021805,706.312866  C178.119171,702.720398 180.359604,699.256531 182.082031,695.406982  C183.081696,693.172791 184.326660,697.332336 186.815842,696.025452  C182.121536,692.418091 185.238068,687.270020 184.009689,682.382080  C185.166107,679.085999 186.161896,676.133423 188.054138,673.522644  C190.030319,670.796204 190.365372,667.741821 188.730942,664.587280  C187.736832,662.668579 186.940018,660.640015 186.853470,658.433899  C186.800186,657.075989 187.099670,654.922424 188.287720,655.116394  C192.799622,655.852844 192.000076,652.388306 192.590790,650.155151  C193.862335,645.348206 194.533737,640.411743 196.390427,635.721069  C197.761948,632.256104 197.089981,628.557495 196.376038,624.921082  C195.128876,618.568481 200.004868,610.899719 206.518982,609.301270  C208.388733,610.317078 208.696121,611.842773 208.807449,613.466675  C208.853851,612.483765 208.976929,611.562256 209.394745,610.716858  C210.210968,609.065613 211.059982,607.147522 213.321762,607.683716  C215.316330,608.156677 215.465973,610.182617 215.339447,611.781494  C214.975418,616.381958 215.614853,621.052979 214.314880,625.590271  C212.809555,630.844238 215.050751,635.307739 217.559235,639.632812  C218.069672,640.512878 219.156418,642.454712 220.303879,639.460205  C220.628845,638.990173 220.794037,638.827454 221.286896,638.546265  C223.091782,638.235657 224.175232,639.315369 225.830688,639.688843  C227.996002,640.109680 229.855850,639.539734 232.026337,640.028137  C232.574097,640.249939 232.781006,640.366638 233.234818,640.739380  C234.545319,643.167725 233.904861,644.877014 231.975739,646.137146  C230.658508,646.997559 229.731567,648.067749 229.396057,649.634705  C229.237686,650.374451 224.054367,657.779053 223.522186,658.249634  C220.806946,660.650513 219.424973,659.448792 218.696396,656.482483  C218.498398,655.676331 218.451019,654.837036 218.230576,654.034607  C217.908813,652.863464 217.364243,651.855957 216.072113,651.531860  C214.654510,651.176270 213.934814,652.033936 213.342255,653.135376  C211.227966,657.065735 209.118118,656.015381 206.890732,652.786865  C205.958145,648.625916 203.653091,644.992249 205.016495,640.698486  C202.680374,643.118896 200.759705,646.010498 200.085281,649.163391  C198.700089,655.639099 194.877533,661.802979 197.306961,669.083130  C198.315094,669.973999 198.800598,671.844177 200.033371,670.797363  C201.493149,669.557739 200.670670,667.855774 199.628677,666.118530  C199.592453,663.038452 199.473480,660.225647 201.662354,657.705566  C203.312805,657.188171 204.581863,657.676147 204.646072,658.977600  C204.872528,663.568237 206.611542,668.106201 205.170837,672.766663  C204.663895,674.406555 203.982346,675.795776 202.352036,676.654907  C197.792648,679.057312 196.139435,684.408936 198.464005,689.481262  C202.283813,687.582642 201.932938,682.357483 205.996094,680.470581  C206.577057,680.514709 206.803955,680.583069 207.299835,680.884460  C208.757599,682.603638 208.493546,684.577942 209.260452,686.296570  C211.055267,685.664856 212.432495,683.269897 214.588730,684.643005  C217.372314,686.415588 215.465866,689.197205 215.681076,691.874634  C213.019791,697.500977 209.347061,701.927063 204.760895,705.620239  C201.889877,707.932190 201.301422,710.826904 202.924500,714.080811  C204.046860,716.331055 205.404205,718.471130 204.558792,721.501709  C204.521118,722.789368 204.756989,723.728577 204.427246,725.011414  C203.055801,727.438416 201.247406,729.175964 200.638687,731.677429  C199.982391,734.374207 197.847382,735.083740 195.020508,735.151367  C190.676773,733.463623 189.077667,735.616089 188.061127,739.079773  C186.846832,743.217285 188.432678,747.109131 188.927307,751.453979  C189.141022,752.284119 189.203079,752.772705 189.222137,753.643311  C189.140228,754.515259 189.008087,754.993164 188.596985,755.750854  C187.230179,756.908569 186.197433,756.491638 184.949982,755.549561  C184.222549,755.038330 183.723953,754.786255 182.845673,755.079956  C181.212738,756.126526 179.694458,756.876282 178.876907,758.681458  C178.498306,758.893616 179.671539,759.338684 179.160538,758.910522  C176.696899,756.846313 184.516800,757.820129 190.865479,760.536743  C191.440353,761.138733 191.605591,761.581421 191.641083,762.423645  C191.451004,763.235168 191.226532,763.648865 190.666840,764.248657  C188.763321,765.411865 186.834137,766.015747 186.037506,768.400330  C184.808853,770.921387 184.392258,773.303040 184.194946,776.067871  C183.973251,777.544617 183.133087,778.738037 184.543030,780.067688  C185.557419,781.346863 185.430496,782.430908 184.750031,783.839355  C184.404099,784.317627 184.241135,784.491699 183.787994,784.878113  C183.077698,785.323792 182.636551,785.506409 181.820251,785.683838  C179.431320,785.557312 178.779373,784.020752 177.997421,781.781067  C178.504684,784.253479 179.705566,785.430176 181.386169,786.683838  C183.206161,789.623474 181.704346,792.809509 183.284058,795.730835  C184.066757,796.325745 184.573730,796.742554 185.239380,797.475403  C185.630020,798.151184 185.740875,798.581726 185.767426,799.367493  C185.618225,800.378113 185.332550,800.986877 184.770081,801.832581  C184.403366,802.250305 184.238327,802.399719 183.791382,802.724121  C182.123947,803.504150 180.721588,804.081787 179.457977,805.509155  C177.379120,809.692871 174.436127,812.984741 173.835526,817.663635  C173.465057,820.549683 170.566879,821.463013 167.296524,820.237549  C165.254700,817.293945 164.473373,814.133606 162.337402,811.509949  C160.981888,809.844849 162.725555,806.851624 161.588791,804.444336  C161.291489,803.814758 162.788895,803.128601 163.850845,803.879211  C165.066452,804.738464 166.331268,806.919800 167.794083,804.673157  C169.036880,802.764465 170.138596,799.647827 168.537048,798.158569  C165.864807,795.673706 166.830750,793.129456 167.063614,790.533264  C167.295044,787.953064 168.103333,785.549866 166.632889,782.912476  C165.366119,780.640442 168.282211,780.176270 169.295746,778.879578  C169.328964,778.837036 169.626389,778.934326 169.735016,779.036316  C169.845291,779.139832 169.874191,779.330017 169.974075,779.742310  C174.002625,781.980042 173.636856,778.514526 174.206177,776.236572  C173.505142,776.001404 173.011154,775.995728 172.517807,776.010437  C163.077377,776.291626 164.375824,777.200623 163.729858,766.276489  C167.629745,766.000854 170.000107,765.001709 168.366364,760.645447  C168.088455,759.904480 168.056610,758.686523 168.679688,758.314392  C173.029266,755.716370 171.752335,751.245544 172.743347,747.218567  C174.834396,746.989502 176.317581,746.787964 175.165222,744.310120  C174.641785,743.184631 174.395218,741.930359 174.019775,740.360107  C179.290085,737.074707 179.935837,734.342041 176.253693,729.255371  z\"})),_path1081||(_path1081=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M114.220932,833.745972  C111.350517,835.565491 109.527794,834.941833 110.475288,831.779175  C112.145523,826.203918 111.556442,819.991272 117.402527,815.585999  C120.726311,813.081421 125.916023,810.395508 125.260368,804.335083  C125.133919,803.166260 126.645981,802.263550 127.806435,802.545593  C129.636780,802.990479 129.176346,804.781677 128.751404,805.844971  C127.786179,808.260132 126.049232,810.457703 127.623878,813.391663  C131.063126,812.685059 130.117813,808.701111 132.655792,807.069580  C134.173615,810.211243 134.461487,813.363953 132.153442,816.668152  C129.335342,819.836121 126.563248,820.858337 122.891098,816.658142  C124.171173,821.101013 123.974030,824.532166 121.244965,827.748047  C119.833504,831.045898 117.211769,832.355591 114.220932,833.745972  z\"})),_path1082||(_path1082=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M176.030945,824.716919  C175.821259,825.552856 175.643723,826.098694 175.233398,826.822266  C173.572357,827.971863 172.631332,829.418335 171.100433,830.752686  C169.982681,830.945129 169.237976,830.922363 168.276825,830.253540  C162.533890,828.011230 164.688400,824.536804 166.636932,821.083252  C169.920532,822.680359 173.459564,821.073853 174.402786,817.326782  C174.936813,815.205261 175.386398,813.147400 177.127350,811.719238  C179.068253,810.127014 180.942459,809.624512 182.209885,812.960266  C182.411972,814.299622 182.313736,815.270142 181.957672,816.583740  C180.999130,818.420471 180.583664,820.121704 179.268570,821.753052  C178.901672,822.891296 178.631165,823.655945 177.320312,823.947327  C176.600204,823.938904 176.293274,824.098511 176.030945,824.716919  z\"})),_path1083||(_path1083=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M181.300140,813.227844  C178.778870,811.150146 176.662384,812.124084 176.130905,815.858459  C175.586090,819.686523 173.055069,821.581299 170.375595,823.690063  C167.222610,826.171448 166.944275,824.371582 167.003021,821.349609  C167.001221,820.992676 167.000397,820.497559 166.999893,820.250000  C170.966278,819.894165 173.555664,818.671875 173.076706,813.881104  C172.655121,809.664246 177.495270,807.936584 178.642120,804.087036  C179.812500,804.418762 180.890869,804.303223 181.611938,805.537476  C181.544861,808.367859 184.700653,810.080994 183.202850,813.096558  C182.509323,813.518311 182.050278,813.543152 181.300140,813.227844  z\"})),_path1084||(_path1084=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M173.007492,746.744080  C172.577438,751.039307 175.681580,755.975647 169.766144,758.680969  C168.604645,759.212219 170.094650,761.075562 170.077011,762.371582  C170.055573,763.947754 171.453430,766.878662 170.632477,766.782837  C168.541641,766.538879 166.239441,768.952393 164.184357,766.255737  C164.968735,762.563782 165.431656,758.885254 168.690369,756.165894  C169.524643,755.458130 170.068359,754.937561 170.795013,754.201050  C171.546722,751.422974 169.762619,748.468872 172.621460,746.097656  C172.997559,745.998291 173.003189,746.495483 173.007492,746.744080  z\"})),_path1085||(_path1085=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M121.336716,828.001465  C123.251106,823.463623 120.661537,818.267456 122.993652,812.151245  C124.391663,818.205811 127.153358,819.341980 131.639893,817.009155  C132.000870,818.069092 132.000519,819.135742 131.999176,820.602417  C130.790909,822.338196 128.974823,823.006897 127.822327,824.904297  C126.456810,826.313477 125.238983,827.364136 123.344940,827.972778  C122.555779,828.000122 122.112465,828.000305 121.336716,828.001465  z\"})),_path1086||(_path1086=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M133.272705,839.020264  C129.325012,838.616211 132.134125,836.202881 132.333679,835.134521  C132.632309,833.535461 131.680450,830.522156 134.635223,830.447021  C137.046768,830.385620 139.555267,831.024414 140.829041,834.416077  C136.595810,833.246521 134.710999,835.526489 133.272705,839.020264  z\"})),_path1087||(_path1087=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M126.724533,825.375061  C126.818665,821.992188 128.368027,820.810974 131.608307,821.002563  C131.441315,824.380554 132.413544,828.490356 127.371689,829.945679  C125.633186,828.733154 125.685822,827.288025 126.724533,825.375061  z\"})),_path1088||(_path1088=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M136.135025,774.354797  C135.816849,770.354248 137.249557,767.565186 141.103348,764.703369  C139.839844,768.834778 141.008194,772.491638 137.162231,774.900391  C136.606155,774.948181 136.278061,774.716858 136.135025,774.354797  z\"})),_path1089||(_path1089=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M139.113037,790.432922  C139.377319,787.833435 137.442688,786.706543 135.258743,784.516785  C138.944244,784.900208 141.173767,785.696594 142.352951,787.713379  C142.646393,788.215149 141.890900,791.402527 139.113037,790.432922  z\"})),_path1090||(_path1090=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M173.860870,776.303711  C174.028427,775.837708 174.003357,775.616211 174.099258,775.531067  C174.287582,775.363892 174.543243,775.272705 174.771027,775.150085  C175.810059,778.591553 173.910294,781.027649 171.861130,783.348206  C171.334991,783.943970 170.346695,784.178345 169.693634,783.420959  C168.909286,782.511292 169.861984,781.605591 169.967407,780.343994  C172.255676,779.975403 172.884384,778.177856 173.860870,776.303711  z\"})),_path1091||(_path1091=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M134.375610,781.938171  C134.000519,781.552307 134.000427,781.109436 134.000488,780.334534  C136.556229,778.523132 132.296371,775.505554 135.658676,774.062927  C135.991989,773.992737 136.001892,774.001770 136.006348,774.005737  C136.173676,774.175598 136.336563,774.341492 136.747940,774.752075  C136.996414,774.996704 137.000000,775.000000 137.001373,775.001221  C136.563217,777.397278 138.277298,780.497192 134.375610,781.938171  z\"})),_path1092||(_path1092=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M126.672974,825.036804  C127.000679,826.387024 127.001053,827.774109 127.002022,829.576904  C125.251656,830.790710 123.882339,830.511841 123.044380,828.302979  C123.752831,826.610840 124.712837,825.457520 126.672974,825.036804  z\"})),_path1093||(_path1093=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M128.975372,763.306152  C127.647255,761.685730 127.765709,760.165527 129.014008,758.098145  C130.208786,760.191162 130.370010,761.711548 128.975372,763.306152  z\"})),_path1094||(_path1094=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M143.719574,830.478149  C144.734100,829.807312 145.546936,828.821960 146.504974,829.835144  C147.006058,830.365051 146.891525,831.180786 146.220306,831.517456  C145.175110,832.041687 143.999008,832.483704 143.719574,830.478149  z\"})),_path1095||(_path1095=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M127.638092,857.011963  C127.888626,858.101685 128.188095,859.471436 126.592361,859.732727  C125.914879,859.843628 125.282890,859.425903 125.265999,858.628601  C125.237320,857.274536 126.261436,857.130859 127.638092,857.011963  z\"})),_path1096||(_path1096=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M167.867676,830.290039  C168.748154,829.998657 169.499832,829.999756 170.627274,830.001648  C171.395203,830.383240 171.540695,830.842224 171.217651,831.689697  C170.995926,832.000000 171.000000,832.000000 170.997574,832.001221  C169.890747,832.308655 168.786346,832.614868 167.337616,832.958130  C167.241806,832.190918 167.490326,831.386780 167.867676,830.290039  z\"})),_path1097||(_path1097=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M129.715683,767.901001  C128.980759,768.874817 128.195374,769.100830 127.600662,768.292603  C127.175079,767.714233 127.575226,767.000488 128.164871,766.676575  C129.107544,766.158752 129.651810,766.596619 129.715683,767.901001  z\"})),_path1098||(_path1098=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M133.974182,757.389893  C132.922073,756.539734 132.823395,755.649597 133.588898,754.792542  C133.714844,754.651489 134.289261,754.662354 134.413177,754.808899  C135.149887,755.679688 135.064972,756.568054 133.974182,757.389893  z\"})),_path1099||(_path1099=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M127.999695,857.000000  C128.169510,856.125305 127.666519,854.959473 128.979813,854.589294  C129.166031,854.536865 129.610413,854.829712 129.684265,855.047852  C130.007431,856.001953 129.506454,856.563171 128.320877,856.941162  C128.000610,857.000000 128.000000,857.000000 127.999695,857.000000  z\"})),_path1100||(_path1100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M170.682831,754.053711  C170.899017,754.893433 170.627319,755.657532 169.316223,755.948975  C169.100204,755.110168 169.369980,754.344238 170.682831,754.053711  z\"})),_path1101||(_path1101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M137.574249,760.353516  C137.367203,759.614807 137.626038,759.347595 138.199203,759.462036  C138.318359,759.485779 138.478531,759.654663 138.496490,759.775024  C138.582870,760.354370 138.300842,760.596619 137.574249,760.353516  z\"})),_path1102||(_path1102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M114.574341,748.353149  C114.368057,747.615234 114.625809,747.347168 115.199074,747.461914  C115.318092,747.485718 115.478035,747.654663 115.495926,747.775024  C115.581947,748.353821 115.300331,748.596252 114.574341,748.353149  z\"})),_path1103||(_path1103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M124.478653,861.464233  C124.520157,861.442017 124.437157,861.486389 124.478653,861.464233  z\"})),_path1104||(_path1104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M138.462463,837.524414  C138.438721,837.480591 138.486206,837.568176 138.462463,837.524414  z\"})),_path1105||(_path1105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M172.115631,743.209839  C172.308899,743.117371 172.565491,743.310120 172.884155,743.789185  C172.691483,743.880127 172.435730,743.686707 172.115631,743.209839  z\"})),_path1106||(_path1106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M163.520874,831.535034  C163.479172,831.557190 163.562561,831.512939 163.520874,831.535034  z\"})),_path1107||(_path1107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M70.014969,815.622070  C67.394478,816.641235 69.688133,819.296631 67.960464,820.706848  C66.808601,818.872498 66.457977,816.240051 63.358894,816.038391  C62.607876,815.612793 62.470551,815.159058 62.792702,814.314514  C64.887642,814.013184 66.594681,813.459839 65.676804,811.224731  C64.905785,809.347229 63.498505,811.132935 62.361237,811.286926  C59.320133,811.698547 57.500546,815.964355 53.361626,814.006775  C49.029942,810.860657 49.171574,808.985046 53.886681,803.334106  C56.870514,797.929871 58.531319,792.055542 63.722137,788.519531  C64.514046,787.980042 65.309395,787.180481 65.670357,786.319702  C67.215767,782.634216 69.679741,779.952026 72.554573,777.099976  C74.960617,774.713074 76.560226,770.956726 79.284691,768.347107  C79.516228,768.125366 79.611641,767.544556 79.802605,767.528992  C85.497452,767.067139 84.531250,762.676819 85.491074,758.921387  C86.188866,756.191040 91.046333,756.120667 91.660690,752.416199  C91.784309,751.670715 92.954926,750.889343 92.812065,750.340942  C90.875313,742.905701 96.024857,740.476013 101.640648,738.042236  C102.929962,744.033386 101.811951,748.950928 97.099609,753.712280  C94.627960,756.209595 94.267471,761.059998 91.053650,763.847595  C85.342270,768.801636 84.764038,775.759521 83.843872,782.596130  C83.637817,784.127075 82.587669,785.857300 80.982430,785.403870  C79.143623,784.884460 78.849297,783.153320 80.046768,781.387024  C81.468636,779.289856 79.696609,778.733032 78.282547,778.352966  C76.376389,777.840576 75.867264,779.264587 76.056671,780.685425  C76.714539,785.620239 73.613335,790.086609 74.795387,795.261597  C75.642754,798.971252 72.935783,802.503174 71.439896,805.970215  C70.568031,807.991028 69.781921,809.951782 70.021667,812.599609  C70.024818,813.756104 70.018761,814.502441 70.014969,815.622070  z\"})),_path1108||(_path1108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M105.307510,828.221985  C102.025192,826.045959 101.632256,829.370239 99.696022,830.690125  C97.966011,825.738281 100.282364,821.250061 100.544449,816.676941  C100.699173,813.976868 104.175873,810.427063 100.559395,808.966431  C99.187225,808.412231 97.957863,813.917847 97.173653,816.731750  C96.486389,819.197815 97.054276,822.003052 96.017120,824.550049  C95.256042,826.419189 94.536392,827.139221 93.023804,825.099854  C91.129951,822.546448 89.830986,820.359253 90.628754,816.597717  C91.493332,812.521240 94.766945,809.331848 94.376717,804.887390  C94.310555,804.133850 95.703209,802.754578 96.652000,802.490234  C102.967506,800.730286 101.154709,795.405029 101.452301,791.268066  C101.572830,789.592468 101.922562,788.289734 102.941399,787.324158  C105.182899,785.199951 105.975235,782.222412 107.726219,779.821167  C108.419350,778.870544 108.318275,776.431458 109.968353,777.536560  C111.188560,778.353821 113.107132,779.829285 112.128151,782.426636  C110.934776,785.593079 107.431282,787.551758 107.803162,791.580383  C107.966957,793.354919 106.567131,795.551392 110.058281,794.529358  C110.364983,794.439575 110.934631,794.350281 111.001404,794.471069  C112.342827,796.898376 114.753479,797.367249 116.072174,795.437195  C117.302139,793.636963 117.254990,790.793945 115.008812,788.889282  C113.644646,787.732605 113.842392,786.404724 115.287430,785.671936  C116.875504,784.866638 117.400490,786.507324 117.592735,787.485596  C118.334312,791.259155 120.628387,795.091431 117.428665,798.859741  C116.903885,799.477783 116.952248,800.433167 117.705902,801.371277  C120.381332,800.890442 121.823151,798.908630 122.982132,795.791382  C125.528214,801.130798 121.427681,805.071716 119.498672,805.452515  C111.426735,807.045959 111.226440,813.939270 109.475349,819.237915  C108.621750,821.820801 104.363167,823.642334 106.950500,827.632080  C106.600685,828.351196 106.138618,828.500000 105.307510,828.221985  z\"})),_path1109||(_path1109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M103.000351,843.000000  C101.942863,840.618652 102.274414,837.906799 100.727608,835.536499  C99.122353,833.076660 102.041489,832.389099 103.658752,831.062866  C104.629494,830.919678 105.181877,831.104675 105.835968,831.745483  C105.933411,835.754333 106.485710,839.637817 103.363205,842.913574  C102.999390,843.000000 103.000000,843.000000 103.000351,843.000000  z\"})),_path1110||(_path1110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M97.476776,795.319580  C96.866974,797.326721 95.642319,799.577209 93.891052,798.363098  C92.441437,797.358032 91.577995,794.649475 91.566422,792.689087  C91.556450,791.000977 93.578148,790.557007 94.999199,791.803589  C95.969452,792.654724 96.575714,793.920837 97.476776,795.319580  z\"})),_path1111||(_path1111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M87.960243,811.887817  C84.578995,810.973816 85.394318,807.931152 85.617386,805.920532  C85.788063,804.382141 88.331741,804.867065 89.429535,805.854675  C92.167610,808.318176 88.937843,809.751587 87.960243,811.887817  z\"})),_path1112||(_path1112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M83.302368,803.123779  C83.056534,801.863525 82.879707,800.623352 84.660736,800.064575  C87.043976,800.520752 89.084816,796.227356 90.431580,799.082581  C91.675102,801.718994 87.515511,801.291504 86.240631,802.788879  C85.464027,803.701111 84.599220,803.770691 83.302368,803.123779  z\"})),_path1113||(_path1113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M106.283951,831.845642  C105.449837,831.821594 104.902725,831.643250 104.177650,831.231201  C104.247917,830.192627 104.496147,829.387756 104.874008,828.290161  C105.446747,827.998291 105.889839,827.999084 106.665253,827.999878  C108.586304,829.430481 107.885788,830.596375 106.283951,831.845642  z\"})),_path1114||(_path1114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M82.131569,816.517334  C82.134850,815.267578 81.657410,813.841064 82.900108,813.703857  C84.348984,813.543945 84.767410,815.051208 84.572937,816.135071  C84.344437,817.408813 83.493164,818.278564 82.131569,816.517334  z\"})),_path1115||(_path1115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M115.746483,725.114685  C116.003136,726.070251 116.002129,727.135498 116.001328,728.600403  C114.595985,728.881775 114.003822,728.059326 114.013733,726.362915  C114.501610,725.751587 114.995216,725.487976 115.746483,725.114685  z\"})),_path1116||(_path1116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M110.249924,728.818970  C108.994347,728.101624 109.239372,727.487122 110.723511,727.051147  C110.831528,727.560730 110.655907,728.101685 110.249924,728.818970  z\"})),_path1117||(_path1117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M78.248245,831.000000  C78.268394,830.899170 78.540459,830.798340 78.908241,830.848755  C78.836029,831.000000 78.668091,831.000000 78.248245,831.000000  z\"})),_path1118||(_path1118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M100.280937,881.891052  C100.345726,880.580139 100.892723,880.145996 101.837273,880.668579  C102.428474,880.995605 102.829491,881.711243 102.401932,882.290039  C101.803711,883.099854 101.016129,882.870300 100.280937,881.891052  z\"})),_path1119||(_path1119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M132.135071,887.296448  C133.514328,887.095215 134.574554,887.759094 134.955444,889.663208  C133.407089,889.969604 132.890945,888.721985 132.135071,887.296448  z\"})),_path1120||(_path1120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M235.278625,751.784424  C231.264816,752.521484 229.583038,755.022156 228.857162,758.983154  C228.357193,753.944275 226.119919,752.272339 221.386230,753.997437  C220.875977,750.762146 221.119507,747.772888 224.318954,745.746887  C226.805267,744.172485 226.505966,741.573669 225.157242,739.586060  C223.388657,736.979675 223.130020,734.571899 225.016693,731.657471  C222.513336,731.184875 220.831497,732.942444 220.877289,733.931946  C221.214249,741.212952 213.690628,744.516113 212.492569,751.157654  C211.848648,747.503845 207.904755,745.652893 208.000015,741.393982  C208.523560,738.846313 207.982651,736.413086 209.922455,734.336304  C213.291870,732.861389 213.445389,729.940796 214.336365,727.268250  C215.160172,724.797302 214.763977,720.695557 218.303726,720.631470  C221.590912,720.572083 225.209137,721.740112 226.876190,725.436157  C227.283447,726.339050 227.589493,727.502563 228.851456,727.161499  C229.910828,726.875122 230.107224,725.718201 230.336227,724.748535  C231.723557,718.874268 234.818588,713.818665 237.637787,708.563171  C240.725540,702.806946 242.278488,696.364868 243.850159,689.639648  C244.009598,686.828918 244.266754,684.419006 246.477722,682.350098  C251.690918,682.089233 252.855408,683.285339 252.388214,687.709045  C251.818802,693.100647 251.772141,698.556458 249.753326,703.735107  C249.170242,705.230835 249.154755,707.004211 250.715546,708.703125  C252.774246,711.542908 249.946457,715.031921 252.867554,717.694214  C253.056244,720.173218 252.990204,722.273376 251.918411,724.276367  C251.203171,725.613037 249.798950,727.539062 253.273560,727.204346  C254.706238,727.066284 254.766983,728.132080 254.348022,729.228516  C253.413956,731.672913 252.481384,734.117981 251.275421,736.794434  C248.455353,736.367310 246.073975,735.376038 244.439865,734.125427  C242.803497,740.314514 236.964783,744.890930 235.278625,751.784424  z\"})),_path1121||(_path1121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M184.995575,800.400452  C184.995834,799.555542 184.996490,799.111084 184.997681,798.333313  C184.526169,795.869446 186.507751,795.679504 187.860977,794.631714  C188.368805,794.472534 188.578827,794.438843 189.097244,794.463379  C189.805878,794.344910 189.512115,795.231262 189.786972,794.688843  C189.512817,794.260254 189.456573,794.055481 189.437988,793.527832  C189.569336,793.005432 189.663025,792.805969 189.963928,792.345093  C190.885345,791.233948 191.895065,790.615967 192.242905,789.446716  C191.451248,789.348938 190.753937,789.816895 189.637665,789.715332  C188.832764,789.522949 188.417313,789.298218 187.773407,788.761230  C187.365982,788.317688 187.219727,788.124451 186.895905,787.613770  C186.273682,786.156921 185.329651,785.258606 185.106079,783.623962  C185.143021,778.421265 183.452515,773.607178 185.006012,768.385742  C185.355804,765.534302 186.314621,763.725769 189.621674,764.001831  C192.049622,765.401489 192.467209,767.718872 193.243454,769.911133  C195.159073,769.103088 196.874435,768.247986 196.603531,765.757812  C196.460449,764.442810 196.176239,762.978333 197.836914,762.438171  C199.672287,761.841125 201.006607,762.668945 201.933685,764.663940  C202.558563,770.801392 203.248444,776.630493 198.030472,781.006775  C197.491379,781.458923 197.155426,782.601013 197.625443,782.693359  C204.522171,784.047363 198.230270,786.485718 198.098907,788.358154  C198.006714,789.672241 197.170670,791.104187 197.494614,792.249329  C199.337112,798.762817 195.728088,802.163269 190.342743,804.938843  C188.023605,806.419739 186.373688,806.232361 185.026062,803.631042  C184.931671,802.421631 184.998245,801.612305 184.995575,800.400452  z\"})),_path1122||(_path1122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M202.254730,764.765137  C200.676544,764.483032 199.828918,762.900269 197.597900,763.281860  C201.844116,770.386047 193.405762,769.747559 191.664719,773.558777  C192.276062,770.284912 191.012573,767.546509 190.007782,764.379517  C190.117279,763.691406 190.307251,763.433533 190.779938,763.108276  C193.685471,762.201904 195.511154,759.829041 198.219910,759.049500  C199.846375,758.581421 199.704163,757.175476 199.828110,755.868774  C199.982086,754.245544 200.094223,752.479492 202.725632,752.780762  C202.978546,754.394592 203.394562,755.286011 204.761688,756.167969  C207.074951,757.660278 210.462463,759.733948 204.655838,761.351624  C203.150452,761.771057 203.203110,763.448853 202.254730,764.765137  z\"})),_path1123||(_path1123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M202.975006,752.707825  C200.940506,753.289734 200.729538,754.855530 201.114456,756.316162  C201.875748,759.204895 202.776917,761.542480 197.940689,760.574585  C196.652985,760.316895 194.821732,762.523438 193.317490,763.697815  C192.467926,764.361206 191.783417,765.035095 191.048187,763.290527  C190.992081,762.547180 190.993607,762.106628 190.993286,761.335449  C190.482407,760.406494 190.016647,759.782593 189.750488,758.621399  C190.855331,752.117249 196.200836,750.421509 201.050156,747.668335  C201.643585,747.443115 201.892822,747.385254 202.525482,747.347168  C203.423050,747.505249 203.822952,747.798828 204.057861,748.627136  C203.021072,749.946899 202.247147,750.953857 202.975006,752.707825  z\"})),_path1124||(_path1124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M181.013458,813.411377  C181.456863,813.010559 181.895920,813.008118 182.664429,813.005249  C183.598145,812.955261 184.097244,812.634827 184.871735,812.212769  C186.378738,811.524475 186.711975,810.256897 187.605255,809.021729  C188.047836,808.727844 188.258133,808.664978 188.734436,808.796143  C189.727249,809.318848 190.433136,809.859863 191.185059,809.934082  C193.011658,810.114380 195.022827,809.858582 194.973267,812.609619  C194.950012,813.899658 195.365555,815.689026 193.878006,816.114868  C191.518677,816.790588 191.666870,813.890259 190.391098,812.952942  C187.805664,814.605164 191.528732,818.043274 188.202652,819.729309  C186.933853,819.996460 185.867432,819.997803 184.401108,819.998352  C183.207031,819.010681 181.678436,818.908752 181.067703,817.309570  C181.003036,815.936584 181.006058,814.873230 181.013458,813.411377  z\"})),_path1125||(_path1125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M203.244919,747.803528  C202.999390,748.000000 202.499390,748.000000 202.249390,748.000000  C200.580536,749.009033 199.245407,748.984009 198.071167,747.621765  C197.215607,746.629333 197.085266,745.361450 197.809555,744.408936  C200.776657,740.506836 203.702454,736.541931 207.680969,733.562073  C208.036423,733.295898 208.637085,733.580017 209.550720,734.383423  C209.009079,736.687805 211.357010,739.433411 208.137955,740.735107  C205.127151,740.737732 205.085663,742.252075 205.951401,744.657349  C205.774780,746.462402 204.667221,747.067871 203.244919,747.803528  z\"})),_path1126||(_path1126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M185.265259,812.801392  C184.822250,814.700562 184.192368,814.722168 183.111694,813.242676  C183.908188,810.368469 179.321899,809.508362 180.970016,806.322388  C181.381989,805.825317 181.771118,805.760437 182.406631,806.002930  C182.638168,806.082397 183.085587,806.051514 183.146301,805.813354  C183.133530,804.535156 182.940735,803.482178 183.769333,802.257324  C184.000610,802.000000 184.000000,802.000000 183.999695,802.000000  C184.385239,801.621582 184.844940,801.475342 185.687622,801.781799  C185.815079,804.356323 187.059158,805.171753 189.609589,805.000366  C189.689117,806.106873 189.383224,807.206482 189.038879,808.648132  C189.000412,808.990234 188.500870,808.999023 188.251038,808.999512  C187.210999,810.223328 187.335693,812.079041 185.265259,812.801392  z\"})),_path1127||(_path1127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M220.650330,756.071106  C225.267517,758.194336 221.493042,759.831909 220.300232,761.834473  C216.193130,759.841858 219.074707,758.035400 220.650330,756.071106  z\"})),_path1128||(_path1128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M218.667969,769.058350  C220.082504,769.119995 221.522079,768.791138 221.712692,770.388062  C221.869736,771.703674 220.739990,771.877502 219.362320,771.988525  C216.972931,771.451416 216.239502,770.608337 218.667969,769.058350  z\"})),_path1129||(_path1129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M209.815247,753.222778  C211.019791,753.743164 212.082809,754.316711 211.197113,755.417236  C210.521866,756.256287 209.311661,756.165833 208.620941,755.327515  C207.801956,754.333618 208.292450,753.549561 209.815247,753.222778  z\"})),_path1130||(_path1130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M218.696182,773.165405  C219.297913,774.419189 219.600479,775.841248 219.947998,777.625488  C219.550003,777.991516 219.107040,777.995300 218.331726,777.999512  C216.391388,776.296265 216.813950,774.765503 218.696182,773.165405  z\"})),_path1131||(_path1131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M203.212311,748.118164  C203.026932,746.412048 204.270508,745.892761 205.692657,745.135620  C207.521057,746.981384 206.086899,747.939331 204.326172,748.950073  C203.884247,748.695618 203.690063,748.439209 203.212311,748.118164  z\"})),_path1132||(_path1132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M207.540405,764.023193  C207.245422,765.141541 206.707001,765.834839 205.771133,765.453369  C205.098328,765.179138 205.022095,764.353394 205.431015,763.795349  C206.006851,763.009338 206.775467,763.025696 207.540405,764.023193  z\"})),_path1133||(_path1133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M225.262115,834.891846  C224.837082,835.001648 224.668655,835.000793 224.247559,834.998779  C224.332230,830.281067 227.017670,826.266052 228.037170,821.682617  C228.597748,819.162415 233.152496,818.479126 234.736954,815.208496  C236.504456,817.292908 236.675858,819.467529 234.220688,821.716370  C232.881866,823.335327 234.046814,825.019531 233.154907,826.696411  C232.818359,826.979187 232.651352,826.980774 232.233902,826.987976  C228.426193,827.736206 229.175522,831.453308 227.246704,833.743652  C226.505173,834.257202 226.011948,834.519226 225.262115,834.891846  z\"})),_path1134||(_path1134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M220.520538,810.533386  C220.479080,810.555420 220.561981,810.511353 220.520538,810.533386  z\"})),_path1135||(_path1135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M219.989288,881.381836  C221.107986,879.660095 222.584824,879.094788 224.641129,879.004395  C225.200851,879.774414 225.352325,880.570251 225.620804,881.324402  C226.303741,883.242920 225.266129,884.421082 223.866730,885.385193  C222.726212,886.171021 221.263641,886.356201 220.169266,885.705078  C218.405380,884.655457 220.317902,883.080750 219.989288,881.381836  z\"})),_path1136||(_path1136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M233.314667,862.990479  C232.997559,862.995117 232.998779,862.497559 232.999390,862.248779  C233.834564,861.852051 234.927017,860.608765 235.411911,861.975952  C235.724747,862.858093 234.401901,862.894714 233.314667,862.990479  z\"})),_path1137||(_path1137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M244.667511,821.900696  C246.559814,824.103882 248.018585,835.257996 246.643005,836.818054  C244.855545,838.845215 241.933182,838.674866 239.852829,838.195007  C238.121262,837.795593 239.938751,835.737671 240.262024,834.423889  C240.807449,832.207397 241.356033,829.991699 241.956467,827.388916  C241.249496,825.494751 242.606873,824.484070 243.069504,822.924194  C243.540436,822.263000 243.904617,821.988708 244.667511,821.900696  z\"})),_path1138||(_path1138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M245.003860,821.664917  C244.692200,822.121826 244.437271,822.314392 244.117584,822.788818  C243.316330,823.600647 242.539307,823.762085 241.336853,823.247864  C240.744080,822.503540 240.485718,822.009460 240.117401,821.259155  C242.681198,820.772949 243.073120,818.932617 243.000870,816.384277  C245.694061,817.018127 245.509842,819.114075 245.003860,821.664917  z\"})),_path1139||(_path1139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M233.362579,826.984802  C232.413422,825.316589 230.901306,823.589417 233.662567,822.069580  C234.682510,823.421631 236.181442,824.464966 235.995911,826.641235  C235.247818,826.990845 234.493790,826.991455 233.362579,826.984802  z\"})),_path1140||(_path1140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M241.001221,822.998779  C241.751663,822.998352 242.500900,822.999146 243.624756,823.000000  C244.134857,824.459229 243.694519,825.655273 242.212097,826.734863  C240.596237,826.881958 240.002487,826.053040 240.010208,824.347778  C240.237549,823.790283 240.463181,823.573730 240.838654,823.175171  C240.997375,823.002441 241.000000,823.000000 241.001221,822.998779  z\"})),_path1141||(_path1141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M240.787415,823.119873  C240.876495,823.309204 240.685104,823.562744 240.213104,823.880249  C240.124008,823.690918 240.315475,823.437500 240.787415,823.119873  z\"})),_path1142||(_path1142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M237.478943,827.465332  C237.520432,827.443176 237.437469,827.487427 237.478943,827.465332  z\"})),_path1143||(_path1143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M180.071136,943.653076  C178.122787,944.768311 178.155334,943.263489 178.096298,942.220825  C177.974091,940.062744 179.705688,939.612793 181.644257,939.045349  C182.408997,940.885193 180.809769,941.899292 180.071136,943.653076  z\"})),_path1144||(_path1144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M180.380920,966.437988  C182.016510,966.164612 183.264282,966.277100 181.910080,967.950562  C181.197433,968.831177 180.256866,970.633301 178.940094,969.520691  C177.470825,968.279297 179.338226,967.460022 180.380920,966.437988  z\"})),_path1145||(_path1145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M179.294739,947.973511  C179.471146,947.684631 179.941681,947.369263 180.706421,947.026978  C180.530029,947.315674 180.059448,947.631348 179.294739,947.973511  z\"})),_path1146||(_path1146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M150.424362,995.289429  C146.652161,996.268250 143.943542,996.249817 146.924210,991.638184  C147.499969,990.747314 147.813095,989.930847 147.637756,988.875183  C147.513000,988.124084 147.951248,987.575989 148.706818,987.504028  C149.513351,987.427124 149.855530,988.015747 149.934341,988.724731  C150.167221,990.819824 151.590637,992.775146 150.424362,995.289429  z\"})),_path1147||(_path1147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M180.050690,937.119995  C180.106766,937.124146 180.213547,937.248291 180.320343,937.372437  C180.247360,937.328247 180.174377,937.284119 180.050690,937.119995  z\"})),_path1148||(_path1148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M227.346893,833.984924  C228.625443,831.801636 226.096405,827.115295 231.587997,826.998169  C228.672989,828.165222 231.613007,833.176086 227.346893,833.984924  z\"})),_path1149||(_path1149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M180.638275,817.085205  C182.099991,817.624023 183.464325,817.923889 183.949982,819.680786  C182.257584,819.977356 182.132889,821.528381 181.248352,822.793945  C180.506287,822.747009 180.010147,822.486694 179.257004,822.114380  C179.295914,820.357544 178.199463,818.344788 180.638275,817.085205  z\"})),_path1150||(_path1150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M488.682587,950.155518  C488.901733,949.850464 488.916290,949.416626 488.944458,949.201416  C489.729889,948.387756 490.476898,948.507812 491.482849,949.338623  C492.008850,950.151917 492.190796,950.672424 492.330841,951.632141  C492.415405,954.035156 491.860809,955.816895 490.247284,957.623169  C489.676392,958.408081 489.381836,958.895081 489.068939,959.675659  C487.966248,960.733704 488.378082,961.608582 488.777740,962.567566  C490.193604,965.964966 488.222076,964.917603 486.254456,964.109314  C485.606018,963.569519 485.289185,963.127441 484.870911,962.275269  C484.372559,960.281738 484.462585,958.677979 484.902954,956.699036  C486.033051,954.292480 487.108765,952.294250 488.682587,950.155518  z\"})),_path1151||(_path1151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M490.333099,957.901489  C490.311218,956.189941 490.651550,954.458862 491.009399,952.344299  C493.649109,951.868408 495.442657,953.196960 496.823364,955.668945  C496.877747,956.456726 496.885162,956.889404 496.878876,957.645630  C494.817261,957.325134 492.767761,956.790649 490.333099,957.901489  z\"})),_path1152||(_path1152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M452.495667,1005.541870  C448.179596,1007.067505 444.666779,1004.768494 440.900085,1005.022400  C439.611328,1005.109314 438.505402,1004.562073 438.715668,1002.551392  C439.476929,995.271851 439.378815,995.261597 432.056702,993.077759  C431.324799,993.046143 430.987549,993.019958 430.394409,992.982056  C428.967804,991.786438 429.149017,990.686279 430.695740,989.522339  C434.663391,990.548950 438.312592,990.984375 441.555725,989.860413  C438.615417,986.490173 436.405029,982.479553 435.995056,977.256714  C436.145020,976.688049 436.233704,976.468994 436.535217,975.967041  C439.426819,974.037231 442.055817,974.623108 443.858429,976.772339  C447.133240,980.676819 450.887451,977.850647 454.402588,977.940247  C455.520691,977.968811 455.898468,976.520996 455.659149,975.619568  C454.988556,973.093567 456.961365,971.426392 457.439392,968.947266  C459.103394,964.979370 462.064026,964.492004 465.281128,965.844482  C467.571411,966.807373 469.319489,966.956360 471.752228,965.893372  C478.131531,963.105774 482.126556,964.669128 486.049438,970.757324  C487.925171,974.865417 486.829773,978.908630 486.410065,983.006042  C485.656586,983.485352 485.189331,983.534790 484.684662,983.243164  C484.929504,983.468567 485.223328,983.586609 485.785095,983.791992  C486.087982,984.409363 486.171906,984.831970 486.330383,985.569214  C485.733612,987.342590 484.344055,987.895996 482.694183,988.657043  C480.620483,988.964111 479.549744,988.263916 479.229950,986.405701  C479.165222,988.936096 479.761414,991.739380 477.124939,993.176025  C474.577393,994.564331 473.483582,991.554749 471.396484,990.575195  C470.503571,989.408386 469.642883,988.757324 468.511719,988.511719  C469.129089,988.635315 469.664154,988.939575 470.435150,989.482788  C471.644104,991.341003 473.755005,992.336914 473.412354,994.992493  C471.727325,998.386963 467.726044,997.612488 465.467285,1000.269531  C464.713684,1000.624817 464.248566,1000.705139 463.424866,1000.608276  C458.479248,996.683533 456.126648,997.749512 452.495667,1005.541870  z\"})),_path1153||(_path1153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M486.300842,970.584106  C485.530914,970.904785 484.783936,970.735352 484.143494,970.066284  C479.970581,965.706543 476.019775,965.269104 470.634827,968.622498  C469.150696,969.546753 467.993530,969.556274 466.678833,968.257507  C463.921661,965.533569 461.089081,965.987305 458.170319,968.672607  C456.957489,970.289856 455.736847,970.811584 453.903809,969.597107  C449.934662,965.102539 449.934662,965.102539 454.373138,961.353516  C451.306183,958.225037 446.831055,956.789246 444.319061,953.028931  C443.227173,951.394531 443.385406,949.766479 443.422607,947.744934  C443.493011,943.918823 444.934235,941.187012 446.356445,937.964417  C447.051758,936.389038 445.464111,933.290344 445.330994,930.789429  C445.206909,928.458252 444.662323,926.033508 447.063049,924.463440  C448.505432,923.520020 447.584259,922.930786 446.914062,922.191895  C445.921112,921.097168 445.810486,919.824646 446.488525,918.177490  C448.339752,916.696228 449.737488,917.995544 451.576111,918.382202  C453.652252,918.229431 455.509949,918.461365 456.313507,920.010498  C457.924316,923.116028 459.036774,926.377869 463.747040,924.930908  C464.788208,924.610962 465.538666,926.203857 465.507782,927.464905  C465.451813,929.752747 465.958405,932.070923 465.080872,934.658691  C464.106018,937.045715 463.600769,939.018005 465.914062,940.555603  C468.290833,942.135437 467.156830,945.111389 468.566040,947.451355  C469.053284,950.640198 469.867981,953.498779 468.571564,956.628540  C468.442505,957.268005 467.537842,957.146851 467.956787,957.719788  C468.347687,958.254272 467.621490,957.661438 468.501526,957.314148  C470.134460,956.317749 471.778564,956.705811 473.589111,956.200134  C477.371033,958.626343 481.720398,959.191528 485.406372,961.829346  C485.682465,962.527039 485.766388,962.942871 485.904968,963.671997  C484.008820,966.164062 486.373108,968.164307 486.300842,970.584106  z\"})),_path1154||(_path1154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M492.232056,986.930969  C490.998138,987.100159 490.000610,987.006470 488.627930,986.898010  C488.037872,986.730469 487.822968,986.577759 487.864075,986.123535  C489.399139,984.547241 488.208527,981.205994 490.389648,981.435669  C492.888092,981.698792 492.329224,984.647827 492.232056,986.930969  z\"})),_path1155||(_path1155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M487.833374,985.862427  C488.133453,986.000000 488.146881,986.177979 488.206543,986.619629  C488.013245,988.538147 486.553009,988.918274 485.194397,989.891968  C484.294189,990.683655 483.520538,990.840820 482.312622,990.471436  C481.610565,989.823364 481.476166,989.312073 481.763428,988.400269  C483.067749,987.134338 483.888763,985.745178 486.018158,985.929749  C486.785492,985.890137 487.166107,985.896423 487.833374,985.862427  z\"})),_path1156||(_path1156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M486.024567,983.762451  C485.595215,983.815125 485.186432,983.643555 484.777649,983.471924  C485.048157,983.336060 485.318695,983.200134 485.837555,983.076904  C486.085876,983.089539 486.045105,983.538147 486.024567,983.762451  z\"})),_path1157||(_path1157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M481.692505,990.205383  C482.775604,990.129883 483.514984,990.112305 484.622620,990.130737  C487.222229,993.309082 483.938354,994.967224 483.081116,997.642334  C478.060028,998.651001 476.295563,1004.490662 471.376831,1005.342041  C469.851837,1005.605957 470.665802,1006.696655 470.654755,1007.604248  C470.637329,1009.031250 472.927277,1010.449036 470.399323,1011.905640  C468.642090,1007.493408 463.478271,1009.536865 460.978882,1006.409973  C460.089355,1003.835144 461.181335,1002.110718 462.683594,1000.194336  C463.434662,999.966797 463.870087,999.956238 464.632111,999.942871  C467.034760,997.554443 471.143921,999.669739 472.971313,996.080688  C473.241791,995.570496 473.357300,995.370117 473.675568,994.887207  C477.080505,994.382812 479.200439,992.298645 481.692505,990.205383  z\"})),_path1158||(_path1158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M469.057526,1013.718018  C468.865082,1013.783936 468.685211,1013.643799 468.535828,1013.476440  C468.516846,1013.455200 468.657562,1013.291321 468.894196,1013.133240  C469.064117,1013.072937 469.079498,1013.503662 469.057526,1013.718018  z\"})),_path1159||(_path1159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M849.653687,930.040894  C851.647339,933.477478 849.375610,934.328552 846.353516,934.958008  C844.044250,931.306641 847.162964,931.021606 849.653687,930.040894  z\"})),_path1160||(_path1160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M171.332458,831.999268  C170.997421,831.556091 170.998917,831.112122 171.001724,830.335327  C172.243027,829.171387 172.534592,827.257141 174.672516,827.038452  C175.345856,828.526794 172.897751,828.958191 173.796173,830.811218  C173.444717,831.841736 172.588455,831.994629 171.332458,831.999268  z\"})),_path1161||(_path1161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M176.211090,824.887207  C174.811600,823.996094 174.635406,822.689453 175.962646,821.966858  C177.043686,821.378296 176.828522,822.745728 177.001541,823.690857  C176.882523,824.307861 176.688126,824.564392 176.211090,824.887207  z\"})),_path1162||(_path1162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M383.242371,896.197266  C382.997009,895.220947 382.967072,894.476135 382.924316,893.358765  C383.816559,889.566772 388.052734,891.029358 389.765442,888.228027  C389.990723,887.992676 390.000000,888.000000 389.996490,887.995117  C390.558044,887.469910 391.219635,887.205200 392.343872,887.322510  C395.087067,890.018188 395.674316,892.638245 393.003479,895.502014  C392.193085,896.370972 391.130127,897.502197 392.734589,899.070679  C393.115417,899.474670 393.254089,899.649963 393.558228,900.114014  C394.262512,901.918152 395.895996,901.853760 397.159149,902.924744  C397.742432,905.048828 397.138550,906.576660 395.605469,908.116699  C393.091400,909.062134 390.594269,908.168762 388.128906,909.622070  C386.981567,909.973267 386.156403,910.041382 385.333313,910.125793  C378.484802,910.827942 376.727997,908.247009 379.854919,901.397888  C381.809753,901.119080 383.471619,901.087280 385.548920,901.079346  C386.927795,901.481323 387.400726,902.256409 387.805725,903.485229  C387.807526,902.065430 387.075134,901.303711 386.277130,900.226013  C386.057190,899.976013 386.023285,899.986511 386.025208,899.968872  C385.118469,898.815125 384.815491,897.237244 383.242371,896.197266  z\"})),_path1163||(_path1163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M389.947998,941.612122  C389.954590,942.395935 389.989319,942.830078 390.044495,943.590210  C391.000549,945.691406 390.052032,946.401855 388.070068,946.721741  C387.438477,946.598511 387.200165,946.504150 386.684967,946.154419  C385.673645,943.291565 384.115692,941.425598 381.280121,940.245117  C381.003876,939.840820 380.979462,939.674561 380.936096,939.256958  C380.971222,937.625061 380.215729,936.585999 379.338226,935.246338  C378.832886,934.179504 378.448059,933.413940 378.033447,932.325378  C378.479279,931.573975 378.793640,931.102722 378.179749,930.252563  C378.245483,928.935852 378.547516,927.814514 378.860901,926.343689  C379.614136,924.463745 379.977020,922.831848 380.278259,920.822998  C381.075653,919.052429 382.209412,918.176025 384.136108,917.758728  C384.776306,917.694153 385.034912,917.687805 385.680786,917.715942  C386.319336,917.813110 386.570618,917.875854 387.174377,918.101074  C389.386261,919.562561 389.573547,921.689697 390.265045,923.974915  C390.442017,925.074646 390.567261,925.802429 390.924072,926.856934  C391.171753,928.201050 391.130463,929.168640 390.553558,930.408142  C387.057922,930.636597 386.350891,931.821167 388.040100,934.788940  C389.145508,936.731079 389.676788,938.999268 389.947998,941.612122  z\"})),_path1164||(_path1164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M387.938232,861.915649  C388.695435,861.954102 389.443756,861.987427 390.563965,862.033569  C393.087585,865.506226 391.932159,869.577148 393.009949,873.618286  C392.567993,873.997925 392.119537,873.995911 391.336426,873.996216  C390.829773,875.565002 391.503357,876.743530 392.882996,877.984436  C393.163025,878.433167 393.253021,878.582764 393.323792,878.983887  C393.177216,879.580933 393.280212,879.870667 393.660736,880.376953  C393.937866,881.006714 394.018219,881.399231 394.048584,882.122559  C393.962402,882.878906 393.814819,883.288818 393.383789,883.928345  C392.469696,884.460266 391.843750,884.298340 391.014221,883.671448  C390.447144,882.826294 390.531525,882.136353 390.169556,881.243164  C387.397156,879.739563 385.777313,885.664429 383.477051,882.195801  C382.321777,880.453735 383.094269,877.445923 382.950714,875.013062  C382.903381,874.211243 382.717285,873.417603 382.334900,872.315979  C382.051117,871.254822 382.027130,870.497864 381.992676,869.362732  C384.155609,866.991211 385.240631,869.535950 386.717041,870.305115  C387.795624,867.629761 386.095367,864.902283 387.660217,862.165588  C387.903046,861.911255 387.929352,861.910583 387.938232,861.915649  z\"})),_path1165||(_path1165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M381.117035,920.650391  C379.877502,922.444458 383.940094,925.361633 379.239685,925.981079  C378.363861,925.654602 377.855499,925.314941 377.347107,924.975220  C380.030792,921.022217 376.875000,917.522156 376.670013,913.831665  C376.445801,909.794678 377.192505,905.718384 376.579987,901.547363  C376.256195,899.342407 378.404022,901.039734 379.792969,901.068420  C380.042206,902.113403 379.984070,903.083923 379.822784,904.037048  C379.060516,908.541748 379.915924,909.465515 384.152588,908.429626  C385.247528,908.161865 386.017700,908.648621 387.218201,909.022583  C389.303528,909.674072 389.110016,911.160522 389.031738,912.951111  C388.494751,914.654297 387.450836,915.458130 386.153168,916.499084  C384.281830,917.870728 380.956909,916.833801 381.117035,920.650391  z\"})),_path1166||(_path1166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M386.739838,944.768188  C386.994110,945.041626 386.989502,945.516357 386.990631,945.753784  C385.287292,948.913330 387.976959,951.614929 387.181885,954.708069  C386.706909,955.418335 386.467865,955.900146 386.226807,956.660645  C386.418579,958.195190 385.941711,959.290955 385.162415,960.637085  C384.919495,960.901611 384.907776,960.923584 384.889526,960.920044  C384.189514,960.962646 383.507751,961.008728 382.487671,961.089294  C383.342621,957.840515 384.024658,954.718018 379.955841,952.783508  C379.146393,952.398682 378.809296,950.867065 379.152252,950.719299  C384.407745,948.455627 376.570862,944.377014 380.748108,942.009521  C383.972443,940.479858 385.064667,942.842529 386.739838,944.768188  z\"})),_path1167||(_path1167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M389.621582,887.983765  C389.511139,890.066040 390.519226,893.642029 386.072083,891.666565  C385.524506,891.423218 384.406128,892.464722 383.231873,892.948486  C381.566437,891.032349 381.354218,888.997192 383.029907,887.214966  C385.337250,884.760925 387.091736,888.333374 389.621582,887.983765  z\"})),_path1168||(_path1168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M378.866547,935.010376  C381.344482,935.370605 384.365234,935.249084 381.220459,938.859863  C379.207855,938.250916 375.671387,938.612915 378.866547,935.010376  z\"})),_path1169||(_path1169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M386.989563,944.659729  C384.671906,945.071411 383.802979,942.531677 381.419861,942.037354  C381.058899,941.554749 381.032318,941.112854 381.017029,940.338989  C384.160828,939.830933 386.630829,940.578796 386.989563,944.659729  z\"})),_path1170||(_path1170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M386.027893,900.257324  C386.533966,900.097290 387.074890,900.113708 387.475800,900.359009  C388.829895,901.187561 389.605865,902.468018 389.558838,904.033447  C389.546356,904.448792 388.605408,905.234436 388.194885,905.171509  C386.292938,904.879700 386.814453,902.885010 386.006500,901.430298  C385.975769,900.914978 385.987183,900.726746 386.027893,900.257324  z\"})),_path1171||(_path1171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M390.786865,883.184570  C391.502869,883.259460 391.970123,883.513977 392.677704,883.883545  C393.995636,884.930969 394.043152,886.072693 393.304260,887.668945  C392.260559,888.019226 391.504700,888.016235 390.370911,888.001831  C389.985779,887.259033 389.978607,886.527710 389.969513,885.430664  C389.982452,884.439087 390.115997,883.853210 390.786865,883.184570  z\"})),_path1172||(_path1172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M383.050659,896.297363  C385.389191,895.771667 386.156219,897.060730 386.024658,899.569336  C384.566498,899.267151 383.464783,898.264160 383.050659,896.297363  z\"})),_path1173||(_path1173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M377.943665,930.381348  C379.101654,930.182983 380.927917,929.395569 381.195282,930.860291  C381.481262,932.426941 379.657410,931.754517 378.365723,932.001099  C377.983734,931.570129 377.963776,931.137756 377.943665,930.381348  z\"})),_path1174||(_path1174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M390.996216,882.706177  C390.836304,883.563599 390.636932,884.122375 390.202606,884.872925  C387.447937,883.949402 389.650879,882.738464 389.925171,881.280151  C390.287933,881.464661 390.622345,881.936096 390.996216,882.706177  z\"})),_path1175||(_path1175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M374.530945,872.544678  C374.481689,872.572388 374.580200,872.516968 374.530945,872.544678  z\"})),_path1176||(_path1176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M377.982056,875.012756  C377.859253,874.879150 377.754395,874.730164 377.649536,874.581238  C377.736816,874.622925 377.824066,874.664612 377.970856,874.833801  C378.030365,874.961304 377.999969,874.997437 377.982056,875.012756  z\"})),_path1177||(_path1177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M382.849854,994.230713  C383.371887,997.568359 386.830750,1001.809814 380.719543,1004.201416  C379.723480,1000.698364 381.833862,997.732849 382.849854,994.230713  z\"})),_path1178||(_path1178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M380.128967,1006.171509  C381.637909,1006.345581 382.401794,1006.954529 380.254883,1007.949829  C379.975403,1007.477966 379.993103,1006.996887 380.128967,1006.171509  z\"})),_path1179||(_path1179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M387.582092,861.766602  C388.467163,866.076599 389.488068,870.263000 387.296936,874.368530  C384.025513,874.089539 386.322021,868.995300 382.358612,869.005615  C378.667664,864.893372 378.499390,860.794006 381.943787,856.320068  C381.951324,855.513733 381.965302,855.072449 381.977356,854.299011  C384.256836,854.174194 385.099304,855.604004 384.991211,857.691101  C384.895538,859.538574 385.459564,860.914185 387.582092,861.766602  z\"})),_path1180||(_path1180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M370.996704,866.002563  C371.103760,866.125305 371.214111,866.245483 371.324432,866.365662  C371.251068,866.322083 371.177734,866.278564 371.054565,866.114380  C371.004791,865.993713 371.000000,866.000000 370.996704,866.002563  z\"})),_path1181||(_path1181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M53.638874,803.048340  C55.239040,804.200134 55.007801,805.004150 53.582405,806.029663  C50.718254,808.090393 50.525612,810.628174 52.932610,813.654907  C52.999847,814.166687 53.000000,814.333313 53.001205,814.750000  C50.470039,816.915161 50.918438,819.847534 50.225941,822.732910  C49.682457,823.467834 49.366467,823.938049 49.022072,824.702209  C47.688969,830.776550 47.139656,836.709167 45.245991,842.712646  C45.008785,843.006592 45.011715,843.500122 45.010475,843.746948  C45.598259,848.742126 42.070992,852.125244 39.888435,855.269043  C36.696209,859.867065 35.666695,865.155273 33.006519,869.797974  C31.900013,871.729065 31.641336,874.375061 28.301262,874.219116  C26.368963,872.849915 26.727861,871.236633 26.996742,869.322388  C27.599806,865.069275 26.170158,860.592407 31.627705,858.181580  C32.707352,857.704651 33.131237,852.781067 35.595104,850.514404  C35.942013,850.195190 40.289680,846.692322 35.349049,844.586060  C33.973167,843.999634 35.472595,841.582458 37.322948,840.482971  C39.412777,839.241211 42.326679,837.908997 38.875999,834.744995  C37.034794,833.056824 39.314140,832.561401 40.250717,831.532898  C41.943031,829.674500 44.064178,828.785217 44.560219,825.129883  C45.618664,817.330261 47.110886,809.125305 53.638874,803.048340  z\"})),_path1182||(_path1182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M32.358269,806.915344  C31.634165,803.806824 30.739555,800.950317 31.387970,797.323425  C32.081608,793.443481 33.476807,793.194580 36.604824,792.997009  C35.905697,797.711609 36.360016,802.904236 32.358269,806.915344  z\"})),_path1183||(_path1183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M28.001905,874.374329  C29.860498,873.872070 30.715452,872.364258 30.910175,871.007874  C31.537376,866.638855 35.706810,863.538025 35.128044,858.756042  C35.048420,858.098145 35.622726,857.060120 36.208466,856.670593  C40.613483,853.741516 41.352207,848.263794 44.863197,844.315308  C45.935497,846.741821 46.224533,848.845398 43.942348,851.719971  C41.966019,854.209412 41.603146,858.500977 41.684624,861.968872  C41.782921,866.152466 41.760921,869.798706 37.870895,872.363708  C36.435154,873.310425 37.404602,875.241089 36.263069,876.740356  C34.642685,877.762817 32.989105,877.057800 31.319626,877.936890  C30.503536,878.258667 30.007988,878.517395 29.255966,878.888062  C28.273397,877.674377 27.875834,876.271667 28.001905,874.374329  z\"})),_path1184||(_path1184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M45.350090,842.935059  C44.128162,836.713928 46.933918,831.090881 48.618927,825.096191  C49.072617,826.960083 48.729942,828.961060 50.130619,830.716736  C52.494762,833.680176 47.157127,834.743164 48.285088,837.880249  C48.668617,838.946838 47.601833,841.714233 45.350090,842.935059  z\"})),_path1185||(_path1185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M50.386559,822.997559  C50.156300,820.175659 45.825432,816.119324 52.599228,815.002991  C56.965801,820.981506 56.654854,822.097839 50.386559,822.997559  z\"})),_path1186||(_path1186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#141519\",opacity:1,stroke:\"none\",d:\" M31.081982,878.355103  C31.561810,874.455627 33.296799,874.914001 35.712112,876.852356  C36.563160,877.509766 37.124054,878.019470 37.844963,878.768311  C35.719112,879.042419 33.324905,881.571289 31.081982,878.355103  z\"})),_path1187||(_path1187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M34.546143,928.237061  C33.873234,930.448425 33.054657,929.573730 32.417000,928.497620  C31.866888,927.569214 31.943396,926.293457 32.966293,925.996643  C34.436226,925.570007 33.867966,927.329102 34.546143,928.237061  z\"})),_path1188||(_path1188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M62.807770,813.786255  C62.999596,814.442383 62.998985,814.884705 62.997810,815.658691  C62.106583,816.086609 60.851757,817.725281 60.470070,815.755127  C60.283527,814.792236 60.739841,813.157288 62.807770,813.786255  z\"})),_path1189||(_path1189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M26.464996,972.521240  C26.443132,972.480164 26.486862,972.562256 26.464996,972.521240  z\"})),_path1190||(_path1190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0F1013\",opacity:1,stroke:\"none\",d:\" M17.448523,881.955322  C17.817686,881.282959 18.188908,881.274231 18.516661,881.755432  C18.585274,881.856140 18.582455,882.089233 18.510990,882.187256  C18.169054,882.656067 17.798162,882.639160 17.448523,881.955322  z\"})),_path1191||(_path1191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M27.999857,944.000000  C27.760868,943.776794 27.445513,943.595520 27.296291,943.323181  C26.610371,942.071716 25.387562,940.829895 26.762064,939.352600  C27.321556,938.751160 28.165962,938.341187 28.899912,939.123413  C30.440828,940.765686 29.404606,942.113220 28.148903,943.710327  C28.000437,944.000000 28.000000,944.000000 27.999857,944.000000  z\"})),_path1192||(_path1192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M447.188843,917.579712  C447.043427,919.680481 446.601288,921.707825 449.315002,922.052185  C450.326874,922.180603 451.439148,922.595703 451.422607,923.759583  C451.402588,925.171753 450.057648,924.907776 449.139984,925.000916  C446.823303,925.235962 445.934235,926.207886 446.662048,928.653137  C447.612152,931.844849 445.327759,935.882324 449.200958,938.326965  C448.056122,939.659424 447.094940,941.236145 445.723419,942.267090  C443.666077,943.813354 443.491455,943.743530 445.721069,944.994751  C446.796936,945.598511 447.938324,946.112671 447.797607,947.450623  C447.582520,949.495483 446.084198,948.169434 445.112762,948.303894  C443.458954,948.532654 443.044281,949.597351 444.252899,950.646912  C446.226135,952.360352 446.417664,955.947449 450.353455,955.749207  C452.438263,955.644165 452.197296,961.732788 456.261139,958.606567  C456.603607,960.118347 457.384247,961.689087 455.659912,962.915588  C455.202606,963.240784 454.421478,967.123047 454.578949,967.544006  C454.663513,967.770142 454.359161,968.141785 454.119202,968.718750  C452.927887,970.098389 451.712830,969.887329 450.145294,969.168823  C445.939575,967.259216 442.302246,964.642273 437.327118,965.513794  C433.680481,963.215942 436.089081,959.555359 434.519501,956.123108  C434.207764,959.842407 434.160187,963.411194 429.171021,962.180054  C428.833801,957.911194 429.929199,953.712891 426.658386,950.246033  C426.004669,949.553101 427.370850,948.994568 428.101868,948.176270  C430.281494,947.422668 431.220093,949.924866 433.862366,949.423462  C431.792206,948.677734 430.274750,948.144775 428.592773,947.201294  C427.933746,945.788696 428.822723,945.154480 429.845886,944.233154  C435.732605,942.458679 436.565765,937.689392 437.232452,932.647095  C436.201233,930.981384 435.950195,929.387146 436.806061,928.103638  C439.209167,924.499207 438.171234,920.434204 438.604126,916.579956  C438.849670,914.393860 438.685120,912.272644 435.805542,911.597534  C434.085663,911.194336 433.878571,909.527893 433.642120,908.023682  C433.393250,906.440369 434.014679,904.647766 432.274414,903.105591  C431.839050,902.670532 431.677002,902.479004 431.323242,901.954956  C430.693268,900.639465 430.573181,899.597839 430.542328,898.128662  C430.322113,896.329468 430.489075,894.952087 430.771179,893.159668  C432.138977,889.477478 430.617706,885.865601 432.336639,882.254639  C434.645538,880.202393 436.840149,880.352600 439.415314,881.723511  C439.891205,882.191101 440.048248,882.401550 440.301697,882.981995  C436.928314,889.068848 437.944244,893.274109 443.635773,896.702576  C444.359375,897.138489 445.012756,897.624268 445.422180,898.765869  C445.319519,899.882690 444.844299,900.357910 443.783356,900.677002  C441.805695,901.102112 439.725708,898.760498 438.636414,900.983215  C437.953857,902.376099 437.954071,904.629578 440.736115,905.318665  C444.624573,906.343811 447.457458,907.902649 445.282257,912.269287  C444.245270,914.351013 446.270325,914.772400 447.036316,916.272583  C447.267456,916.808228 447.316162,917.039856 447.188843,917.579712  z\"})),_path1193||(_path1193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M432.070862,989.583740  C430.445129,990.131226 430.077057,991.071472 430.160339,992.637573  C426.923706,992.444397 424.312714,990.833313 422.029205,988.566956  C420.384338,986.934570 419.521240,986.933228 418.921356,989.606079  C417.783752,994.674805 416.345978,995.132263 411.865601,992.349548  C411.022064,991.825623 410.361023,991.272522 409.213959,991.407532  C405.148621,991.886230 405.276855,988.814331 405.201721,986.225220  C405.164917,984.957397 405.716309,983.653625 406.099945,982.396118  C407.193604,978.810913 406.697876,973.791138 412.953247,974.390259  C413.747528,973.260498 414.666046,972.940613 416.115814,973.130371  C418.570068,973.882263 418.917877,976.231018 420.497101,977.490845  C421.858398,976.315002 421.279175,974.689636 421.635071,972.950073  C421.771790,971.852051 422.045044,971.187073 422.800995,970.361206  C423.061523,970.101746 423.516632,970.035217 423.744873,970.006836  C424.979340,969.147461 426.079468,969.022522 427.653656,969.748108  C428.042206,969.955322 428.470154,970.027649 428.685974,970.050171  C430.460419,971.020264 430.220184,972.989258 431.430664,974.534546  C431.990143,975.690613 432.121796,976.592773 432.105011,977.850769  C431.999023,979.022034 431.798920,979.856567 431.995056,981.022705  C432.175812,981.967163 432.263275,982.605896 432.402954,983.573120  C432.500671,984.590210 432.768921,985.227539 432.973511,986.248413  C433.122742,987.602783 432.997375,988.554993 432.070862,989.583740  z\"})),_path1194||(_path1194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M390.201721,942.090149  C386.965912,938.988464 387.384552,934.444519 384.890533,931.184753  C384.157379,930.226624 385.712006,929.058655 386.630096,928.649841  C388.322937,927.895874 388.637054,929.788879 390.072998,930.786682  C390.831329,931.020630 391.022919,931.074707 391.466339,931.273499  C391.985565,931.655884 392.216370,931.923828 392.492737,932.438354  C392.593231,932.639771 392.977173,932.835266 393.183594,932.693237  C395.624176,930.750122 396.379486,928.265869 396.623718,925.124634  C394.558350,925.901489 392.607330,925.482910 392.019043,923.336487  C391.303223,920.724854 393.000519,918.572998 394.337372,916.527771  C395.330811,915.007874 396.876831,915.169006 398.283234,916.079041  C398.889160,916.471069 399.340363,916.856201 399.895508,915.611938  C404.203003,912.135864 407.397339,913.540100 410.389954,917.581787  C411.546021,919.587219 412.100159,921.343933 411.232361,923.598267  C407.656586,929.622131 404.266205,935.293945 401.073242,941.074829  C400.420959,942.255798 401.476990,944.021118 399.962769,945.601929  C398.315582,943.653992 399.374023,941.070312 398.239807,939.163757  C397.642242,938.159363 397.445435,936.776245 395.900482,937.260254  C394.308594,937.758972 393.930725,938.878845 394.916534,940.348206  C396.553864,942.788757 395.004944,945.812866 396.618378,948.375488  C394.100891,946.562622 394.073456,942.677246 390.201721,942.090149  z\"})),_path1195||(_path1195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M411.267822,924.095947  C410.646088,922.226685 410.315033,920.541626 409.978973,918.479736  C411.050262,916.890015 412.270020,917.119812 413.832001,917.973511  C415.625122,920.579651 416.856445,923.205139 420.052673,924.462341  C421.863953,927.015808 419.863556,930.201721 422.332458,932.648560  C422.600983,933.430969 422.593079,933.898315 422.285217,934.662048  C421.315704,934.968201 420.546143,934.977722 419.384033,934.996643  C419.232788,939.826721 419.474121,944.647339 419.715424,949.467957  C416.304688,945.840393 408.967255,945.144287 411.455109,937.661194  C411.740143,936.803833 410.029419,935.282898 409.246124,934.072815  C410.948669,932.305725 411.838989,935.303650 413.263885,934.452881  C412.803650,931.062805 416.563538,926.943604 411.267822,924.095947  z\"})),_path1196||(_path1196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M437.698578,931.861572  C439.166260,933.268616 443.400208,934.271790 438.231628,936.057739  C437.113068,936.444214 437.060944,938.288635 436.969757,939.648254  C436.702362,943.636414 434.687775,945.248535 430.381775,944.020264  C428.520325,942.204712 428.044525,940.101257 428.064697,937.455261  C427.711487,936.768433 427.459045,936.398438 427.259369,935.624268  C427.230743,934.597717 427.443176,933.941772 427.540283,932.925293  C427.531219,931.891968 427.583221,931.202209 427.654114,930.156982  C427.724274,929.320923 427.803070,928.845154 428.005310,928.015930  C428.529999,926.466492 429.080322,925.355591 430.489563,924.440247  C435.203461,925.460815 435.422577,926.079407 432.502563,929.966675  C431.870056,930.304871 431.373749,930.297668 431.211884,930.760132  C431.175110,930.865234 431.267700,930.956421 431.373566,930.993225  C432.003265,931.212097 431.217773,931.148682 431.849915,930.462952  C434.039154,930.219421 435.600922,931.382568 437.698578,931.861572  z\"})),_path1197||(_path1197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M413.398499,973.077759  C411.239807,972.716187 409.506561,972.368652 407.387634,972.024902  C404.064331,971.223999 401.682404,969.511047 399.298340,967.182983  C399.081726,966.918396 399.067810,966.450256 399.049774,966.216797  C398.552277,965.294434 398.899170,964.767639 399.675232,964.138550  C403.865021,964.271362 403.508331,960.858521 404.915710,957.772644  C407.781311,962.456299 411.956604,965.421997 413.970764,970.523071  C414.632782,971.666687 414.609497,972.411743 413.398499,973.077759  z\"})),_path1198||(_path1198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M428.681946,961.951111  C432.064880,961.722046 434.147125,960.738647 432.593018,957.042542  C432.019775,955.679138 431.754364,954.408447 433.718719,954.060181  C435.477936,953.748352 436.012787,954.384399 436.461609,956.320679  C437.106476,959.102783 435.456757,961.860107 436.955933,964.767456  C437.198486,965.169556 437.320801,965.300049 437.494080,965.691284  C437.552124,966.126282 437.559143,966.300537 437.573120,966.733093  C437.573364,967.160889 437.566650,967.330505 437.520569,967.745911  C437.391083,968.317017 437.376953,968.645691 437.482300,969.238159  C437.519989,969.680847 437.514252,969.863220 437.439362,970.317749  C437.150055,971.144104 436.820892,971.625061 436.123291,972.195435  C434.434540,972.509949 433.389282,971.718384 432.078186,970.750793  C431.702911,970.344666 431.574432,970.163513 431.326782,969.672424  C431.077576,967.401489 431.983643,965.026184 428.841064,963.972656  C428.209869,963.480530 427.954315,963.107605 427.839233,962.340088  C428.077179,961.993530 428.250488,961.988098 428.681946,961.951111  z\"})),_path1199||(_path1199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M387.298523,954.891479  C387.090057,953.526367 386.556610,952.553772 385.449585,951.571655  C383.028778,949.423706 383.662964,947.667358 386.763611,946.255737  C388.157379,945.940491 389.419647,946.093384 389.984558,944.262329  C393.499542,948.215027 392.918854,950.844604 387.298523,954.891479  z\"})),_path1200||(_path1200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M428.273193,947.292969  C430.587006,945.519714 432.711609,948.591797 435.177002,947.336853  C435.819122,947.009949 436.750305,948.386292 435.931671,949.512512  C434.991241,950.806152 434.238098,952.771484 432.112274,951.360535  C430.883087,950.544800 429.898132,949.361023 428.565002,948.136353  C428.326721,947.929871 428.270599,947.506470 428.273193,947.292969  z\"})),_path1201||(_path1201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M415.942993,972.433716  C417.937958,971.796936 417.284607,970.708130 416.790009,969.626282  C416.164673,968.258484 414.292084,967.559753 414.440308,965.527649  C417.869720,965.394592 417.685822,969.636719 420.774597,970.051147  C422.176605,970.712585 422.612854,971.596436 422.132751,973.128662  C420.692719,974.311462 419.380188,974.407410 417.632874,973.830994  C416.726593,973.526794 416.273010,973.254211 415.942993,972.433716  z\"})),_path1202||(_path1202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M428.620392,963.531372  C433.682983,963.298035 434.059998,965.689453 431.946655,969.699829  C431.521118,970.339355 431.078461,970.448059 430.302124,970.182617  C429.683075,968.901062 429.355530,967.822021 429.026886,966.399231  C428.444031,965.432678 428.235565,964.704834 428.620392,963.531372  z\"})),_path1203||(_path1203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M399.794861,963.776123  C399.733704,964.500427 399.485870,964.988586 399.134888,965.730042  C397.624054,966.163025 396.216370,966.342773 394.516754,966.559814  C394.675568,964.896973 394.821869,963.365112 394.960144,961.459229  C395.652985,960.568909 396.142883,960.956848 396.804443,961.732849  C397.873047,962.510132 398.740601,963.025146 399.794861,963.776123  z\"})),_path1204||(_path1204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M427.951813,934.666687  C428.040894,935.464844 428.064697,935.923584 428.073792,936.727783  C426.674835,936.722046 425.290619,936.370789 423.554810,935.950867  C422.786285,935.966553 422.492950,935.823730 422.182251,935.177856  C422.020172,934.940857 422.039124,934.990417 422.062195,934.974609  C422.035400,934.540039 421.985596,934.121399 421.872620,933.392822  C421.672363,931.200500 423.011780,931.420837 424.534363,931.496643  C425.097656,931.669189 425.316589,931.756531 425.842407,932.017578  C426.923584,932.744568 427.552063,933.416382 427.951813,934.666687  z\"})),_path1205||(_path1205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M427.888000,969.659973  C426.957184,969.972290 425.872192,969.989258 424.380127,969.992371  C423.573578,968.812012 423.174042,967.645508 422.679718,966.202271  C425.344757,965.944031 426.328918,968.009888 427.888000,969.659973  z\"})),_path1206||(_path1206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M428.644562,963.020020  C428.888367,963.906799 428.946167,964.619995 429.014893,965.694336  C427.245148,965.829712 425.810547,964.996460 425.472443,963.183350  C425.265564,962.073975 426.455780,962.143372 427.571838,962.014648  C428.088745,962.281494 428.273651,962.563965 428.644562,963.020020  z\"})),_path1207||(_path1207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M429.732788,969.995483  C430.435608,970.002014 430.860626,970.023926 431.603638,970.052490  C431.921692,970.059143 431.942871,970.053650 431.941345,970.062012  C433.327759,971.504578 431.914062,972.770203 431.269165,974.548950  C428.369110,974.437256 429.266235,972.355103 428.926086,970.448059  C429.086182,970.052063 429.270569,970.031555 429.732788,969.995483  z\"})),_path1208||(_path1208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M396.971436,961.661804  C396.500702,961.746765 395.995880,961.498474 395.221588,961.167725  C394.632446,960.662659 394.312805,960.239990 393.961670,959.553467  C394.206635,958.786743 394.684021,957.826721 394.730499,957.847168  C396.220276,958.502014 396.443481,960.003540 396.971436,961.661804  z\"})),_path1209||(_path1209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M385.222107,960.790283  C385.158661,959.730408 385.397827,958.559143 385.930878,957.163635  C389.683014,958.876953 386.331360,959.539795 385.222107,960.790283  z\"})),_path1210||(_path1210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M415.721497,971.908630  C416.121460,972.340637 416.328308,972.597961 416.815308,972.929565  C417.141205,973.223083 417.251495,973.390686 417.179932,973.798096  C415.935181,974.037537 414.872253,974.037231 413.411682,974.059692  C413.006439,973.912415 412.998871,973.742371 412.982178,973.318115  C413.299408,972.544434 413.625763,972.025085 413.982849,971.186340  C414.497009,971.173218 414.980469,971.479492 415.721497,971.908630  z\"})),_path1211||(_path1211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M422.221069,973.176819  C421.757599,972.206421 421.546906,971.437805 421.229980,970.391785  C421.553711,970.087830 421.983643,970.061401 422.737549,970.068359  C423.052948,970.834106 423.044373,971.566528 423.028595,972.666504  C422.838898,973.148987 422.656372,973.263855 422.221069,973.176819  z\"})),_path1212||(_path1212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M423.253265,960.414551  C423.135956,960.562744 422.936432,960.582825 422.736938,960.602905  C422.881653,960.497437 423.026367,960.391968 423.253265,960.414551  z\"})),_path1213||(_path1213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M392.916138,959.196533  C392.986572,959.482178 392.791565,959.677063 392.384613,959.939819  C391.272156,959.160583 392.034210,959.179382 392.916138,959.196533  z\"})),_path1214||(_path1214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M422.027710,935.177246  C422.305206,935.123047 422.590271,935.305237 423.039307,935.684814  C422.486359,936.542297 422.153229,936.246094 422.027710,935.177246  z\"})),_path1215||(_path1215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M421.520233,958.541626  C421.479950,958.563843 421.560516,958.519470 421.520233,958.541626  z\"})),_path1216||(_path1216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M408.473206,937.472595  C408.516907,937.449036 408.429535,937.496155 408.473206,937.472595  z\"})),_path1217||(_path1217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M399.096741,967.289307  C401.981506,967.805054 404.762512,968.892639 406.848083,971.723145  C406.950531,973.534546 405.709686,974.238342 404.820709,975.139099  C403.780853,976.192871 402.488708,977.303284 400.964752,976.584045  C399.340454,975.817566 398.795715,974.076965 399.166260,972.407837  C399.529480,970.771545 399.760834,969.238831 399.096741,967.289307  z\"})),_path1218||(_path1218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M432.513428,1008.692261  C433.936951,1009.179443 435.157074,1006.361755 435.843628,1008.690308  C436.458740,1010.776550 434.941742,1011.909302 432.422882,1011.961548  C431.849426,1011.198059 431.641327,1010.420898 431.397064,1009.241455  C431.616302,1008.747559 431.871674,1008.655884 432.513428,1008.692261  z\"})),_path1219||(_path1219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M433.127319,999.531982  C432.596313,999.826599 432.350281,999.844666 431.729431,999.852112  C430.136963,998.831848 429.779999,997.719727 431.136261,996.283325  C431.725708,996.284302 432.126740,996.427856 432.716858,996.832764  C433.538483,997.705933 433.686157,998.431335 433.127319,999.531982  z\"})),_path1220||(_path1220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M432.931824,1008.471924  C432.644562,1008.846191 432.389374,1008.872070 431.747528,1008.868591  C430.644135,1007.827393 430.975281,1006.705872 431.100006,1005.277344  C433.047668,1005.285767 433.038452,1006.686340 432.931824,1008.471924  z\"})),_path1221||(_path1221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M412.501099,1007.650574  C412.494354,1006.117249 413.221161,1006.217712 413.993256,1006.760437  C414.556824,1007.156616 414.907837,1007.835938 414.259186,1008.371216  C413.657623,1008.867554 413.080078,1008.400696 412.501099,1007.650574  z\"})),_path1222||(_path1222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M459.165161,1005.614258  C457.954163,1008.269409 455.819427,1007.994812 453.404785,1008.023193  C452.752106,1007.524963 452.488953,1007.017639 452.105591,1006.250977  C451.985352,1005.991577 451.998779,1005.998047 451.994781,1005.993042  C454.148590,1003.511963 456.365356,1001.581238 459.165161,1005.614258  z\"})),_path1223||(_path1223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M450.734070,1010.171875  C451.321198,1012.583679 449.747284,1013.799683 447.461517,1014.879883  C447.130554,1014.576904 447.090668,1014.113708 447.045349,1013.301025  C447.692413,1011.452209 449.159882,1010.991394 450.734070,1010.171875  z\"})),_path1224||(_path1224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M433.157043,999.830444  C432.876068,999.130432 432.909821,998.452271 432.924744,997.434204  C434.008484,997.826050 436.026459,998.370178 433.157043,999.830444  z\"})),_path1225||(_path1225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M452.698151,1009.086853  C452.528717,1009.371460 452.072205,1009.668213 451.334961,1009.996765  C451.506470,1009.718750 451.958771,1009.408875 452.698151,1009.086853  z\"})),_path1226||(_path1226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M459.435059,1006.026001  C457.026123,1003.249146 454.850555,1004.693115 452.334198,1005.961182  C451.649261,1000.811829 454.992798,998.080139 459.018402,996.233398  C461.419220,995.132019 462.035889,997.723267 462.964203,999.643677  C463.128265,1002.024353 462.257690,1003.745911 461.051575,1005.735962  C460.490692,1006.048645 460.106842,1006.041199 459.435059,1006.026001  z\"})),_path1227||(_path1227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M467.990845,1017.624878  C467.604980,1017.981384 467.187439,1017.970642 466.456787,1017.952393  C464.207458,1018.356628 462.253845,1018.568542 460.356323,1017.861755  C458.970428,1017.345581 458.187866,1017.777466 457.602234,1019.435364  C456.872101,1020.346802 456.190948,1020.584656 455.019409,1020.343750  C453.569611,1019.176147 453.040558,1017.984131 453.614319,1016.108521  C453.730682,1012.892761 454.868896,1011.677246 457.939545,1011.846802  C462.240204,1012.084290 465.961090,1012.956116 467.990845,1017.624878  z\"})),_path1228||(_path1228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M453.499207,1015.845825  C454.166382,1016.886597 454.549316,1018.044617 454.981567,1019.559326  C455.679535,1020.843140 455.274078,1021.609070 454.426514,1022.588745  C453.414856,1023.257080 452.980286,1020.678162 451.985504,1022.834229  C451.679169,1022.841431 451.419312,1022.601318 451.058075,1022.113098  C450.795288,1021.734375 450.633942,1021.603760 450.245789,1021.259766  C449.613678,1020.570374 449.208435,1020.094238 448.684631,1019.309998  C448.566040,1019.001831 448.762360,1018.955383 448.851929,1018.909058  C449.655670,1018.201599 450.551331,1018.333618 451.672607,1018.112549  C452.077179,1017.086426 452.374146,1016.347717 453.499207,1015.845825  z\"})),_path1229||(_path1229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M451.664062,1017.811340  C451.916656,1020.069397 450.541565,1019.098572 449.237885,1018.917664  C449.184875,1017.270020 450.029205,1016.939087 451.664062,1017.811340  z\"})),_path1230||(_path1230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M454.590668,1022.889954  C454.384888,1022.052246 454.576782,1021.270203 454.899780,1020.202148  C455.616577,1019.714661 456.202271,1019.513184 457.030884,1019.108643  C459.320984,1017.037903 461.209351,1017.138489 462.997742,1019.725403  C463.032135,1020.514282 462.995178,1020.939697 462.962585,1021.685303  C462.400757,1022.901550 461.531311,1023.169128 460.184143,1023.159912  C458.216827,1023.076111 456.602570,1023.010864 454.590668,1022.889954  z\"})),_path1231||(_path1231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M459.995239,1023.461548  C460.411011,1022.269165 461.282715,1022.022888 462.614594,1022.006836  C463.723480,1022.653015 464.105865,1023.459961 464.015930,1024.821045  C462.564850,1025.166626 461.045593,1025.350708 459.995239,1023.461548  z\"})),_path1232||(_path1232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M452.191193,1026.067017  C450.919983,1025.638550 449.101562,1025.433594 451.562134,1023.962524  C452.220764,1024.409058 452.581970,1024.892822 452.986420,1025.686890  C452.843079,1026.010132 452.656494,1026.022949 452.191193,1026.067017  z\"})),_path1233||(_path1233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M463.385254,1020.006348  C461.562988,1018.732910 459.838928,1018.329590 457.582458,1018.904907  C457.184418,1017.718384 455.565765,1016.493835 457.058319,1015.386719  C458.201508,1014.538818 459.207520,1015.525085 460.028625,1016.318848  C461.667480,1017.903198 463.944977,1015.941223 465.867584,1017.657227  C465.768097,1019.145508 464.729462,1019.528076 463.385254,1020.006348  z\"})),_path1234||(_path1234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M450.132874,1021.227661  C450.273041,1021.171875 450.497589,1021.337402 450.824646,1021.704041  C450.674622,1021.783630 450.437988,1021.631592 450.132874,1021.227661  z\"})),_path1235||(_path1235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M951.674744,718.752563  C952.002441,719.019531 951.997803,719.505005 951.996460,719.747620  C951.916016,722.598267 955.274231,723.560486 955.006409,726.625244  C954.208435,726.874451 952.860291,727.008850 952.678284,726.610474  C950.210632,721.209106 944.143005,721.769043 940.199341,718.891235  C939.019043,718.029907 938.041138,718.636536 936.949097,718.832275  C935.124329,719.159302 933.676270,718.721802 933.051208,716.363770  C934.170532,715.835327 935.343445,715.668213 936.758728,715.239563  C940.645447,712.309204 944.099792,713.429016 947.418274,715.608032  C948.769409,716.495178 949.828125,717.807678 951.674744,718.752563  z\"})),_path1236||(_path1236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M955.966553,728.342163  C959.263733,727.679016 960.310913,730.353027 961.940430,732.660278  C960.385864,732.655273 958.783569,732.196350 957.149536,731.997070  C954.462585,731.669434 955.686584,730.030640 955.966553,728.342163  z\"})),_path1237||(_path1237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M966.020081,739.334229  C967.403015,739.119324 968.000854,739.938416 968.020813,741.617188  C966.580139,741.899353 966.006836,741.053589 966.020081,739.334229  z\"})),_path1238||(_path1238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M962.050903,733.312012  C962.896790,733.095642 963.660339,733.373047 963.939087,734.693420  C963.096863,734.902588 962.335388,734.622864 962.050903,733.312012  z\"})),_path1239||(_path1239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M951.939453,718.675842  C950.473022,719.104675 948.848206,718.869446 947.843811,717.826965  C945.012634,714.888428 941.523010,714.769714 937.436401,714.983704  C936.880371,712.797607 935.096375,710.935974 935.891296,708.305725  C937.115967,707.379211 938.227966,706.748657 939.663086,706.063965  C940.997803,708.926941 944.546204,708.483337 946.353149,711.121948  C947.978271,713.494995 950.115601,715.845825 951.939453,718.675842  z\"})),_path1240||(_path1240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M170.952621,681.430176  C175.317322,682.473450 177.736069,688.319946 175.999084,693.643066  C175.302124,694.605042 174.525711,694.754761 173.319458,694.229492  C174.062195,689.650635 170.825027,686.022949 170.952621,681.430176  z\"})),_path1241||(_path1241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M164.311905,703.747925  C164.058273,704.778381 164.025528,705.500793 163.967285,706.582397  C162.090317,706.643250 159.182938,708.165222 159.126877,704.604370  C159.058838,700.282349 162.199631,696.562439 165.548706,697.049805  C165.916672,697.078369 165.965942,697.538513 165.983490,697.769287  C167.484940,700.345886 164.685699,701.535706 164.311905,703.747925  z\"})),_path1242||(_path1242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M172.971176,694.229370  C173.729919,693.995728 174.483765,693.998840 175.613861,694.004517  C175.875504,695.029297 176.218781,696.284729 174.822510,696.707458  C173.911316,696.983337 173.410263,696.404602 173.026855,695.278625  C172.949570,694.939209 172.966278,694.466064 172.971176,694.229370  z\"})),_path1243||(_path1243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M175.799637,600.767944  C177.505280,601.193298 178.538254,602.694519 177.776169,603.312683  C175.270584,605.345398 176.408173,608.400024 175.140152,610.692322  C174.046051,612.670227 173.993469,614.316895 175.292023,616.593323  C177.120956,619.799561 175.183456,623.375305 174.156296,626.534119  C172.518936,631.569397 171.070648,636.583862 171.009354,641.890076  C170.981522,644.299194 169.869659,645.146606 167.217026,644.988403  C166.079605,637.627991 166.442734,630.407227 169.921555,623.690674  C170.778992,622.035278 171.413223,620.380127 171.566498,618.182617  C169.639771,614.808472 170.476059,611.537659 170.606995,607.982300  C170.832748,606.768005 171.258011,605.968872 171.142151,604.776001  C170.912460,604.096924 170.772614,603.705750 170.588196,602.987244  C170.574112,602.443359 170.614365,602.223389 170.840149,601.717468  C171.525391,600.929749 172.119522,600.575134 173.116913,600.217773  C174.195068,600.034912 174.889725,600.138977 175.799637,600.767944  z\"})),_path1244||(_path1244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M172.442474,605.770264  C172.078537,609.742249 171.875427,613.340759 171.580444,617.376587  C169.801941,617.794067 170.379486,621.356934 168.491364,620.156006  C165.943268,618.535400 167.854752,615.912781 167.940094,613.327454  C168.290237,610.567200 168.660782,608.191956 169.070038,605.408569  C168.978989,603.896667 169.410934,603.094116 170.769989,602.609741  C171.478012,602.853943 171.816895,603.079224 172.342010,603.548096  C172.687103,604.320496 172.712082,604.855530 172.442474,605.770264  z\"})),_path1245||(_path1245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M166.527100,651.936768  C166.595398,655.888367 170.888184,658.811035 168.992722,662.990295  C170.892914,663.503784 173.096558,660.366089 173.760391,663.553406  C174.342606,666.349060 175.878525,669.396790 172.443771,672.077637  C168.742981,674.966003 163.785782,676.115845 161.025269,680.683472  C158.836182,680.857361 158.278717,679.775452 158.862091,677.758362  C159.346268,676.084351 159.560883,674.332336 159.823669,672.221680  C159.761429,670.826416 159.770447,669.824341 159.707062,668.450562  C166.572357,664.656250 164.367844,659.071228 162.977264,653.349854  C164.006989,652.659119 165.096878,652.311462 166.527100,651.936768  z\"})),_path1246||(_path1246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M147.832535,711.531860  C146.860519,712.038025 145.890991,712.239502 144.550934,712.403931  C144.493271,709.979004 144.806122,707.591187 145.129044,705.126465  C146.070816,705.835022 146.888794,706.450378 148.056824,707.161072  C148.989700,708.691345 147.853699,709.878784 147.832535,711.531860  z\"})),_path1247||(_path1247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M171.114243,602.526855  C170.630737,603.301697 170.122360,603.974609 169.361359,604.823975  C165.329208,605.329346 164.052765,603.807922 166.282349,600.570190  C168.367477,597.542114 167.152725,593.435181 169.915833,590.345947  C174.447906,590.114563 175.327881,587.669983 175.109207,583.680481  C174.905548,579.964661 177.617493,576.578308 176.999603,572.341797  C178.958771,570.519592 177.462097,565.493774 182.404510,567.252258  C181.269379,573.454041 181.967773,579.542725 180.337830,585.724731  C179.748657,587.138611 179.373703,588.219788 178.987885,589.649658  C179.047256,591.681335 178.027252,593.010376 177.309387,594.778687  C176.777374,596.785278 176.450302,598.517090 176.098267,600.624451  C175.332092,601.011597 174.590836,601.023193 173.479889,601.039062  C172.440048,601.039246 171.851959,601.253357 171.172668,601.971680  C170.992432,602.239197 171.089386,602.425049 171.114243,602.526855  z\"})),_path1248||(_path1248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M818.235962,651.748535  C817.597168,655.284851 820.992554,657.095703 821.105347,660.545288  C821.358215,661.834045 820.825317,662.264282 819.709106,662.575684  C816.014526,661.418518 814.994995,658.372437 813.630188,655.578857  C812.293945,652.843628 811.943787,649.618103 809.586304,647.034973  C807.576355,649.620850 808.072632,652.136658 808.671692,654.704834  C809.186096,656.910278 810.427063,659.024353 809.441772,661.722107  C808.549927,662.452393 807.868713,662.302734 806.893555,661.771362  C803.328064,656.450684 800.410095,651.128235 797.142700,645.585022  C796.622864,644.873657 796.368591,644.432678 796.006958,643.598877  C795.393066,641.083069 795.621521,638.903015 795.512512,636.329529  C795.291260,632.353210 795.594482,628.789062 795.604248,624.831055  C795.733826,624.189453 795.801208,623.940308 796.008484,623.339111  C797.859253,620.724609 797.796143,618.216309 797.088684,615.283875  C796.908875,614.228333 796.945984,613.524231 797.206787,612.493530  C798.544250,610.623230 800.186646,609.166260 798.214966,606.676270  C797.880676,605.025452 797.981628,603.818359 799.552551,602.953308  C805.173340,608.161682 805.305908,614.717224 805.191162,621.517029  C805.122131,625.607788 805.684204,629.827393 809.678467,632.845947  C811.174255,633.844360 811.499939,635.117249 811.781128,636.765991  C811.885193,637.808899 811.929688,638.528320 812.005493,639.606812  C814.799500,641.973816 815.920837,645.386597 818.749023,647.778015  C818.981201,648.018677 818.994324,648.008301 818.987793,648.013672  C818.826538,649.165955 818.671936,650.312988 818.235962,651.748535  z\"})),_path1249||(_path1249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M818.988647,647.649536  C813.940369,648.149109 814.292908,643.206055 812.056885,640.322510  C816.438904,640.422791 817.619934,643.944397 818.988647,647.649536  z\"})),_path1250||(_path1250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B3B1AD\",opacity:1,stroke:\"none\",d:\" M812.132324,636.834717  C809.886414,636.701050 810.101379,635.138672 810.008240,633.368286  C811.936401,630.804749 808.543457,628.784851 809.736572,626.590271  C811.157227,626.482300 811.171997,627.787720 811.880615,628.788635  C811.787292,631.602844 814.029297,633.983521 812.132324,636.834717  z\"})),_path1251||(_path1251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M798.328796,611.733948  C798.055847,612.791321 798.027161,613.526489 797.992188,614.629639  C797.613770,617.474365 797.616882,619.974731 797.338989,622.764038  C797.161316,623.059387 797.081543,623.066528 797.052856,623.038574  C795.301147,624.113098 794.803162,625.566528 795.182617,627.636902  C795.565247,629.724304 795.781372,632.158813 793.500183,633.380859  C791.205444,634.610291 789.466431,632.921509 787.566650,631.294556  C787.180847,628.206787 785.995911,625.586853 785.971069,622.386169  C785.948792,620.933533 785.942078,619.865906 785.936401,618.397888  C786.175110,616.708984 785.249878,615.546204 785.725952,613.996460  C786.126648,613.686096 786.333923,613.632141 786.785950,613.786499  C789.801392,614.949829 791.723389,615.436829 792.362366,611.171509  C792.927185,607.401123 793.048218,603.964050 791.666016,600.477966  C789.634094,595.353271 790.557312,590.497070 792.944824,585.377930  C795.114136,584.960388 795.324524,587.723633 797.612915,587.961670  C797.949707,588.437744 797.953125,588.871216 797.955505,589.629822  C797.478394,590.414795 797.312561,590.950073 797.760437,591.811646  C798.406128,592.891724 798.849365,593.745483 799.504211,594.782593  C799.746826,595.711548 799.777832,596.457275 799.800537,597.575439  C799.634155,598.767517 799.708801,599.588501 799.744934,600.717163  C799.758484,601.453674 799.804626,601.882446 799.893677,602.631165  C798.892944,603.845154 799.055664,605.062622 799.064331,606.595581  C800.254456,608.591614 799.509094,610.012390 798.328796,611.733948  z\"})),_path1252||(_path1252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M800.003113,600.858154  C798.723694,600.163879 797.476868,599.342896 799.521606,598.000488  C800.957520,598.679993 801.195679,599.581543 800.003113,600.858154  z\"})),_path1253||(_path1253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M857.984924,698.660400  C851.011719,700.105896 845.265015,696.271362 839.283569,693.737732  C832.211975,690.742493 824.624817,689.308716 817.735291,685.622009  C813.123779,683.154236 810.173218,679.512512 807.163574,675.156799  C808.186829,673.878662 809.181519,673.707947 810.591064,673.703491  C813.269409,673.964600 814.733765,675.512573 816.221191,677.065491  C818.075928,679.001892 820.200256,680.477417 823.358826,680.686157  C823.946106,680.793762 824.177917,680.852722 824.744751,681.038574  C826.148865,681.678284 827.083496,682.395142 828.289001,683.320312  C830.024719,684.978210 831.660034,687.240906 831.868591,682.813599  C831.930420,681.501282 832.084595,680.186768 833.849731,679.602112  C834.175537,679.653809 834.605957,679.828369 834.826416,679.901428  C835.707886,680.707764 836.647949,681.284180 837.069519,682.117981  C841.140625,690.170654 848.386536,693.891174 856.723633,696.771606  C857.294983,697.476135 857.599854,697.935791 857.984924,698.660400  z\"})),_path1254||(_path1254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M834.164062,679.380737  C833.240601,680.510986 832.879761,681.571533 833.187134,682.796265  C833.542114,684.210266 834.426880,685.776001 832.478760,686.649353  C830.515381,687.529724 828.936646,686.931519 827.896240,684.586731  C828.689331,682.323608 828.293335,680.773743 826.233704,679.367859  C822.977051,676.019714 819.598938,673.239380 818.411316,668.791992  C817.843567,666.666016 817.215820,664.618042 818.703857,662.266113  C819.575378,661.804810 820.155701,661.604431 820.937805,661.159058  C823.557007,661.443176 822.947571,663.735352 823.526733,665.249329  C824.427856,667.604736 825.189331,669.868652 828.615906,670.000732  C829.489746,670.581482 829.986816,671.157593 830.739502,671.869507  C832.544312,673.475708 833.954041,675.028076 834.079041,677.663696  C834.080383,678.377808 834.116516,678.742676 834.164062,679.380737  z\"})),_path1255||(_path1255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M856.950684,696.641479  C846.856384,695.378296 838.721191,691.058594 835.068726,680.334717  C839.790039,680.896301 842.513123,684.668152 845.336426,687.913025  C848.054749,691.037354 849.939575,694.767883 854.977478,694.283875  C855.940369,694.191345 856.642517,695.226501 856.950684,696.641479  z\"})),_path1256||(_path1256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M834.381470,678.003967  C832.350769,676.633972 831.821716,674.603455 831.032471,672.351562  C833.628113,672.126526 835.053589,673.930603 836.239014,675.928589  C837.218323,677.579163 835.971497,677.849365 834.381470,678.003967  z\"})),_path1257||(_path1257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M862.802246,700.869690  C860.855347,702.189758 859.368835,701.241577 858.084778,699.257202  C858.494690,698.922424 858.923096,698.924500 859.672974,698.968262  C860.872803,699.542114 861.751038,700.074219 862.802246,700.869690  z\"})),_path1258||(_path1258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M461.466187,72.520142  C461.444672,72.479317 461.487671,72.560959 461.466187,72.520142  z\"})),_path1259||(_path1259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M497.351074,60.274345  C494.469330,60.680824 490.119995,60.008961 489.572144,60.684246  C486.074402,64.995674 482.300690,60.068211 479.523438,61.437740  C475.808075,63.269848 472.193268,62.809887 468.483978,62.986164  C466.987518,63.057285 465.471863,63.063969 464.209320,61.360367  C465.982513,57.832230 469.679138,59.347424 472.736938,57.941109  C475.811737,57.592632 478.478638,57.294781 481.557983,56.988007  C486.072510,59.041161 490.306854,57.884167 494.765198,57.224789  C496.404144,56.964046 497.787506,56.972775 499.586334,56.993088  C500.260376,57.506657 500.518951,58.008644 500.889374,58.770382  C501.089264,59.286282 501.177338,59.542431 501.018616,60.122482  C499.754181,61.063858 498.722778,61.074219 497.351074,60.274345  z\"})),_path1260||(_path1260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M496.944763,60.373940  C498.083099,60.030235 499.142578,60.028027 500.599854,60.028305  C501.823883,60.239635 502.528290,60.765190 503.682526,60.979771  C504.443390,61.013840 504.888428,61.010700 505.667236,61.004730  C506.444977,61.002300 506.888947,61.004173 507.665863,61.011360  C508.443512,61.013390 508.888245,61.011395 509.666473,61.008118  C511.588654,65.985748 514.157532,67.298317 518.157104,64.982101  C521.211365,63.213272 523.956299,65.134743 526.788330,65.539848  C528.680298,65.810471 530.451477,66.924896 532.566284,67.778603  C531.103821,69.628853 529.298828,69.021202 527.681580,68.702599  C525.734741,68.319054 523.854736,67.598412 521.908936,67.206879  C520.668762,66.957336 519.007996,66.466293 518.421021,68.088814  C517.774414,69.876366 519.586731,70.153740 520.683655,70.750267  C521.259888,71.063599 521.907898,71.244865 522.760132,71.745956  C522.919617,74.525459 521.037109,73.699127 519.803406,73.550636  C517.030823,73.216942 514.353455,72.426727 512.803711,71.464600  C516.549805,72.486984 520.066284,77.158699 525.949707,75.809181  C526.453430,75.519714 526.664490,75.418915 527.214294,75.220589  C532.465698,76.046013 533.976868,77.628830 534.067932,82.233253  C534.126343,85.184357 537.812378,85.018166 538.484619,87.809982  C538.586365,91.025497 536.562134,91.085655 534.807495,90.344803  C526.871277,86.993866 518.733154,86.461113 510.195496,87.048126  C506.716278,87.287331 503.049988,86.461433 499.965485,87.233261  C503.106995,88.218651 506.810181,88.718697 510.580994,89.026222  C512.754883,89.203499 515.378113,89.177071 516.504761,92.229416  C516.400818,92.830833 516.302002,93.061890 515.930786,93.560684  C514.045471,94.901009 512.263062,94.985008 510.395905,94.844742  C498.327820,93.938126 486.257477,93.482681 473.808624,94.848984  C471.002869,94.686943 470.260010,91.742439 467.509094,91.488907  C465.202026,91.220581 463.472717,90.716629 463.240662,87.978355  C463.733887,85.964684 465.445801,85.415260 466.561890,83.863899  C467.364410,83.441994 467.867981,83.408401 468.685486,83.767685  C472.178772,86.369377 475.768768,86.354073 479.417542,85.631065  C480.550934,85.406471 481.633850,84.757446 481.827393,83.411026  C481.983917,82.321991 481.595184,81.482986 480.438629,81.108917  C476.622437,79.874641 478.520508,78.570786 480.636536,78.148682  C483.238007,77.629761 482.888763,75.626633 483.429321,74.037987  C484.256866,71.606102 481.448486,72.443497 480.532227,70.930603  C484.240173,69.742943 487.382080,68.928474 490.438354,72.299042  C492.940247,75.058159 495.859314,75.586418 497.504028,71.328156  C498.296936,69.275215 500.395355,68.733170 501.651825,66.811295  C497.746857,64.944687 493.463226,66.883530 489.340820,65.405121  C491.441467,62.637196 495.097748,63.169941 496.944763,60.373940  z\"})),_path1261||(_path1261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M503.890717,60.762085  C502.874146,62.182903 501.877777,62.322971 501.052063,60.343689  C500.998779,59.863903 500.999939,59.697010 501.001160,59.280128  C501.446564,59.029312 501.891876,59.028492 502.671326,59.038155  C503.264618,59.534821 503.523834,60.021008 503.890717,60.762085  z\"})),_path1262||(_path1262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M507.848175,60.801090  C507.557159,61.661083 507.034241,61.969627 506.153168,61.212723  C506.439636,60.344917 506.962097,60.030712 507.848175,60.801090  z\"})),_path1263||(_path1263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M504.955048,56.419067  C505.257874,56.185383 505.542297,56.293858 505.894775,56.741188  C505.411835,57.677917 505.163391,57.270226 504.955048,56.419067  z\"})),_path1264||(_path1264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M538.340149,63.836479  C537.550598,63.983067 537.108521,63.984497 536.335083,63.996552  C535.419861,63.187347 534.835938,62.367516 534.130005,61.269928  C535.407227,60.996712 536.806519,61.001255 538.624817,61.034073  C539.838684,62.062473 539.494568,62.908257 538.340149,63.836479  z\"})),_path1265||(_path1265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M538.153381,64.291290  C538.318359,63.214993 538.644104,62.448353 539.006836,61.372025  C539.458923,61.067032 539.874023,61.071720 540.597229,61.117271  C540.825989,64.161835 545.923157,63.661083 545.014160,67.607803  C541.970825,68.462143 539.938782,66.934387 538.153381,64.291290  z\"})),_path1266||(_path1266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M218.780609,403.311737  C221.378723,400.390045 221.302490,396.598267 222.549652,394.060669  C224.788162,389.505981 223.265274,383.664764 227.646225,380.113953  C228.123383,379.727203 228.738953,379.090424 228.726746,378.583191  C228.506622,369.445862 232.264038,361.482452 235.997986,353.504639  C236.277161,352.908173 236.485809,352.278717 236.863022,351.332886  C237.001083,350.556091 237.003372,350.110931 237.000671,349.331970  C236.570175,346.112366 239.467743,344.297821 239.244019,341.237213  C239.103775,340.540131 239.123260,340.134399 239.153992,339.424225  C239.556610,338.539917 240.007462,338.007233 240.688660,337.211853  C240.925018,336.514038 240.938049,336.084473 240.946869,335.332916  C242.576981,333.272675 244.126389,331.539032 240.346344,330.028625  C240.548706,326.857788 241.118164,323.809357 244.948364,322.918640  C245.889038,322.699890 247.027512,321.742920 246.539139,320.746185  C243.338867,314.214722 247.377930,307.978912 247.404968,301.566803  C247.420761,297.819855 250.324097,294.031860 252.142075,290.368408  C253.031754,288.575562 254.181778,286.948792 253.910004,284.436707  C258.573730,278.571869 261.205505,272.238098 261.405579,265.020782  C261.438232,263.842651 261.711090,262.801270 261.957886,261.347809  C261.858124,260.830902 261.712616,260.667938 261.789276,260.264038  C262.017334,259.852051 262.023193,259.680969 262.039276,259.253296  C264.148468,252.675018 268.078735,247.088852 269.707092,240.186737  C269.930603,239.885162 269.929840,239.436783 269.950226,239.213516  C272.418793,237.162323 273.418182,234.547882 273.987915,231.341888  C274.071228,230.785507 274.108459,230.562393 274.269409,230.021500  C275.629120,228.080109 276.237701,226.079819 277.760712,224.242538  C278.175751,223.450912 278.355377,222.903946 278.766052,222.176117  C282.940247,222.243866 283.882904,220.338699 285.460632,216.626648  C287.339508,212.206024 289.143463,207.447220 291.840546,203.278702  C294.393341,199.333191 296.928040,195.375961 299.735657,191.213943  C303.134003,195.128937 302.556763,197.926880 299.136047,201.759903  C294.817596,206.598862 292.940765,212.940231 290.065186,218.659714  C288.716248,221.342728 288.632568,224.688690 285.708557,226.537338  C284.934570,227.026672 284.940979,228.030350 285.287659,228.797195  C285.624237,229.541687 286.427246,229.558685 286.865814,228.948090  C289.076111,225.870773 292.315674,227.374283 295.564484,226.999268  C298.517181,229.364105 298.244843,231.750443 296.506195,234.555283  C293.919067,238.728897 290.457397,242.448395 289.476959,247.523376  C291.232819,243.121552 294.233124,239.458710 296.543121,235.380966  C298.903015,231.215271 301.028900,226.942963 303.467072,222.582047  C301.271881,222.822281 299.604370,224.573959 297.269897,223.233246  C298.421173,219.834015 299.234192,216.302048 302.653503,214.061295  C306.098633,214.306549 308.313873,212.699356 310.424896,210.692978  C315.427826,205.938019 319.097534,200.322845 321.278564,193.797180  C322.455261,190.276550 324.646088,188.394913 328.322266,189.137909  C331.355194,189.750885 333.570221,187.133453 336.720856,187.776596  C338.613617,188.968292 340.397247,189.088470 342.612183,189.001648  C343.759949,189.839249 344.101135,190.805878 343.808563,192.312134  C343.089600,193.877396 341.958527,194.525024 340.687561,195.550186  C336.729309,198.288284 333.957611,201.845459 330.013306,204.149216  C327.736450,205.479065 326.746643,208.328979 325.955505,211.257660  C324.590057,216.312180 321.849762,220.941391 319.017578,225.405029  C318.375427,226.417084 317.293701,227.047546 316.120056,227.220291  C311.466064,227.905212 308.642487,230.197159 308.040283,235.164001  C307.795441,237.183441 307.064697,239.532364 304.143280,239.590302  C303.440674,239.604233 302.889679,240.020966 302.624756,240.697784  C299.480133,248.731155 294.583374,256.040222 292.719940,264.601410  C292.011444,267.856628 291.510925,271.109497 291.706360,274.493744  C291.868988,277.309387 290.956818,279.994690 287.669586,280.358673  C285.265503,280.624878 283.076141,276.931488 284.093811,273.815033  C285.793304,268.610565 286.175690,263.010742 288.922943,257.999664  C283.451233,264.727478 283.494568,273.482910 279.978668,280.881500  C278.824249,283.310822 279.724426,286.508850 278.683228,289.507843  C277.069366,294.156433 275.686371,298.852325 273.099213,303.156952  C275.136871,302.641449 275.408081,301.025330 275.729187,299.510559  C276.084991,297.831848 276.541412,295.854950 278.073029,295.299133  C281.970764,293.884796 283.056519,290.799805 283.756195,287.286163  C283.820374,286.963806 283.967499,286.652252 284.122833,286.359100  C285.112976,284.490387 285.880432,281.750122 288.629089,282.856079  C290.868317,283.757080 290.343109,286.237457 289.690796,288.166809  C288.528870,291.603485 287.874786,295.239716 285.463470,298.360901  C287.029785,298.376190 287.481262,297.353180 288.454254,296.440125  C290.140411,295.147156 291.626343,293.397156 293.368378,295.299652  C294.835938,296.902405 294.526337,298.975250 293.597290,300.856750  C292.904266,302.260315 291.676300,303.325500 290.231689,303.546570  C284.283844,304.456757 282.313477,308.703949 281.087830,314.144043  C278.346313,316.824127 276.376678,319.662415 274.271057,322.835083  C273.424133,323.784515 272.630280,324.276245 271.699585,325.143250  C271.211426,325.466949 271.001282,325.575043 270.446381,325.772949  C269.370941,325.934784 268.682281,325.802551 267.784027,325.196533  C266.776978,324.270996 266.327667,321.757385 264.989349,324.424927  C264.246460,325.905701 264.523956,327.686005 264.004852,329.258728  C263.530884,330.694824 262.937714,332.276031 261.203247,332.336639  C259.098907,332.410126 259.193298,330.594147 259.021179,329.127441  C258.948547,328.508606 259.116486,327.795532 258.132874,327.180328  C257.024017,329.757324 257.753265,332.437653 257.341644,334.954529  C257.103912,336.407959 257.007172,338.134827 255.087631,338.321655  C253.412872,338.484619 252.960678,336.955261 252.533417,335.742218  C251.848801,333.798584 249.897171,332.228546 250.560532,329.996552  C248.599716,332.240845 250.872238,334.366455 251.223297,336.987640  C251.334015,339.474670 250.733002,341.373535 249.059723,343.228149  C246.956924,344.160614 245.886963,343.425903 245.406616,341.900055  C242.849472,346.154388 245.561630,351.246918 243.548096,355.784210  C242.956726,357.116791 244.119827,357.453094 245.191833,357.569153  C246.512085,357.712128 247.842957,357.808990 249.217316,358.914612  C249.866974,359.855927 250.004089,360.584595 249.867325,361.726654  C248.736923,364.234711 246.788055,363.758728 245.002213,363.757263  C243.521530,363.756042 241.668793,363.403229 240.926361,364.915863  C238.604462,369.646454 235.947937,374.529266 237.303635,379.963379  C238.066650,383.021820 238.278351,385.780487 237.292862,388.678497  C235.442993,394.118439 234.165787,399.691895 231.938538,405.086884  C229.993546,409.798187 229.518234,415.211243 226.343079,419.877228  C224.529892,419.897308 223.076904,421.625519 221.754532,420.440094  C220.259766,419.100067 221.774841,417.684845 222.303024,416.402191  C223.055054,414.575897 223.504684,412.685852 221.641373,411.480499  C219.371979,410.012512 220.501144,407.439972 219.156281,405.350586  C218.620483,404.619080 218.473175,404.158325 218.780609,403.311737  z\"})),_path1267||(_path1267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M289.241882,296.751099  C289.345459,299.507141 287.530884,300.057220 285.731903,300.591248  C284.633972,300.917175 283.329926,301.472656 282.621521,300.166748  C282.032349,299.080536 283.121918,298.292175 283.843445,297.704803  C287.544128,294.692169 286.782532,289.767273 288.878418,286.061707  C289.268951,285.371246 289.281036,283.891571 287.989075,283.596954  C286.735229,283.310974 286.404541,284.469727 286.036530,285.400543  C285.608551,286.482941 284.728973,287.575958 284.782745,288.626617  C285.004578,292.960907 283.348267,295.475372 278.878204,296.179840  C277.515442,296.394592 276.796997,297.869476 277.298248,299.385590  C278.278137,302.349457 275.427979,303.795990 274.500244,305.941101  C273.748962,307.678223 271.863922,306.072418 271.263977,304.698242  C270.916595,303.902557 270.930298,302.362335 271.453705,301.865906  C275.806274,297.737701 275.125305,291.332245 278.454376,286.785339  C278.551514,286.652710 278.713104,286.426849 278.667328,286.350006  C275.776764,281.496216 280.474548,278.055206 280.939392,273.851257  C281.145172,271.990417 281.262817,270.252350 282.516602,268.736908  C283.033173,268.112549 283.253296,267.251007 283.662079,266.527740  C285.024780,264.116486 280.721039,264.329071 281.649109,262.235199  C282.692841,259.880249 284.976288,263.804932 285.678253,261.710205  C286.303955,259.842987 286.607452,257.912109 287.743347,256.202881  C288.368866,255.261688 288.533386,253.698013 290.110626,254.490921  C291.345490,255.111740 291.375763,256.810242 290.801910,257.598358  C287.528473,262.093994 288.056122,267.756866 285.950043,272.581604  C285.622559,273.331787 285.244263,274.086670 285.085907,274.878662  C284.652557,277.046143 286.043762,278.997467 287.608948,279.180145  C289.366943,279.385315 290.644623,276.946991 290.451477,275.389923  C289.016235,263.820709 294.677582,254.356171 299.312012,244.602493  C300.100677,242.942627 300.933624,241.452240 301.132965,239.549789  C301.486328,236.177277 303.012085,235.807098 305.558746,239.040344  C305.687988,235.536758 307.534882,233.278595 307.503021,230.037857  C307.473755,227.060791 311.603821,226.479858 313.977753,226.261414  C316.829590,225.998993 318.937775,224.601974 319.165802,222.600906  C319.756409,217.418839 325.763977,214.565979 324.479492,208.460999  C324.068665,206.508545 327.653168,202.970337 329.031464,202.638016  C333.770721,201.495392 334.967682,196.244431 339.638092,195.044800  C341.845154,195.704330 341.997223,197.191666 341.408264,198.692657  C340.319244,201.468094 339.530548,204.543045 337.155396,206.512009  C331.519348,211.184219 328.477478,217.538101 326.167786,224.109039  C323.828766,230.763443 321.525574,237.506241 319.817444,245.581039  C322.931427,243.188446 322.725800,240.577789 323.268707,238.358383  C324.843597,231.920685 328.998322,227.000748 332.815735,221.878098  C332.998413,221.633011 333.571808,221.553375 333.609619,221.318176  C334.597595,215.179001 340.928101,213.159164 343.685669,208.104904  C346.682800,202.611542 348.096954,198.331146 343.039551,193.342056  C342.998169,191.929123 343.000305,190.864792 343.003052,189.401459  C343.468689,188.845932 344.203522,188.824127 344.358856,188.513000  C347.356934,182.507782 352.083221,178.425797 358.340546,176.222397  C367.164673,173.115143 370.401489,164.305145 376.837555,158.306000  C378.745270,157.114243 379.899384,155.470734 381.771301,154.225555  C382.311920,153.526260 382.625641,153.056198 382.967224,152.292755  C384.391113,149.688766 386.497650,148.924622 389.429138,149.345627  C391.189545,153.348206 389.900116,157.160065 387.210541,159.261658  C383.850769,161.886978 382.215393,164.844833 380.815063,168.695679  C379.548767,172.177933 376.687500,175.102966 374.194977,177.956863  C370.720581,181.935013 367.235138,185.947021 362.898102,189.114029  C357.399536,193.129196 357.095306,194.843094 360.296600,201.005569  C361.890472,196.008652 363.869843,191.341919 366.781311,187.050980  C368.250488,184.885635 369.710205,183.507828 372.749939,184.248901  C377.005188,187.756500 372.017456,190.247833 372.359497,194.258896  C375.130188,190.876648 377.855225,188.271088 380.041931,185.200348  C381.531342,183.108841 383.087677,180.467667 385.817017,182.126938  C388.416077,183.707031 387.028961,186.569473 386.063690,188.854050  C384.947510,191.495956 383.082489,193.577988 380.896484,195.407394  C379.001099,196.993591 377.042145,198.541534 375.820038,201.207245  C373.023376,203.315292 373.317505,207.514771 369.451508,208.526993  C367.240967,207.021988 366.022247,207.749527 364.533203,209.328751  C360.865204,213.218857 357.927307,217.643311 354.751740,221.896561  C354.354553,222.428574 354.100342,223.097366 353.630341,223.537735  C349.124969,227.758820 345.857758,232.400558 347.758545,239.070129  C347.963470,239.789230 347.523499,240.713882 347.216797,241.471756  C346.386292,243.523926 345.253540,245.850418 342.717804,245.261078  C340.109253,244.654816 341.015167,242.112076 341.134125,240.184753  C341.169281,239.615753 341.686890,239.062195 341.212250,238.453445  C338.828705,243.093521 339.150146,247.759613 340.861450,252.802917  C339.961426,254.742264 339.025330,256.183533 336.762634,256.545349  C334.841858,255.979202 334.253418,254.785614 334.208282,253.010468  C332.995026,254.926331 333.127930,256.089203 335.727417,256.541962  C336.348633,257.013458 336.550751,257.399475 336.650024,258.177094  C336.420685,259.592926 335.896454,260.606049 335.860413,262.101196  C332.973053,273.443512 327.832733,283.496643 323.089020,293.704529  C320.863403,298.493896 318.838959,298.642242 315.835571,294.046417  C315.693268,289.870178 316.946869,286.176605 316.549042,281.970947  C316.430878,278.495331 318.271729,276.368073 320.346222,273.992432  C321.222412,273.005066 322.317810,272.640472 322.420471,271.226562  C317.177521,274.221313 315.555695,280.167023 312.115845,284.746033  C310.521515,286.868378 309.484558,289.412292 306.061401,289.764221  C303.974854,289.074524 302.743774,287.987732 302.557861,285.717224  C303.539764,284.404358 304.597198,283.574768 305.295288,282.239410  C304.443085,282.865570 304.219666,283.805878 303.332184,284.648254  C302.600677,285.383698 302.149078,285.913849 301.334320,286.562500  C293.486328,285.620819 293.065704,292.932343 289.241882,296.751099  z\"})),_path1268||(_path1268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M382.954987,125.349640  C382.843414,120.640305 386.537842,119.789581 389.649048,118.042717  C391.466797,116.357117 393.249115,115.113785 395.370483,114.619789  C401.772369,113.128998 407.855103,110.558273 414.563293,108.964493  C415.423340,108.456245 416.000763,108.132034 416.845642,107.619339  C417.515045,107.255348 417.922058,107.107910 418.671509,107.012878  C422.545135,105.970711 425.943695,105.098824 428.809814,102.142296  C432.178772,98.667076 437.060944,98.976494 441.395569,100.238449  C444.098358,101.025322 441.871399,102.704071 440.987579,103.406410  C437.126923,106.474426 432.761414,108.737320 428.346680,110.918205  C421.798492,114.152992 415.152771,117.241753 408.873352,120.943604  C406.428986,122.384636 403.935638,123.617027 401.367920,124.650841  C397.217102,126.322052 393.070526,127.942474 390.095367,131.440323  C387.370972,134.643295 383.468811,136.030426 380.068054,138.646469  C377.674835,139.075226 373.939789,138.776001 373.905884,137.264374  C373.848999,134.729324 375.616852,131.863953 377.975159,130.106674  C379.766602,128.771805 382.229248,128.263367 382.954987,125.349640  z\"})),_path1269||(_path1269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M337.001221,187.630554  C333.633789,189.326599 330.800598,192.265656 326.468536,190.320648  C324.942078,189.635330 323.237518,191.255234 322.959778,193.547989  C322.549347,196.936111 320.925140,200.830048 319.276428,202.781265  C315.946686,206.721893 313.327820,211.665497 308.343933,214.289352  C306.444489,215.289322 305.259766,217.957657 303.149567,214.294891  C303.621185,209.995621 305.011627,206.346222 308.814575,204.392166  C310.856445,203.343002 311.709747,201.887222 312.045502,199.781509  C312.678040,195.814774 314.972900,192.908249 317.974487,190.347397  C321.723267,187.149063 324.906708,183.622620 323.098206,177.988403  C322.698334,176.742737 323.029419,175.308609 324.397980,174.503220  C325.209290,174.025742 326.091553,174.073303 326.664459,174.765869  C330.818237,179.787033 333.536530,175.072357 335.786865,172.885315  C337.597778,171.125381 338.567596,169.374161 341.387268,170.599380  C343.062775,171.327438 344.102966,170.419189 344.936829,168.867020  C346.331360,166.271240 347.853271,163.728882 349.524902,161.304214  C350.224030,160.290131 351.223846,158.098083 352.771698,160.270996  C353.536560,161.344696 355.316711,162.331360 353.180817,164.704361  C346.985565,171.587463 341.024109,178.761276 337.001221,187.630554  z\"})),_path1270||(_path1270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M297.004150,223.368866  C299.721832,223.332382 301.438019,220.882904 303.918945,220.512833  C304.720734,220.393250 305.578156,219.822052 306.228790,220.571976  C306.965942,221.421646 306.142548,221.987366 305.635956,222.636337  C302.066589,227.208878 299.816681,232.555908 297.039398,237.586380  C295.087708,241.121399 292.017090,244.020355 291.311310,248.345428  C291.123108,249.498596 288.966614,251.360794 287.357727,250.632248  C284.986053,249.558334 287.601624,248.302078 287.851318,247.113220  C288.991821,241.682724 292.398438,237.435684 295.782135,233.337662  C297.556824,231.188293 295.860931,229.591446 296.009094,227.380829  C297.129120,226.154114 296.973175,224.914474 297.004150,223.368866  z\"})),_path1271||(_path1271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M381.598938,153.995621  C381.646149,156.471405 380.233704,157.813446 377.367249,157.998566  C377.333832,156.906540 377.663910,155.806213 378.000061,154.356903  C379.070618,154.003586 380.135132,153.999252 381.598938,153.995621  z\"})),_path1272||(_path1272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M375.238770,201.240143  C375.052979,197.967590 377.190277,196.362076 379.342560,194.835876  C382.278046,192.754333 384.374756,190.046127 385.561584,186.684998  C386.019073,185.389465 386.824493,183.522919 385.012268,182.888184  C383.579559,182.386368 382.697968,183.772583 381.718048,185.110107  C378.451599,189.568512 375.750214,194.775116 369.756622,196.946960  C369.442139,192.367432 373.335052,189.626846 373.137299,185.313202  C373.591095,180.419006 377.227325,178.129929 380.459595,175.822784  C383.021576,173.994095 385.566742,172.100952 388.217560,170.378784  C389.341888,169.648361 390.736938,168.799606 390.866150,167.506561  C391.392487,162.240128 395.604767,160.075790 399.176239,157.536469  C402.356537,155.275269 405.192139,153.106934 406.469513,149.105011  C407.252960,146.650558 409.802582,145.456573 412.381989,145.013885  C414.213165,144.699677 415.885773,144.024307 417.594177,143.350586  C420.663696,142.140076 424.490967,141.712463 420.562256,136.942627  C418.847198,134.860367 420.579620,132.649323 422.525360,130.971039  C427.635468,126.563354 431.392792,120.534706 438.048950,117.990242  C440.263702,117.143608 438.662079,114.422523 440.721527,113.210793  C441.006378,113.007545 441.498627,112.994049 441.744781,112.989197  C443.948120,111.616440 446.313019,111.303101 448.741730,110.240189  C449.004242,110.004578 449.000000,110.000000 449.002045,110.002304  C453.184723,108.150055 456.881897,105.211357 461.398987,104.153976  C464.890656,103.336624 467.367493,101.619339 468.702606,98.205353  C469.375275,96.485252 470.671967,95.164024 472.715820,94.199387  C480.016357,92.117371 487.124695,92.119713 494.321136,92.548431  C501.279572,92.962952 508.267548,92.881531 515.621277,93.008667  C516.263000,93.271896 516.547729,93.519310 516.855530,93.740105  C517.131775,93.133369 517.001038,93.847397 516.232178,93.226303  C515.828491,91.580215 514.924500,91.168999 513.605042,90.984634  C508.289978,90.241966 502.999481,89.314812 497.675903,88.647179  C496.299713,88.474586 495.286377,88.240730 495.461731,86.749321  C495.597534,85.594360 496.633972,85.542763 497.717590,85.379166  C504.069366,84.420189 510.707672,87.239136 516.583740,85.457512  C524.259155,83.130318 529.459106,88.364861 535.897583,89.444702  C536.854370,89.605179 537.492065,89.610130 537.943604,88.325836  C538.271667,87.651886 538.594971,87.375633 539.284790,87.124184  C539.916504,87.022263 540.261230,87.026169 540.791748,87.135452  C540.980042,87.180550 541.296448,87.154755 541.127441,87.032806  C540.831543,86.796364 540.704712,86.681877 540.354980,86.379128  C537.457703,84.254532 533.895691,82.006874 535.841614,78.473862  C537.691956,75.114235 541.439758,77.312843 544.306152,78.183083  C546.808899,78.942917 548.960632,80.557365 551.711914,81.741486  C553.539734,82.821526 555.061279,83.662384 556.793823,84.749680  C562.138794,88.183838 564.898438,93.179443 567.251831,98.877724  C567.866577,96.025101 569.339661,96.151131 571.090271,97.198410  C573.080505,98.389046 573.719177,100.490677 574.768982,102.731125  C577.574402,106.052025 577.577820,110.192474 579.717651,113.776566  C582.407654,117.764198 582.529114,121.295349 578.591187,124.612694  C571.946777,122.564835 567.762451,127.731316 562.534668,129.196579  C561.912476,129.370941 561.381348,130.182159 560.820496,130.162460  C552.660706,129.875854 544.666382,134.662857 536.141663,130.729965  C534.673401,127.944115 536.415710,127.122284 538.293518,126.733757  C542.595825,125.843613 546.179199,123.334961 550.116821,121.643326  C554.823608,119.621292 555.631287,116.086601 553.110107,111.817863  C549.335083,105.426285 541.944153,103.977051 536.844177,99.355156  C537.908752,100.743965 539.254700,101.787361 539.647949,103.898743  C539.607300,104.487411 539.553345,104.719307 539.334351,105.266846  C537.508057,108.210098 535.738647,109.724205 533.020752,106.619789  C531.692505,105.102692 530.762512,103.514618 528.209778,106.220558  C526.285461,108.260376 523.621643,105.400764 522.158203,103.465134  C519.492920,99.939919 516.008118,98.559212 511.779266,98.550133  C510.776672,98.547981 509.455048,98.387886 508.942780,99.184250  C504.646393,105.863594 497.747589,105.100632 491.259003,105.554977  C490.432953,105.612816 489.593658,105.550537 488.441345,105.867584  C484.125275,105.508095 480.379486,107.238525 476.410583,107.115242  C474.534485,107.056969 472.923309,108.196938 472.235809,110.062500  C471.649078,111.654587 470.617004,112.882370 469.429535,114.452057  C468.276611,116.796852 466.394104,117.792603 464.376740,117.634171  C459.524811,117.253136 456.172333,120.070854 452.854248,122.750977  C449.565491,125.407402 446.657532,128.543961 442.671722,126.986862  C444.964600,126.299492 447.776428,128.468567 451.186890,128.272079  C451.741547,128.474152 451.948639,128.591690 452.369080,128.994797  C453.493652,133.796890 449.844696,135.444809 447.082092,137.221130  C445.093750,138.499619 443.166962,139.153900 442.693848,141.948837  C442.265808,144.477325 439.359131,144.977173 437.064423,147.069931  C439.905670,145.900513 442.023224,146.102219 444.284485,146.862350  C449.934814,148.761688 455.553162,150.912811 461.694336,150.749298  C463.591400,150.698792 465.392761,151.170685 465.813568,153.870728  C465.091095,157.035355 462.939331,157.929230 460.400543,158.445312  C456.473663,159.243530 453.013489,161.284897 449.108795,163.057343  C448.161896,164.053452 447.313171,164.515640 445.995575,164.802628  C444.418854,164.924484 443.019653,164.168777 441.823883,165.820770  C438.677429,168.041931 435.456451,169.417374 431.921692,170.917633  C428.644440,171.052521 426.611328,172.634155 425.416199,175.121246  C424.049835,177.964539 422.128357,180.363632 419.916504,182.997162  C417.733063,184.688705 416.337677,186.588623 415.087799,189.021332  C414.634979,189.905930 414.291260,190.474579 413.797852,191.347168  C410.286743,196.458572 407.121124,201.377106 404.931885,207.222107  C404.737518,208.278778 404.419342,208.901260 403.644073,209.655731  C400.564667,210.651093 399.040436,215.791199 394.700134,212.135101  C394.038086,211.626541 393.723450,211.270798 393.305359,210.549973  C392.679993,208.726074 393.113617,207.318329 393.606903,205.920349  C394.420502,203.614471 393.551239,202.139511 391.020081,201.223846  C388.619263,200.524460 387.692505,201.066757 386.692688,203.306000  C384.574554,208.049957 383.696106,213.517349 379.406494,217.150513  C377.355499,218.887619 375.451691,220.889374 372.459534,218.982361  C370.766205,217.903152 370.208038,219.657928 368.877075,220.493500  C363.358826,220.433792 365.220795,217.017365 365.732269,213.865311  C366.183685,212.467041 366.770813,211.607178 367.795166,210.604721  C369.670471,209.387817 371.583527,209.049835 373.358337,207.676773  C374.060242,207.300537 374.479401,207.125275 375.221680,206.851501  C378.056702,204.955841 380.016022,203.189667 375.238770,201.240143  z\"})),_path1273||(_path1273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M440.606323,113.004982  C439.098419,115.204910 441.860168,115.874527 442.573517,117.116096  C436.965149,120.984695 429.744629,122.483391 427.095673,129.695358  C426.873047,130.301422 425.728577,130.555161 425.031982,131.003082  C419.780334,134.380051 419.617889,135.276337 424.453125,138.930618  C426.304321,140.329666 425.511444,141.378052 424.402252,141.912567  C420.941742,143.580109 417.435547,145.481796 413.732849,146.223892  C410.129639,146.946045 407.407654,147.758911 406.973572,151.864288  C406.696198,154.487427 404.649414,155.530273 402.804535,157.003235  C398.860596,160.152100 393.240204,161.298599 392.406891,168.165649  C391.932556,172.074722 386.494141,173.809555 383.141663,175.842804  C379.234833,178.212280 376.790710,181.805420 373.163940,184.701813  C370.257935,184.846756 369.386475,186.391220 367.670685,188.557266  C363.792267,193.453476 363.737244,200.230347 358.476349,205.337906  C358.679718,202.022583 359.762268,199.277359 356.102692,198.183670  C354.488495,197.701263 355.464355,195.786453 356.190765,194.755264  C358.055237,192.108505 359.675873,189.488617 362.572784,187.421265  C369.723083,182.318497 374.721375,175.005920 379.942169,168.019958  C380.646027,167.078156 380.936798,165.944229 380.411987,164.728577  C379.867737,163.467941 380.241241,162.118912 381.397217,161.748901  C386.835297,160.008163 387.892639,155.046158 389.921936,150.360550  C392.222961,148.287674 395.488403,148.636215 397.464081,146.206345  C392.608673,147.475082 388.001404,150.483658 382.914429,147.339203  C383.865845,146.492477 384.737488,145.984344 385.805786,145.236816  C387.402313,143.955292 386.399597,141.585999 388.654633,140.907135  C389.001770,140.989746 389.501709,140.991379 389.751678,140.992889  C393.115509,141.105942 395.160095,138.938049 397.761383,137.231140  C401.612122,135.608200 403.087067,131.773743 405.683960,129.333374  C409.287201,125.947311 414.333771,125.417519 416.869080,121.282204  C418.673157,122.753418 416.824768,124.153969 417.809784,125.561234  C420.386414,125.766876 423.416870,123.376801 423.821838,122.439003  C425.610321,118.297279 429.626221,118.426949 432.605621,116.838081  C435.092865,115.511650 436.561096,112.000252 440.606323,113.004982  z\"})),_path1274||(_path1274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M472.739044,93.791527  C469.115356,104.893112 459.434204,107.393509 449.416534,110.004250  C448.206238,109.008575 452.015106,106.116753 447.552521,106.571373  C446.235046,106.705589 446.430298,105.837120 446.999084,105.006912  C447.828552,103.796135 448.610229,102.552605 449.706726,101.161057  C452.381073,98.948875 455.839966,99.006142 458.406250,96.604492  C460.068329,95.253937 461.916473,94.879913 463.569702,93.500099  C465.259613,92.606400 466.489868,91.668213 467.764282,90.241211  C470.797882,89.558235 471.312073,91.972679 472.739044,93.791527  z\"})),_path1275||(_path1275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M459.237030,96.767769  C457.784271,101.620628 453.167297,99.723160 450.225098,101.232124  C449.207703,98.602135 453.612854,96.848083 451.326935,94.802299  C449.019287,92.737076 448.491150,97.396324 446.126465,97.162994  C445.048279,97.056602 443.897339,97.687592 442.394592,97.995041  C441.661560,97.927315 441.424744,97.725311 441.156311,97.185883  C442.541595,92.537903 446.315216,92.180992 450.587219,91.993973  C451.590607,91.981262 452.129852,91.805023 452.796448,91.210495  C455.759399,90.639519 457.409851,88.235344 460.340546,87.560387  C464.600708,86.579231 458.952698,85.211411 459.733612,83.494858  C464.526031,82.531158 468.924347,77.105263 474.616241,82.060837  C472.759827,82.579330 471.084808,83.047150 469.199402,83.759018  C468.547363,84.002396 468.105652,84.001724 467.332581,84.000526  C466.282074,85.061066 464.892456,85.335968 464.090942,86.704361  C463.815460,89.359947 465.060089,90.175232 467.612946,89.998413  C468.143982,92.309868 467.878387,94.289169 464.391937,93.999390  C462.771423,95.351448 460.505615,94.840118 459.237030,96.767769  z\"})),_path1276||(_path1276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M419.044434,106.654709  C418.879028,107.317833 418.692719,107.568863 418.231232,107.886139  C417.418518,108.017921 416.873779,108.201141 416.204376,108.812729  C415.885590,110.263824 415.489929,111.520767 414.131226,111.627991  C405.931610,112.275063 398.416229,115.373734 390.379822,117.989136  C390.000244,117.247841 390.001709,116.498688 390.000977,115.374924  C389.618744,114.613976 389.473785,114.153587 389.787720,113.311821  C390.011749,113.004433 389.999969,112.999329 390.001831,113.005493  C390.385437,112.626968 390.844147,112.476006 391.689880,112.779213  C393.387207,112.999519 394.774414,112.999344 396.577759,112.998520  C399.166565,111.822266 401.014771,110.048546 403.752808,109.228134  C404.468597,108.678947 404.939636,108.365517 405.703979,108.024025  C406.916534,108.246162 407.796112,108.297424 408.751709,107.254616  C411.207428,105.599617 409.611542,101.400932 413.379364,101.070290  C414.136902,101.003815 414.945679,100.086960 415.571991,100.234833  C417.269592,100.635658 419.441803,100.412392 420.502594,101.916550  C421.693573,103.605377 419.242889,104.700424 419.044434,106.654709  z\"})),_path1277||(_path1277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M382.656921,147.043610  C387.073212,148.030090 390.984100,147.313263 394.656738,145.525208  C396.148773,144.798798 397.447327,143.731155 399.219055,144.087646  C400.662537,144.378067 401.528656,145.784149 400.278168,146.430542  C397.259125,147.991165 394.890045,151.594589 390.343140,150.040268  C387.623901,149.714462 385.845062,151.378693 383.358398,151.954803  C380.375946,150.690933 378.424713,149.290649 382.656921,147.043610  z\"})),_path1278||(_path1278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M397.635620,137.044144  C395.957214,139.549408 394.640198,143.323914 390.056244,141.310593  C391.714294,138.364319 394.885162,138.451324 397.635620,137.044144  z\"})),_path1279||(_path1279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M388.937225,140.658432  C387.481567,141.834000 388.608124,144.270630 386.336670,144.930710  C386.215179,143.354813 382.953644,142.227692 385.293671,140.275314  C386.489777,139.277344 387.710938,138.204391 388.937225,140.658432  z\"})),_path1280||(_path1280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M448.662170,109.963303  C447.929138,113.083794 445.146759,112.608894 442.384552,112.989845  C443.378387,110.470802 445.206696,108.868454 448.662170,109.963303  z\"})),_path1281||(_path1281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M403.614136,108.995430  C402.683716,111.520851 400.647705,112.923645 397.375824,112.996597  C398.078918,110.114761 400.206177,108.856995 403.614136,108.995430  z\"})),_path1282||(_path1282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M408.662659,107.012474  C408.918365,107.977325 409.150146,109.106674 408.043121,109.632637  C407.095490,110.082870 406.494904,109.529144 406.063599,108.329590  C406.559937,107.160759 407.412018,107.010979 408.662659,107.012474  z\"})),_path1283||(_path1283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M389.674316,113.010597  C390.009155,113.447945 390.006561,113.891449 390.001404,114.667633  C389.128143,114.866074 387.849731,115.295670 387.637421,114.083122  C387.444122,112.979355 388.621582,113.166359 389.674316,113.010597  z\"})),_path1284||(_path1284=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M382.243896,116.211906  C382.848724,115.320969 383.406006,115.381584 383.683929,116.098877  C383.810791,116.426224 383.634033,117.150658 383.373260,117.295288  C382.650085,117.696358 382.304352,117.179726 382.243896,116.211906  z\"})),_path1285||(_path1285=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M391.954163,112.711372  C391.556335,113.002815 391.112701,113.005936 390.336365,113.010353  C390.099365,112.371643 390.152832,111.607193 390.952362,111.557236  C391.251801,111.538521 391.588562,112.116898 391.954163,112.711372  z\"})),_path1286||(_path1286=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M452.704834,91.028412  C452.804169,91.885460 452.808990,93.001556 451.172302,92.203003  C451.465088,91.679626 451.937988,91.367310 452.704834,91.028412  z\"})),_path1287||(_path1287=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M441.004395,97.212959  C441.308411,97.114624 441.566772,97.309891 441.890228,97.791595  C441.187195,98.670593 441.118469,98.020714 441.004395,97.212959  z\"})),_path1288||(_path1288=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M784.320312,540.735229  C785.134644,544.667542 785.650024,548.446045 787.771912,551.721130  C788.544922,552.914124 789.496643,554.307251 786.972900,555.089050  C783.582703,556.139343 783.831848,558.734131 784.651306,561.525879  C787.232239,570.318848 784.953247,579.713928 787.926453,588.482971  C788.242493,589.415039 787.770203,590.453491 786.241577,590.925781  C782.239685,590.711121 780.580383,588.832764 781.494507,585.387085  C783.802551,576.687500 782.193054,568.710327 777.835876,561.013794  C776.092346,557.934021 775.893066,554.333252 775.440186,550.478882  C775.487427,549.345459 775.457947,548.605286 775.064819,547.543213  C774.881470,546.959839 774.816711,546.724243 774.682800,546.130371  C774.008118,542.704651 772.973328,539.758240 771.917847,536.439453  C770.839478,533.509277 769.945251,530.906616 769.904968,527.741943  C770.030823,527.140991 770.111511,526.909790 770.401611,526.380981  C772.039368,525.050659 772.896790,526.821045 774.181824,526.823242  C772.880188,520.499084 769.445190,515.277344 765.975342,510.058594  C765.268250,508.995056 764.392090,508.435913 762.854736,508.107910  C761.592224,507.505005 760.880981,506.812683 760.173950,505.590942  C759.840210,504.761505 759.729004,504.266296 759.653809,503.384735  C759.963379,500.401886 759.125183,498.262817 757.614380,496.070038  C755.945618,493.647858 754.855530,490.792358 759.390076,489.360474  C761.280273,489.800110 762.052490,491.150848 763.391724,492.362915  C767.640503,497.477142 770.359924,503.138184 773.742065,508.768860  C774.180969,510.354156 774.654419,511.551056 775.775635,512.767700  C776.002441,512.993225 776.000000,513.000000 776.003662,512.998779  C777.853882,515.317932 778.068970,518.659668 781.029053,520.595032  C781.360168,520.699768 781.697693,520.712646 781.859741,520.760498  C782.958801,521.866394 782.782043,523.353271 783.641113,524.789307  C783.890625,525.489624 783.948059,525.915955 784.028442,526.664185  C784.220032,528.552917 785.716431,530.151123 784.239746,531.673767  C782.916809,533.037842 782.059875,531.080444 780.961304,530.911438  C780.862122,534.583069 785.090820,536.598877 784.320312,540.735229  z\"})),_path1289||(_path1289=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M784.457581,540.983643  C783.824341,537.688110 780.223572,536.118286 779.746338,532.795288  C779.475952,530.912964 777.840576,528.405273 780.163208,527.527832  C782.822693,526.523132 781.163208,530.609253 783.215698,531.164185  C785.084045,530.139832 782.480286,528.517517 783.812866,527.184814  C786.208618,528.572510 787.537292,530.506775 786.429810,533.286865  C785.724121,535.058472 787.182983,536.433777 787.162109,538.432373  C786.635742,539.796997 785.979675,540.673462 784.457581,540.983643  z\"})),_path1290||(_path1290=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M781.307739,520.304932  C776.351685,520.920288 775.750061,517.705933 776.004883,513.411743  C777.759888,512.891907 778.694641,514.570496 780.559814,514.992676  C781.010071,516.670898 781.132690,518.290527 781.307739,520.304932  z\"})),_path1291||(_path1291=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M783.893127,524.735107  C781.851257,524.625488 782.025879,523.047424 782.006470,521.194092  C784.255676,521.154419 783.733643,522.979614 783.893127,524.735107  z\"})),_path1292||(_path1292=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M798.343506,574.776306  C797.585144,574.589478 797.079468,574.184631 796.573730,573.779785  C800.499268,569.257690 795.783142,565.115906 795.998840,560.756592  C796.031555,560.095764 796.037109,559.433533 796.094299,558.340576  C798.601135,558.088745 797.386536,561.195190 799.589355,561.920837  C799.934937,562.440002 799.953125,562.883972 799.989990,563.660400  C799.347595,567.489258 802.089172,571.440552 798.343506,574.776306  z\"})),_path1293||(_path1293=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M763.966064,605.664917  C756.389038,605.452393 756.255859,605.291870 756.778503,598.240112  C757.079285,594.181335 758.129578,589.946899 753.801514,587.038574  C752.801514,586.366577 753.030945,584.921570 752.991943,583.762512  C752.940002,582.214783 752.798340,580.637756 750.910522,580.281921  C748.738342,579.872498 748.926208,582.518005 747.317688,583.212036  C745.188354,584.130920 747.298828,585.222717 747.714417,586.285767  C749.058838,589.724304 751.449097,593.098816 748.714172,596.940002  C748.043457,597.882080 748.531250,598.831604 748.765381,599.794678  C749.380066,602.323486 748.046326,603.103638 745.397705,602.994263  C743.932678,602.331543 743.599060,601.195374 743.189697,600.116577  C741.406799,595.418213 740.738098,590.180115 735.747314,587.186279  C734.095154,586.195129 733.642761,583.888062 733.548584,581.467651  C733.579773,579.775879 733.539429,578.426819 733.084351,577.176697  C732.309631,575.048462 731.486572,573.564941 728.880920,575.735474  C725.707153,578.379272 724.619446,577.950439 723.331421,574.204407  C722.685852,572.327026 722.128906,570.390320 722.125366,568.382141  C722.122925,567.000061 722.454773,565.393860 724.229004,565.681458  C730.044006,566.623962 726.593384,561.748962 726.258484,561.449036  C717.566833,553.664368 720.508484,544.045166 721.764709,534.688293  C721.808594,534.361450 721.932800,534.048035 722.195557,533.419861  C723.435181,531.462463 725.714844,530.558960 725.419617,527.724976  C725.288513,523.616699 725.271240,519.867615 725.522522,515.758057  C725.300720,513.259155 725.774963,511.080048 725.194702,509.039154  C724.464783,508.337341 723.916382,508.779663 723.437805,509.203979  C722.130310,510.363434 720.738892,511.314758 718.965210,510.329620  C717.014038,509.245880 717.102722,507.391296 717.361389,505.500397  C718.081421,500.235962 718.385925,494.906250 720.149170,489.815704  C720.550476,488.657043 721.271973,487.341980 720.244812,486.042816  C718.653687,486.409668 718.501404,487.958221 717.742920,488.977631  C716.623901,490.481537 715.406311,492.226501 713.321594,491.193451  C711.471863,490.276794 712.410400,488.409912 712.476990,486.755188  C712.735229,480.344940 714.424866,473.985596 713.263062,466.853333  C711.149109,468.922607 710.546814,471.293640 709.483643,473.362213  C708.425964,475.420258 706.883362,476.398224 704.599182,475.467163  C702.222717,474.498474 701.762207,472.460876 702.881714,470.538483  C706.458496,464.396637 706.659241,458.138580 705.306396,451.252991  C704.578796,447.548981 705.755737,443.488708 709.097290,440.412262  C712.678528,437.115173 712.154968,435.963226 706.970154,434.359131  C706.488464,433.679382 706.381531,433.217590 706.500366,432.385132  C709.284119,430.454681 710.696838,428.579407 709.051636,425.252930  C708.113342,423.355682 708.444946,421.031464 708.185669,418.902252  C708.005676,417.424133 707.753174,415.757996 709.218323,414.824249  C710.702087,413.878723 712.046326,414.658295 713.214355,415.754639  C713.267761,415.804779 713.661743,417.506531 713.984131,415.828583  C714.075439,415.353424 713.901733,414.847321 713.707153,414.024658  C713.565796,412.983521 713.449219,412.295959 712.960999,411.336395  C712.444336,410.082825 712.160645,409.135834 711.941895,407.778503  C713.413940,400.775574 711.622620,394.544250 709.570312,388.366638  C708.398560,384.839661 707.329651,381.360413 709.118469,377.725006  C709.337463,377.280060 709.644348,376.711823 709.507935,376.301025  C706.470032,367.150787 708.417419,356.967560 703.551208,347.814667  C703.381104,347.202850 703.338501,346.953033 703.302612,346.327179  C703.942444,344.324738 703.585388,342.716034 703.343567,341.066559  C703.069641,339.198029 703.932190,337.799316 705.771851,337.246124  C707.568604,336.705902 709.278442,337.216125 709.984924,338.947174  C711.541321,342.760406 714.157654,346.202118 714.466309,350.461212  C714.868713,356.014893 716.843750,361.005798 719.338074,365.782135  C723.907471,361.999908 724.319092,357.092834 723.785583,351.742767  C723.106506,344.932587 721.747437,338.322144 719.193115,331.965485  C717.709595,328.273590 718.691284,325.755249 722.714478,323.785248  C723.789917,324.313690 724.577393,324.626831 725.682434,324.971191  C725.953430,330.606720 727.810852,335.926758 728.713501,341.711456  C728.637817,344.934570 730.210022,347.426666 730.881104,350.130402  C733.701782,361.495697 734.709045,373.099243 735.620789,384.734131  C736.101074,390.863220 737.266052,396.944305 736.089233,403.518494  C736.855652,404.806519 738.040100,405.537354 738.066284,406.738220  C738.193970,412.606964 740.189819,418.059723 741.453064,423.688812  C742.369629,427.773315 740.923950,432.300781 743.610413,436.164551  C744.062561,436.814941 744.203613,437.813477 743.922058,438.588165  C741.885925,444.190277 743.187805,449.722717 744.115601,455.651489  C741.647583,460.695007 743.410217,466.131653 741.231018,470.921265  C740.433411,472.674286 740.187866,474.720764 738.738159,476.593628  C741.553223,476.038666 743.019775,476.801361 742.404419,479.779449  C741.688232,483.245789 740.215149,486.383423 738.475891,489.425751  C737.499268,491.134186 736.267029,492.790222 737.089844,495.269836  C739.542358,493.243164 740.400330,490.355194 741.981262,487.977234  C743.012085,486.426849 744.150635,484.752930 746.338379,485.471375  C748.381042,486.142151 749.027039,487.967987 748.611267,489.917053  C748.091553,492.353973 748.530457,494.730164 749.615234,496.691620  C751.967224,500.944153 751.130859,505.745758 752.461365,510.150116  C753.104980,512.280640 751.577087,513.991638 750.325562,515.500122  C748.568298,517.618164 748.055237,519.854004 748.865784,522.447266  C749.105408,523.213867 749.034241,524.127075 750.371948,523.334473  C753.819275,521.291931 754.364258,524.234619 754.879944,526.369629  C755.500305,528.937988 755.081543,531.524048 752.194153,532.584534  C746.897034,534.530029 746.864685,534.441956 751.113770,538.560669  C752.452454,539.974426 753.487061,541.198547 754.844055,542.597351  C755.183167,543.066467 755.302063,543.266418 755.533447,543.797363  C755.697998,544.596619 755.642090,545.051575 755.238525,545.745300  C752.380310,549.581665 756.105530,551.717163 757.115479,554.380676  C757.677368,555.862854 759.388306,557.065186 758.184204,558.771118  C755.552368,562.500000 759.650818,566.410583 757.655762,570.297058  C757.039612,571.497375 759.324341,571.915039 760.638733,572.013306  C762.267090,572.135071 763.299194,572.926331 762.759521,574.566467  C762.114685,576.526184 760.967712,575.180847 760.054321,574.671692  C756.730530,572.818726 755.675232,577.050415 752.832764,577.074585  C754.317932,578.358643 757.711121,577.615784 756.260437,581.026062  C755.912354,581.844421 756.514893,582.676697 757.229675,583.151733  C760.665588,585.434753 761.710815,588.150208 759.287048,591.892212  C758.601135,592.951233 759.631897,594.101318 760.397034,594.989990  C762.432983,597.354614 764.498474,599.693726 766.891602,602.431213  C764.290527,602.207703 762.358582,602.402466 763.966064,605.664917  z\"})),_path1294||(_path1294=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M743.006348,457.377747  C743.238708,454.758636 742.019470,452.863342 741.570251,450.806549  C740.773865,447.159607 739.973206,443.323547 742.218018,439.806396  C742.822693,438.858917 743.072327,437.840118 742.456604,437.032135  C739.136536,432.675232 741.595947,426.922516 739.641785,422.904663  C736.728394,416.914673 737.853638,410.672363 736.123779,404.353912  C736.530884,403.951508 736.960083,403.970062 737.712280,403.994904  C740.993835,406.980194 742.489746,410.949158 745.819580,413.941315  C748.149902,416.035248 748.094238,421.767059 746.820984,425.223541  C744.837646,430.607727 746.340820,434.945526 748.540771,439.849060  C748.743652,440.541229 748.774719,440.927124 748.820862,441.603058  C748.462830,442.408295 748.294678,442.954956 748.800110,443.776733  C749.290894,444.467010 749.559814,444.951569 749.956665,445.682953  C751.027344,451.415741 755.811829,455.674622 755.023376,462.053131  C752.665833,465.820312 754.554016,469.421722 754.434448,472.923523  C754.372559,474.737549 754.955322,476.500153 755.122681,478.656830  C755.161377,479.420013 755.160156,479.832672 755.168579,480.554688  C755.531372,481.537018 756.078918,482.056549 756.742676,482.842377  C757.402161,483.673889 757.885681,484.286194 758.628906,485.040314  C760.091919,485.769928 760.405273,486.897675 760.642456,488.425018  C760.571045,489.002228 760.499146,489.226318 760.175842,489.698120  C755.132996,491.488068 757.464355,494.360474 759.364380,495.937286  C761.744690,497.912689 761.686401,499.853821 760.992920,502.646606  C755.749695,503.839539 751.934021,501.212219 751.518311,495.796112  C750.960144,488.524323 750.005432,481.298218 749.421021,474.034851  C749.146301,470.620392 748.507568,467.529602 745.374207,465.406677  C742.653503,463.563324 742.719971,460.642120 743.006348,457.377747  z\"})),_path1295||(_path1295=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M748.797241,439.778015  C744.150208,436.542969 742.865234,432.214386 745.192139,426.940979  C747.052673,422.724487 743.994812,418.537415 745.451538,414.384583  C745.506775,414.227173 745.061157,413.672424 744.864380,413.680481  C738.290771,413.949707 740.141785,407.881531 738.075439,404.373047  C741.002869,405.245758 743.260742,403.778748 745.811401,402.016541  C746.446533,402.452454 746.722961,402.931671 747.024231,403.697479  C745.976624,404.751587 746.254883,405.752167 746.721008,406.647858  C749.924805,412.803955 748.131104,419.534943 748.982666,425.958496  C749.113159,426.943176 748.739441,428.248779 749.248962,428.887238  C752.188049,432.570221 751.375000,435.982513 748.797241,439.778015  z\"})),_path1296||(_path1296=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M747.173279,368.309509  C749.144958,368.668427 749.659546,369.609039 747.352417,370.963440  C747.058411,370.242523 747.081604,369.467224 747.173279,368.309509  z\"})),_path1297||(_path1297=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M643.802979,155.703644  C645.164062,156.267807 646.237671,156.608978 647.647278,157.001846  C649.909851,162.472641 645.122314,162.198074 642.056946,163.848663  C639.238220,165.396713 636.685669,166.521561 633.739441,166.366623  C632.568909,166.305084 631.275879,166.377274 630.541565,167.384521  C628.319153,170.432800 625.545898,169.230057 622.538879,169.090042  C616.389343,168.803665 612.265869,166.376740 610.004395,160.621140  C608.412048,156.568512 603.986572,158.832138 601.038818,156.807587  C596.176086,153.264435 593.078552,149.080215 593.150391,142.791199  C593.417114,142.214828 593.562012,142.004745 594.028381,141.592178  C598.873108,144.297989 603.745728,142.973709 608.596252,142.782562  C611.158875,142.681580 613.663391,144.366608 616.779175,143.801041  C617.660034,143.882675 618.142578,144.022308 618.922485,144.434540  C620.357422,145.666260 620.499268,147.490158 622.726440,147.632507  C630.413635,148.123917 637.381775,150.755997 643.802979,155.703644  z\"})),_path1298||(_path1298=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M641.082886,163.342407  C642.865845,160.654144 647.718933,162.303818 647.976074,157.423706  C651.218628,159.046509 653.110901,161.800247 653.385315,165.717484  C653.564331,168.272110 656.068054,168.281281 657.798706,169.078369  C659.162781,169.706635 661.020752,170.476837 660.360046,172.141190  C659.698364,173.808243 658.072205,172.199982 656.863892,172.161194  C655.680847,172.123199 654.119446,170.359238 653.405945,172.185684  C652.684204,174.033508 654.367859,174.763214 655.980225,174.965088  C659.195251,175.367584 661.036560,177.193649 661.871948,180.617371  C662.234924,181.465027 662.127808,181.913132 661.360352,182.447876  C658.111145,182.883682 655.753418,181.488831 653.120117,179.877960  C651.611694,177.364899 649.652527,176.246414 646.761963,176.024384  C646.224915,175.855179 646.013550,175.771683 645.501099,175.523987  C644.306519,174.551132 643.098145,174.401535 642.078064,173.868454  C639.161011,172.344131 637.812988,170.347565 640.999023,167.862411  C642.941833,166.347015 642.171021,165.113647 641.082886,163.342407  z\"})),_path1299||(_path1299=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M680.669006,195.997208  C681.816040,199.163223 679.520142,201.478775 678.739258,204.832489  C676.327393,205.970947 675.179871,204.205643 673.349121,203.180725  C670.699463,201.476349 668.994324,198.750488 665.320251,198.954544  C661.107849,197.421722 656.084229,198.611755 653.486572,193.649811  C654.370972,189.933411 657.085876,190.002213 659.742737,190.075607  C661.525330,190.124847 663.253723,190.996307 665.430054,190.339340  C666.244629,190.103821 666.719788,190.031128 667.554138,190.030212  C669.960815,190.436737 671.200012,191.929901 672.347656,193.461746  C673.798889,195.398666 675.128906,195.244919 676.753723,193.220566  C679.105530,192.827530 678.736450,195.500076 680.669006,195.997208  z\"})),_path1300||(_path1300=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M644.068848,155.547562  C641.752075,156.061310 640.089233,154.590881 638.183044,153.785721  C633.194092,151.678436 628.180237,148.095856 622.369873,149.227127  C618.686218,149.944305 618.946777,148.088013 618.994995,145.403839  C620.934998,143.528610 623.357056,145.253677 625.672607,144.021057  C632.165710,145.601639 637.491821,148.920837 642.858765,152.173492  C644.099060,152.925156 643.935303,154.060394 644.068848,155.547562  z\"})),_path1301||(_path1301=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M676.775879,192.825348  C676.880188,194.584641 677.512390,196.668655 675.617615,197.377869  C673.431946,198.195923 672.617859,195.923492 671.438599,194.693542  C670.428284,193.639725 669.550964,192.458313 668.319336,191.174286  C665.391846,188.326904 661.138672,187.077179 660.766846,182.295929  C661.255737,181.802429 661.519287,181.596207 661.903015,181.165314  C664.104248,181.599731 666.185425,182.258835 668.627930,182.973785  C670.661072,185.667847 673.118347,187.714890 674.847900,190.723694  C675.577759,191.521118 676.064819,192.087128 676.775879,192.825348  z\"})),_path1302||(_path1302=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M615.871826,126.905029  C617.481018,127.154259 618.784180,127.611931 620.423462,128.126312  C620.759521,128.183029 620.802856,128.184769 620.822266,128.192474  C621.221558,128.420319 621.501038,128.727997 621.728882,129.446671  C621.893250,130.503357 621.686707,131.388321 622.945923,131.896988  C623.368164,132.191177 623.525635,132.326401 623.841553,132.729584  C624.309021,134.099762 624.618042,135.201965 624.966431,136.647522  C624.394165,138.597870 622.931030,139.139435 621.160034,139.865814  C620.009094,140.095688 619.241638,140.053650 618.131104,139.701660  C614.872803,135.792007 615.565186,131.391174 615.871826,126.905029  z\"})),_path1303||(_path1303=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M620.696960,139.228607  C622.127869,138.400299 623.267212,137.831772 624.706238,137.127060  C625.798218,139.059784 623.303772,141.501862 625.868286,143.687561  C624.621826,148.540115 621.942566,145.587921 619.339355,145.042755  C618.549866,145.004517 618.107117,145.005371 617.332153,145.003723  C614.876221,141.150452 618.353943,140.759918 620.696960,139.228607  z\"})),_path1304||(_path1304=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M675.061829,190.593079  C672.465759,189.056137 669.626526,187.338120 668.996704,183.388794  C672.527344,184.151596 673.875916,187.110931 675.061829,190.593079  z\"})),_path1305||(_path1305=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M624.340698,132.986465  C624.000000,132.997559 623.597778,132.917282 623.393005,132.906281  C622.251648,132.347046 621.550964,131.613266 621.249023,130.208160  C621.090637,129.525894 620.998047,129.149521 620.873596,128.486664  C624.210876,127.424210 625.012085,129.899323 625.988464,132.574951  C625.589417,132.943604 625.135437,132.959488 624.340698,132.986465  z\"})),_path1306||(_path1306=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M616.062317,126.520508  C616.776245,130.571564 618.083496,134.353363 617.852295,138.682800  C615.776062,141.875137 611.796387,142.720901 608.172974,141.221786  C606.787598,140.648590 605.698425,138.647308 603.501648,140.332901  C602.586060,140.832855 601.917786,140.976669 600.888916,141.015625  C598.482300,140.758896 596.349304,139.809387 594.229736,141.778168  C594.004883,142.004272 594.000000,142.000000 594.002441,142.002747  C592.479675,142.900009 591.923767,144.246292 591.723938,145.992508  C591.515625,147.812119 590.681763,149.426819 588.234070,149.875336  C581.955261,148.471100 583.552124,142.906891 582.584778,139.187622  C581.634521,135.534180 582.055664,132.003036 576.894043,131.633499  C575.036377,131.500519 574.766785,129.333878 574.720093,127.236809  C574.937683,125.824226 575.380920,124.936401 576.651855,124.173843  C582.385498,122.409309 579.044495,117.947441 579.994141,114.452904  C582.482300,113.398071 583.851257,109.383942 587.317261,111.665321  C588.733398,112.597427 590.360413,113.050720 588.780640,115.372253  C587.542908,117.191193 587.399780,119.092758 590.756958,118.242203  C593.521423,117.541809 595.681702,118.313461 596.893738,121.071480  C598.218506,124.085953 602.425842,124.023453 603.094971,123.227661  C606.262512,119.460312 608.229248,122.596733 610.589600,123.813965  C611.904602,124.492126 613.208374,125.192001 614.896851,125.864792  C615.541687,125.956802 615.765076,126.122452 616.062317,126.520508  z\"})),_path1307||(_path1307=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M269.576904,239.917694  C271.282898,247.619461 265.751678,252.765701 262.419556,258.937317  C260.957733,254.420731 264.464081,250.923447 264.967773,246.689484  C265.174561,244.951340 266.224976,243.313553 266.880066,241.243591  C266.868530,240.857056 266.959442,240.447800 267.027496,240.249634  C267.804779,240.017715 268.514008,239.983963 269.576904,239.917694  z\"})),_path1308||(_path1308=/*#__PURE__*/React.createElement(\"path\",{fill:\"#413332\",opacity:1,stroke:\"none\",d:\" M274.682251,230.775589  C274.791718,234.295563 274.924286,237.779129 270.339264,238.948868  C270.873535,236.539032 271.776459,234.087814 272.833862,231.316498  C273.376160,230.620239 273.836914,230.474045 274.682251,230.775589  z\"})),_path1309||(_path1309=/*#__PURE__*/React.createElement(\"path\",{fill:\"#413332\",opacity:1,stroke:\"none\",d:\" M277.673645,224.052856  C277.203339,225.938232 277.654022,228.365982 275.355713,229.929810  C274.431610,229.713165 274.145142,229.219452 274.032196,228.298981  C274.022400,227.561218 274.027405,227.121689 274.046204,226.353119  C275.157013,225.385315 276.254089,224.746582 277.673645,224.052856  z\"})),_path1310||(_path1310=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M273.760803,228.212646  C274.327484,228.474106 274.637573,228.947479 274.978699,229.714325  C275.009766,230.007797 275.002777,230.500641 274.998352,230.746964  C274.548340,230.995270 274.102783,230.997238 273.322784,230.997803  C273.160278,230.139114 273.332245,229.281830 273.760803,228.212646  z\"})),_path1311||(_path1311=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M164.278091,573.953369  C164.043274,573.513916 164.086075,573.037170 164.263748,572.223755  C165.665833,572.469299 166.299469,573.100586 164.278091,573.953369  z\"})),_path1312||(_path1312=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M219.231812,366.934082  C219.786331,363.215454 220.724304,359.459778 221.850754,355.360107  C223.676437,355.181519 225.612320,356.559814 224.694382,357.571472  C222.179764,360.342865 223.283020,364.929138 219.231812,366.934082  z\"})),_path1313||(_path1313=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M223.188721,375.755890  C222.191803,375.979126 221.456818,375.984650 220.352783,375.984528  C220.387192,374.176025 218.884323,371.512482 222.602249,371.014771  C223.715454,372.452454 224.480927,373.903687 223.188721,375.755890  z\"})),_path1314||(_path1314=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M225.535400,365.997742  C225.835281,367.613281 225.321167,369.049500 223.373764,369.965271  C223.176193,368.398560 223.636703,366.935364 225.535400,365.997742  z\"})),_path1315||(_path1315=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M218.179626,369.947693  C217.912659,369.541138 217.947540,369.103302 218.000854,368.336609  C218.518631,368.259216 219.288437,368.395599 219.455582,368.788422  C219.724304,369.419983 219.089279,369.767242 218.179626,369.947693  z\"})),_path1316||(_path1316=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M261.802490,260.134521  C262.011444,260.023132 262.009369,260.508606 262.006531,260.751251  C262.003662,260.993896 261.520050,260.994232 261.278687,260.997131  C261.151764,260.696320 261.337158,260.444946 261.802490,260.134521  z\"})),_path1317||(_path1317=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M238.916550,341.261658  C241.102539,341.336609 240.765884,342.520447 240.061676,343.835175  C239.214767,345.416382 238.374283,347.001038 237.263367,348.791199  C234.295364,345.748596 238.142380,344.045807 238.916550,341.261658  z\"})),_path1318||(_path1318=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M240.600418,337.012878  C240.915115,337.833466 240.645493,338.563751 239.457916,339.023956  C239.088165,338.191559 239.288376,337.416229 240.600418,337.012878  z\"})),_path1319||(_path1319=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M760.306763,489.183167  C759.738525,487.900452 759.356140,486.866699 758.931213,485.507507  C758.836609,482.253387 758.756531,479.295868 763.567566,481.016449  C764.101929,486.002441 766.448669,490.005188 769.293030,493.901215  C772.381531,498.131622 775.374390,502.502533 775.001953,508.582184  C774.997559,509.001221 775.000000,508.999969 775.001587,508.996948  C774.723389,509.632263 774.295593,510.109558 773.288574,510.156555  C769.670044,504.598633 766.357178,499.173584 762.976196,493.395020  C761.943420,491.945160 761.376465,490.582642 760.306763,489.183167  z\"})),_path1320||(_path1320=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M755.451843,478.835999  C751.118103,476.478821 753.562378,472.137024 752.595764,468.743042  C752.247925,467.521790 750.734619,464.640045 753.809387,463.036926  C754.350464,462.970520 754.692444,463.220612 754.840820,463.604980  C755.291687,464.720154 755.406372,465.642303 755.925720,466.152039  C760.957336,471.089783 760.946472,473.495361 755.451843,478.835999  z\"})),_path1321||(_path1321=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M753.968384,462.969604  C754.703857,458.867981 752.040955,455.680542 751.161621,452.039093  C750.738342,450.286224 750.401062,448.512573 750.054688,446.339050  C752.896057,451.013214 757.415710,455.103271 758.365234,461.301208  C758.785156,464.042419 757.548096,464.007385 755.369263,463.996887  C754.989258,463.989349 755.002625,464.002625 755.008606,464.008453  C754.861572,463.857300 754.708618,463.700317 754.320007,463.314148  C754.084351,463.084900 754.007202,463.007874 753.968384,462.969604  z\"})),_path1322||(_path1322=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M749.022400,443.632446  C747.675842,443.753510 746.671387,443.396912 748.568909,441.974365  C748.898254,442.356201 748.960571,442.819305 749.022400,443.632446  z\"})),_path1323||(_path1323=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M756.910583,482.743896  C756.018372,482.902283 755.277405,482.560455 755.163696,481.190460  C756.034668,481.073883 756.757874,481.430786 756.910583,482.743896  z\"})),_path1324||(_path1324=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M755.305786,546.159607  C754.998230,545.555420 754.996460,545.113281 754.994507,544.339539  C756.673218,542.633545 758.071899,543.741089 759.522522,544.503845  C760.728149,545.137756 761.732300,547.036987 763.346680,545.562927  C764.655884,544.367737 764.089539,542.819824 763.258911,541.096558  C762.753418,539.845703 762.549805,538.890259 762.511353,537.522278  C761.763306,531.317688 758.408325,526.154053 758.282837,519.821228  C758.496216,519.228333 758.622681,519.008850 759.051636,518.564209  C763.404053,516.974731 764.782227,520.653320 767.437744,522.664429  C767.900391,523.012939 768.072998,523.165161 768.471436,523.572754  C769.331360,524.716125 769.656860,525.812988 770.758545,526.768921  C771.634521,529.742859 772.283691,532.485657 772.985229,535.608093  C772.996277,537.143372 773.365967,538.464050 772.943542,539.425232  C771.575012,542.539612 772.825562,544.268372 775.797180,545.725525  C776.008179,546.001709 776.031677,546.494385 776.034912,546.740967  C776.028748,547.581421 776.185913,548.120789 776.757690,548.799805  C777.782410,553.913513 779.034180,558.450745 781.114746,563.209595  C783.993835,569.795044 786.976868,577.751648 782.753418,585.658630  C781.863708,587.324341 782.698608,589.922791 785.523560,590.955688  C785.614075,593.360718 785.365967,595.722351 785.127808,598.486877  C786.601257,601.303223 785.534912,603.091614 783.322205,604.854675  C780.824768,604.731140 781.181396,603.004822 780.870544,601.597046  C780.542603,600.111511 779.406311,599.187927 777.969238,599.607422  C776.524841,600.028992 776.883789,601.596680 777.155518,602.614929  C778.174988,606.436279 778.765137,610.273499 778.616028,614.245789  C778.572998,615.390869 778.431580,616.351257 777.271057,616.470276  C776.234192,616.576660 776.288330,615.479919 775.989014,614.724243  C774.517883,611.009949 772.428223,606.889648 772.281921,603.485352  C772.112000,599.533081 771.901245,596.945374 768.521240,594.880737  C768.329895,594.763855 769.016052,593.105713 769.382751,592.200989  C770.216248,590.144470 770.409058,588.218628 767.990234,587.169495  C765.046692,585.892944 765.678650,583.025330 765.127502,580.788147  C764.716248,579.118958 765.268066,577.542114 767.170715,579.813904  C768.041626,580.853821 768.835449,580.351440 768.828247,579.435547  C768.773865,572.531006 771.196472,565.308533 766.552185,558.952209  C765.531677,557.555542 765.654358,554.509949 762.075317,556.211243  C760.818237,556.808838 760.661987,553.284302 759.398010,552.001587  C757.777588,550.356812 757.946106,547.503784 755.305786,546.159607  z\"})),_path1325||(_path1325=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M782.962036,605.416931  C783.016235,602.984924 785.209290,601.769897 785.079407,599.262085  C788.173096,600.106201 786.738464,602.776184 786.928406,604.814453  C787.182556,607.543152 787.001709,610.312378 787.019165,613.529541  C786.859314,613.996704 786.687927,613.998657 786.259521,614.002686  C785.645386,613.949646 785.350342,613.783813 785.049927,613.254028  C785.250854,610.345215 782.125366,608.634766 782.962036,605.416931  z\"})),_path1326||(_path1326=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M793.003723,584.997131  C792.900696,584.871643 792.793945,584.748962 792.687195,584.626282  C792.758972,584.671936 792.830750,584.717590 792.948364,584.885376  C792.994324,585.007446 793.000000,585.000000 793.003723,584.997131  z\"})),_path1327||(_path1327=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M797.980835,591.691040  C797.335327,591.913757 796.580383,591.829224 796.549744,591.044922  C796.537476,590.731995 797.093628,590.396729 797.672729,590.013306  C797.969238,590.417969 797.983948,590.881042 797.980835,591.691040  z\"})),_path1328||(_path1328=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M225.938141,420.390106  C225.954483,414.825592 230.050247,410.871582 229.759338,405.160217  C229.627045,402.562866 232.976791,398.618683 233.848953,394.822296  C234.620651,391.463196 235.864929,388.214844 236.802704,384.890015  C237.017944,384.126862 237.164673,383.024658 236.781036,382.460693  C231.786514,375.118713 237.969757,369.217651 239.778839,363.020233  C240.562241,360.336517 245.467346,362.615448 248.752991,362.241089  C249.588745,361.480194 250.245026,361.133148 251.398529,361.101501  C253.852921,361.828430 253.983063,363.473511 253.539307,365.189209  C252.553040,369.002441 252.700073,373.124969 250.139038,376.520752  C248.682053,378.452667 248.720551,380.808105 249.254379,383.351013  C250.783768,380.165100 250.451492,376.495911 253.201904,373.704132  C255.424057,372.303497 256.530579,370.682526 256.225067,368.304413  C256.007690,366.612396 256.382843,365.092163 257.807526,363.551605  C258.784485,362.932678 259.525940,362.743408 260.700806,362.667816  C261.902588,362.676483 262.669830,362.853180 263.716064,363.423553  C265.798889,365.658447 265.438629,367.919464 264.645233,370.136139  C263.898804,372.221710 263.574554,374.248749 264.709656,376.637817  C265.781342,378.671997 267.703003,379.177429 269.237823,380.688721  C269.619446,381.435547 269.677338,381.910309 269.536682,382.750702  C268.565613,384.393829 267.309357,385.128296 265.526123,385.682312  C262.171844,385.632202 261.245941,383.619446 260.490479,381.090057  C259.622681,378.184418 258.768677,378.111694 256.868408,380.686401  C257.020844,381.807312 255.160629,383.330566 257.981079,383.278870  C261.177917,383.498047 262.726501,385.868988 265.098663,387.561890  C266.079620,389.475037 265.095215,390.645905 264.055176,392.148682  C260.157898,396.081604 260.504669,400.110168 262.858276,404.630615  C263.613922,407.602875 267.570618,409.703247 264.059418,413.188049  C261.342834,413.469543 260.285034,414.936432 259.824829,417.467651  C259.522614,417.956482 259.372986,418.133545 258.921234,418.482727  C254.003479,418.766510 254.647263,415.779724 255.411987,412.963104  C255.912552,411.119385 257.591217,409.576935 256.681427,407.247101  C255.361923,406.775024 254.862213,409.041992 253.170715,408.239075  C250.891830,405.348389 251.322357,402.469727 252.651047,399.727051  C253.743118,397.472839 254.179398,395.071930 254.808823,392.708557  C255.016449,391.928955 255.154282,390.987854 254.120041,390.630219  C253.224197,390.320435 252.551483,390.829590 252.082504,391.565826  C251.205048,392.943298 250.901917,394.631897 249.499649,396.092957  C246.703140,397.121735 246.233139,395.383759 246.000610,393.256622  C243.583572,396.555817 241.187912,399.508392 242.970520,404.002167  C243.332245,405.490540 243.600266,406.769073 243.074051,407.764587  C240.813751,412.040649 241.236725,416.334656 242.600174,420.714844  C242.851654,421.522766 242.605286,422.348663 241.757141,423.242706  C235.203552,423.143097 235.156342,423.150177 236.116409,429.553558  C236.639999,433.045715 235.960663,436.499054 235.928574,439.969727  C235.896393,443.453522 235.409912,446.860413 237.351486,450.067657  C237.935287,451.032013 238.260162,452.582245 237.578384,453.436798  C233.620285,458.398071 235.823730,463.924744 236.099915,469.182190  C236.346939,473.884705 233.934265,477.750183 232.436798,481.734436  C231.435532,484.398529 230.188110,486.700348 230.646149,489.592621  C230.954407,491.539062 230.545349,493.169281 228.844910,494.415558  C225.672943,496.740326 224.371277,499.692719 226.111038,503.517670  C226.636734,504.673401 226.803894,506.040131 225.813797,506.761810  C220.349564,510.744507 221.514023,517.411743 219.216141,522.660461  C218.413712,524.493347 218.063843,526.596069 215.064819,526.361328  C212.061676,522.655151 213.849792,518.526672 213.132980,514.351624  C213.709381,509.846008 209.838379,511.825531 208.303925,510.861572  C206.735657,509.876434 206.323547,512.431702 206.067490,513.734009  C205.614685,516.037048 203.937042,517.353760 202.074127,517.478943  C199.794724,517.632080 200.127869,515.351990 200.003616,513.378479  C199.998657,512.997559 200.009384,512.505066 200.016327,512.258911  C202.237228,510.366699 200.963333,505.405884 205.964050,506.474274  C202.402496,502.362579 202.528152,501.174408 206.617737,496.580383  C206.230515,494.975006 206.495926,493.773346 207.048477,492.299866  C207.037231,491.550110 207.030167,491.106598 207.013702,490.330444  C210.010971,488.002228 209.040482,484.428986 209.547134,481.796509  C210.203476,478.386169 210.989014,476.853210 214.809616,477.725037  C210.248978,471.621918 210.004120,465.992859 215.394363,460.426819  C220.030243,455.639771 221.587494,450.050659 221.198105,444.220276  C220.636734,435.814972 223.966141,428.504181 225.938141,420.390106  z\"})),_path1329||(_path1329=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M207.260345,447.768707  C205.999008,445.230377 204.229477,442.375732 208.294724,440.236938  C208.711502,440.685699 208.776382,441.080811 208.881866,441.775848  C209.091461,442.217285 209.260468,442.358765 209.205917,442.743835  C209.045364,444.683075 208.548904,446.199371 207.260345,447.768707  z\"})),_path1330||(_path1330=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M209.243164,443.175659  C208.982361,442.987396 208.930573,442.532074 208.926514,442.303925  C209.938309,440.556885 210.954163,439.038025 212.238022,437.118408  C213.530594,440.037506 212.258163,442.216278 211.340485,444.233276  C210.958862,445.072052 210.085968,443.812286 209.243164,443.175659  z\"})),_path1331||(_path1331=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M218.667175,403.000549  C219.001297,403.445862 219.001633,403.890900 219.002014,404.670441  C218.557648,405.004486 218.113235,405.004028 217.335571,405.003601  C217.001404,404.558319 217.000473,404.113068 216.999420,403.333771  C217.444016,402.999908 217.888702,403.000092 218.667175,403.000549  z\"})),_path1332||(_path1332=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M194.110596,479.273285  C194.205154,478.294250 194.222839,477.600037 194.297638,476.567352  C194.354767,476.228912 194.693192,476.196777 194.855316,476.145691  C195.404922,475.650360 195.882675,475.506805 196.629669,476.024902  C196.429626,484.077026 195.095474,491.533020 191.208786,498.709351  C189.888290,498.162903 190.009918,496.901855 189.947449,495.324768  C189.673813,490.256287 191.195389,485.887695 192.691254,481.193420  C193.431290,480.562286 193.810349,480.122162 194.110596,479.273285  z\"})),_path1333||(_path1333=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M199.735809,488.223083  C204.127121,491.898285 200.720230,493.360504 197.394135,494.959991  C197.519287,492.661591 198.112030,490.408447 199.735809,488.223083  z\"})),_path1334||(_path1334=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M196.833099,476.062286  C196.412567,476.308960 196.016586,476.232208 195.319031,476.125000  C195.276505,475.571228 195.430557,474.719604 195.817413,474.595856  C196.528412,474.368500 196.782211,475.089935 196.833099,476.062286  z\"})),_path1335||(_path1335=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M195.346130,460.262665  C195.016556,459.335938 195.210281,458.400208 196.804565,458.048615  C196.967850,458.920990 196.649765,459.761078 195.346130,460.262665  z\"})),_path1336||(_path1336=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M206.769836,495.729553  C208.307968,497.277893 207.777390,497.944244 206.539810,499.110260  C204.802521,500.747009 201.639847,503.264221 207.287781,504.087463  C208.177734,504.217163 208.815323,504.708435 208.768036,505.728271  C208.717072,506.827087 207.615952,508.210022 207.264557,508.036102  C202.962936,505.907562 203.213135,511.220612 200.371414,511.958282  C199.810364,509.439178 201.703308,506.295593 197.677292,504.766724  C196.698395,504.395020 196.929016,502.047791 197.990646,501.916656  C201.612823,501.469330 202.774368,497.928009 205.769638,496.256287  C206.173080,495.821350 206.342667,495.643921 206.769836,495.729553  z\"})),_path1337||(_path1337=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M182.244415,567.197876  C178.542923,567.032288 180.297607,571.526672 177.293060,572.096313  C175.975128,567.401794 179.558640,564.061523 180.422180,559.953125  C180.620834,559.008057 182.367447,557.610901 183.908478,559.687256  C184.940247,561.684082 183.935516,563.007996 183.028564,564.688599  C182.910294,565.445190 182.910004,565.885376 182.917847,566.655579  C182.776962,567.118347 182.627960,567.251038 182.244415,567.197876  z\"})),_path1338||(_path1338=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M190.003159,545.424683  C196.985199,547.353699 191.691650,551.063843 191.013046,554.628296  C189.761948,555.283020 188.525116,555.570923 187.278427,555.861145  C185.156677,551.737549 191.865311,549.943848 190.003159,545.424683  z\"})),_path1339||(_path1339=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M183.284241,564.997559  C181.486618,563.223999 183.490967,562.062622 183.838013,560.284424  C185.410782,559.957397 186.359863,560.925354 187.697189,561.843872  C187.558060,564.454224 185.618607,564.737488 183.284241,564.997559  z\"})),_path1340||(_path1340=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M207.069641,495.684448  C206.856750,495.994293 206.686096,495.996002 206.259460,495.998230  C205.249847,494.639587 204.750671,493.312836 206.761795,492.132019  C210.636810,493.049866 206.746094,494.255585 207.069641,495.684448  z\"})),_path1341||(_path1341=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M199.477264,497.463806  C199.519531,497.440552 199.434998,497.487091 199.477264,497.463806  z\"})),_path1342||(_path1342=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M188.006760,496.995667  C188.354340,497.336792 189.188599,497.547913 188.353516,498.218231  C188.237701,497.966614 188.121887,497.714996 187.993973,497.240784  C187.981873,497.018188 187.998032,497.001923 188.006760,496.995667  z\"})),_path1343||(_path1343=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M773.027405,510.358185  C773.482788,509.755585 773.982727,509.487488 774.742859,509.106628  C775.335754,510.094116 775.668457,511.194336 776.001770,512.643921  C774.485474,512.914429 773.445740,512.227722 773.027405,510.358185  z\"})),_path1344||(_path1344=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M551.952332,81.648819  C547.694214,83.100533 544.901001,78.932465 540.911194,78.765114  C539.388733,78.701263 537.565674,77.056847 536.497131,78.981926  C535.533875,80.717339 537.796875,81.734932 538.462585,83.140465  C539.100342,84.486923 541.615784,84.231422 541.952759,86.640518  C541.646484,87.608253 540.980591,87.450020 540.220337,87.810753  C539.552795,88.001595 539.110474,88.001137 538.336548,87.999611  C536.672974,87.055412 535.435303,85.920135 533.988831,85.210449  C531.250061,83.866684 531.200195,83.968132 532.877197,81.712982  C533.976746,80.234459 531.480957,77.465996 527.369629,76.006195  C526.811035,75.803673 526.617737,75.613022 526.420105,75.426781  C526.223083,75.241119 526.288208,75.304352 526.807739,75.808754  C525.023193,79.644234 522.346802,77.790726 519.828857,76.880989  C515.619812,75.360222 512.642090,71.179153 507.548340,71.380493  C512.860901,68.903137 517.525391,72.649734 522.755920,72.241714  C529.916138,71.837112 536.514404,74.278122 543.486572,74.334976  C547.215454,74.365387 549.805481,78.076149 551.952332,81.648819  z\"})),_path1345||(_path1345=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M574.987427,102.650909  C572.247498,101.956924 571.964966,98.261223 569.092651,97.262375  C567.299255,99.206963 570.455505,100.608231 568.971008,102.859558  C564.435120,97.358704 562.180298,90.486885 557.064575,85.332382  C558.503357,84.677269 560.382629,87.182373 561.345459,85.010651  C562.086914,83.338295 559.590210,82.998779 558.569763,82.058876  C556.449829,80.106201 555.424622,77.087540 551.706665,76.079208  C553.051819,75.246643 554.203064,74.390579 554.298767,74.495720  C557.268616,77.756935 562.934631,77.766754 564.735535,81.722801  C566.667908,85.967674 571.757935,88.969246 570.298096,94.742996  C570.061890,95.677269 571.683044,95.962578 572.551208,96.371017  C575.179993,97.607750 576.167236,99.493698 574.987427,102.650909  z\"})),_path1346||(_path1346=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4E3832\",opacity:1,stroke:\"none\",d:\" M549.327148,68.992958  C549.093201,68.350143 549.159790,67.587570 549.957581,67.547661  C550.265015,67.532288 550.601807,68.103127 550.972168,68.694427  C550.567871,68.987061 550.116638,68.992149 549.327148,68.992958  z\"})),_path1347||(_path1347=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M569.941772,75.041138  C569.984985,75.278893 569.801331,75.422745 569.399048,75.351089  C569.430542,75.152405 569.608826,75.089630 569.941772,75.041138  z\"})),_path1348||(_path1348=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M193.919250,479.136841  C195.074738,480.010284 194.723160,480.608063 193.238358,480.918671  C193.183167,480.375366 193.417084,479.830292 193.919250,479.136841  z\"})),_path1349||(_path1349=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M687.781616,205.860687  C686.862549,205.907364 686.233154,205.427933 686.193420,204.134766  C687.130188,204.057968 687.789246,204.517700 687.781616,205.860687  z\"})),_path1350||(_path1350=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M685.895142,202.785736  C684.943787,202.869812 684.239380,202.442963 684.460938,201.003693  C685.031006,201.292587 685.464233,201.892380 685.895142,202.785736  z\"})),_path1351||(_path1351=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M653.742432,192.729126  C656.434448,197.641846 661.959656,195.188385 665.626404,197.943558  C668.039429,199.363342 669.210205,201.547928 669.942932,203.633972  C671.519226,208.121765 674.917053,210.516922 679.044128,212.813492  C681.647461,214.562576 682.111145,217.320831 683.756531,219.740875  C684.180359,225.344620 688.738525,227.915710 691.698730,231.843719  C692.161804,233.169769 692.326111,234.340393 692.751587,235.752258  C692.889099,237.870377 693.409241,239.475021 694.368225,241.164749  C696.053040,244.133530 697.732666,247.144623 696.151550,250.947342  C695.395020,252.766998 695.926086,255.062164 697.952759,256.223236  C703.975403,259.673645 707.997253,264.337891 708.181091,271.672943  C708.207886,272.742462 708.838867,273.986511 709.568970,274.816895  C713.388123,279.160919 715.393799,283.276245 713.744446,289.796082  C711.892944,297.114990 716.984497,303.916138 719.165894,310.878235  C719.926514,313.305725 721.026917,315.772552 721.949341,318.625732  C722.016235,319.597992 722.196533,320.135468 722.788086,320.802124  C722.996704,321.754333 722.998352,322.503052 723.001221,323.626160  C720.885071,326.340210 719.578308,327.723541 721.175842,332.054810  C724.334961,340.620422 726.416260,349.883392 725.399048,359.386505  C724.893250,364.112305 719.431885,365.714020 719.201111,370.604340  C717.330627,363.037292 712.646301,356.773834 712.666199,348.831482  C712.673706,345.836334 709.848816,342.728577 708.851929,339.416901  C708.351257,337.753845 706.868774,337.828827 705.552795,338.418121  C704.244446,339.004028 704.123047,340.063507 704.684570,341.327667  C705.327148,342.774231 706.624878,344.283264 704.295959,345.846466  C700.235962,344.383972 699.546326,340.621490 697.914612,337.096375  C697.599731,335.858917 697.361389,334.965912 696.950562,333.768402  C696.733887,331.803009 695.984680,330.495148 694.581177,329.141266  C694.288330,328.385590 694.245667,327.925476 694.363037,327.116577  C695.755371,324.429443 697.804993,323.699249 700.351746,324.065063  C701.974792,324.298218 703.763916,324.970886 704.833252,323.088989  C705.953369,321.117737 705.538818,319.087250 704.061707,317.553894  C702.111938,315.529846 702.275085,313.022980 701.809448,310.265442  C701.202332,308.328949 700.617310,306.748260 700.541504,304.694366  C700.260803,301.886688 700.290405,299.333099 698.002319,297.238831  C696.359009,296.096588 695.838135,294.781708 696.039612,292.814087  C698.024475,289.230652 696.283081,286.049225 694.954224,283.612762  C692.360291,278.856903 690.633972,273.676422 687.442017,268.858948  C685.164246,265.361938 682.726440,262.350006 680.871643,259.043732  C678.212280,254.303329 673.417419,253.248810 669.185913,251.101807  C667.886414,250.442459 667.395386,251.332794 666.677612,251.967056  C665.171265,253.298264 663.386414,253.412109 661.167664,253.019867  C658.535339,252.047180 658.189331,249.532669 656.420776,247.735260  C655.389404,246.433334 654.974243,245.279510 654.979553,243.620026  C655.958252,240.308655 655.740295,237.540192 654.437744,234.642029  C651.271912,227.598373 647.845337,220.701096 643.732056,213.761215  C642.864197,212.532059 642.475769,211.409836 641.446045,210.278549  C639.082947,206.366669 636.056152,203.232086 634.928101,198.636047  C634.440002,192.983932 630.291504,190.168854 626.886108,186.417038  C626.569092,185.891861 626.481934,185.655518 626.357056,185.036774  C627.791077,179.724640 628.084290,179.587540 633.143433,181.833435  C637.940002,185.147079 643.072205,186.967529 647.888245,189.409149  C649.788147,190.372330 651.904358,190.935684 653.742432,192.729126  z\"})),_path1352||(_path1352=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M721.038330,287.289856  C723.392212,287.469116 723.430359,289.991547 724.883362,291.685669  C722.453979,291.627167 720.692261,290.590210 721.038330,287.289856  z\"})),_path1353||(_path1353=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M716.081787,276.232361  C717.829590,276.635010 720.139954,276.775696 719.975281,279.774078  C717.842102,279.689301 716.588928,278.547180 716.081787,276.232361  z\"})),_path1354||(_path1354=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M722.969727,320.710815  C722.116699,320.806183 720.997437,320.813965 721.789246,319.179871  C722.314758,319.472534 722.629517,319.944305 722.969727,320.710815  z\"})),_path1355||(_path1355=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M715.786377,272.153656  C716.660217,272.425507 716.973022,272.948730 716.257568,273.859497  C715.385681,273.596069 715.022400,273.082275 715.786377,272.153656  z\"})),_path1356||(_path1356=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M679.222778,213.794739  C670.980835,212.053986 668.886230,205.067886 666.010620,198.365479  C669.968811,196.233841 670.920166,200.508926 673.710938,201.851074  C675.111633,203.728027 675.844910,205.855927 678.733887,206.059540  C679.807312,206.289932 680.369324,206.700485 680.893127,207.656097  C680.998962,208.749985 681.000366,209.500381 681.001953,210.625977  C680.461487,211.850388 680.025940,212.762878 679.222778,213.794739  z\"})),_path1357||(_path1357=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M679.263611,214.211426  C679.971680,213.140640 675.950256,210.061050 680.720581,210.882324  C681.995239,213.747025 682.988281,216.492859 683.989441,219.620392  C680.918701,219.414627 681.225159,216.115326 679.263611,214.211426  z\"})),_path1358||(_path1358=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M681.231079,207.821960  C680.498474,207.739532 679.999390,207.479462 679.241577,207.107880  C678.645752,206.614746 678.499390,206.170288 678.746216,205.356110  C678.948669,205.049210 678.973145,205.025711 678.985352,205.014069  C679.852600,205.169754 680.707581,205.337067 681.779785,205.754242  C681.819519,206.550827 681.642090,207.097565 681.231079,207.821960  z\"})),_path1359||(_path1359=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M797.250977,674.226562  C792.921204,669.478149 792.666199,662.543823 796.726196,659.281006  C799.708618,658.377808 799.970825,661.023865 801.505432,662.567444  C801.817627,663.116272 801.923584,663.347351 802.139221,663.945251  C802.269836,666.337219 803.031311,668.331482 802.265503,670.682556  C800.052307,671.437866 799.323120,672.525330 801.102966,673.905762  C803.007751,675.383240 803.176941,677.308960 803.819763,679.672058  C800.093018,679.226868 798.762634,676.877747 797.250977,674.226562  z\"})),_path1360||(_path1360=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M802.285645,671.188293  C801.672424,668.926331 801.315735,666.867249 800.966064,664.406494  C801.718628,663.350281 802.771667,663.300110 803.089783,664.095154  C804.477051,667.561829 807.226868,670.457764 807.229858,674.698608  C807.009766,674.990234 806.942139,675.059937 806.906982,675.096741  C804.608032,674.835449 803.716797,672.949341 802.285645,671.188293  z\"})),_path1361||(_path1361=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M142.627167,716.031311  C142.487015,720.728394 138.982376,719.553223 136.041885,719.278564  C137.270798,716.297913 139.554977,715.736389 142.627167,716.031311  z\"})),_path1362||(_path1362=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M701.221008,600.719849  C698.811035,603.413025 700.597717,606.997070 698.445679,609.520569  C697.528259,610.596436 697.379333,612.635193 695.303650,611.468750  C693.574341,610.497070 692.583130,609.078918 693.543213,606.910583  C693.983765,605.915833 694.967957,605.004028 694.257324,603.420288  C691.737305,603.807556 689.872375,603.713013 691.051636,607.770264  C692.213379,611.767334 691.571899,616.234558 694.237732,619.971558  C695.354309,621.536743 694.443665,623.474792 693.196106,624.405701  C691.331055,625.797241 688.901672,624.705505 687.778503,623.383606  C685.047058,620.168823 683.213684,618.681824 680.870483,623.730286  C679.911865,625.795654 676.987244,625.690613 675.670837,624.234863  C672.413025,620.632202 667.708679,620.709290 664.333313,621.356323  C658.002075,622.570068 656.590942,618.644775 655.635254,614.687805  C655.138672,612.631958 654.435791,611.392700 652.915405,611.581238  C648.273804,612.156799 643.300659,609.337891 639.006409,612.532898  C634.903259,615.585693 633.555847,610.516113 630.329102,610.043823  C625.850586,606.227356 627.838257,600.933594 626.888123,596.417603  C626.064819,592.504517 625.809570,588.296692 625.633057,583.786804  C625.671875,582.357910 626.022644,581.358215 625.817627,579.959229  C625.604370,578.162659 625.551147,576.730896 625.935181,574.976074  C626.421692,573.486328 627.541199,572.487732 626.704041,570.756958  C625.647644,568.047974 625.966980,565.645325 626.531738,562.864014  C626.907043,559.697388 627.882996,556.984192 627.607788,553.725525  C628.505554,549.160217 631.894958,546.981628 635.086670,544.184509  C636.367493,543.617065 637.336731,543.320007 638.697876,543.082520  C639.562256,543.109924 640.096924,543.158264 640.483582,543.457031  C643.573425,545.844543 639.910278,548.889038 641.157837,551.269165  C642.348816,553.541382 644.275879,554.974854 642.199829,558.177246  C640.343323,561.041138 639.567383,564.278381 635.579285,565.266541  C633.404175,565.805420 633.547607,568.072327 634.240784,569.901245  C634.997437,571.897888 636.007202,573.798828 636.418823,576.149414  C639.938904,574.476501 641.133118,569.177551 646.004028,570.194702  C647.916077,570.593994 649.141479,571.950012 649.729858,574.197327  C649.098267,577.221375 648.391235,579.907776 651.255981,582.287781  C652.447693,580.412903 651.656311,578.283264 652.690063,576.299561  C653.184204,575.055908 653.653687,574.140137 654.389282,573.498169  C656.008057,572.085449 656.733032,568.850342 659.603271,569.881165  C662.085632,570.772888 660.564514,573.603638 661.150574,575.490234  C661.536987,575.347168 661.716064,575.101196 661.917419,574.812195  C662.814575,573.523743 663.210632,571.312378 665.273987,571.746826  C667.508362,572.217346 667.260376,574.470886 667.466492,576.225098  C667.581360,577.203735 667.568726,578.197754 667.482727,579.529297  C668.261597,586.000427 672.016907,591.082642 673.553528,597.226135  C675.282410,594.268005 676.372498,591.273926 677.243408,588.179138  C677.800781,586.198547 677.590942,583.461487 680.525391,583.335327  C682.997253,583.229004 684.242432,585.152466 685.126892,587.239502  C685.286804,587.616882 685.308594,588.084839 685.716309,588.333618  C684.115845,585.466919 686.414246,581.578735 683.138062,578.770264  C682.289001,576.378357 682.276917,574.308716 682.949707,571.870972  C685.032715,569.642639 686.316650,567.490845 686.795898,564.721802  C687.200256,562.384949 688.729004,560.641418 691.408813,561.411377  C693.847107,562.111877 694.154419,564.218567 693.443420,566.293579  C692.636780,568.647522 692.635498,570.489502 695.248901,571.598511  C695.693115,571.786987 696.217773,572.215576 696.277954,572.644287  C697.366211,580.398254 703.260498,586.990784 701.775696,595.360840  C701.717712,595.687805 701.779602,596.212585 701.580078,596.310974  C698.926514,597.620850 700.886536,599.053101 701.221008,600.719849  z\"})),_path1363||(_path1363=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M701.407959,601.000000  C700.857605,598.448792 694.653259,598.851624 697.779297,594.632812  C699.484924,594.763550 698.487610,596.759399 699.882446,597.191833  C700.119812,596.850098 700.658203,596.413269 700.588074,596.123596  C699.879456,593.193054 699.832764,590.212952 700.036499,587.254211  C700.284790,583.649170 699.180664,582.607178 694.759094,586.051514  C696.861206,581.911743 696.068909,579.128906 696.027344,576.344177  C695.990662,573.890442 695.441895,572.132507 692.533936,571.974060  C689.570801,571.812500 689.839294,570.275269 691.103210,568.310425  C691.628174,567.494324 691.868591,566.497620 692.258911,565.591858  C692.858032,564.201477 692.903076,562.865845 691.235352,562.341614  C689.410645,561.767944 688.495300,562.864807 688.084778,564.554626  C687.500854,566.957886 688.297668,570.088074 684.390198,570.994202  C683.448303,570.591614 683.228333,569.997009 683.158630,569.013062  C683.275696,567.908569 683.546509,567.129883 683.204346,566.027710  C683.033875,565.532898 682.967834,565.330811 682.822083,564.811401  C682.710205,564.273926 682.678040,564.053711 682.623657,563.495789  C682.416626,559.319397 683.879883,555.675293 683.780090,551.795776  C683.696167,548.532837 686.076721,547.259155 688.898132,548.551636  C691.300476,549.652100 691.653442,548.807495 692.691956,546.853149  C694.958008,542.588684 697.968384,538.754272 695.336670,533.466980  C694.533997,531.854370 695.509644,529.986633 697.448425,529.623657  C699.871277,529.169922 702.371155,530.612183 702.397949,532.709534  C702.447876,536.625183 705.034912,538.991821 706.674194,542.341797  C706.870422,543.143188 706.893311,543.611206 706.805542,544.423828  C706.049805,547.443237 704.246643,550.082581 706.568726,553.190186  C702.777771,563.577881 705.398193,573.188660 708.698730,582.746887  C714.939392,580.437622 717.919006,582.134399 717.666199,589.213257  C717.515808,593.423462 717.729675,597.244446 719.217529,601.105408  C719.565247,602.007874 719.304932,603.072205 718.863525,604.382507  C718.558838,604.932007 718.403564,605.135681 717.930176,605.564209  C716.110840,606.478699 714.571106,606.491760 712.664551,605.903015  C710.517639,604.615540 710.907166,602.422607 710.161194,600.529358  C708.741211,603.503662 712.946899,605.792175 710.234680,608.756531  C709.688843,609.119324 709.433655,609.310242 709.114258,609.783386  C705.926208,611.075256 704.800293,609.499268 704.771729,606.369019  C704.841003,603.758728 705.841919,600.774353 701.407959,601.000000  z\"})),_path1364||(_path1364=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M734.790527,580.723511  C734.970520,584.766602 736.121094,587.750244 740.301270,588.415833  C741.303040,588.575317 741.880798,588.878357 741.911926,589.810730  C742.057190,594.164978 744.637573,597.901794 745.004456,602.594116  C744.673340,604.098755 744.340088,605.202393 744.000977,606.656677  C742.649780,608.557251 741.134644,607.755432 739.608765,607.107605  C739.781433,610.637512 741.192993,611.822876 744.665161,610.063354  C748.310974,613.384827 754.052917,614.154053 755.697754,619.830933  C756.363220,620.484253 756.740967,620.942444 757.702271,621.001099  C759.118042,621.836975 759.579834,623.054016 759.966431,624.664429  C755.160095,625.178040 753.145752,627.745789 753.617310,633.268311  C753.703735,634.280090 754.072815,635.290466 752.739441,635.669861  C752.005920,635.878601 751.436768,635.464050 751.223206,634.757080  C749.494690,629.034241 746.060852,631.199036 742.356079,632.950317  C741.422791,632.488220 741.166565,631.837891 741.186646,630.727722  C741.385437,629.917908 741.595093,629.494202 742.096619,628.837524  C742.482117,628.406799 742.644348,628.243713 743.053589,627.849365  C744.330994,623.402527 741.173218,620.257751 736.737488,621.263428  C735.292175,621.591064 733.950684,622.291748 732.099854,621.675293  C729.769592,620.120056 727.817200,618.572571 727.000061,616.172668  C726.086365,613.489441 724.179504,612.849487 721.339111,613.027954  C720.250610,613.001587 719.501221,613.000793 718.377136,613.000000  C717.250916,612.686951 716.641968,612.208801 716.112427,611.108765  C715.669800,608.786438 716.110535,607.056213 717.732239,605.298584  C717.995117,605.004883 718.000000,605.000000 718.002441,604.997437  C719.750244,603.811462 719.275513,602.076233 718.979614,600.505066  C718.378296,597.312134 718.975769,594.280518 719.910034,591.267029  C722.162964,584.000183 725.202881,582.936768 731.028320,587.414856  C731.097473,585.590271 730.357910,583.799500 730.884399,582.020996  C731.462524,580.068176 732.290771,578.467163 734.790527,580.723511  z\"})),_path1365||(_path1365=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M704.644165,606.085144  C705.208496,608.066223 706.383484,609.310730 708.656006,609.953735  C709.599670,615.165283 715.208496,617.210632 716.564148,622.047302  C716.832520,623.004944 719.588318,623.033386 720.775696,624.005249  C726.169128,628.419434 726.838135,635.587585 730.407104,641.094910  C730.603760,641.398376 730.473083,642.142151 730.220703,642.470276  C728.874939,644.220642 719.768066,642.699158 719.157654,640.515991  C718.554810,638.359985 718.206482,636.324036 715.497070,635.819153  C714.057068,635.550720 713.824341,634.157532 714.052612,633.023132  C714.715332,629.729980 712.205872,628.518616 710.146973,627.463745  C707.457825,626.086060 707.570862,629.752319 706.015747,630.497253  C700.925293,627.564270 703.555847,621.898071 701.339844,618.057617  C698.453186,613.054810 702.798340,609.998596 704.644165,606.085144  z\"})),_path1366||(_path1366=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M720.991455,613.380615  C723.960083,610.630798 727.480896,610.932922 727.754761,613.893494  C728.048523,617.069397 730.517456,618.190369 731.935913,620.654724  C733.694519,623.816284 734.744446,627.598755 739.757324,626.005493  C740.310181,626.146912 740.523926,626.231873 741.016174,626.522522  C741.957458,627.474182 742.039856,628.378540 742.001587,629.658020  C742.000305,630.750122 741.998108,631.500244 741.993103,632.625488  C739.832214,633.656616 738.932312,635.336609 738.343262,637.339783  C737.975342,638.591187 737.661621,640.014954 735.827576,639.876892  C734.172424,639.752197 733.922363,638.315308 733.196655,637.233032  C729.185303,631.251160 728.065308,623.374207 721.366821,619.154175  C718.802429,617.538635 721.253540,615.547668 720.991455,613.380615  z\"})),_path1367||(_path1367=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M627.714355,562.818359  C627.926392,565.488708 626.433655,567.855835 627.881897,570.617188  C627.969543,571.859009 628.020569,572.739502 627.267212,573.767273  C627.035950,575.727905 627.017761,577.437744 627.007996,579.574951  C627.009399,580.445190 627.007690,580.888062 627.017578,581.663086  C627.987793,591.053284 628.951050,600.111389 629.942505,609.585510  C629.762756,610.558044 629.554871,611.114563 629.091736,611.835510  C628.366455,612.382996 627.835571,612.505615 626.887451,612.131104  C626.172363,611.432068 625.916138,610.922791 625.693604,609.939331  C624.477600,598.858826 624.428467,588.089417 621.851318,577.574951  C620.590210,572.429749 622.927185,566.983704 621.085571,561.360962  C621.066895,560.100464 621.270386,559.306213 621.861145,558.216064  C622.717712,557.039612 623.587341,556.455017 624.737671,555.633118  C625.568909,555.350220 626.062988,555.331848 626.885864,555.592773  C629.158813,557.934326 626.754700,560.302734 627.714355,562.818359  z\"})),_path1368||(_path1368=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M710.330933,609.000000  C710.098022,607.727539 710.616333,606.511108 709.373840,605.314819  C708.135010,604.122009 707.958191,602.385986 707.994385,600.656067  C708.031433,598.886475 708.830200,597.552612 710.533752,597.553040  C712.581055,597.553589 711.851196,599.452637 711.973267,600.631775  C712.092712,601.785767 712.000610,602.961670 712.001953,604.561523  C712.907898,605.885742 713.824524,606.770935 713.450928,608.569214  C713.094971,609.054199 712.884888,609.191528 712.336182,609.164429  C711.553101,609.000000 711.108704,609.000000 710.330933,609.000000  z\"})),_path1369||(_path1369=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M630.765503,630.810242  C630.985168,632.385559 630.973450,633.771118 630.961304,635.572388  C630.941406,637.155701 630.519897,638.086304 629.011230,638.705933  C628.040771,638.803650 627.506104,638.671875 626.699829,638.110168  C624.971191,634.961060 625.697632,632.267395 627.278320,629.288025  C628.044250,628.617004 628.583984,628.474304 629.550598,628.742126  C630.127686,629.507935 630.330933,630.064209 630.765503,630.810242  z\"})),_path1370||(_path1370=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M628.479492,614.046692  C631.127563,617.555725 629.534180,621.445190 629.927612,625.605469  C629.374695,626.418945 628.815247,626.515625 627.854370,626.092712  C625.836548,623.094666 626.336487,620.109192 626.569702,616.728149  C626.867493,615.396973 627.249207,614.609131 628.479492,614.046692  z\"})),_path1371||(_path1371=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M712.041748,609.354858  C712.164612,609.000000 712.331726,609.000000 712.749390,609.000000  C714.509033,608.737610 715.599976,609.439148 716.760315,610.764893  C717.258057,611.496765 717.518555,611.991699 717.890747,612.743286  C714.190491,615.211609 713.045349,612.627747 712.041748,609.354858  z\"})),_path1372||(_path1372=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M627.600708,625.770874  C628.346313,626.006409 628.788452,626.021484 629.559937,626.051208  C629.912903,626.787415 629.936401,627.509033 629.942261,628.591064  C629.491577,628.964478 629.058716,628.977356 628.300293,628.992920  C627.181091,629.375305 626.531250,629.067627 625.711670,628.251160  C625.348877,627.443176 625.334900,626.946350 625.657349,626.124390  C626.304016,625.539185 626.784729,625.454590 627.600708,625.770874  z\"})),_path1373||(_path1373=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M628.934082,613.683838  C628.596008,614.525391 628.267517,615.029114 627.870300,615.836670  C624.450134,616.001282 624.619385,614.325806 626.489075,612.057556  C627.361084,612.013794 627.784302,612.016541 628.521973,612.009644  C628.872192,612.448669 628.907898,612.897278 628.934082,613.683838  z\"})),_path1374||(_path1374=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M785.706177,622.237427  C787.989624,624.380798 788.046448,627.257751 788.011963,630.575195  C790.059753,633.936584 793.705872,635.304016 795.613525,638.874878  C796.024048,640.185486 795.976135,641.187500 796.019287,642.565308  C797.586731,646.877319 796.761292,651.328430 798.777344,655.194885  C799.299927,656.197144 798.835083,657.474060 797.303345,658.107544  C792.784424,656.622375 792.015625,653.083252 792.412537,649.575012  C792.903198,645.238159 793.555725,641.504700 788.183716,639.564636  C786.012024,638.780396 786.222290,635.510437 786.371155,633.796082  C786.710205,629.892700 783.152222,626.399719 785.706177,622.237427  z\"})),_path1375||(_path1375=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M796.940369,658.270508  C797.227173,657.488098 797.931885,656.703918 797.776550,656.453735  C795.338379,652.527283 796.036560,647.973083 795.075806,643.373779  C795.771057,642.579956 796.241150,643.005981 796.949463,643.716187  C797.516724,644.025879 797.754272,644.219238 798.030640,644.698425  C799.243530,650.765015 802.320435,656.251831 801.168884,662.771545  C798.566650,662.897644 799.245850,660.068359 797.282166,659.164612  C796.984741,659.010681 796.958130,658.517029 796.940369,658.270508  z\"})),_path1376||(_path1376=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M762.463928,564.213501  C761.998535,562.833191 761.789124,561.733765 762.555786,560.728455  C764.988647,563.299438 764.988647,563.299438 762.463928,564.213501  z\"})),_path1377||(_path1377=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M784.758606,613.210083  C785.298950,613.116577 785.557556,613.309937 785.880676,613.792358  C785.835327,615.246033 787.203369,616.307190 786.181946,617.808716  C784.871033,616.655334 784.193726,615.193787 784.758606,613.210083  z\"})),_path1378||(_path1378=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M744.969360,609.682495  C744.635803,612.923523 742.631836,613.441284 740.346741,612.739807  C738.337585,612.123047 737.888184,610.189026 738.175659,608.303162  C738.416016,606.726440 739.018372,605.204895 739.542236,603.373047  C741.603394,603.958252 739.918213,608.309448 743.647156,607.004639  C744.309631,607.793213 744.624146,608.579163 744.969360,609.682495  z\"})),_path1379||(_path1379=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M757.823730,620.764648  C757.522827,621.820618 757.027283,622.913879 755.921021,622.536377  C754.890747,622.184814 755.479614,621.250671 755.886597,620.274475  C756.549988,620.178833 757.097534,620.355286 757.823730,620.764648  z\"})),_path1380||(_path1380=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M853.305359,806.126953  C851.609802,805.247559 850.456665,804.287598 850.036133,802.327393  C851.557922,802.376892 853.134949,802.690491 854.667358,803.151917  C855.786133,803.488770 856.046326,804.463562 855.837036,805.496948  C855.546082,806.934021 854.573303,806.642822 853.305359,806.126953  z\"})),_path1381||(_path1381=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M847.227051,793.516113  C846.320312,792.998779 845.240601,792.768921 845.608337,791.794678  C845.941162,790.912781 846.899902,790.982056 847.587280,791.461121  C848.565674,792.143127 849.442139,792.964294 847.227051,793.516113  z\"})),_path1382||(_path1382=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M859.788086,816.244141  C860.679321,816.848938 860.618286,817.406067 859.900879,817.683838  C859.573364,817.810730 858.848877,817.634033 858.704285,817.373352  C858.303223,816.649902 858.820190,816.304565 859.788086,816.244141  z\"})),_path1383||(_path1383=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M857.448730,808.955566  C857.817749,808.283325 858.188782,808.275085 858.516418,808.755859  C858.584961,808.856445 858.582153,809.089478 858.510681,809.187378  C858.168945,809.655884 857.798218,809.639038 857.448730,808.955566  z\"})),_path1384||(_path1384=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M862.287720,825.954590  C862.000000,825.555542 862.000000,825.111084 862.000000,824.333313  C862.636108,824.101929 863.398926,824.159607 863.441956,824.957092  C863.458130,825.258057 862.881775,825.590881 862.287720,825.954590  z\"})),_path1385||(_path1385=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M837.551147,791.044250  C837.182251,791.716431 836.811157,791.724792 836.483459,791.244141  C836.414917,791.143494 836.417725,790.910400 836.489136,790.812439  C836.830933,790.343811 837.201660,790.360962 837.551147,791.044250  z\"})),_path1386||(_path1386=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M834.955750,787.550964  C834.284302,787.182190 834.275696,786.811279 834.756042,786.483704  C834.856567,786.415161 835.089600,786.417969 835.187500,786.489380  C835.655762,786.831055 835.638489,787.201599 834.955750,787.550964  z\"})),_path1387||(_path1387=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M854.276306,832.214111  C853.739685,831.504272 853.481812,831.008545 853.111938,830.256409  C854.364624,827.904907 856.545166,826.272034 858.689636,827.413696  C860.904053,828.592529 858.278320,831.234619 858.997070,833.592834  C857.312805,834.046082 855.614685,834.141846 854.276306,832.214111  z\"})),_path1388||(_path1388=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M845.218262,833.248718  C844.638916,831.839111 843.118652,831.147156 843.502502,829.604187  C846.685181,829.032776 846.822449,831.614014 847.858887,833.683716  C847.145508,833.832520 846.290955,833.664978 845.218262,833.248718  z\"})),_path1389||(_path1389=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M833.422241,831.836914  C831.693420,830.411987 832.767700,829.725830 833.884766,829.298645  C834.686218,828.992188 835.607361,829.260986 835.701050,830.327332  C835.820251,831.684021 834.800842,831.864441 833.422241,831.836914  z\"})),_path1390||(_path1390=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M789.534180,759.478882  C789.556213,759.520203 789.512085,759.437500 789.534180,759.478882  z\"})),_path1391||(_path1391=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M628.881897,638.309570  C629.609558,637.447510 630.063232,636.878723 630.738953,636.149048  C632.136108,636.828613 631.981384,638.086060 631.988525,639.659546  C631.278503,640.012146 630.576233,639.995544 629.522461,639.980103  C628.690125,639.641602 628.502441,639.182190 628.881897,638.309570  z\"})),_path1392||(_path1392=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M665.258789,635.483032  C663.706055,635.956055 662.698975,635.610535 662.513733,634.150024  C662.479248,633.878479 663.070801,633.273499 663.398071,633.254822  C664.730164,633.178711 665.625366,633.727661 665.258789,635.483032  z\"})),_path1393||(_path1393=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M649.232788,632.465698  C651.315491,632.794250 650.506531,633.513855 649.644409,634.080688  C649.026917,634.486633 648.065125,635.136536 647.615479,634.179077  C647.200623,633.295654 648.311768,632.967346 649.232788,632.465698  z\"})),_path1394||(_path1394=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M648.245972,641.778259  C648.307190,640.812927 648.649292,640.292603 649.373230,640.695435  C649.634216,640.840637 649.811890,641.562744 649.685608,641.889343  C649.409241,642.604065 648.852783,642.670044 648.245972,641.778259  z\"})),_path1395||(_path1395=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M741.995117,661.003540  C742.194946,660.016541 742.429688,659.027832 743.786987,659.276978  C744.036316,659.322693 744.425537,659.659119 744.422119,659.855652  C744.401489,661.049133 743.400940,660.838013 742.326050,660.998840  C741.992676,661.009766 742.000000,661.000000 741.995117,661.003540  z\"})),_path1396||(_path1396=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M639.955383,635.551025  C639.283142,635.182068 639.275208,634.811035 639.755676,634.483459  C639.856262,634.414795 640.089355,634.417480 640.187256,634.489014  C640.655884,634.830750 640.638733,635.201477 639.955383,635.551025  z\"})),_path1397||(_path1397=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M621.109558,692.650513  C621.085205,693.435120 621.092346,693.854248 621.115234,694.587524  C623.249268,698.137878 620.373901,701.276672 620.888062,704.858154  C617.222534,707.537170 614.063293,705.730957 612.652954,700.660156  C612.022400,698.392944 612.661072,695.085022 608.354370,695.462830  C607.602478,695.839355 607.138611,695.977905 606.284912,696.093872  C605.402893,696.081055 604.917419,695.959717 604.141235,695.541992  C602.248779,692.873474 604.040710,691.371460 605.364929,689.674805  C608.442078,685.732300 613.191223,683.464111 616.067688,678.813477  C618.157227,676.448792 619.604065,674.164856 620.551514,671.504700  C621.332458,669.312134 622.600769,667.400940 625.707886,667.428833  C628.000977,668.834717 627.578369,670.408936 626.966309,672.337463  C625.018616,678.474548 623.731750,684.815491 621.279724,690.803284  C621.102417,691.236023 621.207520,691.790405 621.109558,692.650513  z\"})),_path1398||(_path1398=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M621.427246,692.971802  C618.629150,691.825684 618.775269,690.082275 620.037354,688.107971  C623.848877,682.145508 624.179749,675.084656 626.086792,668.246338  C625.424988,667.320190 625.017822,666.639893 624.846741,665.420654  C624.926758,663.879639 625.368713,662.932678 626.739990,662.181030  C628.003540,661.645691 628.876282,661.215881 629.945801,660.933838  C630.401917,663.125610 630.661133,665.169556 630.924438,667.614075  C630.293335,668.475647 630.059265,669.016113 630.804688,669.855591  C630.991821,670.446777 630.967163,670.891052 630.893738,671.665955  C627.265747,672.699463 626.783142,675.272522 627.100708,678.698608  C627.399963,680.183472 627.640686,681.263306 627.914673,682.678711  C625.924194,684.675903 626.429077,687.240051 625.633545,689.330566  C624.989624,691.022766 623.600769,692.304382 621.427246,692.971802  z\"})),_path1399||(_path1399=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M619.723999,706.218506  C619.610474,702.488525 620.598816,699.152405 621.087219,695.330078  C623.098389,695.356323 623.225403,696.955078 622.942871,698.398376  C621.643860,705.036316 620.903687,711.694275 621.355164,718.745972  C618.362915,720.132263 616.425476,722.926941 612.763916,722.698425  C610.519897,721.124451 611.350891,719.393738 612.612366,718.432434  C615.877930,715.943848 615.843689,713.057495 614.354248,709.407104  C615.014221,706.109497 618.183838,708.136108 619.723999,706.218506  z\"})),_path1400||(_path1400=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M611.657104,721.918579  C615.129700,722.011902 617.096741,718.779724 620.704102,719.031616  C619.936707,720.916382 618.774536,722.798584 617.323120,724.850403  C616.137024,725.851196 615.270325,726.712280 614.259644,727.857788  C614.073303,728.099915 614.059387,728.553223 614.041748,728.779297  C613.456604,729.518433 612.934509,730.076599 612.220947,730.847534  C611.901917,731.368408 611.699585,731.614319 611.213135,731.916626  C610.538879,731.729675 610.076721,731.427002 609.328064,731.101135  C608.295776,731.144836 607.624268,730.948364 606.796204,730.232056  C606.409180,729.511841 606.338562,729.055664 606.491089,728.261841  C607.629272,726.612793 609.619324,726.041870 609.819092,723.656616  C610.218384,722.677551 610.642456,722.143250 611.657104,721.918579  z\"})),_path1401||(_path1401=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M614.402649,728.032349  C614.054016,726.510986 614.725403,725.442566 616.688599,725.053833  C616.944763,726.531738 616.234558,727.557983 614.402649,728.032349  z\"})),_path1402||(_path1402=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M612.342041,730.990295  C612.091797,730.141907 612.352844,729.359314 613.702515,729.055176  C613.940857,729.911255 613.614441,730.642578 612.342041,730.990295  z\"})),_path1403||(_path1403=/*#__PURE__*/React.createElement(\"path\",{fill:\"#181819\",opacity:1,stroke:\"none\",d:\" M680.001221,675.248779  C680.110168,674.363831 680.183533,673.659424 680.982788,673.550537  C681.211243,673.519470 681.653870,673.809692 681.716736,674.032166  C681.982788,674.973511 681.544434,675.587769 680.319336,675.940552  C680.004883,675.995117 680.002441,675.497559 680.001221,675.248779  z\"})),_path1404||(_path1404=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M678.520752,678.534424  C678.479980,678.555908 678.561462,678.512878 678.520752,678.534424  z\"})),_path1405||(_path1405=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M625.537476,628.022461  C626.473145,628.267151 626.967773,628.522400 627.718567,628.886597  C627.904785,631.713501 626.614990,634.299744 627.112305,637.493530  C627.434814,638.357483 627.555237,638.852417 627.303345,639.742798  C627.111389,640.801697 627.100830,641.511658 627.099243,642.576660  C628.283569,647.517395 627.367798,652.015320 626.242432,656.826965  C625.421509,657.401062 624.876465,657.452209 623.973022,657.043457  C623.285522,656.377441 623.017273,655.906616 622.739075,655.003662  C622.537659,653.849670 622.356628,653.098267 621.988525,652.001343  C621.641235,650.386780 621.653809,649.144104 622.065979,647.558472  C622.813171,645.967468 623.759827,644.832703 623.529724,642.927551  C623.396545,641.560364 623.409302,640.557434 623.518555,639.159058  C623.528625,638.222900 623.524170,637.682007 623.480530,636.720215  C623.348450,633.414368 622.695679,630.419250 625.537476,628.022461  z\"})),_path1406||(_path1406=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M624.851257,657.330811  C627.110718,652.813660 625.064453,648.013306 627.056274,643.355530  C631.111694,646.731750 628.347229,651.048279 628.029846,655.596069  C627.848755,656.872620 627.680420,657.730286 627.263367,658.808594  C626.593750,659.390625 626.107666,659.540527 625.199707,659.307556  C624.559082,658.664978 624.472229,658.159973 624.851257,657.330811  z\"})),_path1407||(_path1407=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M627.461548,640.068848  C627.094910,639.606567 627.067810,639.121521 627.081848,638.272827  C627.572876,637.934631 628.022766,637.960022 628.814270,638.000854  C629.141052,638.453308 629.126282,638.890320 629.141235,639.654358  C628.714355,640.002869 628.257751,640.024414 627.461548,640.068848  z\"})),_path1408||(_path1408=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M624.694275,659.154724  C625.496216,658.950256 625.930054,658.969727 626.689209,659.009277  C627.028076,659.790588 627.041565,660.551941 627.092957,661.694336  C626.777283,662.841614 626.423706,663.607666 626.008301,664.685303  C621.733032,664.183472 622.825867,661.839783 624.694275,659.154724  z\"})),_path1409||(_path1409=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M556.075684,851.245300  C559.825928,849.732178 557.974731,845.277710 560.662781,843.131348  C561.598572,843.865906 562.443970,843.980469 563.670715,843.994995  C564.182922,845.598755 563.501831,847.343323 564.840759,848.726929  C566.027588,849.953125 569.501221,850.514709 567.127686,852.943237  C564.564758,855.565430 561.540161,858.258423 557.300354,857.732056  C556.050781,857.576904 555.994263,856.365173 556.397888,855.364502  C556.927612,854.051147 557.020081,852.813965 556.075684,851.245300  z\"})),_path1410||(_path1410=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M571.794556,809.301758  C575.155151,807.715332 578.180054,806.353821 575.962646,801.798340  C578.164795,801.416687 579.422852,803.724854 581.311890,802.794250  C582.390503,802.262695 583.729980,801.979126 583.863281,803.798523  C583.983826,805.443848 583.367126,806.338074 581.376953,806.675964  C576.937866,807.429565 575.060547,811.264343 576.861206,815.713989  C576.266602,816.003540 575.527588,816.007080 574.420654,816.018677  C573.936890,814.344360 574.329468,812.505676 572.290161,811.135254  C571.642029,810.563232 571.502502,810.118408 571.794556,809.301758  z\"})),_path1411||(_path1411=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M563.996338,843.995483  C564.288330,843.503662 564.583984,843.016357 564.879639,842.529053  C565.078430,842.699158 565.277161,842.869263 565.475952,843.039368  C565.166992,843.333252 564.857971,843.627136 564.278137,843.964172  C564.007324,844.007324 564.000000,844.000000 563.996338,843.995483  z\"})),_path1412||(_path1412=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M551.216370,852.959961  C550.957092,852.941284 550.982727,852.467957 550.993774,852.231201  C551.327026,852.096924 551.586853,852.285400 551.889648,852.779907  C551.822021,852.992859 551.648865,852.985779 551.216370,852.959961  z\"})),_path1413||(_path1413=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M497.121643,955.843506  C495.112030,954.776672 493.353699,953.529175 491.311157,952.121338  C491.029205,951.535950 491.031525,951.110962 491.040649,950.367065  C491.756989,948.986511 492.109222,947.637207 493.761475,947.022339  C495.803101,947.126404 497.659271,946.614441 499.181732,947.834351  C499.095276,948.281677 499.083527,948.802429 498.978027,948.822266  C494.616913,949.638672 493.771698,951.337585 497.494019,954.344116  C497.684479,954.497986 497.423676,955.210571 497.121643,955.843506  z\"})),_path1414||(_path1414=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M494.068420,946.640808  C493.342773,948.003784 493.120270,949.459839 491.362915,949.985962  C490.558716,949.717896 490.070007,949.387634 489.276978,949.021851  C489.265045,947.145020 489.986053,945.524902 491.695435,944.088928  C492.725555,943.532532 493.293610,943.850403 493.952240,944.684448  C494.079956,945.437927 494.067108,945.875427 494.068420,946.640808  z\"})),_path1415||(_path1415=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M492.357239,943.264893  C492.508331,941.781006 490.702911,938.852356 494.611755,939.870483  C495.143280,940.776917 495.377899,941.557495 495.755615,942.611938  C494.991486,943.872131 493.909485,943.911743 492.357239,943.264893  z\"})),_path1416||(_path1416=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M491.978882,943.273438  C493.024597,943.024292 494.073242,942.987854 495.510315,942.918640  C495.939423,943.810364 495.737427,944.592346 494.405701,944.947388  C493.565338,944.729858 493.037842,944.459351 492.246857,944.050293  C491.983368,943.911743 491.981812,943.486206 491.978882,943.273438  z\"})),_path1417||(_path1417=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D99D7B\",opacity:1,stroke:\"none\",d:\" M491.309509,883.711304  C487.293732,882.936340 490.066284,879.386902 488.212891,877.236572  C487.623413,875.238953 487.314209,873.510742 487.007996,871.398315  C488.713470,869.554565 486.901978,868.113647 486.958862,866.326538  C486.933167,865.559998 486.936646,865.129639 486.942505,864.376465  C485.705627,862.780640 486.022034,861.003601 485.233582,859.256104  C484.995117,859.004883 484.984406,858.510681 484.981995,858.263550  C481.640228,848.513550 479.020721,839.100281 478.302612,828.732727  C477.800049,821.476868 476.404053,813.475098 473.300690,806.240601  C471.549957,802.159302 470.976196,797.568176 470.970398,792.767273  C475.267456,790.389954 477.125946,785.523254 476.019287,779.288574  C475.585297,776.843628 475.240082,774.317383 474.363708,772.004517  C471.389923,764.156677 474.683228,758.229858 480.263550,752.744995  C482.443451,753.515198 483.544403,755.232056 485.401062,756.611450  C487.066101,759.390259 488.318756,761.952576 488.972839,765.182739  C489.734680,774.278503 487.332642,783.087158 490.311035,791.741821  C491.260376,794.500305 490.819794,797.680786 490.179413,801.070312  C486.419983,806.464478 486.234802,811.969482 486.493713,817.997253  C486.999969,829.781799 488.363312,841.380798 490.153839,853.035217  C491.222443,859.990540 493.117889,866.968933 492.711243,874.151855  C492.534973,877.265137 493.248169,880.476074 491.309509,883.711304  z\"})),_path1418||(_path1418=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M467.769531,807.147949  C468.324799,807.130615 468.839203,807.335388 468.828430,807.507019  C468.272461,816.343811 475.391113,823.916992 473.016571,833.081421  C472.620392,834.610413 471.709167,835.720703 470.989044,836.992859  C469.817169,839.063110 467.582733,840.410095 472.333160,841.843872  C475.029816,842.657654 476.398499,847.775330 478.435577,850.908936  C479.566681,852.648987 481.510376,854.055725 480.176208,856.768799  C476.920532,856.503540 476.049530,853.270447 473.307556,851.904663  C471.563690,850.217346 469.664520,849.711609 467.727264,849.164062  C464.382904,848.218811 461.987152,845.823425 460.006866,843.166870  C458.267914,840.834167 456.601440,839.906067 453.740021,841.252075  C449.636169,843.182739 446.433746,841.096130 443.411713,838.468506  C442.085571,837.315369 441.669373,836.380493 442.743591,834.712280  C444.922211,831.328918 444.417511,828.521729 440.920197,826.005432  C436.491669,822.819153 436.723907,822.604309 440.835663,818.837402  C442.119019,817.661682 440.261292,815.912537 440.627869,814.029541  C440.660309,813.449097 440.687836,813.218506 440.800354,812.651306  C441.052490,811.888245 441.267944,811.488403 441.781647,810.890991  C442.329529,810.405579 442.898712,810.412415 443.015564,810.051453  C443.218079,809.425964 443.177368,810.209961 442.405334,809.609985  C442.135803,809.131226 442.060791,808.919495 441.944519,808.368286  C443.583069,803.982910 448.864014,801.392517 452.146393,803.004456  C456.614563,805.198792 457.872101,809.308655 454.981232,813.780701  C452.265930,817.981140 449.180908,821.914001 450.493713,827.113770  C451.769806,824.830322 451.769806,824.830322 452.136169,820.975159  C452.351379,820.425659 452.470032,820.219482 452.868896,819.792480  C456.905365,819.196838 458.642975,821.606567 459.405426,824.645996  C460.546570,829.195251 463.686279,825.283020 465.750427,826.259033  C466.783234,826.747375 469.417938,825.953430 468.970154,823.605469  C468.545593,821.379272 467.185455,819.989197 464.463562,819.859680  C459.477844,819.622437 457.232391,816.788574 458.139771,812.630859  C458.522797,810.876038 460.060272,809.392151 461.198730,810.298523  C465.686676,813.871521 466.061615,809.701477 467.769531,807.147949  z\"})),_path1419||(_path1419=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M488.040405,926.581787  C486.729553,927.631897 485.820251,928.648987 486.103424,930.103821  C487.106659,935.257446 483.543549,940.139832 485.241669,945.335388  C485.323853,945.586792 484.689758,946.072205 484.214600,946.722168  C484.076355,947.952637 484.197906,948.919128 483.549561,950.129761  C480.757874,953.223877 476.843567,953.900696 473.639221,956.379761  C470.932983,956.350891 470.374664,954.630127 470.625702,952.786316  C470.892303,950.828735 469.814819,949.830994 468.548096,948.410461  C466.855438,945.197693 467.831818,942.003784 467.615479,939.000610  C467.411682,936.171448 471.496338,937.163269 472.847900,935.033386  C470.361237,935.607727 467.985626,935.948303 465.636505,934.019775  C465.116089,932.901794 465.370483,932.096252 465.426178,931.283752  C465.644989,928.090698 464.791229,924.334534 469.041321,923.038635  C473.072998,921.809265 476.479614,923.038635 479.261597,926.631775  C479.506622,927.252747 479.592010,927.591309 479.807922,927.809753  C480.196167,925.794312 479.431427,923.957031 479.750061,921.738037  C479.829926,921.190247 479.875244,920.973083 480.014221,920.442261  C480.605896,919.029419 480.646393,918.134827 478.812073,917.823608  C478.304230,917.590393 478.112579,917.470398 477.715729,917.078308  C477.444550,916.588379 477.378601,916.370483 477.309113,915.813110  C477.358124,915.256042 477.410736,915.038391 477.603577,914.520020  C478.725739,912.600952 479.717926,910.988098 480.361389,908.915283  C480.252808,908.409851 480.198914,908.207214 480.056335,907.693542  C479.913666,907.167847 479.859711,906.953125 479.739075,906.406860  C479.264557,903.321960 479.021423,900.537231 479.171295,897.773071  C479.398376,893.584534 481.969391,891.165039 485.785522,891.691284  C488.003448,901.847290 488.244720,911.893433 488.903748,921.893372  C488.996948,923.307495 488.382019,924.768372 488.040405,926.581787  z\"})),_path1420||(_path1420=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M453.335388,820.045166  C453.951447,823.211121 453.395264,826.204590 452.089905,829.180847  C451.538483,830.438049 450.816345,831.163025 449.466644,830.795654  C447.886383,830.365540 448.543976,829.132568 448.438751,827.996399  C447.849487,821.634399 451.054474,816.675903 454.381042,811.867554  C456.124207,809.347900 455.622681,807.505249 453.620392,805.931458  C451.973602,804.637024 450.504669,801.414490 447.670929,805.036255  C446.607544,806.395386 442.774475,804.563293 442.937805,808.703735  C440.148193,808.265503 439.753845,807.619995 440.919220,804.955322  C441.895660,802.722717 443.537140,800.832703 442.941620,798.021362  C442.573181,796.282043 444.312225,795.972656 445.651947,795.960999  C447.475891,795.945251 449.258301,796.403992 451.378540,796.907227  C453.229462,797.700134 454.547211,798.732910 456.049347,799.425110  C456.765106,799.754883 457.749603,800.624817 458.297852,799.926270  C462.092773,795.090637 464.015350,799.282104 466.600586,801.740967  C468.394958,803.054138 467.892426,804.702332 468.040894,806.555176  C468.038879,809.604614 468.298767,812.268982 464.994751,813.561096  C462.554993,814.515259 462.540344,814.747070 462.001465,811.906372  C461.866943,811.197327 461.624573,811.105164 461.178802,811.090576  C460.325348,811.062622 459.562836,811.211914 459.224609,812.216858  C457.973999,815.932922 461.087555,820.029358 464.492554,818.434692  C468.407288,816.601257 468.408478,819.843872 469.601654,821.270264  C470.627838,822.497070 472.360504,824.717651 471.070587,825.869263  C469.397247,827.363159 465.859863,829.064270 464.604736,828.286865  C461.287811,826.232422 460.273621,828.672729 458.124084,831.177734  C458.316071,826.076965 458.774689,821.740784 453.335388,820.045166  z\"})),_path1421||(_path1421=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M485.979797,891.616272  C481.531555,891.650940 480.851471,894.986755 480.554962,898.104370  C480.298798,900.797791 480.836792,903.566772 481.025055,906.666992  C480.890503,907.188110 480.754608,907.344482 480.819153,907.738403  C481.019623,907.975952 481.017365,908.000854 481.028381,907.992676  C479.382904,911.603149 477.856049,910.062256 476.505035,907.801453  C475.158386,905.547791 475.640808,902.134766 472.243225,901.179749  C471.929230,901.091431 471.663147,900.592712 471.825928,900.360779  C473.786224,897.569092 470.629547,895.132385 470.906158,893.411926  C471.520966,889.587402 468.756805,887.289551 468.466553,883.787781  C468.638458,882.382690 469.458618,881.556763 469.529053,880.165894  C469.444855,879.654785 469.409210,879.449341 469.338562,878.931091  C469.299713,877.554993 469.205536,876.501770 468.881653,875.133179  C468.481171,871.521423 469.521637,868.701233 471.883057,865.979126  C473.387543,864.542114 474.767670,863.918030 476.498779,864.914673  C475.765594,863.414185 475.557739,861.835999 476.072876,859.862183  C476.321411,859.326416 476.451508,859.124390 476.869934,858.699341  C477.872498,858.184570 478.584106,858.181091 479.591492,858.714294  C481.798370,862.296875 483.883331,865.592590 478.980194,868.419922  C477.737671,869.136292 478.756287,870.414001 479.663147,870.581421  C484.612640,871.494873 482.750336,876.054626 481.704407,877.094849  C478.742188,880.040894 479.759766,883.054932 480.000000,886.610962  C482.263763,888.046875 485.162476,888.180420 485.979797,891.616272  z\"})),_path1422||(_path1422=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M472.173218,792.656494  C472.027771,799.178711 473.387115,805.138184 476.277924,810.496643  C477.569611,812.890991 478.068146,814.894592 477.751648,817.474243  C477.393890,820.389771 477.250214,823.378540 479.863770,825.648682  C480.421509,826.133179 481.031586,827.236267 480.844238,827.795105  C478.934082,833.493225 481.328796,838.832886 481.780518,844.344666  C482.156952,848.937866 485.815704,852.474976 484.989838,857.600586  C484.470245,857.599426 483.654297,857.274292 483.497711,856.751587  C481.262329,849.290222 475.955017,842.855164 476.879852,834.291077  C477.542786,828.152344 475.316437,822.229065 473.765472,816.285950  C472.480621,811.362610 471.772217,806.273071 471.069275,801.220947  C470.770355,799.072388 470.616791,797.202515 467.575745,796.927246  C466.786835,796.657104 466.523865,796.297119 466.340027,795.497925  C466.661499,791.697021 463.085602,789.589233 463.259827,785.844910  C464.280243,782.570923 462.288330,777.577637 468.701965,778.392273  C470.454987,783.073853 471.140350,787.752625 472.173218,792.656494  z\"})),_path1423||(_path1423=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M466.927124,794.712036  C467.065155,795.454407 467.079285,795.871704 467.145386,796.596924  C467.113434,798.320496 467.029480,799.736206 466.890381,801.573120  C465.412476,802.064697 464.496521,801.397644 463.510406,800.342896  C462.287720,799.035278 460.358093,796.762756 459.947388,801.024536  C459.793640,802.620117 458.992065,802.995178 457.628937,802.088074  C455.868774,800.916748 454.097321,799.762451 452.164124,798.302856  C451.873260,797.806091 451.748993,797.607361 451.761261,797.085327  C457.379364,797.122620 456.976013,792.513733 458.472595,789.048828  C459.679535,788.343262 460.596802,788.573547 461.826904,789.080200  C463.983246,790.698730 465.210022,792.708801 466.927124,794.712036  z\"})),_path1424||(_path1424=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M479.909363,858.607178  C479.168579,858.951355 478.446899,858.970520 477.362610,858.994873  C477.016205,863.644043 477.016205,863.644043 479.016266,866.166504  C477.111664,866.959656 475.490417,864.212036 473.281586,865.874573  C471.484283,866.563354 470.895264,865.524109 470.390228,864.464661  C469.953461,863.548340 470.536560,862.379639 470.039825,861.567139  C467.103516,856.764282 469.174866,853.695801 473.725769,851.141479  C476.134613,852.533203 478.865143,853.481079 479.673401,856.754089  C479.916260,857.412292 479.922363,857.847229 479.909363,858.607178  z\"})),_path1425||(_path1425=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M486.690613,866.219849  C488.099030,867.483276 490.310547,868.819153 487.338989,870.950073  C487.052094,869.464539 485.467285,868.114319 486.690613,866.219849  z\"})),_path1426||(_path1426=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M484.988739,859.396851  C487.510468,859.629211 486.418213,861.886719 486.963562,863.723999  C484.362457,863.519409 485.151703,861.433594 484.988739,859.396851  z\"})),_path1427||(_path1427=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M571.992188,808.630859  C571.995789,809.430481 571.991516,809.865784 571.981628,810.626587  C568.415527,813.577759 566.304749,816.996948 565.876343,821.483459  C565.650513,823.847778 564.150879,825.334534 561.469604,825.979370  C559.148621,823.687317 561.582458,822.537903 562.525574,821.019836  C563.524780,819.411621 565.754883,817.917175 564.005554,815.881958  C562.293945,813.890686 560.842712,816.429321 559.232300,816.775513  C553.958679,817.909119 555.805786,823.646240 552.827881,826.280090  C551.517639,827.438965 551.014160,829.469238 549.264221,830.320557  C547.862610,831.002380 548.364502,831.246826 548.975281,832.534119  C550.124756,834.956787 547.758423,836.483765 545.815979,837.307068  C543.918396,838.111389 544.009949,836.507690 544.409241,835.340271  C545.038940,833.498718 545.418274,831.781860 543.318115,830.173462  C541.470093,828.749084 542.188782,826.782227 541.382080,824.955811  C540.825623,822.701599 541.880981,821.522644 543.301025,820.465149  C546.616760,817.995911 548.669006,814.618591 551.035400,811.270691  C553.852966,807.284424 549.395386,804.592896 551.331482,801.166321  C552.425537,799.544434 553.757202,798.978638 555.643066,798.872437  C556.167664,798.978577 556.334167,798.985107 556.750732,798.996582  C557.975342,800.812805 558.525269,803.080078 561.633789,802.990845  C562.881348,803.096741 563.650818,803.364685 563.951782,804.676025  C563.928955,805.621155 564.125916,806.151428 564.805054,806.791199  C565.939575,807.272278 567.028137,807.987000 567.744690,807.716370  C568.909912,807.276489 567.695801,806.453491 567.546570,805.776611  C567.168274,804.060364 568.195496,804.266174 569.211487,804.652283  C570.859192,805.278503 572.047974,806.304626 571.992188,808.630859  z\"})),_path1428||(_path1428=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M560.678406,828.056091  C561.065857,833.038452 557.008423,836.369812 555.408203,840.935669  C554.474792,835.753357 556.064514,831.375671 560.678406,828.056091  z\"})),_path1429||(_path1429=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M541.651611,824.883911  C544.855469,825.848755 542.247498,827.959717 543.004761,829.642090  C542.559570,829.991333 542.111877,829.992432 541.328369,829.992737  C540.117737,829.413696 539.538330,828.632446 539.338501,827.210571  C539.577393,825.755371 540.216431,825.054932 541.651611,824.883911  z\"})),_path1430||(_path1430=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M539.687256,826.782166  C540.309265,827.798218 540.623352,828.579407 540.965088,829.676208  C540.095093,830.332275 540.930847,832.004578 539.264404,831.945068  C538.412415,831.470886 538.024841,830.829773 537.671875,829.834229  C537.535156,829.189575 537.470459,828.817383 537.213806,828.226685  C537.082703,827.663574 537.239380,827.383911 537.723572,827.050781  C538.361938,826.591492 538.841797,826.462280 539.687256,826.782166  z\"})),_path1431||(_path1431=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M537.742554,828.819092  C538.305664,829.778076 538.625244,830.554688 538.986938,831.643188  C538.526611,831.959778 538.024170,831.964478 537.141296,831.945557  C536.822937,831.192078 536.885010,830.462280 536.979126,829.366699  C537.173706,828.879517 537.336304,828.758057 537.742554,828.819092  z\"})),_path1432||(_path1432=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EDAE90\",opacity:1,stroke:\"none\",d:\" M506.665436,895.922974  C506.361603,897.111267 505.715240,898.226929 505.014404,899.664124  C501.206238,900.591370 497.044800,897.798462 495.964294,892.991516  C493.743958,883.113586 492.141876,873.120911 492.797821,862.905518  C493.254089,855.799622 493.151672,848.821838 491.544739,841.708496  C490.409058,836.681519 489.790741,831.305603 490.067352,825.614868  C493.845459,820.735352 497.149048,815.981384 501.884521,812.427002  C505.050964,810.050232 508.243225,808.224365 512.307312,808.446167  C515.657837,808.628967 518.249146,807.677429 520.448120,804.789917  C525.024292,798.780823 532.339783,797.975342 538.959351,796.103760  C541.469604,795.393921 542.778381,796.943970 542.712341,799.847168  C542.604309,804.593628 538.990845,807.880981 538.012329,812.611877  C536.528748,818.756042 534.873901,824.365967 531.527100,829.460815  C529.689148,832.258606 529.045532,835.816101 527.661377,838.941650  C523.506470,848.324341 520.402832,858.123596 516.466187,867.564758  C512.978577,875.929016 511.682343,885.288757 505.627197,892.558899  C504.679474,893.696838 504.732483,895.039978 506.665436,895.922974  z\"})),_path1433||(_path1433=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EAA585\",opacity:1,stroke:\"none\",d:\" M538.262024,812.794617  C536.459045,810.097412 537.917603,807.696655 539.425110,805.405090  C539.951904,804.604431 541.108337,804.054993 540.900208,802.977112  C540.529907,801.059570 542.606506,798.807068 540.842712,797.414124  C539.269714,796.171875 537.436707,797.890320 535.798401,798.604797  C531.691406,800.395813 526.616516,799.978088 523.479248,803.995850  C523.394409,804.104492 523.076538,804.061523 523.028687,804.164368  C520.008240,810.658020 514.020813,809.293152 508.527893,810.424622  C503.163300,811.529785 499.077118,816.198792 495.690704,820.749756  C494.513916,822.331238 493.895416,824.342102 491.351471,824.955444  C487.632935,822.513733 488.417053,819.186646 489.310089,815.954224  C490.626282,811.190247 490.743896,806.463867 489.199066,801.351501  C489.082367,795.216797 489.340698,789.411560 486.559723,784.041077  C486.409729,783.751343 486.173676,783.366943 486.255035,783.117004  C488.107330,777.426270 486.795624,771.481018 487.841949,765.356201  C491.024384,761.283569 494.636993,759.614441 499.695740,759.893616  C504.409973,760.153809 509.247314,759.659058 513.845032,757.745056  C519.145142,755.538696 523.086365,758.083313 524.494568,763.816895  C526.431152,771.701965 530.384277,778.780273 533.808777,786.062500  C534.384521,787.286865 535.639709,787.373474 536.756592,787.642029  C539.530396,788.308838 542.347778,788.339050 545.575073,788.233154  C548.501831,789.281860 548.512085,791.599731 548.820862,794.166809  C548.725342,794.846191 548.646667,795.111328 548.312012,795.702881  C545.131348,797.029724 544.557373,799.840271 543.915405,802.191467  C542.847290,806.103638 540.926758,809.435181 538.262024,812.794617  z\"})),_path1434||(_path1434=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M548.058228,796.424927  C548.056091,796.029297 548.119385,795.607971 548.131775,795.395264  C548.960815,793.659302 549.932190,792.251282 551.492432,790.905640  C551.996094,790.720764 552.214478,790.699524 552.712402,790.852173  C553.221863,792.112671 553.451782,793.199402 553.820435,794.589966  C553.959290,794.893860 553.914124,795.368164 553.893066,795.605469  C552.667297,797.110168 552.230103,798.683533 552.039917,800.678467  C551.239441,804.727173 553.369934,806.835693 557.579712,808.746399  C552.843384,809.633789 550.571899,810.793335 551.361450,815.578308  C551.632385,817.219971 546.724243,819.855164 544.000488,821.779297  C543.003662,822.483521 542.017639,822.888550 542.022949,824.632629  C541.422791,825.493835 540.835754,825.990112 540.121948,826.751709  C539.538452,827.007202 539.081726,826.997314 538.282471,826.961304  C541.629333,818.205566 544.372864,809.146301 547.259521,800.137817  C547.605713,799.057495 547.797119,797.927551 548.058228,796.424927  z\"})),_path1435||(_path1435=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M537.883667,828.787476  C537.986145,829.001526 537.498535,829.004761 537.254883,829.002808  C537.011169,829.000916 537.001099,828.502502 537.019165,828.254028  C537.345520,828.115906 537.593506,828.305176 537.883667,828.787476  z\"})),_path1436||(_path1436=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DBA58B\",opacity:1,stroke:\"none\",d:\" M488.837372,801.305054  C491.662994,801.262085 492.074585,803.107971 491.993713,805.283875  C491.841522,809.379639 492.566620,813.524109 490.445038,817.455017  C489.296661,819.582642 490.057526,821.996704 490.946533,824.605591  C492.841431,831.713806 492.480865,838.721924 494.260162,845.574585  C495.612030,850.781067 495.804626,856.918152 494.596985,862.606262  C493.753601,866.578857 494.114105,870.376770 494.820648,874.369629  C495.724762,879.479309 496.134674,884.697571 496.812775,889.861694  C497.482574,894.962402 500.388611,897.624207 504.603455,899.978271  C505.121857,902.297546 504.068268,904.296326 503.167175,906.708130  C501.630768,907.564270 500.964874,908.763184 500.573029,910.023071  C499.413055,913.753052 498.377594,915.116272 495.879181,910.632446  C494.303894,907.805298 493.953400,905.457947 494.143799,902.131653  C494.328583,898.902832 493.511200,894.971802 492.181519,891.627686  C491.290283,889.386292 490.893433,887.199341 490.989716,884.428284  C490.553833,876.150757 490.309570,868.368042 489.240448,860.469727  C487.339508,846.426270 483.691956,832.397278 485.034210,818.002991  C485.283630,815.328308 483.706024,812.980591 484.331329,810.180237  C485.070801,806.868652 485.963348,803.834534 488.837372,801.305054  z\"})),_path1437||(_path1437=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M488.586029,949.885742  C489.257355,952.257690 488.808563,954.340942 486.223572,955.853882  C483.116486,955.986694 482.876953,954.044556 482.943329,951.542297  C483.168793,950.881531 483.289886,950.629089 483.653809,950.034790  C484.671844,949.217163 485.474304,949.228882 486.647278,949.779541  C487.423431,949.973694 487.846893,949.947327 488.586029,949.885742  z\"})),_path1438||(_path1438=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M486.860840,949.725830  C486.309692,950.028137 485.619415,950.056213 484.583893,950.066406  C484.110657,950.162903 483.982666,950.277405 483.429932,950.197632  C483.179077,949.144043 483.352936,948.284668 483.783386,947.210449  C484.933868,947.814270 485.827789,948.632996 486.860840,949.725830  z\"})),_path1439||(_path1439=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M833.320557,845.941284  C833.168823,845.124512 832.661682,843.957397 833.978638,843.587341  C834.165588,843.534912 834.610718,843.827454 834.684570,844.045532  C835.007935,845.000183 834.507019,845.562500 833.320557,845.941284  z\"})),_path1440||(_path1440=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M564.985107,806.705688  C564.135010,806.843994 562.960571,807.344971 562.588501,806.062134  C562.523865,805.839355 563.112854,805.426880 563.702393,805.046143  C564.320679,805.463989 564.636414,805.937683 564.985107,806.705688  z\"})),_path1441||(_path1441=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M575.875488,785.302856  C576.815552,785.843872 578.538086,784.871704 578.979492,786.739014  C578.831055,788.319397 578.192688,789.200073 576.766296,788.703613  C575.225464,788.167297 574.977295,787.005859 575.875488,785.302856  z\"})),_path1442||(_path1442=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M574.933289,768.609436  C571.515808,768.856140 570.749207,772.379089 568.388123,773.796448  C567.190002,774.515686 566.479492,776.062012 564.387329,776.013855  C561.790649,772.495850 564.364197,770.015930 566.142883,767.617493  C567.842102,765.326355 568.801697,763.561829 567.448914,760.495300  C566.049255,757.322266 566.725464,753.643311 567.555298,749.839233  C567.737854,748.156616 568.269409,746.840454 568.015442,745.532959  C566.268921,736.538452 570.126099,728.991699 574.252075,721.564392  C575.792297,718.791748 576.878113,715.960266 577.809143,712.917542  C579.950684,705.919067 583.697632,699.980957 591.450684,697.135376  C593.522156,696.090332 595.295471,695.527954 597.582092,696.377075  C598.999268,697.891418 598.453735,698.985779 597.168884,700.254883  C595.906372,701.173218 594.740356,701.534241 593.550720,702.529724  C589.366455,705.159363 585.515259,707.628296 584.386780,712.928711  C584.264099,713.733459 584.158142,714.186340 583.927124,714.968018  C583.168396,717.007629 582.613464,718.749695 582.666931,720.595459  C582.834106,726.375916 581.416931,731.809631 580.253967,737.437927  C578.789734,744.523438 575.926514,751.568726 576.435242,759.083435  C576.602356,761.552673 576.290222,764.042664 575.077148,766.672852  C574.961365,767.430176 574.956177,767.859375 574.933289,768.609436  z\"})),_path1443||(_path1443=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M575.258057,767.132263  C574.949646,759.214478 574.238525,751.338196 577.940552,744.032776  C578.229980,743.461670 578.903992,742.592102 578.728394,742.352173  C575.709839,738.227112 579.219116,735.458252 580.705322,732.263672  C582.269409,728.901611 581.324097,725.246582 581.024231,721.933838  C580.781128,719.248108 581.684143,717.321289 582.637085,715.042969  C584.952454,713.750305 585.670532,715.380920 586.747681,716.940735  C587.695923,719.797974 589.333130,721.462585 591.771240,722.522217  C593.303650,723.188354 594.816467,724.285522 594.424438,726.239136  C594.023499,728.237366 592.123108,729.692749 590.481750,729.391357  C584.572937,728.306213 586.855164,732.524109 586.654602,734.986572  C586.564453,736.093201 587.537415,737.079773 588.234009,738.413208  C588.398743,738.971619 588.425476,739.204590 588.360229,739.775513  C586.565979,741.409363 585.660278,743.108765 585.885010,745.261108  C586.158386,747.879456 585.210938,750.146362 583.888184,752.671997  C583.107178,753.886230 582.337036,754.711060 581.843933,756.099121  C580.408142,758.474487 579.784729,760.902039 578.264038,763.165771  C578.346863,764.107788 578.402222,764.736755 578.202820,765.654419  C578.475098,766.765686 578.887207,767.593018 579.349609,768.521301  C577.692444,768.800598 576.737122,767.696106 575.258057,767.132263  z\"})),_path1444||(_path1444=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M578.474121,765.954712  C577.741455,765.466614 577.419861,764.994812 576.966675,764.268921  C576.528198,761.542480 579.863403,762.049072 580.327393,759.764648  C583.876282,757.489258 586.491821,754.949036 587.094299,750.496216  C587.344299,749.956909 587.466919,749.748779 587.832153,749.265198  C592.120911,744.137878 597.772339,746.217468 603.070068,745.850586  C603.587158,746.603821 603.622864,747.102112 603.239258,747.938721  C600.615051,752.219299 595.192078,750.259460 592.429749,753.659363  C591.818848,754.411316 590.555542,754.201416 590.423157,755.908081  C589.914490,762.467224 585.855591,765.845459 578.474121,765.954712  z\"})),_path1445||(_path1445=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M603.382812,748.201233  C603.002747,747.747803 602.981323,747.233337 602.944824,746.335327  C603.078552,745.842834 603.227356,745.733887 603.633606,745.726074  C604.784302,746.054871 605.677612,746.282593 606.807007,746.767700  C606.169800,748.069580 604.927002,748.020203 603.382812,748.201233  z\"})),_path1446||(_path1446=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M609.632446,743.097046  C609.968628,743.727600 609.967712,744.418457 609.948242,745.450684  C609.501282,745.853088 609.072937,745.914124 608.322266,746.017822  C608.075867,744.933960 607.843750,743.669983 609.632446,743.097046  z\"})),_path1447||(_path1447=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M568.744019,749.763550  C568.529724,754.173340 566.580505,758.401733 570.346375,762.240906  C571.863342,763.787415 570.239624,765.288330 569.043823,766.427734  C566.472839,768.877502 564.539917,771.663696 564.021729,775.645325  C563.756531,776.523010 563.493713,777.023621 563.113159,777.781616  C562.531433,778.744141 561.994507,779.328430 560.730530,778.953247  C559.369507,777.062622 559.379272,775.231323 559.535095,773.426941  C560.207214,765.643860 559.275574,757.992188 557.777100,749.995300  C559.419800,744.786316 558.474670,739.947998 557.792175,734.738159  C557.456665,732.534485 557.399597,730.712463 558.081543,728.546265  C560.938232,725.513245 562.668518,721.548523 567.606934,721.500977  C568.622803,722.197327 569.153687,723.060059 568.842896,723.784363  C566.104492,730.166809 568.091919,737.167542 566.196167,743.603882  C565.359131,746.445801 566.826843,747.906494 568.744019,749.763550  z\"})),_path1448||(_path1448=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M560.557434,778.883667  C561.473145,778.724731 561.974365,778.481628 562.735596,778.138794  C562.973633,779.062500 562.951721,780.085999 562.893311,781.488647  C560.822266,781.537598 561.303833,785.851807 558.261963,784.069336  C556.295654,781.212219 557.678833,779.777466 560.557434,778.883667  z\"})),_path1449||(_path1449=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M560.978943,778.531677  C559.329773,779.943054 557.979919,781.122192 557.978516,783.593384  C556.828796,785.513611 555.686646,787.087830 553.991516,788.507202  C552.458191,785.774292 554.127991,783.497070 554.273315,781.041077  C554.547607,776.405884 555.114990,771.795715 553.786865,767.184387  C553.280151,765.425049 553.964783,763.561584 554.618896,761.425659  C556.380859,757.088684 553.876343,752.702271 556.218140,748.477417  C557.217957,747.543457 557.920837,747.750183 558.800232,748.645752  C561.369385,758.578491 561.893250,768.288147 560.978943,778.531677  z\"})),_path1450||(_path1450=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M553.214111,790.828186  C552.824646,791.017700 552.657288,791.009399 552.239014,790.988220  C551.296265,789.631592 551.698853,788.834717 553.567383,788.766479  C553.949585,788.953430 553.960571,788.964172 553.960693,788.962585  C553.786011,789.517456 553.611145,790.073914 553.214111,790.828186  z\"})),_path1451||(_path1451=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M552.334839,800.954712  C548.575317,798.410706 550.508118,797.090271 553.533081,795.894653  C553.965454,797.038818 554.705017,797.805054 555.807007,798.715698  C554.886780,799.621094 553.772461,800.270142 552.334839,800.954712  z\"})),_path1452||(_path1452=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M603.923218,745.447510  C603.891052,745.827209 603.412720,745.902283 603.171265,745.927002  C600.044067,746.871582 597.353821,748.507263 594.039551,747.131653  C591.497253,746.076477 590.806763,749.528015 588.361145,749.938843  C586.594910,746.901001 586.880737,743.743713 587.767212,740.309814  C588.005188,739.874817 588.011292,739.698181 588.012695,739.256409  C591.154358,734.400818 596.691101,732.748840 600.482178,728.858276  C602.006165,727.294250 604.562927,728.149292 606.674744,729.870728  C607.563965,730.195190 608.123474,730.389282 608.862244,730.830688  C609.030273,731.515869 609.019104,731.953796 609.003906,732.721069  C608.618591,733.369629 608.179932,733.510254 607.377258,733.283081  C605.006714,735.244629 601.976868,735.139954 599.449341,736.113098  C593.084961,738.563477 592.974426,738.276367 598.105652,743.630920  C598.367188,737.499634 602.581116,738.487488 606.677734,738.311218  C606.146545,741.004700 602.984314,742.265381 603.923218,745.447510  z\"})),_path1453||(_path1453=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M607.051514,733.424316  C607.498962,733.079529 607.927368,733.065186 608.677856,733.050598  C608.881897,734.150452 609.290894,735.823792 607.916626,735.989929  C606.425049,736.170166 607.273071,734.558716 607.051514,733.424316  z\"})),_path1454||(_path1454=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M247.256317,682.757568  C245.583878,684.835388 245.577133,687.123352 245.000168,689.613831  C242.847504,691.329163 241.629044,690.536560 241.231369,688.249695  C240.953476,686.651672 241.242538,685.030579 241.421158,683.021912  C241.528870,679.955017 242.547287,677.552612 243.653046,674.797791  C244.462143,673.060791 245.744476,671.830688 244.944519,669.701599  C244.504929,667.427612 245.214874,665.616943 245.503479,663.409363  C245.315369,660.948853 245.690506,658.733032 242.002075,659.912903  C239.108368,660.838501 237.557098,658.462341 236.836090,655.838135  C235.959457,652.647522 235.713669,649.340942 235.112534,646.102234  C234.795929,644.396606 235.203079,642.416260 233.328522,641.022949  C232.832520,640.999878 232.663818,640.999695 232.242065,640.998535  C230.452179,639.476074 230.941345,637.624878 231.123901,635.810547  C231.523651,631.837585 232.196274,627.878784 231.738800,623.769653  C230.874771,626.881714 232.429520,631.943237 225.924072,630.411621  C222.716766,625.302490 223.059464,619.998596 223.978378,614.752869  C225.066299,608.542358 226.133179,602.354919 225.973740,596.020691  C225.940231,594.689270 226.056366,593.364380 226.653137,592.141357  C227.405457,590.599609 228.432495,589.074890 230.229065,589.059387  C232.159088,589.042664 231.973694,591.086975 232.601852,592.342529  C235.345673,597.826416 233.912567,604.055054 235.884644,610.040466  C236.492706,613.502197 237.491714,616.500183 237.991394,619.039612  C240.460251,611.054626 238.567902,602.036011 241.379852,593.387573  C242.941422,588.584778 242.002350,582.991394 241.574509,577.757690  C241.454193,576.285828 240.481033,575.403870 239.010712,574.494873  C237.580078,572.868958 237.742706,570.885315 236.329315,569.483398  C233.668304,566.843872 234.200439,563.617920 235.932648,560.833435  C237.730835,557.942688 238.429199,555.150757 238.608444,551.665527  C238.851791,546.934143 241.794388,542.744812 244.021454,538.127625  C247.808716,535.168884 249.793381,531.423706 251.313614,527.343445  C252.309296,524.671082 254.208633,522.945496 257.031647,524.292236  C260.072021,525.742615 258.525787,528.274353 257.501038,530.266541  C255.323914,534.499084 252.895538,538.590271 249.212769,541.951782  C252.481201,542.347961 253.658890,535.865234 258.013855,539.197510  C258.875824,541.583557 260.739166,539.574219 262.030518,540.678345  C263.272156,542.725647 263.055695,544.626709 262.462158,546.850159  C261.899567,547.487488 261.464081,547.784607 260.970398,547.813965  C254.083267,548.223755 253.967651,549.825439 252.312164,556.100342  C251.008255,561.042603 251.352203,565.181458 252.183243,569.830688  C252.605865,572.195007 251.416153,574.707825 250.463394,577.016846  C249.799057,578.626831 249.419434,580.167969 250.810486,582.006714  C251.479797,583.809875 251.526138,585.318787 251.279175,587.220947  C250.933655,588.824951 250.138412,589.812317 249.570099,591.288330  C246.074310,599.353821 246.509003,607.594727 245.804901,616.830200  C249.990021,610.975159 251.376740,605.260925 252.812653,599.179932  C254.092148,596.391602 255.069061,593.881409 255.522247,590.801636  C256.175354,583.816284 256.896606,577.235352 259.956635,570.796265  C262.488983,569.020264 263.675995,567.007935 264.031494,564.175354  C264.605225,559.603760 266.030090,555.123962 267.617981,550.874451  C269.483734,545.881226 268.031586,542.737671 263.922791,539.704834  C262.455566,537.470398 261.596039,535.249695 259.657959,533.302429  C258.801208,530.872009 259.640869,528.997864 260.683777,527.315369  C265.463715,519.603882 267.795197,510.723206 272.431763,502.565826  C272.414734,498.484772 273.090118,495.213013 277.727295,494.137146  C279.969238,494.546143 281.143005,495.951141 280.920837,497.604828  C280.479950,500.886658 282.617645,499.767517 284.385132,500.107361  C286.304565,504.495941 285.685913,508.497498 283.922882,512.420532  C279.491577,522.280762 277.948975,532.654236 278.404297,543.382507  C278.475586,545.062317 278.324951,546.707886 277.765594,548.294495  C275.581238,554.490479 274.463440,561.035156 271.458008,566.976196  C270.623260,568.626343 269.535767,570.667786 271.744568,572.752197  C272.122833,580.052246 269.252716,586.429993 267.365784,592.993530  C266.050385,597.569153 264.200134,601.970154 263.522491,606.750366  C263.152649,609.359192 263.220551,612.639160 258.867828,612.152771  C257.460388,611.995483 256.844666,613.383057 257.192413,614.622620  C258.935699,620.836487 257.149475,627.528137 259.720642,633.588623  C261.424408,637.604553 258.592316,641.064575 258.423645,644.925415  C258.160461,650.949280 258.763855,657.185730 257.009644,663.565308  C258.622833,666.178162 257.569611,668.480408 257.210815,670.709717  C257.036133,671.795105 256.655853,673.201294 255.094894,672.955200  C253.823425,672.754700 253.252594,671.696045 253.073013,670.424561  C252.859680,668.913940 253.671326,667.597839 253.816727,666.215271  C251.609772,671.575684 255.688675,679.400330 247.256317,682.757568  z\"})),_path1455||(_path1455=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M368.772949,220.266541  C370.002045,215.511078 370.010132,215.500992 373.531189,218.327347  C374.505951,219.109802 375.442291,218.875961 376.194794,218.154877  C378.216034,216.218079 381.253510,214.651108 381.693573,211.941162  C382.328369,208.031937 385.430298,205.208374 385.338348,200.899261  C385.273102,197.843933 388.444031,199.101364 390.724548,199.733322  C391.875946,200.546951 392.674286,201.148407 392.531036,202.702133  C389.892700,205.942139 388.254242,209.305099 386.719208,212.835266  C384.521881,217.888718 381.412689,222.374863 375.742615,224.456787  C377.817261,224.869186 378.973022,223.779358 380.047729,222.603226  C381.690186,220.805725 383.460571,218.765945 385.678101,221.572586  C387.538483,223.927200 387.538269,226.593079 384.902313,228.587982  C382.644165,230.296967 380.466736,232.089020 378.462891,234.077026  C376.388580,236.134979 374.387238,237.980347 377.922089,240.891983  C380.180573,242.752274 379.083771,246.056595 378.508209,248.464203  C377.946594,250.813446 379.141937,251.769211 380.419800,253.416321  C380.568878,253.989594 380.582794,254.229553 380.506439,254.819122  C377.816742,257.314453 377.540375,260.439117 376.775330,263.743042  C376.343719,265.087006 372.296875,264.622650 375.492920,267.158386  C376.286102,267.787689 375.331146,269.407501 374.324890,270.082794  C370.699585,272.515686 370.329742,275.315491 372.781464,278.906555  C373.821075,280.429291 373.395294,282.473907 372.936066,284.240601  C372.141632,287.296783 373.118805,289.024811 376.644653,289.503174  C377.050140,289.910217 377.156586,290.122986 377.131104,290.667236  C372.348145,293.408752 374.646576,298.180267 373.616425,301.766693  C372.943329,304.110046 372.891815,304.795563 371.238190,302.819824  C370.310425,301.711334 369.877655,300.832336 368.832855,302.489899  C367.950409,303.889862 368.241333,305.011505 369.761444,305.753876  C370.862122,306.291412 372.869751,306.242279 372.310394,308.077728  C371.829163,309.656952 369.999054,308.782684 368.769989,309.004425  C367.467316,309.239471 366.109314,309.779602 364.862335,309.596161  C361.231140,309.062042 358.757477,308.801056 363.284180,312.553253  C363.652344,312.858429 363.833008,314.132507 363.615601,314.291107  C359.717072,317.134552 361.415222,322.395142 358.474487,325.819855  C356.759460,327.817169 357.483948,331.309692 355.263306,333.556824  C354.178406,334.654663 353.148743,335.009674 351.401733,334.999634  C350.304291,335.693787 349.667664,336.437927 349.160645,337.309509  C346.420471,342.020142 346.411163,342.014740 341.967834,338.791077  C338.002686,335.914337 337.699005,333.282318 341.647705,330.639404  C344.436920,328.772583 344.855927,327.223602 343.522095,324.213776  C342.246307,321.334991 344.502838,318.084412 343.240906,314.722473  C342.703094,314.081329 342.455597,313.668030 342.151764,312.862061  C341.815277,310.454132 342.497223,308.553436 342.974152,306.622345  C343.253540,305.490967 343.958893,304.118042 343.393524,303.222626  C338.890472,296.090698 342.516449,288.963043 343.579742,281.999329  C344.499817,275.973602 346.696228,270.133606 347.829437,264.084320  C348.202240,262.094208 349.242279,260.365875 350.797241,258.536499  C351.384949,257.911133 351.722351,257.563416 352.279724,256.942688  C356.041077,253.747086 356.762970,249.950638 355.959106,245.314362  C356.174622,244.019836 356.527527,243.125610 356.825745,241.847397  C358.242432,238.281952 360.084045,235.275650 360.780945,231.797287  C361.216888,229.621246 363.047363,228.621826 364.704590,227.512421  C367.190125,225.848495 369.200317,223.925430 368.772949,220.266541  z\"})),_path1456||(_path1456=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M353.158844,258.824860  C350.360748,259.538818 349.690765,262.240967 349.433746,263.868927  C347.674774,275.010925 343.329163,285.632538 342.811279,297.006287  C342.781738,297.654663 342.296509,298.749054 342.496887,298.873505  C349.245941,303.065399 342.946228,307.802704 343.051758,312.620575  C342.211365,314.065948 340.698151,314.173309 339.668152,315.453949  C341.185516,315.236145 342.324615,314.837402 343.725708,314.201538  C344.881714,314.082703 347.172791,311.830597 346.267059,314.918518  C345.090240,318.930725 343.382751,322.493530 346.662323,326.529175  C347.787598,327.913910 346.464844,330.437958 344.016571,330.954407  C342.042816,331.370789 340.576477,332.326324 340.175659,334.339996  C339.971527,335.365570 339.437500,336.876923 340.969208,337.265839  C341.472534,337.393646 342.313568,336.191345 343.133026,335.482330  C343.403656,335.898651 343.730927,336.247131 343.879883,336.659973  C344.353180,337.971863 343.267426,340.176361 345.178070,340.539001  C347.589081,340.996582 347.131348,338.346649 347.793671,337.045349  C348.375214,335.902832 348.872253,335.019592 350.640808,335.013245  C351.019135,335.001221 351.007080,335.499939 351.003540,335.749359  C350.981384,336.593750 350.802765,337.130829 350.217957,337.799652  C348.024475,342.575897 349.412201,347.388519 349.010071,352.536865  C347.499054,354.666473 346.037872,356.380524 344.089539,358.087067  C340.413483,359.550964 341.787537,362.793976 341.045837,365.135864  C339.618866,369.641541 338.338348,374.203003 338.168915,379.215851  C339.056183,380.339935 339.682617,381.236816 339.954712,382.671936  C340.020752,384.756775 339.813446,386.381012 337.374725,386.969879  C335.420441,385.471558 333.164459,384.889648 331.384827,383.043091  C329.450867,376.086731 331.986084,370.135162 334.343628,364.154114  C331.217468,370.808319 329.998627,377.893890 329.489929,385.139709  C329.396698,386.467926 329.305573,387.800598 328.871490,389.064392  C328.388489,390.470551 327.978943,392.135345 326.207245,392.318329  C324.287994,392.516541 323.852875,390.853485 323.275909,389.083313  C323.260590,384.679443 324.774078,380.665497 322.345551,376.599945  C321.305908,374.859558 322.922913,372.398132 323.655487,370.416351  C326.069122,363.886902 326.842133,356.877808 329.620667,350.114014  C329.579010,347.385132 330.471191,345.216797 331.033295,342.966003  C331.952942,339.283508 330.600677,337.998749 326.944000,338.849945  C322.003510,339.999939 320.454926,337.928101 320.505707,332.815521  C320.590057,324.322693 323.306427,316.439545 325.875854,308.698517  C328.673584,300.269806 330.848663,291.609406 334.267883,283.393677  C335.277069,280.968628 336.558441,278.544250 338.584381,276.757507  C340.321320,275.225677 341.176971,274.107697 339.005402,272.034363  C337.356201,270.459747 338.256378,268.384827 340.174500,267.560181  C344.465912,265.715210 344.790161,263.752441 340.900543,261.089447  C340.186737,260.600769 340.169128,259.647125 340.374573,258.460999  C341.893555,256.676880 343.886200,255.857391 345.185364,253.788132  C346.989105,252.713654 348.334961,251.669998 349.047791,249.597717  C349.321533,249.132233 349.446777,248.956451 349.805176,248.559219  C350.692535,247.822372 351.497040,247.505707 352.241211,246.593536  C352.744751,246.038284 353.052185,245.734985 353.636719,245.238922  C354.695953,244.531326 355.532898,244.250854 356.742004,244.782349  C358.234100,249.619614 357.786621,253.842621 354.043884,257.646667  C353.763855,258.208038 353.537384,258.425781 353.158844,258.824860  z\"})),_path1457||(_path1457=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M347.602417,447.011322  C347.989258,449.370758 347.983459,451.741486 347.976074,454.556458  C348.160065,456.249023 347.535034,457.040222 346.253754,457.802490  C345.286194,460.169830 347.359589,461.615601 347.228729,463.797699  C346.489319,464.435913 346.337524,464.956726 346.781616,465.796936  C346.996552,467.719818 347.000427,469.431488 347.006226,471.570984  C347.519928,473.589905 345.852386,474.833984 346.163025,476.709961  C346.021210,477.004272 346.020599,477.496094 346.021606,477.741882  C344.649414,484.479584 343.956024,491.148254 341.009277,497.617371  C339.519989,499.295166 340.256836,501.369110 339.145874,503.128113  C338.364014,504.191711 337.427856,504.769135 337.232422,506.204041  C336.963989,506.887421 336.729492,507.232391 336.225677,507.771667  C332.820892,510.861877 330.937622,514.114990 332.762512,518.533569  C333.002472,519.114563 333.228455,520.300720 333.153198,520.327087  C327.884003,522.170654 329.767975,529.914124 323.660187,531.302063  C323.773193,529.167297 323.888367,526.991516 324.003601,524.405396  C323.232147,523.338074 322.871124,522.509216 322.943726,521.305603  C322.930939,521.117676 322.866272,520.842651 322.866272,520.842651  C322.866272,520.842651 322.606232,521.006653 322.559631,521.232178  C322.289185,521.920227 321.937805,522.409302 321.468567,522.430420  C318.197632,522.578308 317.082428,523.978088 318.526550,527.104248  C318.870270,527.848450 318.789642,528.715698 318.230255,529.753052  C315.221649,532.489014 316.163849,536.439819 314.203796,539.601257  C312.451141,538.955383 314.047913,534.745789 310.346069,535.999634  C307.392700,535.679749 308.117432,533.861023 308.657410,532.512939  C309.499695,530.410339 309.134369,528.479004 308.229919,526.244263  C306.886932,520.129578 307.977631,514.809143 311.535828,509.910492  C312.873230,508.069244 316.035492,506.178375 312.602600,503.380707  C312.015625,502.902313 312.044922,502.061371 312.639069,501.659424  C313.098572,501.348511 314.098450,501.145935 314.412598,501.415131  C318.440460,504.866394 320.311371,501.310242 321.533081,498.729584  C323.095520,495.429230 324.346191,492.182495 323.640106,487.819489  C322.975037,483.709961 325.108002,478.781708 327.037628,474.699310  C330.374908,467.638885 330.261444,459.856384 332.587433,452.632172  C332.682861,452.335785 332.728149,451.786896 332.573212,451.680206  C325.284241,446.660004 331.630798,440.406616 330.933167,434.833130  C329.809387,425.854950 335.092072,419.564758 339.158691,412.637939  C337.538910,421.254181 338.492371,430.364899 333.561615,438.290619  C332.364014,440.215729 331.918671,442.628418 331.250916,444.853973  C330.980408,445.755432 330.697266,447.022156 331.977631,447.367310  C333.227753,447.704346 333.712738,446.583191 333.873199,445.587860  C334.172668,443.730347 335.146240,441.927185 336.964355,442.638947  C338.660004,443.302734 336.947205,445.262451 336.903168,446.636475  C336.830566,448.901703 335.819122,451.087616 336.815277,453.451385  C337.133636,454.206787 336.922180,455.831543 336.372467,456.205963  C331.311279,459.653046 332.967957,463.526947 334.976227,467.901642  C335.933014,469.985779 336.568359,473.115265 334.396790,474.916718  C331.864197,477.017609 331.706665,479.259521 332.498901,481.991760  C333.277100,484.675415 333.312531,487.092773 331.206787,489.403229  C328.159912,492.746277 329.740021,496.619324 330.620697,500.257965  C330.980804,501.745911 328.851807,503.558105 331.217529,504.651031  C331.527405,504.794159 332.357452,504.523041 332.481812,504.239777  C333.244385,502.502777 334.174103,501.069550 333.038849,498.741486  C331.863556,496.331360 332.410126,493.111603 334.093597,490.858429  C335.504547,488.970062 337.375549,490.577576 339.128021,491.618591  C340.286499,486.962433 340.985443,482.296265 342.645996,478.001923  C344.304443,473.713135 343.418579,469.926880 342.138397,465.946442  C340.116516,459.659851 343.688690,454.118683 344.665588,448.235016  C344.827423,447.260071 346.177795,447.072205 347.602417,447.011322  z\"})),_path1458||(_path1458=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M272.026123,572.679626  C268.723877,573.413086 267.942688,572.183044 269.084015,569.059387  C271.664612,561.996765 274.030701,554.855713 276.480164,547.745239  C276.641357,547.277405 276.998260,546.730347 276.880096,546.334778  C274.857941,539.565247 278.277283,533.016785 277.641815,526.297546  C277.185883,521.477173 280.277588,517.490234 281.883331,513.391235  C283.551239,509.133423 283.872528,505.165131 284.010620,500.462158  C282.763763,498.684967 283.370483,497.244446 283.865936,495.898041  C285.435516,491.632599 287.055145,487.383392 289.545593,483.140503  C290.388977,482.174530 291.261261,481.744690 291.885284,480.609741  C292.617981,479.324493 293.174377,478.328186 294.209961,477.250488  C299.452148,472.493561 302.633423,466.765930 305.283386,460.696655  C306.480682,457.954498 307.725281,455.260651 310.264313,452.950562  C314.285370,451.162354 315.077026,451.643005 314.760712,455.142731  C314.538208,457.604095 312.644135,459.633240 313.007874,462.614807  C312.851410,464.499969 312.693207,465.996338 312.274719,467.760529  C310.679535,468.388092 311.039154,469.516937 310.846497,470.730713  C310.658905,471.206909 310.549042,471.382782 310.226044,471.785095  C309.710632,473.114624 309.408386,474.217712 309.069458,475.663818  C306.766449,482.529694 301.244385,487.458984 300.485352,494.839691  C299.901062,500.520782 295.759827,504.995575 293.583679,510.194916  C290.775055,516.905518 287.855072,523.564453 285.259949,530.724121  C283.048309,538.625244 281.022827,546.247253 279.228363,553.923279  C278.832397,555.617126 277.941193,556.890625 277.041260,558.638306  C276.121765,559.663269 276.041107,560.776123 275.243835,561.816833  C275.019440,563.413391 274.995239,564.781311 274.958557,566.559570  C274.028748,568.122925 272.715942,568.950134 272.101654,570.696716  C272.056213,571.457153 272.044495,571.901672 272.026123,572.679626  z\"})),_path1459||(_path1459=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M333.294128,574.637085  C333.012024,575.453918 333.007721,575.895691 333.000000,576.668701  C331.900421,579.609741 331.843872,582.481689 330.887238,585.146240  C330.145294,587.212830 329.592560,589.037048 327.224823,590.066528  C324.245728,591.361816 324.848877,594.468872 324.578918,597.063049  C324.178162,600.914429 325.732056,605.123169 322.277344,608.742737  C321.954071,610.338928 322.011810,611.688416 321.784088,612.987854  C321.620148,613.923584 321.309235,615.108154 320.217224,615.329346  C318.504120,615.676514 319.600830,613.349792 318.174683,613.077209  C317.444702,619.590515 316.587158,626.067017 316.031097,632.569275  C315.572021,637.936951 314.944153,643.309326 311.340363,647.488770  C309.746368,649.337341 311.683167,651.067810 310.249878,652.783936  C308.734711,653.883606 309.420105,655.561829 308.265320,656.795959  C304.075531,658.644958 305.188599,653.371704 302.327698,653.054504  C301.145935,649.166992 297.434601,644.734009 304.204620,642.492615  C304.316467,642.455566 304.457184,642.131775 304.432648,642.109619  C299.775330,637.898132 306.597076,636.280579 306.464874,633.096741  C306.276764,628.567078 308.446228,624.629639 309.705048,620.469788  C310.840729,616.716858 312.125610,613.008240 313.387482,609.294678  C313.881927,607.839600 314.361084,606.439636 313.090210,605.124512  C312.379395,604.388977 311.604156,603.394897 312.763275,602.716492  C313.297546,602.403748 314.462891,603.169373 315.375122,603.456421  C314.776184,598.431335 316.174255,593.776611 317.421082,589.092712  C318.433624,585.289001 320.032318,585.351440 322.635864,588.958008  C321.516113,583.943359 326.205200,581.525879 326.454742,578.220703  C326.798370,573.669434 331.625854,573.731750 332.701599,570.149414  C334.320587,571.263306 334.332428,572.711060 333.294128,574.637085  z\"})),_path1460||(_path1460=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M380.208862,254.218414  C373.501617,252.660095 377.782745,247.923340 377.441589,244.868088  C377.208893,242.784134 378.162903,241.186737 375.042999,240.885849  C371.953857,240.587921 373.689331,238.230743 374.209839,237.131058  C375.914764,233.529129 379.122498,231.202179 382.183319,228.811386  C383.094421,228.099747 384.197723,227.608612 385.023407,226.818405  C386.849274,225.070999 385.523163,223.040176 384.524994,221.942917  C382.718536,219.957169 382.312317,222.318085 381.616272,223.468445  C381.365936,223.882202 381.032562,224.300964 380.634796,224.560959  C378.584503,225.901169 376.669983,227.760712 373.878357,226.741699  C373.469818,226.592590 372.826660,225.993195 372.890320,225.809219  C373.703735,223.458771 375.568115,222.356506 377.795715,221.419800  C382.385834,219.489639 383.821625,214.911392 386.013611,210.987991  C387.560638,208.219025 387.571198,204.410965 391.644653,203.044678  C393.356720,204.105759 393.758850,205.876526 392.951996,207.035049  C389.409698,212.121246 392.223389,217.391342 392.173553,222.938354  C391.711060,229.578186 388.703125,235.137604 387.035828,241.445129  C384.960815,243.476089 382.636292,244.811890 381.994873,247.581497  C383.196777,247.481400 384.146912,246.467010 385.761017,246.431183  C387.509216,246.920654 387.875427,248.020294 387.381592,249.204498  C385.144501,254.568939 384.998108,260.485443 384.031982,266.016479  C383.240021,270.550507 383.436157,276.336243 385.904480,281.520691  C385.895996,282.130554 385.865234,282.374451 385.722626,282.970642  C383.046600,287.327789 382.931183,291.917725 382.243530,296.708801  C378.692719,296.734497 378.693756,293.559753 377.142059,291.312500  C376.999176,290.998779 376.999084,290.500610 376.998932,290.251526  C375.785675,288.692657 375.578522,287.110199 375.726501,285.416748  C376.324249,278.576202 374.641663,271.712738 375.963684,264.439178  C376.126221,260.679565 375.250336,256.990326 379.633423,255.047531  C380.370605,255.092285 380.338623,255.937714 380.803497,255.596527  C381.022095,255.436081 380.687164,254.794006 380.208862,254.218414  z\"})),_path1461||(_path1461=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M313.271545,462.751709  C310.733307,460.010925 313.402405,457.398041 313.680664,454.604858  C313.957306,451.828369 313.175842,451.829590 311.242035,453.813782  C307.644958,453.087036 309.194641,450.457886 309.623993,448.866974  C311.862244,440.572845 313.026581,432.079987 314.773071,423.700867  C315.521667,420.109558 319.506439,417.879486 320.082458,413.597656  C320.392212,412.880310 320.536346,412.464661 320.720215,411.726990  C321.052002,410.630951 321.219940,409.829956 321.151855,408.682373  C321.147644,407.285645 321.494843,406.301544 322.165375,405.111816  C322.499054,404.521606 322.629852,404.169006 322.637909,403.507141  C322.399658,402.636261 322.264008,402.039154 322.257141,401.088562  C327.909515,396.104218 328.522247,388.924316 331.654572,382.921021  C333.268707,384.700500 337.675873,381.640320 337.012939,386.659180  C337.023193,387.022369 337.031219,387.503632 337.033386,387.744324  C337.410034,389.231812 336.984528,390.352325 336.255554,391.742004  C336.017395,392.460907 336.010406,392.899231 335.996826,393.666351  C335.332916,394.779724 334.336884,395.290375 334.043701,396.692932  C332.887482,406.988281 328.847931,416.046326 324.285278,424.752686  C321.946503,429.215485 321.415955,433.874542 320.549286,438.502319  C320.069855,441.062408 321.976593,444.201111 317.944702,445.348602  C319.037231,448.064728 317.744873,450.283264 316.712524,452.712067  C315.375793,455.856903 314.568665,459.226868 313.271545,462.751709  z\"})),_path1462||(_path1462=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M342.725739,357.399048  C345.655090,356.851837 344.639862,351.916016 348.623840,353.002502  C351.094940,353.764740 352.587616,356.759003 354.163208,351.324524  C355.383118,347.116852 358.469696,342.737823 360.694183,338.394775  C362.171387,335.510681 360.779114,333.293671 361.003845,330.401733  C362.858063,329.018219 363.415405,327.021454 364.768036,325.231628  C364.569000,322.849548 366.348938,321.499756 366.952209,319.354126  C367.166962,318.887695 367.335114,318.775391 367.755310,318.831909  C368.297791,323.670807 369.703400,328.393311 365.539764,332.444061  C363.605835,334.325592 365.563385,337.314362 365.151398,339.941223  C364.493622,344.135498 361.047760,347.937500 362.859253,352.535431  C363.015015,352.930756 362.838898,353.875885 362.645782,353.927704  C358.872528,354.940094 359.491852,359.008270 357.906708,360.852448  C352.677948,366.935669 352.334747,374.893402 348.454987,381.354248  C347.397156,383.115845 346.659882,384.755981 344.001892,385.210968  C346.166840,376.117065 350.653564,367.900818 352.352722,358.300781  C347.652069,359.840820 349.638092,367.268646 343.243652,365.248199  C340.726715,362.751587 341.428467,360.283783 342.725739,357.399048  z\"})),_path1463||(_path1463=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M305.778625,559.692383  C306.678375,569.536438 304.073792,578.593750 301.974792,587.725159  C301.832672,588.343506 301.895172,589.060730 300.637207,589.337952  C299.052032,587.112000 300.904694,583.964111 298.863159,580.893860  C298.040771,584.503601 297.647095,587.104065 297.772827,590.279358  C297.963745,595.100586 295.969574,600.025879 294.756561,604.870117  C294.521484,605.808960 293.470001,605.675659 292.647400,605.248474  C291.688507,604.750488 291.028229,604.077332 291.248169,602.899719  C291.703033,600.464661 292.253418,598.044983 292.625885,595.597778  C293.088135,592.560547 293.958862,589.697754 292.462189,586.444702  C290.448853,582.068665 295.774841,580.947632 297.349518,578.073486  C298.398376,576.159058 301.367371,575.508789 297.689758,573.225952  C296.720428,572.624329 296.836975,570.273193 296.393890,568.478333  C294.057617,569.584900 295.817841,572.130615 294.300293,573.221802  C292.279510,569.811157 294.786957,563.023193 299.024231,561.083313  C300.277069,560.509766 301.530792,560.250305 301.949280,558.363892  C303.863892,556.721802 304.733154,557.997375 305.778625,559.692383  z\"})),_path1464||(_path1464=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1A1C\",opacity:1,stroke:\"none\",d:\" M343.592773,514.005127  C341.607971,520.171875 342.725372,526.883423 340.994507,533.571777  C337.791443,537.048950 337.043457,541.664429 334.041290,545.225342  C332.446228,550.636780 331.983337,556.093201 328.266113,560.722900  C327.599182,563.055420 326.687225,565.028748 327.001587,567.602783  C325.243317,567.833801 325.127563,570.021118 323.738403,570.726501  C320.120300,563.756592 324.500763,558.072937 326.031616,552.219849  C326.977448,548.603577 327.717255,544.891174 328.875153,541.306946  C329.218933,540.242859 329.629761,538.756104 327.103577,539.318604  C325.650757,539.642151 325.859283,537.518066 326.339661,536.640625  C327.332184,534.828003 327.146729,532.080139 329.429291,531.342957  C330.733551,530.921753 330.638123,532.404114 330.343079,533.417175  C330.107727,534.225342 329.935974,535.156921 330.978729,535.460266  C331.973785,535.749695 332.445282,534.884766 332.800629,534.142639  C334.340973,530.925415 339.357086,529.646790 338.007477,524.416382  C337.633759,520.731750 338.047363,517.566284 339.697083,514.269409  C341.067719,514.002869 342.131012,514.002930 343.592773,514.005127  z\"})),_path1465||(_path1465=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M285.243805,531.211426  C285.543518,525.251038 288.204132,520.218201 289.989899,514.882202  C293.032471,505.790894 299.550507,498.253174 300.495697,488.059052  C300.861664,484.112610 304.690063,479.477417 308.664062,476.050354  C309.918488,482.318329 307.036346,487.871979 304.893219,493.358643  C301.154144,502.931335 296.253174,512.009399 290.686188,520.698181  C288.733093,523.746521 289.588898,527.448914 288.835754,530.800415  C288.570343,531.981262 289.628479,533.846802 288.122162,534.309692  C285.996277,534.963013 286.376740,532.437195 285.243805,531.211426  z\"})),_path1466||(_path1466=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M379.668152,318.306702  C379.961243,317.547485 379.992340,317.121460 380.043182,316.375641  C380.663269,315.236877 380.890778,314.205292 381.773254,313.208618  C382.057709,311.413696 383.250580,310.839813 384.744812,310.154724  C385.826477,310.878387 386.265808,311.852417 386.373138,313.388123  C386.363098,314.348114 386.308624,314.893433 386.102203,315.831665  C385.778503,316.735382 385.506165,317.207001 384.905884,317.945160  C381.022919,322.753326 381.065247,328.091003 381.746094,333.309631  C382.550079,339.472137 381.557587,344.935974 378.704773,350.542206  C376.295441,355.276886 375.203613,360.702881 375.007263,366.519653  C375.793762,369.562103 374.364990,372.025391 374.310944,375.003296  C374.080627,376.117401 373.823395,376.825500 373.540863,377.905640  C373.487579,379.265961 373.361633,380.248291 373.142303,381.601868  C372.926849,382.730713 372.605103,383.447479 372.583557,384.636902  C372.956543,388.325165 375.001251,391.844025 370.790192,394.594116  C366.796783,391.994568 366.245667,388.704834 368.630798,382.350159  C368.934784,381.534698 368.945007,381.103180 368.951843,380.347992  C368.074615,379.084747 367.591888,378.020081 367.962158,376.350769  C368.034515,375.554352 368.032074,375.113708 368.026794,374.342529  C368.088104,372.524353 367.739594,370.990143 368.765381,369.295105  C369.305817,368.537384 369.603882,368.068054 369.922485,367.309357  C368.438690,361.800629 370.503723,356.819458 371.951111,352.187378  C374.532593,343.925903 375.080292,335.380280 376.955170,327.053223  C377.597290,324.201385 377.729187,321.193054 379.668152,318.306702  z\"})),_path1467||(_path1467=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M270.818878,672.726318  C272.602112,674.415100 271.687622,675.565369 270.681885,676.813171  C266.550110,681.939392 264.812164,688.005066 263.999115,694.390930  C263.420990,698.931641 259.906342,702.132996 258.691467,706.367004  C258.422974,707.302795 258.233398,708.261230 257.999146,709.601990  C253.275208,706.827209 257.265869,702.476013 256.750031,698.735657  C256.590424,697.578186 257.149139,695.448608 257.499908,693.825684  C258.174957,690.702576 256.899170,686.677551 260.952545,684.753662  C261.411865,684.535583 261.805023,683.595886 261.773865,683.015198  C261.389099,675.842468 265.459869,670.648865 269.991882,665.411621  C272.062469,667.730042 270.409821,670.108582 270.818878,672.726318  z\"})),_path1468||(_path1468=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M247.393646,683.002319  C252.547272,676.873596 252.538605,669.250000 252.386581,661.277893  C257.172272,664.294434 252.148666,669.069885 255.416901,672.625366  C256.471619,669.783447 255.544769,667.001648 256.949646,664.383911  C260.974976,663.637329 261.580017,665.649902 260.529510,668.916199  C258.909698,673.952637 257.337860,678.891846 255.039246,683.795044  C251.584930,691.163635 251.546112,699.843262 250.997253,708.553284  C246.440201,708.673401 247.492340,705.258057 248.657349,703.305481  C251.743073,698.133667 250.513870,692.389954 251.515152,686.976074  C251.891846,684.939331 250.801910,682.662048 247.393646,683.002319  z\"})),_path1469||(_path1469=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M368.540466,381.991882  C369.591919,385.875763 367.824463,390.017395 370.421600,393.899109  C373.762054,396.618225 370.762939,400.035614 372.095032,403.259399  C372.245453,404.181030 372.258270,404.715179 372.169830,405.650879  C372.047577,406.310303 371.977264,406.569427 371.750732,407.197510  C369.534790,411.419312 370.530060,415.560181 370.663330,419.562683  C370.729584,421.552917 370.926422,423.434052 369.846283,425.615326  C369.024963,426.571014 368.277496,426.831848 367.036011,426.804993  C366.396271,426.632874 366.155548,426.520142 365.639740,426.123993  C363.096802,421.421661 363.140106,416.633881 363.090393,411.482056  C363.039307,410.615906 363.066162,410.123932 363.203491,409.279755  C364.755035,406.622437 363.154816,403.811981 364.748291,401.240601  C364.997742,396.423798 364.952209,391.852966 365.025208,387.284058  C365.061859,384.990662 365.087158,382.564819 368.540466,381.991882  z\"})),_path1470||(_path1470=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M379.586212,318.053650  C376.866638,334.106323 375.214478,350.530029 369.964783,366.618347  C367.641541,362.094818 366.755432,356.697266 369.080505,351.924561  C373.063660,343.748322 373.528717,334.871765 375.641754,326.330688  C376.353729,323.452698 376.510101,320.184601 379.586212,318.053650  z\"})),_path1471||(_path1471=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M366.280304,459.790344  C364.859161,459.966492 363.928070,459.539459 363.141357,458.275238  C362.990814,457.549469 362.990814,457.107666 362.989929,456.334351  C363.730255,453.746735 362.562408,451.739410 362.074463,449.315308  C361.990906,448.553802 361.991638,448.109528 361.993835,447.332001  C365.819855,445.491791 365.060364,442.774231 363.684021,440.078705  C361.494019,435.789551 361.439270,431.477356 363.281342,426.724792  C363.931183,425.765686 364.573181,425.475525 365.688110,425.784027  C365.998779,425.998779 366.000000,426.000000 366.000610,426.000610  C366.906281,427.062103 368.481018,426.890564 369.662537,428.203796  C371.344788,436.809631 371.017181,445.235962 372.103607,453.538422  C372.234497,454.538513 371.739594,455.465240 370.595703,456.319885  C366.879364,454.971405 367.714050,458.455383 366.280304,459.790344  z\"})),_path1472||(_path1472=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M359.189819,424.747925  C357.471405,429.206726 357.397858,433.641266 357.060913,438.025970  C356.952820,439.432495 358.113464,441.796204 356.530151,441.994751  C354.509338,442.248138 352.172760,441.234344 350.208313,440.280548  C348.704803,439.550568 348.497223,437.477692 349.322540,436.307068  C350.882416,434.094421 351.098785,431.773315 351.056580,429.269562  C351.048859,428.811493 351.213074,428.236664 351.510590,427.908691  C352.414581,426.912170 354.730194,430.146454 355.027435,426.636566  C355.215881,424.411377 352.302124,424.174683 352.592468,422.808228  C353.173431,420.073517 352.135895,416.782013 355.138977,414.161102  C356.812103,417.443848 355.124390,421.529724 358.638123,423.922424  C359.126953,424.169128 359.253906,424.334625 359.189819,424.747925  z\"})),_path1473||(_path1473=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M382.255310,296.993744  C380.905457,292.075134 381.296783,287.405182 384.637146,283.073242  C388.272919,283.753876 386.388123,286.127075 386.259094,287.691071  C385.860046,292.527954 386.500275,293.446960 390.911255,291.836945  C394.626404,290.480865 398.102264,293.568634 401.968018,291.659210  C403.284027,291.464630 403.999298,290.812500 405.140167,290.202606  C406.898224,289.538910 408.361755,289.488953 410.196747,289.786804  C414.492950,292.037537 411.445984,293.370697 409.697083,295.112579  C408.436035,296.218506 407.002563,296.277069 405.696350,297.286072  C405.029572,297.618286 404.627655,297.748260 403.906982,297.881134  C403.009491,298.012268 402.411896,298.076477 401.597290,298.496979  C401.152557,298.755005 400.973480,298.861084 400.516113,299.119263  C399.654724,299.558502 399.050995,299.796844 398.126740,300.138733  C396.215240,300.365295 394.882721,301.601532 392.893646,301.167999  C390.304016,297.963898 386.229218,299.419769 383.266083,297.205200  C382.999207,297.002441 382.503265,296.997253 382.255310,296.993744  z\"})),_path1474||(_path1474=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M315.029663,559.817627  C312.726654,553.729248 318.901550,550.197876 318.777161,544.978760  C318.754822,544.040833 319.890747,543.080933 319.436157,541.777527  C319.011566,540.560181 318.422119,538.831238 320.174744,538.424500  C322.102325,537.977234 323.539368,539.914490 323.666748,541.262573  C324.176636,546.658997 325.069794,552.294678 320.952850,556.881897  C320.044830,557.893555 319.055298,558.686096 319.019501,560.169250  C318.987213,561.506714 318.975403,563.278625 317.408112,563.415771  C315.467285,563.585632 315.443115,561.588013 315.029663,559.817627  z\"})),_path1475||(_path1475=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M333.178650,545.308350  C333.473877,543.642151 329.553040,539.733582 335.232422,541.283997  C336.144226,541.532898 336.903473,539.719177 336.614990,538.542542  C335.829224,535.337769 337.679871,534.420837 340.623779,534.001953  C341.511383,536.715820 342.055695,539.434875 342.549774,542.163025  C343.018311,544.750061 342.630981,547.647827 340.225830,548.538574  C335.970581,550.114502 336.113861,552.891418 336.951965,556.635376  C335.875977,556.759644 334.756836,556.521790 333.319458,556.141968  C330.994415,552.466553 334.688599,549.129333 333.178650,545.308350  z\"})),_path1476||(_path1476=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M298.004089,660.661621  C296.823364,663.013550 296.679047,664.631226 299.459290,665.391907  C300.273041,665.614563 300.827484,666.436829 300.524994,667.300842  C300.350922,667.798096 299.442596,668.552551 299.237030,668.449402  C294.023132,665.832764 297.023132,671.495605 295.140076,672.662903  C290.438324,672.253540 291.460327,668.797729 291.565704,665.851624  C291.733429,661.163208 293.857452,656.617310 292.973358,651.453796  C294.470947,653.169312 295.968506,654.884766 297.730621,656.801331  C298.496368,658.108093 297.824341,659.216736 298.004089,660.661621  z\"})),_path1477||(_path1477=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M359.365631,425.008667  C358.998779,424.995728 358.999298,424.499634 358.999634,424.251648  C359.044342,419.341156 359.440369,414.738953 361.662720,410.194855  C362.610260,409.947601 363.146973,410.126373 363.791992,410.786133  C364.665680,415.725281 365.332550,420.454193 365.999115,425.590942  C365.451050,426.176544 364.903351,426.354279 364.177185,426.765381  C363.600922,427.485718 363.266174,428.045319 362.296387,428.107544  C362.031342,426.404938 361.784454,425.026245 359.365631,425.008667  z\"})),_path1478||(_path1478=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M361.628326,428.091248  C362.493744,427.739441 362.989960,427.481659 363.742493,427.111328  C361.873413,432.872192 364.509766,438.115814 366.338593,443.393463  C367.765564,447.511383 366.265625,448.121124 362.367310,447.006653  C362.065460,444.262146 362.442322,441.409698 359.308533,439.882751  C361.784882,436.288116 358.341461,431.706329 361.628326,428.091248  z\"})),_path1479||(_path1479=/*#__PURE__*/React.createElement(\"path\",{fill:\"#824630\",opacity:1,stroke:\"none\",d:\" M383.773834,317.351318  C384.298889,316.868774 384.552429,316.674133 384.882263,316.209106  C385.518066,315.578613 385.676514,315.056366 385.251770,314.200684  C385.053802,312.928467 385.052246,311.881500 385.053558,310.443604  C385.056427,310.052704 385.498047,309.984222 385.718384,309.947083  C387.575562,308.249969 388.727875,306.248566 390.022797,303.926453  C390.252014,303.369202 390.371429,303.155731 390.765198,302.692108  C391.484894,302.206696 391.959625,302.068237 392.836121,302.020020  C393.721710,302.027008 394.205658,302.135284 394.956268,302.586182  C396.022400,304.155579 395.709229,305.494232 394.833038,306.527008  C391.851776,310.041229 390.755493,314.259064 389.856140,318.971863  C388.450256,320.611664 388.487701,322.520874 387.233337,324.223877  C386.202850,324.863739 385.423431,324.922607 384.237976,324.591064  C381.397949,322.295074 382.133667,320.014526 383.773834,317.351318  z\"})),_path1480||(_path1480=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M342.644165,357.081360  C343.004059,359.372101 342.998352,361.738068 342.995056,364.546936  C341.421082,366.479523 342.208862,368.434113 341.972717,370.590027  C341.480408,374.239929 342.164001,377.896423 338.398132,380.076965  C337.099487,380.104309 334.918304,381.345001 335.572144,379.630493  C338.339233,372.374878 338.382629,364.388519 341.844849,357.374664  C341.902008,357.258820 342.130219,357.227417 342.644165,357.081360  z\"})),_path1481||(_path1481=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M307.992188,526.402344  C312.675323,528.514771 309.631592,532.262207 309.753906,535.772217  C310.053192,538.599976 308.710541,540.835327 308.049835,543.632080  C304.859406,545.021667 304.918243,542.834900 304.901550,540.406616  C303.581421,535.053345 307.987976,531.432190 307.992188,526.402344  z\"})),_path1482||(_path1482=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M322.753052,519.734863  C324.133362,520.846558 323.974396,522.086487 324.002625,523.632324  C321.628510,524.218384 322.304962,526.404968 321.577362,527.701050  C320.918121,528.875366 321.367126,531.484741 318.302582,530.124756  C317.977142,529.834106 317.979370,529.666077 317.933136,529.512634  C315.781067,522.371826 315.780579,522.371948 321.936096,520.327271  C322.168304,519.823242 322.335358,519.646484 322.753052,519.734863  z\"})),_path1483||(_path1483=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M364.678375,400.811523  C364.001068,403.577301 367.698975,406.330505 364.353943,408.925171  C363.609558,409.384277 363.149170,409.527924 362.307556,409.218445  C361.755341,406.653290 362.800446,404.003479 360.376251,402.176666  C358.624237,400.856384 358.860413,399.055023 359.282654,397.274750  C359.504181,396.340546 360.373138,396.071472 361.218933,396.156372  C363.565582,396.391937 362.573914,398.854614 363.669373,399.942841  C363.900024,400.171997 364.131378,400.400421 364.678375,400.811523  z\"})),_path1484||(_path1484=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M332.847809,545.337036  C337.468475,548.390320 334.107178,551.808105 333.016327,555.609314  C331.528107,557.605347 331.460754,560.443909 328.347168,560.956177  C329.567261,555.892090 331.132050,550.784241 332.847809,545.337036  z\"})),_path1485||(_path1485=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M338.043274,380.333069  C341.310822,377.884308 338.597748,373.553833 341.606201,371.087219  C345.074402,372.851562 347.680389,374.647369 343.243256,378.056885  C341.949005,379.051422 341.415283,381.035706 340.263824,382.781921  C338.977661,382.523041 338.260132,381.803619 338.043274,380.333069  z\"})),_path1486||(_path1486=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M337.784851,503.215332  C339.833191,501.890900 338.034943,499.051666 340.653076,498.077148  C339.420502,502.713959 345.173340,507.031433 341.402832,511.795258  C340.399323,510.147369 339.434906,507.951111 336.374451,508.007324  C336.007660,507.556396 336.007965,507.112793 336.010254,506.336487  C336.877716,505.356873 336.950714,504.228485 337.784851,503.215332  z\"})),_path1487||(_path1487=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M393.202087,302.688843  C392.553680,303.018829 392.134277,303.053894 391.399841,303.108643  C390.430023,303.148193 389.884735,302.905304 389.211823,302.222351  C386.230591,301.661438 384.314697,300.217102 383.140350,297.312500  C385.625702,296.434235 388.118713,297.979614 390.836761,297.321899  C393.112549,296.771240 392.891754,298.812897 393.011963,300.653442  C393.369141,301.427826 393.505646,301.878937 393.202087,302.688843  z\"})),_path1488||(_path1488=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M301.349884,554.233398  C299.980499,549.405334 301.418243,545.250366 303.635468,541.077881  C305.266663,542.975952 305.754791,545.039673 304.311951,547.637756  C304.379120,549.777161 305.079681,551.535767 304.044434,553.657227  C303.339447,554.663635 302.555267,554.756897 301.349884,554.233398  z\"})),_path1489||(_path1489=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M304.334534,548.062622  C304.013794,545.964966 304.008453,543.915466 304.001953,541.426575  C304.121735,540.681580 304.313019,540.429382 304.784149,540.113892  C305.941711,541.193542 305.573730,543.185852 307.672913,543.943542  C308.032288,544.486755 308.000610,544.985229 308.106049,545.452759  C308.439880,546.932983 310.954590,548.245056 308.465881,549.929077  C306.204590,551.459351 306.223236,548.090759 304.334534,548.062622  z\"})),_path1490||(_path1490=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M339.760986,513.753601  C340.279633,517.277893 339.566467,520.399719 338.272400,523.742188  C335.204712,519.682434 335.913605,514.742615 339.760986,513.753601  z\"})),_path1491||(_path1491=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M352.781036,406.831665  C354.547760,404.878296 353.505188,402.412384 354.994354,399.849274  C356.860138,404.123718 353.976746,407.778107 355.403046,411.234039  C355.463593,411.380707 354.240051,412.277557 353.518921,412.474854  C352.443176,412.769165 352.058075,411.846527 352.085632,411.012024  C352.128082,409.726410 352.389954,408.448029 352.781036,406.831665  z\"})),_path1492||(_path1492=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M301.042236,554.339722  C301.756042,553.996765 302.506287,553.998413 303.631897,554.000000  C310.646698,553.482483 305.498779,557.453857 306.005676,559.635193  C304.881714,559.357971 303.765839,558.714294 302.326202,558.036499  C301.694519,556.896362 301.386566,555.790344 301.042236,554.339722  z\"})),_path1493||(_path1493=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M361.737427,449.244019  C364.698883,450.704559 365.347076,452.902863 363.286621,455.839783  C361.712463,454.010925 360.473328,452.010315 361.737427,449.244019  z\"})),_path1494||(_path1494=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M333.363953,575.003052  C333.011017,573.617310 333.005707,572.222351 333.000793,570.408813  C333.001221,569.990234 332.998871,569.498779 332.998230,569.253052  C333.626221,568.442749 334.356659,568.207581 335.564362,568.486328  C336.083160,568.864075 336.234467,569.083557 336.193512,569.653809  C335.682526,571.871582 337.940338,574.921082 333.363953,575.003052  z\"})),_path1495||(_path1495=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M354.424500,374.356110  C355.026794,373.254395 354.719574,372.028168 356.268677,371.425598  C356.465332,373.759644 356.650635,375.958954 356.880554,378.687531  C354.574585,377.750580 354.613647,376.116791 354.424500,374.356110  z\"})),_path1496||(_path1496=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M364.630981,325.009094  C365.010040,327.363739 365.177826,329.830933 361.385254,329.991882  C361.736420,328.110474 361.223785,325.401764 364.630981,325.009094  z\"})),_path1497||(_path1497=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M368.309052,318.828003  C367.839233,319.000458 367.671143,319.000214 367.250916,319.000000  C365.164551,315.983948 367.704285,315.184540 369.563660,313.893036  C370.336823,315.784790 370.168213,317.356659 368.309052,318.828003  z\"})),_path1498||(_path1498=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M390.687805,303.779297  C390.501953,306.674133 388.509918,308.235779 386.280884,309.892792  C386.256134,307.835419 387.416443,306.150269 388.733154,304.205505  C389.380341,303.616272 389.842346,303.471924 390.687805,303.779297  z\"})),_path1499||(_path1499=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M367.694977,376.037659  C369.143707,376.867615 368.980652,378.104614 368.966064,379.659119  C367.522675,379.961853 365.891724,380.058441 365.445374,378.309357  C365.101715,376.962616 366.200989,376.390930 367.694977,376.037659  z\"})),_path1500||(_path1500=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M282.103241,649.863037  C282.654633,647.730286 284.435120,647.857178 285.703339,647.150818  C285.296417,649.170471 285.725891,652.176514 282.103241,649.863037  z\"})),_path1501||(_path1501=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M273.640167,660.012451  C274.007629,660.446350 274.004211,660.890198 274.000427,661.667053  C273.389374,663.647339 273.003876,665.514709 270.322388,665.226257  C270.010315,665.009766 270.002411,665.002197 269.998169,664.998657  C270.176636,662.738770 270.222351,660.392151 273.640167,660.012451  z\"})),_path1502||(_path1502=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M272.371857,570.860840  C270.435577,568.386230 271.976135,567.492249 274.601807,566.986328  C275.268890,568.871704 274.293915,569.985596 272.371857,570.860840  z\"})),_path1503||(_path1503=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M336.249268,569.200684  C335.251251,568.997437 334.500061,568.999695 333.373230,569.004639  C332.818787,566.666199 334.034241,565.822205 336.597168,566.016113  C336.985168,566.461731 336.989105,566.903870 336.993469,567.677917  C337.172577,568.171570 337.351227,568.333313 337.260834,568.736633  C336.991791,568.978149 337.000641,568.994812 336.993225,568.992615  C336.822571,569.128967 336.659363,569.267578 336.249268,569.200684  z\"})),_path1504||(_path1504=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M339.014343,477.118896  C342.086334,476.155884 340.813690,478.047729 340.306122,478.918793  C339.807892,479.773804 338.889252,481.356293 337.725220,480.230530  C336.656006,479.196350 338.451904,478.361664 339.014343,477.118896  z\"})),_path1505||(_path1505=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M334.362549,396.937103  C333.218414,396.833893 332.198090,396.686584 332.493561,395.572113  C332.847137,394.238464 334.084686,394.058075 335.638062,394.003052  C335.948425,395.128601 336.115265,396.355896 334.362549,396.937103  z\"})),_path1506||(_path1506=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M327.002838,568.002441  C329.583893,568.505676 328.966248,570.011841 328.126068,571.580750  C327.802704,572.184631 327.177246,572.766785 326.651764,572.264465  C325.412231,571.079529 326.859192,569.903320 326.962067,568.351929  C327.003174,568.005554 327.000000,568.000000 327.002838,568.002441  z\"})),_path1507||(_path1507=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M368.658630,369.079102  C368.852142,370.497040 368.696503,371.987366 368.282410,373.744873  C366.680695,372.307343 366.301880,370.659302 368.658630,369.079102  z\"})),_path1508||(_path1508=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M310.293701,471.139984  C310.565491,469.858704 307.235199,466.900635 311.808655,467.786621  C312.013184,468.466248 312.011902,468.904175 312.008606,469.670776  C311.808533,470.726898 311.286987,471.101013 310.293701,471.139984  z\"})),_path1509||(_path1509=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1E1F\",opacity:1,stroke:\"none\",d:\" M298.266998,660.736572  C296.621399,659.969604 297.103058,658.790466 297.864136,657.300903  C298.115875,656.695068 298.306580,656.440002 298.776672,656.118164  C298.833862,657.490417 298.681671,658.981750 298.266998,660.736572  z\"})),_path1510||(_path1510=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M336.355652,391.949463  C336.260620,390.889679 336.496826,389.756775 336.884308,388.304443  C338.244171,389.400818 338.581238,390.738586 336.355652,391.949463  z\"})),_path1511||(_path1511=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M275.376343,561.966125  C275.048676,560.898987 274.865509,559.672180 276.622681,559.060547  C276.961273,560.136658 277.114044,561.347351 275.376343,561.966125  z\"})),_path1512||(_path1512=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M309.991821,471.245056  C310.490631,470.733582 310.990326,470.477753 311.748291,470.110718  C313.392334,471.912659 311.821838,471.818848 310.331909,472.003937  C310.006134,471.841248 309.999420,471.670959 309.991821,471.245056  z\"})),_path1513||(_path1513=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M381.645935,313.060242  C381.980560,314.131256 381.535767,315.050018 380.335205,315.890594  C380.050323,314.898773 379.861664,313.666779 381.645935,313.060242  z\"})),_path1514||(_path1514=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M320.421997,582.649048  C320.627197,583.384155 320.371674,583.652771 319.799530,583.538086  C319.681061,583.514282 319.522247,583.345459 319.504364,583.225281  C319.418671,582.648987 319.697479,582.405518 320.421997,582.649048  z\"})),_path1515||(_path1515=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M334.426514,525.647034  C334.633118,526.385803 334.375397,526.654419 333.801147,526.539307  C333.681946,526.515503 333.521820,526.346375 333.503906,526.225891  C333.417786,525.646484 333.699371,525.403381 334.426514,525.647034  z\"})),_path1516||(_path1516=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M350.294922,337.965454  C350.186279,337.454742 350.359253,336.905243 350.766113,336.177246  C351.997009,336.891418 351.775360,337.516357 350.294922,337.965454  z\"})),_path1517||(_path1517=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M361.997772,409.247162  C362.442993,408.998901 362.887177,409.000244 363.664459,409.005066  C363.997986,409.450287 363.998413,409.891998 363.998810,410.665039  C363.449310,410.818848 362.899841,410.641357 362.170654,410.229919  C361.990936,409.995972 361.996765,409.496765 361.997772,409.247162  z\"})),_path1518||(_path1518=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M391.029388,303.782349  C390.552673,303.997864 390.106567,303.996552 389.325684,303.993958  C388.991425,303.550934 388.991974,303.109192 388.991974,302.336182  C389.566589,302.208344 390.141693,302.411804 390.900787,302.871765  C391.084747,303.128296 391.059998,303.565521 391.029388,303.782349  z\"})),_path1519||(_path1519=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M235.239441,752.178345  C235.908218,748.510925 235.564285,744.086609 238.133118,741.788879  C241.993973,738.335571 242.531769,733.485840 244.561707,729.179016  C247.066238,730.941162 244.320740,732.592102 245.418732,734.060425  C247.070633,734.548096 247.488739,732.003845 249.283951,732.486450  C250.206375,733.671326 248.318756,735.801880 250.722076,736.869751  C251.002808,737.461426 251.003006,737.896667 251.003723,738.658630  C248.554565,740.772095 247.556488,743.348206 246.966080,746.515442  C246.278000,748.260925 244.934814,749.187683 244.175110,750.897095  C243.868546,751.350159 243.723495,751.515930 243.290878,751.844543  C242.182434,752.592041 241.361572,753.176697 240.269135,753.897827  C238.645279,750.746582 237.818039,754.944702 236.324478,754.134521  C235.824112,753.452271 235.648224,752.904480 235.239441,752.178345  z\"})),_path1520||(_path1520=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M243.012207,752.392090  C243.005615,751.840454 243.007935,751.673645 243.012817,751.256714  C244.220596,749.818054 245.431534,748.645874 247.672272,749.744507  C247.997299,753.694580 247.998581,757.386658 247.998413,761.539429  C247.996948,762.000000 247.498779,762.000000 247.249695,762.000000  C244.014984,759.641479 244.062393,755.974365 243.012207,752.392090  z\"})),_path1521||(_path1521=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1E1E\",opacity:1,stroke:\"none\",d:\" M270.009460,665.416504  C271.879059,665.031616 272.155670,663.043091 273.711853,662.153198  C273.682587,665.617371 277.801758,670.300903 271.241760,672.736694  C266.739044,671.150024 271.438721,668.062622 270.009460,665.416504  z\"})),_path1522||(_path1522=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M268.003174,742.621887  C267.144531,745.597473 265.833374,745.668884 264.085693,743.347290  C265.444275,740.297485 265.410309,736.940735 267.947815,734.515747  C269.715302,737.084290 267.798767,739.705444 268.003174,742.621887  z\"})),_path1523||(_path1523=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M246.143341,747.350281  C245.936432,743.549194 246.718903,740.555054 250.649689,739.032837  C249.738998,741.612915 249.155441,744.405029 248.989410,747.645020  C247.988007,748.817200 247.111649,748.550598 246.143341,747.350281  z\"})),_path1524||(_path1524=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M258.978333,731.381104  C259.818695,729.423462 259.984558,727.583313 259.043488,724.826904  C263.121887,727.782715 260.101044,731.395264 262.606018,734.104553  C259.948639,734.151489 260.009888,732.378113 258.978333,731.381104  z\"})),_path1525||(_path1525=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M245.698166,747.149048  C246.775650,747.309570 247.562134,747.621582 248.665009,747.961914  C248.729019,748.490112 248.476608,748.989929 248.110107,749.746094  C246.576782,750.304871 245.157562,750.607300 243.376846,750.958130  C243.027298,749.264282 244.142456,748.234131 245.698166,747.149048  z\"})),_path1526||(_path1526=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M258.983276,722.471130  C258.144745,722.001831 258.043732,721.418762 258.438812,720.847290  C258.757751,720.385986 259.265411,720.389709 259.570831,720.864075  C259.945007,721.445251 259.838013,722.027344 258.983276,722.471130  z\"})),_path1527||(_path1527=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M251.389160,818.253174  C254.263565,817.793823 253.006927,819.981934 253.600449,821.382629  C251.447815,821.231689 252.065277,819.438599 251.389160,818.253174  z\"})),_path1528||(_path1528=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M258.277740,797.855225  C258.055084,796.867004 257.883057,795.622559 259.662903,795.059448  C259.955444,796.128723 259.543579,797.068909 258.277740,797.855225  z\"})),_path1529||(_path1529=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M322.382141,609.018066  C323.545105,604.516296 322.646057,599.844482 323.070953,595.277954  C323.354401,592.231689 322.405396,587.904053 327.990540,588.320129  C328.990479,588.394531 328.931946,587.156189 328.982941,586.359253  C329.197113,583.012207 330.811676,580.197632 332.682800,577.179565  C334.322510,579.103516 332.318970,582.338867 335.666443,583.934509  C336.477142,587.579834 332.906799,589.021851 331.788818,591.907349  C330.053955,596.385071 330.270813,601.335938 327.939728,605.566772  C327.380249,606.582275 327.190063,607.391785 328.428741,607.975525  C330.457214,608.931458 330.428345,610.753967 329.527374,612.153687  C328.463531,613.806458 328.963867,614.186646 330.138336,615.570374  C331.776093,617.500183 331.181610,620.370056 328.101624,620.327942  C325.992706,620.299133 325.470184,622.047058 323.787628,622.457214  C321.872742,619.689880 324.096283,617.539124 324.786896,615.186218  C325.516846,612.699158 327.010284,609.886963 322.382141,609.018066  z\"})),_path1530||(_path1530=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M308.049927,657.312256  C308.177582,655.630798 307.489014,653.970276 309.651733,653.081787  C310.381470,654.771851 311.083252,656.531921 310.037415,658.659058  C309.106262,658.901184 308.340973,658.626221 308.049927,657.312256  z\"})),_path1531||(_path1531=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M237.698334,764.859741  C239.181885,764.486389 240.427399,764.265564 240.738693,765.886780  C241.038116,767.446045 241.987244,769.974121 240.801483,770.488708  C238.564545,771.459534 237.068954,775.091553 233.396225,772.991455  C231.844711,771.176819 232.993668,770.249878 234.680756,769.203247  C235.835510,768.445740 235.988052,767.593750 236.001419,766.344971  C236.284973,765.381287 236.707123,764.906433 237.698334,764.859741  z\"})),_path1532||(_path1532=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M234.649628,768.847656  C234.371246,770.110535 233.749451,771.222229 233.078705,772.656250  C233.007065,775.575012 233.010895,778.171936 232.948700,780.767334  C232.923935,781.800598 232.680603,782.849854 231.266846,782.461609  C230.333771,782.205261 228.999939,781.518005 229.748657,780.504395  C231.978806,777.485291 230.684418,774.152527 230.962555,770.983215  C231.169037,768.630432 231.848190,767.503540 234.649628,768.847656  z\"})),_path1533||(_path1533=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M238.000763,764.626831  C237.504517,765.258728 237.010284,765.519958 236.260712,765.895752  C232.729630,763.306885 236.658081,760.376953 235.870438,757.299683  C236.328857,756.666077 236.719177,756.431946 237.509796,756.280151  C238.075363,756.354187 238.293625,756.431824 238.754364,756.758423  C240.810638,759.717773 237.666702,761.748352 238.000763,764.626831  z\"})),_path1534||(_path1534=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M230.117126,764.590088  C227.851486,764.926453 227.081360,766.076843 226.744049,767.968140  C226.549576,769.058411 225.713776,770.302002 224.319031,768.907410  C223.692963,768.281433 226.023544,761.557312 226.996460,761.408936  C229.151169,761.080261 230.393372,762.092224 230.117126,764.590088  z\"})),_path1535||(_path1535=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M238.199280,756.796753  C237.556503,757.000000 237.111786,757.000000 236.333527,757.000000  C236.000015,756.250000 236.000015,755.500000 236.000015,754.375000  C238.360611,752.982361 238.305588,750.278259 240.002655,748.192261  C241.117599,750.107727 239.560379,751.742432 239.995422,753.654419  C239.997559,754.034180 239.996964,754.508545 239.997253,754.745728  C239.464005,755.519653 238.935318,756.061218 238.199280,756.796753  z\"})),_path1536||(_path1536=/*#__PURE__*/React.createElement(\"path\",{fill:\"#18181C\",opacity:1,stroke:\"none\",d:\" M228.689484,774.785156  C228.909393,776.755310 229.312073,778.649536 227.524368,779.997681  C226.526077,778.637817 227.213547,777.150757 227.002594,775.398560  C227.384705,774.627991 227.843689,774.477539 228.689484,774.785156  z\"})),_path1537||(_path1537=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1B1D\",opacity:1,stroke:\"none\",d:\" M238.250153,757.001282  C238.098511,756.107239 238.373352,755.341980 239.683502,755.038818  C239.820587,755.536926 239.643616,756.090881 239.231750,756.826050  C238.996872,757.007324 238.499069,757.002563 238.250153,757.001282  z\"})),_path1538||(_path1538=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M228.954010,774.718262  C228.555389,775.007751 228.111877,775.008240 227.335770,775.011658  C227.099991,774.374512 227.153488,773.608887 227.954086,773.560181  C228.253677,773.541931 228.589676,774.122070 228.954010,774.718262  z\"})),_path1539||(_path1539=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M278.000610,722.999939  C278.001221,722.999878 278.423187,723.253662 278.423187,723.253662  C278.423187,723.253662 278.101807,723.240051 278.050293,723.121216  C277.998779,723.002441 278.000000,723.000000 278.000610,722.999939  z\"})),_path1540||(_path1540=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M269.845917,748.099915  C269.996338,748.006958 269.997711,748.501099 269.997620,748.748108  C269.896881,748.727722 269.796173,748.460266 269.845917,748.099915  z\"})),_path1541||(_path1541=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M295.846283,800.796753  C295.268402,801.951782 294.632935,803.226318 293.629486,802.217957  C292.444275,801.026978 293.405609,799.482666 294.463135,798.884460  C295.981934,798.025269 295.763855,799.592346 295.846283,800.796753  z\"})),_path1542||(_path1542=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M342.650208,697.005737  C344.111450,697.730042 347.325195,697.451843 345.632996,699.645691  C342.994568,703.066345 344.908600,704.219116 347.215302,705.811401  C346.586731,706.426453 346.178406,706.870300 345.262024,707.023315  C341.158295,705.037170 342.489929,700.601746 340.534088,697.732361  C341.122864,697.492859 341.711639,697.253357 342.650208,697.005737  z\"})),_path1543||(_path1543=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M344.961609,707.403320  C345.443512,706.703491 345.925537,706.380554 346.707458,706.028809  C346.958740,708.445068 346.854218,710.896973 347.948792,713.603027  C347.442413,714.831909 346.590393,714.987366 345.338745,714.994385  C343.948029,712.597839 344.279999,710.190063 344.961609,707.403320  z\"})),_path1544||(_path1544=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M341.353516,714.426636  C340.613281,714.633911 340.345978,714.374146 340.460449,713.800171  C340.484222,713.680786 340.653412,713.520142 340.773987,713.502258  C341.354431,713.415955 341.596924,713.698914 341.353516,714.426636  z\"})),_path1545||(_path1545=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M365.999451,460.410858  C365.832703,458.152618 366.070587,456.292694 367.001312,454.744415  C368.145294,452.841431 368.564850,454.343994 368.983215,455.715820  C369.894104,456.787079 370.422211,457.733734 370.648102,459.203247  C370.745422,460.408508 370.704041,461.292969 371.014526,462.484314  C371.971985,466.015228 373.424713,469.193237 371.231689,472.753479  C368.718384,474.377014 368.100098,476.635773 368.552673,478.907684  C369.362183,482.971375 368.757111,487.028809 369.000519,491.541382  C364.808960,489.576721 366.362701,485.446350 366.002075,481.444092  C366.002655,480.558075 366.002472,480.111542 366.003174,479.330048  C366.651031,472.936371 366.533691,466.877777 365.999451,460.410858  z\"})),_path1546||(_path1546=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M337.252655,569.247681  C336.991791,568.978149 336.992676,568.493835 336.993286,568.251831  C341.282654,567.323364 341.435120,567.793823 338.988220,574.376770  C337.134277,573.131226 338.638794,570.906738 337.252655,569.247681  z\"})),_path1547||(_path1547=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M346.282135,476.800201  C344.869781,475.327301 345.283386,473.812836 346.754639,472.190308  C351.219025,473.972931 346.938904,475.088043 346.282135,476.800201  z\"})),_path1548||(_path1548=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M346.379700,457.999847  C346.498627,457.121887 346.996063,456.242554 347.734009,455.181946  C348.993011,455.177216 350.755646,454.703766 350.428650,456.414795  C350.087524,458.199463 348.206665,457.942108 346.379700,457.999847  z\"})),_path1549||(_path1549=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M346.996094,465.676453  C346.358307,465.899231 345.596008,465.835480 345.558807,465.038483  C345.544830,464.738800 346.124084,464.411438 346.721924,464.057861  C347.007172,464.460968 347.003357,464.902863 346.996094,465.676453  z\"})),_path1550||(_path1550=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M359.044373,463.447266  C359.717346,463.817383 359.728882,464.189575 359.245911,464.518646  C359.145203,464.587311 358.911530,464.583740 358.813080,464.511993  C358.343781,464.169647 358.358521,463.797791 359.044373,463.447266  z\"})),_path1551||(_path1551=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M349.448364,460.954895  C349.817627,460.281830 350.189026,460.273590 350.517029,460.754730  C350.585632,460.855438 350.582825,461.088684 350.511322,461.186768  C350.169312,461.656006 349.798279,461.639069 349.448364,460.954895  z\"})),_path1552||(_path1552=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M365.792419,479.149506  C366.652191,479.436127 366.970856,479.958740 366.213745,480.850037  C365.353149,480.564117 365.030975,480.042236 365.792419,479.149506  z\"})),_path1553||(_path1553=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1D1D1F\",opacity:1,stroke:\"none\",d:\" M336.001892,569.247437  C336.002441,568.995117 336.494263,568.992676 336.740051,568.991577  C336.873383,569.303467 336.685486,569.561646 336.211639,569.884644  C336.001251,569.836243 336.001312,569.668030 336.001892,569.247437  z\"})),_path1554||(_path1554=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M379.767456,530.232788  C382.118225,529.975769 382.344177,532.769226 384.686646,532.956604  C385.652069,533.492615 386.026154,534.151489 386.334900,535.275208  C386.462921,536.908691 387.021942,538.155884 386.233215,539.717285  C380.774261,538.897888 379.776031,534.937195 379.767456,530.232788  z\"})),_path1555||(_path1555=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M391.482361,549.405518  C388.578491,548.180115 387.942810,545.380615 387.009674,542.369873  C387.393860,541.612366 387.863739,541.389587 388.811279,541.364502  C390.914093,541.948853 391.847870,543.167786 392.283569,545.262390  C392.402130,546.727661 392.366272,547.784851 391.482361,549.405518  z\"})),_path1556||(_path1556=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M389.312622,541.706055  C388.565460,541.990723 388.118835,541.993591 387.337341,541.998230  C386.685516,541.531616 386.368591,541.063293 386.018982,540.302368  C385.695312,538.882874 385.404358,537.755981 385.095215,536.278687  C386.400482,534.966370 387.624084,535.440430 389.128479,536.469910  C389.743103,537.207703 389.971008,537.704712 390.171021,538.650513  C390.248505,539.906494 390.046600,540.695557 389.312622,541.706055  z\"})),_path1557||(_path1557=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M393.200195,551.614380  C392.447449,551.820618 391.897308,551.640503 391.166656,551.226013  C390.986115,550.991638 390.989746,550.500610 390.989441,550.255188  C390.989166,550.009766 391.000824,549.999329 391.005310,549.994995  C392.435699,549.188049 393.159882,549.742676 393.200195,551.614380  z\"})),_path1558||(_path1558=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M357.523132,768.536743  C357.481445,768.559082 357.564850,768.514404 357.523132,768.536743  z\"})),_path1559||(_path1559=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M389.266785,536.716125  C387.898285,536.701477 386.819977,536.373657 385.409302,535.987061  C385.062469,535.196106 385.047913,534.463928 385.030212,533.364380  C385.866119,532.251221 386.220367,531.310425 385.364685,530.475952  C381.972443,527.167664 381.340942,522.544739 379.257050,518.244019  C379.925598,514.945923 377.548920,512.748413 376.898163,510.098541  C373.948853,498.088837 372.981598,485.808014 371.248901,473.295563  C371.676941,469.413879 370.134888,466.092102 369.873108,462.318237  C369.998322,461.556976 369.998657,461.111786 369.994690,460.332672  C369.671173,458.906372 369.350311,457.813934 369.025513,456.376587  C371.105194,455.625854 370.864563,454.204132 370.731171,452.585388  C370.079834,444.682281 369.545410,436.769531 368.956909,428.426819  C368.622742,427.593719 368.488342,427.138733 368.744019,426.317963  C369.901123,421.266724 368.563629,416.514954 369.016144,411.774658  C369.165863,410.206543 368.408203,408.407715 370.465271,407.064575  C373.061157,408.558441 373.043060,411.008148 373.201660,413.770813  C373.049561,415.377045 372.504333,416.576935 373.077515,418.204773  C373.316711,419.630981 373.296509,420.681427 373.086609,422.133301  C371.776306,430.846161 373.192688,439.096863 373.970612,447.307495  C374.471344,452.592926 374.537231,457.877777 374.866272,463.152618  C375.462830,472.715881 376.322845,482.269836 378.147919,491.636169  C379.312408,497.612518 380.110931,503.668945 381.732727,509.618591  C383.709442,516.870361 386.735809,523.623047 389.436188,530.979004  C389.523773,533.067749 390.474854,534.718567 389.266785,536.716125  z\"})),_path1560||(_path1560=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M413.292603,732.751465  C409.667755,729.015686 408.213257,723.958984 405.392334,719.649170  C404.328339,718.023682 401.853394,717.205200 401.965027,714.416077  C402.683197,712.920654 403.870941,712.863403 405.033569,712.743958  C405.682465,712.677307 406.869171,712.388245 406.685394,712.065735  C404.889801,708.915100 408.607666,706.137512 406.884338,702.697021  C404.879730,698.695007 404.033691,694.266846 407.561157,690.080017  C409.276367,688.044128 409.418793,685.097778 409.165527,682.404419  C408.924133,679.836914 408.737915,677.500610 411.197754,675.680481  C413.367981,674.074646 410.826935,672.382690 410.972900,670.346069  C410.998871,669.554810 410.989532,669.113098 410.975342,668.340149  C410.416656,665.822205 413.532715,665.301819 412.961121,662.945068  C410.721283,660.183167 407.159393,659.448425 405.260406,656.233215  C405.023621,655.977844 405.009796,655.987244 405.017090,655.981079  C405.115051,654.988647 404.830048,653.467834 405.354614,653.099243  C410.426819,649.535706 406.657227,645.216919 404.676727,643.696716  C399.234741,639.519470 400.968079,634.928345 403.728668,631.493835  C407.310181,627.037964 405.584290,624.061096 403.116364,620.545654  C402.762512,620.041565 402.563629,619.428711 402.325562,618.933838  C404.395233,616.834656 405.615326,620.245361 407.685333,619.233948  C408.151367,614.661560 403.186310,612.103821 403.012756,607.374390  C407.138489,607.978210 411.395233,608.608398 415.359619,610.045227  C418.484222,611.177551 417.793579,609.208740 418.049591,607.337158  C422.149323,605.252930 422.603943,608.099426 422.828064,610.906067  C423.156189,615.015259 423.671143,619.063477 425.486206,623.217773  C426.411652,624.657959 426.834808,625.856934 426.517059,627.552917  C423.741760,629.882385 421.781494,627.276794 419.521515,626.814941  C415.468658,625.986633 414.883362,626.353577 415.110809,630.397095  C415.157501,631.227417 415.353668,632.202820 414.891510,632.817993  C412.142914,636.476440 412.563507,640.585022 412.227173,644.842651  C411.930634,648.596191 413.252869,649.861145 416.141052,651.380249  C416.574158,652.064148 416.707275,652.501709 416.736816,653.300415  C416.158295,655.329346 416.048492,656.945435 417.747009,658.541504  C419.952698,660.990662 420.958038,663.671936 421.827545,666.810547  C421.632843,670.166443 420.573944,672.678345 418.811310,675.254578  C416.102753,679.213440 414.572540,683.760010 416.889771,688.685669  C417.863251,690.755005 418.121552,693.104797 419.317932,695.510132  C419.458405,696.112427 419.470001,696.361694 419.363220,696.964172  C414.791565,698.172363 414.987823,701.319397 415.767792,704.608521  C416.356689,707.091736 416.196747,709.503845 415.686737,711.950317  C415.141083,714.567688 414.868134,717.263489 415.943390,719.750488  C418.044891,724.611206 416.842621,728.729370 413.292603,732.751465  z\"})),_path1561||(_path1561=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M400.003052,608.997559  C400.111328,609.121460 400.216583,609.247803 400.321808,609.374207  C400.247955,609.330811 400.174103,609.287415 400.047852,609.125061  C399.995422,609.006042 400.000000,609.000000 400.003052,608.997559  z\"})),_path1562||(_path1562=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M410.602417,669.997681  C413.208649,672.695129 416.806335,675.371643 410.716858,677.873657  C409.346832,678.436523 410.330597,679.890503 410.464874,680.980225  C410.998840,685.313965 410.319427,689.041931 407.645020,692.972595  C405.371613,696.313904 406.538513,700.807007 409.393250,704.150940  C410.957214,705.983032 412.425751,707.314026 408.366577,707.441956  C406.531433,707.499817 407.115967,708.957031 407.691132,710.039001  C408.339417,711.258606 410.437622,712.017944 409.317474,713.786743  C408.058197,715.775269 406.284088,713.805237 404.748413,714.006042  C404.093994,714.091614 403.418518,714.016174 402.348572,714.029541  C401.638153,713.912598 401.384827,713.712708 401.056030,713.237305  C400.278961,710.944275 399.630371,708.859558 398.966797,706.404785  C403.184052,702.413696 401.008698,697.787476 400.374847,693.763123  C399.664032,689.250061 399.742035,685.227295 400.797791,680.684021  C401.586639,677.289612 403.678741,675.440613 405.051361,672.822510  C406.296539,670.447571 407.839813,669.774048 410.602417,669.997681  z\"})),_path1563||(_path1563=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M405.014954,656.392334  C407.985504,657.631531 411.323425,658.714233 413.764587,661.773315  C413.534393,665.135986 410.882263,664.762268 408.372864,665.112244  C404.826233,663.065857 404.952332,659.923157 405.014954,656.392334  z\"})),_path1564||(_path1564=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M408.136353,665.296509  C409.611725,663.624329 411.574341,663.033081 413.793701,662.238159  C416.973724,662.724609 415.442719,664.261841 414.486176,665.381287  C413.701965,666.299011 412.520844,666.877563 411.243103,667.807617  C409.388489,667.965637 408.885590,666.715759 408.136353,665.296509  z\"})),_path1565||(_path1565=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M425.348694,624.075073  C420.945831,620.537170 422.002838,615.589050 421.552002,611.200378  C421.324585,608.987000 421.294647,607.385742 418.425293,606.981689  C417.822113,601.213013 418.484375,595.410889 417.044678,589.729187  C416.925446,589.258606 416.883057,588.694763 417.024292,588.242737  C420.230286,577.981812 413.767578,571.714417 407.293091,565.169312  C406.992310,565.014465 406.961121,564.532349 406.950073,564.291016  C406.760620,563.518982 406.888977,563.077332 407.675323,562.589905  C413.846741,563.123108 415.333130,568.646973 418.938232,572.328186  C421.976257,577.176575 426.429871,580.935791 426.422760,586.873291  C426.415741,592.754700 428.250183,598.582764 426.665192,604.523682  C425.712738,608.093872 426.090149,611.678345 427.008759,615.325317  C427.749908,618.267883 428.457123,621.562927 425.348694,624.075073  z\"})),_path1566||(_path1566=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M408.191040,562.669922  C407.784149,563.196899 407.501678,563.398926 407.079102,563.825317  C402.626434,563.708496 402.888153,558.608521 399.351562,557.049561  C399.000000,557.004883 399.000000,557.000000 398.997559,557.000000  C397.666077,555.537598 396.004639,554.257812 396.346497,551.599487  C399.623749,548.906494 400.546783,552.260315 402.569092,553.735779  C403.015656,554.114746 403.180145,554.280518 403.550568,554.726135  C404.461945,556.943298 405.710052,558.497009 407.418304,560.144531  C408.027649,560.996887 408.273773,561.634949 408.191040,562.669922  z\"})),_path1567||(_path1567=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M397.153015,550.629517  C396.540161,553.152222 398.372742,554.490417 398.953400,556.644470  C395.885895,556.944702 395.858856,553.339966 393.296387,552.155823  C392.903992,551.109009 392.629089,550.347168 391.322784,550.045288  C391.010437,548.919556 391.011139,547.848450 391.019531,546.375671  C391.627869,545.446777 392.320740,545.178162 393.499054,545.319275  C395.661652,546.573669 396.879822,548.134766 397.153015,550.629517  z\"})),_path1568||(_path1568=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M408.292297,848.339966  C408.516083,847.229004 408.797852,846.442688 409.159790,845.352478  C410.187347,843.378601 411.594238,842.344177 413.874054,841.957825  C418.310150,842.557617 418.708984,846.191467 420.024872,849.015503  C420.838806,850.762268 421.605408,852.561768 421.787659,854.887207  C420.538605,858.025574 418.836060,860.786255 421.637726,864.014038  C422.147034,865.266418 422.176666,866.218079 421.744446,867.516663  C419.079132,869.159485 421.706451,869.967590 422.034485,871.379456  C422.626282,874.417603 422.419128,877.103821 422.328796,880.187012  C421.391907,883.465210 422.827271,886.305298 422.435791,889.569214  C422.389435,893.418030 420.714752,896.557739 420.445984,900.377808  C420.320984,901.316284 420.183167,901.838989 419.784149,902.708008  C419.072968,903.739990 418.405945,904.214722 417.270325,904.719910  C416.081757,905.020935 415.290283,904.975891 414.173706,904.537720  C411.919098,901.469299 411.652679,898.101562 413.275909,895.391418  C416.049988,890.759888 415.712738,886.757629 412.662201,882.596375  C411.585236,881.127258 410.798035,879.456482 410.132385,877.346985  C409.832306,875.713074 410.037537,874.516052 410.939209,873.126953  C413.850677,870.421021 411.679169,867.968384 411.099609,865.196350  C410.784760,863.950500 410.774597,863.023743 410.878387,861.751099  C411.823486,858.444519 410.351196,855.815186 409.579102,852.773499  C409.326324,852.281067 409.233185,852.079651 409.022217,851.566711  C408.619263,850.413147 408.555817,849.523682 408.292297,848.339966  z\"})),_path1569||(_path1569=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M410.877075,876.774841  C413.444855,879.989685 414.329224,883.786804 417.210083,886.611389  C419.780701,889.131714 416.628571,892.334229 415.602539,894.074097  C413.763916,897.191772 414.093994,900.036865 414.032654,903.519409  C413.215637,904.953491 412.118408,905.073242 410.533142,904.678467  C408.104523,902.673279 409.431061,900.477722 409.509613,898.050293  C409.462097,896.423889 409.580292,895.167847 409.677307,893.821655  C408.627289,894.279358 407.943787,895.271240 406.458130,895.445068  C400.241974,897.547424 397.901184,895.763306 398.173248,889.389282  C398.299194,886.437988 398.914551,883.461121 397.232910,880.343384  C396.881836,879.823547 396.754456,879.605652 396.536346,879.018921  C396.476349,878.398438 396.507111,878.146790 396.768860,877.592957  C400.048584,871.928467 401.012878,878.478455 403.238647,878.360718  C404.483734,877.380493 403.756317,875.980652 403.835083,874.368103  C406.770721,873.019592 408.393188,875.540588 410.877075,876.774841  z\"})),_path1570||(_path1570=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M401.123962,805.360413  C401.456635,803.365417 401.502533,801.092651 403.958740,801.309631  C405.871094,801.478638 406.335785,803.445801 406.737152,804.978821  C407.262878,806.986755 407.919830,808.989502 407.405609,811.201904  C407.219330,812.003235 408.173492,813.264465 409.224823,813.096191  C410.529449,812.887329 409.810303,811.510315 410.045532,810.315552  C413.556061,811.607605 414.429901,815.449524 412.263214,819.194885  C411.487793,820.535400 410.082855,821.201782 408.964264,822.740845  C408.081482,823.645691 407.351379,824.003235 406.094604,824.138672  C404.929840,820.607910 401.797943,817.828796 402.563416,813.734802  C403.075836,810.994202 402.018127,808.337646 401.123962,805.360413  z\"})),_path1571||(_path1571=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M411.161713,876.602600  C410.108368,877.010559 408.940125,880.634644 407.979218,876.848999  C407.508362,874.994080 404.900299,876.092712 404.089325,874.135376  C400.614563,872.420044 398.791107,870.940247 403.322876,868.474915  C405.811920,867.120850 405.097290,864.483765 404.572601,862.175232  C404.112000,860.148376 404.662842,858.290955 405.915466,856.738037  C406.054871,856.565247 407.536316,857.474854 409.023010,857.916992  C409.845551,858.002563 410.040436,858.053711 410.503784,858.245605  C411.445587,858.894714 411.879761,859.546082 411.997101,860.699341  C412.043640,862.057129 412.068604,863.115356 412.106140,864.570190  C411.348511,867.442261 411.143097,869.913818 412.195923,872.702820  C411.865570,874.104736 411.506866,875.181091 411.161713,876.602600  z\"})),_path1572||(_path1572=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M408.173767,842.872314  C401.186951,840.421021 400.442627,837.636414 404.951019,831.197937  C406.793427,830.757629 408.777527,828.370850 410.004730,831.917725  C409.948730,834.806641 409.311920,837.312988 409.365295,840.247375  C409.221863,841.363403 408.945343,842.049011 408.173767,842.872314  z\"})),_path1573||(_path1573=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M409.517578,832.165649  C408.878143,831.657532 408.687317,830.287781 408.344086,831.044250  C407.311707,833.319580 406.542969,831.850586 405.378326,831.035950  C404.163666,828.701416 408.218292,827.164673 405.801392,824.483643  C406.237732,823.802429 406.791412,823.446350 407.991272,823.163330  C409.650909,824.123779 410.767242,824.901611 411.742462,826.319336  C412.422272,828.393555 412.306091,830.051697 410.864655,831.796021  C410.342285,832.127502 410.106140,832.213806 409.517578,832.165649  z\"})),_path1574||(_path1574=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M408.010193,843.345093  C407.931152,842.296204 408.001312,841.506042 408.108398,840.321899  C409.256561,838.126953 409.855530,835.353149 413.256561,837.642822  C414.384979,839.243286 414.727722,840.687805 414.298035,842.618347  C412.745911,843.651367 411.329803,844.330200 409.576813,845.028809  C408.879730,844.566956 408.519531,844.085388 408.010193,843.345093  z\"})),_path1575||(_path1575=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M412.260559,860.766113  C411.511688,860.440063 411.004730,859.881226 410.260559,859.161194  C409.797546,858.768372 409.570496,858.537903 409.172852,858.134949  C409.003510,857.961182 409.013062,857.998230 409.030884,857.985718  C409.030914,857.539551 409.013092,857.105896 408.977051,856.347046  C408.654572,854.730042 408.972290,853.529785 409.800720,852.128723  C412.721832,854.270447 412.255524,857.500977 412.260559,860.766113  z\"})),_path1576||(_path1576=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M393.421509,882.293945  C393.023407,881.581055 393.025269,881.141052 393.027588,880.370911  C392.889801,879.846008 392.751617,879.651123 392.835693,879.175049  C393.058014,878.893982 393.078247,878.585999 393.075623,878.434753  C393.540710,878.239441 394.008423,878.195374 394.829254,878.171753  C395.652557,878.185852 396.090729,878.301208 396.751953,878.772705  C397.007019,879.007324 397.000000,879.000000 396.996704,878.996338  C398.296722,882.279053 396.747314,883.033691 393.421509,882.293945  z\"})),_path1577||(_path1577=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M410.081604,851.660217  C409.826599,853.056152 409.550232,854.215149 409.116333,855.697998  C407.550964,854.484863 407.926147,852.351685 407.152954,850.233032  C408.154999,849.193848 408.927490,849.523560 409.805847,850.676270  C410.035461,850.948181 410.060242,851.423279 410.081604,851.660217  z\"})),_path1578||(_path1578=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M410.027832,850.613953  C409.275360,850.630493 408.515228,850.312805 407.456879,849.928406  C407.336823,849.329041 407.515015,848.796387 407.963745,848.139526  C409.632111,848.137207 410.001892,849.069885 410.027832,850.613953  z\"})),_path1579||(_path1579=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M396.993378,878.719360  C396.511017,878.863953 396.014984,878.720581 395.350677,878.384766  C395.599609,877.870239 396.016815,877.548157 396.716949,877.258423  C396.993164,877.671082 396.986450,878.051270 396.993378,878.719360  z\"})),_path1580||(_path1580=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M402.003357,858.004395  C402.006683,858.008728 402.249115,857.582520 402.249115,857.582520  C402.249115,857.582520 402.230927,857.897400 402.111023,857.945435  C401.991150,857.993408 402.000000,858.000000 402.003357,858.004395  z\"})),_path1581||(_path1581=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M459.076935,788.676880  C458.719025,790.123718 457.945160,791.407593 458.261627,792.308350  C460.552368,798.828796 457.439301,798.754822 452.394104,796.995422  C448.112610,794.959167 444.465729,795.302551 440.825745,797.802551  C438.638000,799.305054 436.648926,801.024414 434.599976,802.680054  C431.265350,805.374817 431.325317,809.508911 434.669556,812.078613  C437.632385,814.355286 437.565735,815.886230 433.916077,816.913513  C430.543640,817.862671 428.622070,822.511658 423.958313,820.396606  C423.248352,819.562500 423.098969,818.873962 423.202698,817.786682  C425.101776,815.681030 426.329285,813.966858 422.698975,812.277344  C421.245880,808.980347 420.220734,805.956116 421.655396,802.351257  C422.176788,801.817200 422.467468,801.615417 422.905762,801.188354  C427.197357,801.291016 428.255066,799.149170 427.680298,795.428528  C427.139832,791.929688 428.726227,787.958557 425.044250,785.180298  C424.417725,784.707520 424.718872,782.581421 425.844696,783.200745  C428.276489,784.538330 431.966034,781.486389 433.469849,785.568970  C433.861206,786.631531 434.945282,786.921631 435.898560,786.061401  C438.073883,784.098755 440.219482,785.763062 442.427551,785.871826  C445.536133,786.024963 448.743835,787.704468 451.894226,785.371765  C454.107574,784.124756 454.558258,786.890381 456.563171,787.025391  C457.825958,787.167542 458.694397,787.400879 459.076935,788.676880  z\"})),_path1582||(_path1582=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M421.552368,802.069092  C422.409729,805.164490 422.933319,808.309998 423.714874,811.742859  C424.610840,812.862793 424.987061,813.779785 424.778046,815.201172  C423.679230,816.966125 422.231293,817.195312 420.895599,816.453186  C419.069214,815.438477 417.513947,816.454224 415.499207,816.629089  C411.839539,815.227661 413.973541,810.507080 410.247803,809.124390  C408.399445,805.482117 408.707001,801.610229 408.211304,797.894104  C407.907166,795.614014 409.875549,793.713318 412.099823,793.361267  C414.681885,792.952576 413.843201,795.667480 414.444244,796.986328  C415.804565,799.971130 416.428009,803.729614 421.552368,802.069092  z\"})),_path1583||(_path1583=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M409.948517,809.278198  C414.806549,808.652893 413.240356,813.136719 414.821533,815.691284  C415.701355,816.696533 416.316132,817.486084 416.456696,818.468140  C417.062408,822.700745 419.793732,824.890625 423.906250,826.292969  C425.254883,827.614197 425.657349,828.995972 425.888672,830.803589  C425.850861,832.781799 424.864197,834.571777 426.944641,836.120056  C428.110748,837.405273 428.731018,838.619446 429.177490,840.306396  C429.436859,841.784546 429.331329,842.955505 429.711670,844.425415  C429.829895,845.244873 429.805298,845.716187 429.576843,846.513428  C429.270721,847.008606 429.102142,847.174561 428.595123,847.441772  C425.462799,847.153503 424.714264,844.587280 423.605957,842.718262  C419.786682,836.277710 415.095306,830.475159 410.469360,824.292358  C409.566132,823.997986 408.963898,823.806274 408.216675,823.207764  C407.989685,822.990540 407.998871,822.998779 408.003601,823.003662  C408.119507,821.908875 407.999878,820.865601 409.216888,820.051514  C413.141663,817.426208 412.774689,814.000305 410.383728,810.176086  C410.064514,809.973938 409.990204,809.509583 409.948517,809.278198  z\"})),_path1584||(_path1584=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M419.667603,786.138733  C423.862274,788.315369 422.460968,792.578552 423.304138,795.953247  C419.227417,793.910034 417.192322,788.460022 419.667603,786.138733  z\"})),_path1585||(_path1585=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M391.294922,854.952148  C390.989716,854.248901 390.981842,853.500305 390.968719,852.377197  C391.939636,852.804688 394.013672,853.369019 391.294922,854.952148  z\"})),_path1586||(_path1586=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M394.959045,855.552673  C394.285461,855.181702 394.275208,854.808716 394.757202,854.478882  C394.857819,854.410156 395.092224,854.413696 395.190491,854.485596  C395.659454,854.828735 395.644104,855.201477 394.959045,855.552673  z\"})),_path1587||(_path1587=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M433.520935,761.000122  C434.095825,761.010559 434.267090,761.018616 434.695190,761.038940  C437.868927,762.742310 438.195892,765.888672 439.101227,768.653076  C440.032166,771.495544 441.246155,773.877625 444.977600,774.264160  C448.324036,775.752075 450.407166,778.022522 451.618774,781.481689  C451.561157,782.089172 451.489136,782.325867 451.152344,782.822754  C446.352264,783.213806 442.332031,782.421753 440.541931,777.461853  C440.393066,777.049377 439.884521,776.483826 439.526611,776.471619  C432.498718,776.231018 431.396393,770.929932 429.726654,765.675720  C428.534943,761.925842 429.462341,760.735779 433.520935,761.000122  z\"})),_path1588||(_path1588=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M450.950317,783.364136  C450.908691,782.904358 450.929810,782.725952 450.973206,782.278992  C452.687653,780.696411 453.852814,781.895386 455.322723,783.156616  C456.304443,784.561523 456.788055,785.734558 456.273499,787.417969  C455.789490,788.284668 455.654205,789.145874 455.235046,789.318604  C454.491882,789.625122 454.163605,788.855774 454.081635,788.213196  C453.934448,787.058594 453.635651,786.015381 452.278137,785.184082  C451.646759,784.567383 451.329926,784.106445 450.950317,783.364136  z\"})),_path1589||(_path1589=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M413.285645,733.130615  C413.063477,732.313965 412.870667,731.454468 413.214691,731.026611  C416.420380,727.040222 415.984924,722.903259 413.977386,718.614258  C413.633331,717.879272 413.172180,716.876465 413.411591,716.240906  C415.793701,709.916809 413.083679,703.392883 414.175934,697.010071  C415.680756,696.618835 416.970947,698.541748 418.717773,697.125671  C421.700226,697.188782 421.499329,699.488525 421.564056,701.073364  C421.778870,706.334839 423.523529,711.047607 425.557495,715.837646  C427.737488,720.971436 426.343811,726.694275 427.153564,732.118347  C428.061798,738.202148 427.457092,738.882324 420.954529,741.159851  C419.749146,741.505127 419.014557,741.359375 418.198181,740.351562  C417.091095,738.862305 416.234070,737.682922 415.193542,736.239746  C414.985962,734.833557 414.517914,733.930115 413.285645,733.130615  z\"})),_path1590||(_path1590=/*#__PURE__*/React.createElement(\"path\",{fill:\"#824630\",opacity:1,stroke:\"none\",d:\" M436.962646,759.383606  C436.375427,755.929688 434.107513,753.929016 432.156006,751.334595  C430.247223,749.686890 427.920074,747.896790 430.376007,745.925232  C434.870575,742.317078 433.671082,738.067139 432.004547,734.202637  C429.493561,728.379944 428.100220,722.448425 426.714905,716.286804  C425.432098,710.581177 423.434265,704.942322 422.439972,699.039185  C421.577850,693.920959 422.006439,689.123047 424.032928,684.413757  C424.697266,682.869873 425.293732,681.326294 424.798523,678.915405  C424.478668,678.012390 424.381561,677.790710 424.139038,677.232422  C423.643921,675.945190 423.415833,674.983643 423.974762,673.677307  C425.521179,672.421631 426.975647,671.995972 428.967957,672.238586  C430.073120,672.706116 430.549408,673.289429 430.897827,674.420288  C431.012726,682.652527 430.536865,690.534668 431.994965,698.690186  C432.622559,701.688416 432.056519,704.329224 431.990540,706.974548  C431.870880,711.771912 433.132874,715.785217 437.827728,718.062622  C439.190826,718.723877 439.256226,720.196594 439.492096,721.490112  C440.117706,724.921204 440.506927,728.378784 440.711945,731.862488  C440.869751,734.543640 441.312073,737.087952 443.564423,739.025452  C445.527740,740.714355 445.334930,743.141235 445.357788,745.497864  C445.406891,750.559692 443.948334,755.631714 445.917145,760.708252  C446.583740,762.427063 446.381073,764.680420 444.490173,766.494324  C439.641174,766.583679 437.746552,763.755310 436.962646,759.383606  z\"})),_path1591||(_path1591=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M425.721008,677.200806  C427.815033,679.127930 427.339447,681.562805 426.202087,683.537231  C420.893677,692.752625 423.879120,702.238037 426.538971,710.947144  C427.820374,715.142822 428.932892,719.065918 428.988953,723.360718  C429.010223,724.988037 429.707245,726.257996 430.668518,727.408875  C433.888916,731.264160 433.850983,736.335999 435.650391,740.727600  C436.586731,743.012817 434.400513,744.511475 432.769226,745.418396  C430.131622,746.884644 430.066406,748.358398 431.948547,750.714478  C427.026520,751.954041 425.520599,746.262146 421.206848,745.232910  C420.092896,744.052246 419.778656,742.935303 419.948547,741.325073  C420.195892,740.516357 420.356445,739.673828 420.561523,739.662842  C427.388275,739.297668 425.911713,734.337036 425.528992,730.336914  C424.835663,723.090393 425.169220,715.770447 420.875031,709.022888  C419.016968,706.103149 419.903046,701.437134 419.278259,697.282471  C419.013947,697.000610 419.004852,696.503113 418.998657,696.254395  C417.356964,693.244324 417.224548,690.022095 416.261353,687.053406  C415.815399,685.678833 416.175171,684.352051 417.242676,683.405151  C418.968292,681.874451 419.691925,679.999512 419.952271,677.738953  C420.390656,673.932251 422.203827,674.229553 424.740234,676.731018  C425.019073,676.995972 424.998383,677.003662 424.998566,676.992737  C425.155762,677.114319 425.312805,677.246887 425.721008,677.200806  z\"})),_path1592||(_path1592=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M436.714539,759.123535  C438.907532,761.460571 440.088379,764.596375 443.541168,766.085144  C446.621124,767.145874 446.778961,770.126221 448.477295,772.327881  C448.577911,772.877808 448.578033,773.102478 448.462341,773.640625  C447.606140,774.972534 446.302795,774.148682 445.240112,775.057251  C440.878357,776.351257 439.007416,773.775574 438.140717,770.493835  C437.346100,767.485229 436.245728,764.630981 435.026428,761.410278  C435.452148,760.453918 435.952301,759.856750 436.714539,759.123535  z\"})),_path1593||(_path1593=/*#__PURE__*/React.createElement(\"path\",{fill:\"#554741\",opacity:1,stroke:\"none\",d:\" M419.750488,740.867737  C421.104126,741.838440 420.981293,743.066895 420.987366,744.616577  C418.564880,744.580811 418.277130,742.671021 417.967468,740.402344  C418.460876,740.282593 418.973663,740.523438 419.750488,740.867737  z\"})),_path1594||(_path1594=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M408.145233,778.127808  C408.079224,777.967163 408.509827,777.970520 408.724426,777.970215  C408.696442,778.076111 408.453827,778.182312 408.145233,778.127808  z\"})),_path1595||(_path1595=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M207.313675,609.836792  C203.317551,610.914917 196.048431,619.579712 197.456894,622.895569  C201.584122,632.612244 195.103577,640.632935 194.288422,649.486145  C194.152969,650.957336 193.158676,652.440674 193.317505,653.832092  C194.028870,660.063904 191.298035,658.222534 188.371017,655.999695  C186.513290,661.213135 192.522293,664.505798 191.351959,669.593689  C190.254517,674.364685 187.133102,677.890564 184.353088,681.927979  C184.001221,681.997559 184.000610,682.000000 184.001831,681.996338  C183.865219,681.867981 183.727402,681.743347 183.507141,681.350769  C183.353973,680.518677 183.284897,679.954163 183.080994,679.106934  C182.927597,677.964355 183.030701,677.161072 183.781891,676.230469  C185.275055,673.705505 184.878906,670.827881 186.722702,668.651062  C187.321655,667.943909 187.469223,666.254211 186.137909,665.608582  C185.039200,665.075806 184.323761,666.173218 183.682526,666.867432  C180.376450,670.446716 180.119614,675.664062 177.091064,679.471741  C175.427704,678.559265 176.428589,677.423157 176.709763,676.446533  C178.221924,671.194275 180.728806,665.428101 180.277664,660.636353  C179.721848,654.732849 182.920197,650.464600 183.115662,645.516479  C183.232849,642.549683 182.037598,640.266235 185.603638,638.928711  C185.760162,638.869934 185.404785,637.446350 185.141235,636.329224  C185.880341,633.937134 188.070389,633.048035 189.443329,631.010315  C188.415817,629.243042 185.921677,628.713989 185.052124,626.331299  C185.629288,618.899475 189.015625,612.777954 192.013824,606.534363  C193.032181,604.413574 194.179611,602.299377 193.946381,599.944946  C193.436111,594.794495 197.147141,590.979797 198.172440,586.255859  C198.674744,583.941589 199.838425,581.985168 199.154404,579.385559  C198.782578,577.972473 196.508331,574.909119 201.117859,575.434937  C202.243073,575.563293 202.843735,573.794617 202.817535,572.706299  C202.756439,570.169434 204.248047,568.368958 205.293808,566.323975  C205.951920,565.037048 207.150040,563.781311 206.486267,562.172546  C203.759659,555.564758 207.705521,549.816223 208.980453,543.772888  C209.441620,541.586914 210.148560,538.885864 212.831268,537.306519  C215.381454,535.479370 217.483231,537.613403 220.026184,537.734741  C221.018967,539.351074 220.581146,540.692566 219.661713,541.651184  C216.009460,545.458984 214.600006,550.509094 212.220032,554.675110  C214.367508,552.632263 213.618393,547.514648 218.018417,547.458618  C220.971863,547.421021 223.829865,549.032349 224.377960,553.067627  C223.479691,563.764954 218.554932,573.188599 217.366165,583.387817  C216.445053,591.290588 210.450165,597.352966 210.205963,605.731567  C209.791916,607.056702 209.200226,607.839417 208.331726,608.869629  C207.969543,609.339233 207.801971,609.508850 207.313675,609.836792  z\"})),_path1596||(_path1596=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M220.352051,538.059753  C217.691101,539.090637 215.648376,538.367981 213.345566,537.042480  C206.975922,536.074829 204.798111,537.547913 204.426071,545.046875  C204.240479,548.787476 202.145859,551.249084 201.124084,554.518921  C200.377518,552.240601 201.686905,549.397400 198.470840,548.024780  C197.414001,547.573730 198.452225,545.710449 198.970963,544.446655  C200.393372,540.981079 203.157120,538.164001 203.194855,533.972900  C203.219345,531.250916 205.174820,531.921021 206.599731,533.336975  C208.062088,534.790161 210.112991,535.015259 211.435684,534.106628  C212.803406,533.167053 211.556992,531.388550 211.025482,530.012817  C210.731506,529.252014 210.124390,528.184692 210.410507,527.694580  C212.791260,523.616760 211.486725,518.939941 212.849915,514.350220  C216.266678,517.286255 213.234329,521.679016 214.992264,525.617310  C215.642807,526.858826 216.170731,527.122925 217.402390,526.598694  C219.685760,525.626770 221.202072,526.711731 221.611237,529.512817  C221.058395,531.761414 218.311920,533.460876 221.215393,535.966919  C221.562103,537.029480 221.381424,537.667480 220.352051,538.059753  z\"})),_path1597||(_path1597=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2F31\",opacity:1,stroke:\"none\",d:\" M184.741394,626.000000  C185.423279,626.224426 186.019363,626.336670 186.266403,626.691711  C187.805634,628.904175 192.584381,628.647522 192.102936,630.708008  C191.607910,632.826538 187.959991,634.208435 185.343201,635.956299  C180.576859,635.781494 178.122040,634.004272 179.294708,629.098328  C179.509781,628.198425 178.998352,627.147705 179.077240,626.187500  C179.215317,624.507202 178.030579,621.987732 180.275009,621.410034  C183.083496,620.687134 182.692490,623.862915 183.852295,625.668518  C182.882889,627.178345 182.515060,628.603455 182.703766,630.334351  C182.785690,630.483887 183.045578,630.342651 182.943176,630.165955  C182.605057,628.731262 182.938049,627.589600 183.776581,626.252808  C184.000000,626.000000 184.494263,626.000000 184.741394,626.000000  z\"})),_path1598||(_path1598=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M175.946716,729.348755  C181.968750,729.274536 180.370377,733.190186 179.617050,736.597107  C179.057022,739.129822 178.701889,742.178345 174.384155,740.039185  C175.548630,736.716309 173.349518,732.771484 175.946716,729.348755  z\"})),_path1599||(_path1599=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M181.965179,567.377563  C182.009842,567.011902 182.468079,566.981995 182.697037,566.983765  C183.379059,567.159790 183.832123,567.334045 184.285187,567.508301  C181.440323,573.301147 184.714920,580.253235 180.467514,585.951538  C180.025360,579.884338 179.676666,573.686646 181.965179,567.377563  z\"})),_path1600||(_path1600=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M183.613525,676.020813  C184.002167,677.069519 184.001297,678.134216 184.000687,679.598206  C184.130325,680.166199 184.259720,680.334900 184.195160,680.756714  C184.001221,681.009827 184.002243,681.501343 184.002655,681.747009  C181.708191,682.316528 182.135376,683.792542 182.506332,685.349304  C182.759537,686.411865 182.027161,686.819763 181.082474,686.880127  C180.373367,686.925476 179.373276,686.516052 179.554855,686.014893  C180.761551,682.684204 179.141632,678.289001 183.613525,676.020813  z\"})),_path1601||(_path1601=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M168.000610,742.000000  C166.121445,739.247803 164.886276,736.657654 169.815582,735.780151  C170.827240,736.989502 171.085678,738.070374 170.257370,739.640747  C169.906219,740.897034 169.632721,741.663269 168.313782,741.949341  C167.998810,742.000000 168.000000,742.000000 168.000610,742.000000  z\"})),_path1602||(_path1602=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M177.422775,594.976501  C177.040802,593.359375 176.693909,591.589844 178.665985,590.176636  C181.076035,591.559387 181.030197,591.741150 177.422775,594.976501  z\"})),_path1603||(_path1603=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M164.416473,703.977295  C163.517868,701.891907 164.685928,700.297363 165.922134,698.349609  C168.037598,700.027222 167.982849,700.283630 164.416473,703.977295  z\"})),_path1604||(_path1604=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M170.357391,739.953369  C170.005280,738.934509 170.005081,737.864929 170.008896,736.393982  C171.056625,736.115295 172.404358,735.786377 172.720551,737.236877  C173.054749,738.770081 172.036545,739.505920 170.357391,739.953369  z\"})),_path1605||(_path1605=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M172.434784,704.976562  C172.854874,706.042053 172.971390,707.422424 172.227798,707.311340  C170.412964,707.040161 171.001053,705.458313 171.265335,704.235596  C171.405701,703.585999 171.891922,703.460205 171.646667,704.074219  C171.603943,704.181274 172.066391,704.490051 172.434784,704.976562  z\"})),_path1606||(_path1606=/*#__PURE__*/React.createElement(\"path\",{fill:\"#323F3F\",opacity:1,stroke:\"none\",d:\" M193.559097,543.461304  C194.136108,543.891174 194.493896,544.323059 193.972031,544.665527  C193.401260,545.040100 192.742981,544.873230 192.525787,544.173767  C192.358643,543.635437 192.787827,543.375366 193.559097,543.461304  z\"})),_path1607||(_path1607=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M175.729614,713.887451  C175.524277,714.315857 175.053848,714.631592 174.289185,714.976379  C173.456528,714.584351 172.997742,713.986816 173.733826,713.543823  C174.123322,713.309448 174.875885,713.678345 175.729614,713.887451  z\"})),_path1608||(_path1608=/*#__PURE__*/React.createElement(\"path\",{fill:\"#434346\",opacity:1,stroke:\"none\",d:\" M171.368896,699.958313  C171.565002,700.243469 171.594040,700.643188 171.623077,701.042908  C170.931992,700.958679 171.152313,700.478699 171.368896,699.958313  z\"})),_path1609||(_path1609=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M242.750229,681.687134  C242.857925,683.933899 242.886856,685.906128 242.539032,687.809448  C242.244049,689.423767 242.889282,689.890137 244.626801,689.985107  C246.379761,691.092041 245.779282,692.338318 245.265320,693.583801  C241.687012,702.255188 238.665695,711.215088 233.697922,719.204529  C232.056213,721.844849 232.483109,724.633667 231.420303,727.192078  C230.861542,728.537109 230.648499,730.409668 228.507904,729.614746  C227.130692,729.103271 224.944092,729.297974 225.245071,726.723022  C225.840805,721.626831 220.875046,723.200989 218.672806,721.890015  C216.334885,720.498413 217.602859,724.070251 216.761215,725.163269  C215.609055,726.659485 215.315826,728.350769 215.288864,730.229553  C215.247940,733.079529 213.877396,734.931946 210.381287,734.989258  C210.003662,734.997559 210.000000,735.000000 210.001221,734.998779  C208.206818,731.812561 207.812363,727.776978 204.153244,725.309631  C203.685516,724.203735 203.377365,723.414856 203.041977,722.308105  C205.137405,720.471558 205.655701,717.856201 207.159210,715.899231  C208.410538,714.270508 209.460373,712.585388 212.224030,713.354187  C214.004669,714.553162 214.046173,716.296509 214.377197,718.346252  C215.642426,715.996826 214.000900,715.274963 213.008820,713.932007  C212.182755,709.875244 213.174759,706.734863 216.830200,704.535583  C217.489685,704.652222 217.744995,704.829163 217.987991,705.029785  C218.502014,705.454163 217.627075,705.232422 218.271973,705.401367  C218.916855,705.570374 218.926605,704.805969 218.495041,705.314148  C218.487854,705.322632 218.353943,705.266174 217.862549,704.945068  C214.922867,702.984436 215.776855,700.527588 216.429489,698.182739  C217.010101,696.096619 217.755508,694.061829 215.264832,692.225037  C213.863922,691.099548 214.118149,690.030640 214.524719,688.860596  C214.953140,687.627686 215.558472,686.156433 213.932907,685.393799  C212.552078,684.746033 212.043076,686.362305 211.102219,686.898499  C209.868988,687.601196 210.180573,690.334656 208.123550,689.591064  C205.994080,688.821106 207.932495,686.999207 207.659058,685.679077  C207.392273,684.390930 207.217926,683.083557 207.001495,681.392334  C208.013153,679.990356 209.104355,679.037598 209.535446,677.456299  C208.335693,678.218628 208.449234,679.741699 207.233856,680.754211  C203.227264,682.623108 203.754547,687.233398 201.002747,689.625610  C199.790573,690.679321 199.034271,692.873352 197.274750,692.468994  C194.945953,691.933960 197.371689,689.399109 196.717270,688.919373  C191.985840,685.450562 195.498871,683.005127 197.556854,680.378296  C198.087051,679.701599 198.032288,679.461609 197.354813,678.884766  C195.198166,677.048340 196.385071,675.852173 198.449722,676.034119  C205.449188,676.651001 204.695160,670.708130 204.228134,667.625549  C203.761124,664.543213 204.481201,661.053772 202.349060,658.075195  C200.832993,653.355713 204.688004,652.933655 207.705795,651.780884  C208.150269,653.581055 209.183670,654.420471 210.609909,654.510559  C212.027237,654.599976 212.031601,653.303040 211.960327,652.363770  C211.773300,649.899475 212.777908,649.630798 215.138504,649.526489  C217.947372,649.402344 219.117737,650.641052 219.834320,652.780151  C220.187424,653.834229 219.941025,655.081421 220.021179,656.237366  C220.075836,657.025757 219.887100,658.057678 220.898819,658.330444  C222.195206,658.679932 222.744522,657.643555 222.846191,656.667175  C223.271515,652.582947 225.535706,655.519775 227.292862,655.612061  C227.853806,651.248657 226.289825,645.848755 232.507828,644.098633  C232.859283,643.999695 232.841660,642.589539 232.998520,641.394775  C233.146759,639.787903 233.457336,638.433716 234.902267,638.550110  C236.155762,638.651001 235.868042,640.036743 236.002823,640.989624  C236.697296,645.899109 237.365189,650.813416 238.160583,655.706848  C238.400391,657.182251 238.965973,658.641602 240.803848,658.921509  C242.291428,659.148132 243.038269,658.849670 243.535324,657.068604  C244.011017,655.363953 245.418213,656.086670 245.883621,657.413330  C246.424881,658.956299 246.633835,660.615906 246.982162,662.624146  C245.753403,664.154541 244.758087,665.652039 242.458374,665.553467  C238.291901,663.468384 237.815170,663.793335 236.334213,669.445374  C237.651855,669.915527 238.831329,668.910767 240.481522,669.139221  C242.865265,669.892639 242.535172,671.495178 242.696304,673.176453  C242.961884,675.947510 241.537247,678.637634 242.750229,681.687134  z\"})),_path1610||(_path1610=/*#__PURE__*/React.createElement(\"path\",{fill:\"#413332\",opacity:1,stroke:\"none\",d:\" M207.043579,610.361206  C206.992966,609.995117 206.995575,609.496338 206.997681,609.246948  C207.543015,608.476501 208.063583,607.933044 208.782288,607.188721  C208.988434,601.162903 209.384506,595.613525 214.293732,591.273315  C215.841431,589.905029 214.208527,587.135864 214.916840,584.766724  C217.967529,574.562622 220.374817,564.166138 223.023102,553.429321  C224.799408,551.439758 225.134369,549.239990 225.625763,546.748901  C226.286011,543.862732 226.294312,541.175415 227.654205,538.471008  C228.001801,538.013000 228.155182,537.844971 228.563736,537.461426  C229.478088,536.747437 230.319901,536.424194 230.566681,535.159607  C230.954468,533.293762 231.329178,531.759949 232.194855,530.024597  C233.102371,528.766785 234.081635,528.134033 235.221512,527.843140  C236.951157,527.401672 238.890900,526.510620 240.260376,528.342163  C241.418701,529.891235 240.494629,531.513794 239.724487,532.993530  C238.653366,535.051575 237.324951,536.959229 236.165314,538.964172  C235.273468,540.506226 234.221115,542.088745 235.412399,544.214844  C238.579056,542.242310 238.170883,537.311768 242.515228,536.211792  C243.650604,536.315186 244.268036,536.690979 244.880402,537.655762  C245.074646,540.984985 242.783707,543.073608 242.085419,545.774597  C241.329819,548.697388 238.557480,551.112854 240.659027,554.764526  C241.303604,555.884583 239.750443,558.011353 238.557175,559.510254  C234.876114,564.134216 235.065720,564.446167 239.121109,568.542847  C240.440857,569.876038 238.508926,571.638428 239.000809,573.616089  C239.986313,575.689880 238.752213,577.144897 238.451477,579.046021  C235.353943,583.650757 239.900024,587.540955 239.094360,592.042480  C239.377869,593.598694 239.359207,594.812988 239.160965,596.398132  C238.894180,597.733032 238.421234,598.638611 238.416016,600.033203  C236.726517,603.781677 238.504120,608.002258 235.375031,611.051575  C232.121353,608.809265 232.387192,604.109924 232.814026,602.694092  C234.264923,597.881348 229.593460,594.661377 230.712341,590.199219  C228.568039,591.366028 227.296082,592.507141 227.553894,595.552002  C227.977112,600.550415 227.527527,605.629944 226.304825,610.570557  C224.776962,616.744324 224.491058,622.939636 226.012726,629.591370  C228.495667,633.300110 228.181503,636.765259 226.345947,640.652100  C224.529648,641.136108 223.341736,640.683044 222.266907,639.202026  C220.817871,636.464050 220.338852,633.790833 220.475388,631.239075  C220.098404,633.582947 221.044952,635.988770 221.219818,638.734375  C221.001221,640.580566 221.001221,642.161133 221.001221,644.051636  C217.920517,643.252380 215.974777,641.231750 215.073807,638.857239  C213.186279,633.882629 210.691010,629.204346 213.395325,623.178101  C215.056107,619.477234 213.877869,614.496521 213.939728,610.090088  C213.949066,609.426453 213.742432,608.599365 212.972336,608.602539  C212.445145,608.604675 211.548370,609.104736 211.458328,609.520996  C211.050568,611.406189 209.110779,612.768616 209.783707,615.057983  C210.126984,616.225952 209.566452,617.630005 208.078629,617.435059  C206.626282,617.244751 207.128326,615.896057 207.520065,615.054626  C208.253738,613.479004 207.464859,612.143188 207.043579,610.361206  z\"})),_path1611||(_path1611=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M213.148132,713.663818  C208.383148,713.014648 208.926895,718.123291 206.403992,719.711670  C205.526978,720.263855 205.413177,722.055176 203.382507,721.982849  C203.779053,719.672058 203.551010,717.660950 202.091965,715.494019  C198.851242,710.681152 200.243149,707.444702 204.985565,703.650513  C207.601791,701.557312 210.840088,699.273621 211.397781,695.262878  C211.648499,693.459839 214.092468,694.119507 214.838257,692.295654  C218.800598,691.448975 219.962311,692.945618 218.444748,696.905212  C217.502151,699.364563 216.281494,701.658752 217.844055,704.650391  C213.945145,706.371460 214.706863,710.463196 213.148132,713.663818  z\"})),_path1612||(_path1612=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M203.658783,725.056152  C209.773422,725.563782 210.145203,729.684937 210.001923,734.571045  C209.221130,734.837219 207.889450,734.331421 207.740707,734.568359  C205.340912,738.390320 201.808441,741.215088 199.038681,744.674072  C197.114273,747.077332 199.303207,747.689819 201.639587,747.993164  C199.096878,750.134033 196.241348,752.336914 193.267746,754.366882  C192.149231,755.130371 190.988037,755.676514 191.009659,757.629272  C189.544312,758.660156 188.834259,757.701904 188.074921,756.346558  C188.004303,755.554321 188.006119,755.108704 188.009796,754.328857  C189.265793,753.051880 188.761597,751.557861 189.298737,750.048828  C190.110153,748.046326 193.285065,748.469604 192.734482,745.442017  C192.410568,741.971558 192.107819,738.844421 193.698761,735.517639  C194.046631,734.948364 194.212769,734.737549 194.688538,734.269531  C197.335892,733.860352 199.365280,733.884583 199.302124,730.323364  C199.264633,728.208740 201.454208,726.475403 203.658783,725.056152  z\"})),_path1613||(_path1613=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M207.987549,651.605713  C205.404190,653.109253 203.502930,654.993774 202.008804,657.671204  C200.283310,660.166077 202.569763,663.365479 199.955414,665.968994  C199.166077,667.444214 198.450897,668.233093 197.489410,669.595032  C194.308121,669.145020 194.067047,666.987000 194.624313,664.823242  C196.863007,656.131042 197.403229,646.821045 203.657257,639.544128  C204.608063,638.437866 205.273346,636.440918 207.001617,637.440796  C208.974548,638.582092 207.166138,639.977661 206.547714,641.194885  C204.678940,644.873047 207.535355,647.870056 207.987549,651.605713  z\"})),_path1614||(_path1614=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M226.225922,641.232361  C225.996780,637.641418 226.002960,634.286316 226.014801,630.475342  C229.470718,630.454712 230.221802,628.584473 230.039383,625.592346  C229.882690,623.022156 229.670471,620.220642 233.568161,619.341980  C233.462311,626.459229 233.388168,633.345459 231.994125,640.574463  C230.146408,641.154419 228.303802,641.311279 226.225922,641.232361  z\"})),_path1615||(_path1615=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M193.753372,745.765747  C197.519012,751.405701 190.929245,747.709045 190.331543,749.852295  C189.464493,750.587341 189.237076,751.410339 188.260132,751.952026  C186.382416,747.172668 185.338593,742.414185 186.969925,737.203735  C188.301453,732.950867 190.517059,732.093018 194.643005,733.851318  C194.998169,734.012207 194.999786,734.500000 195.000397,734.743896  C190.584183,739.020569 190.252319,741.367432 193.753372,745.765747  z\"})),_path1616||(_path1616=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M197.523346,717.333862  C199.428619,721.158569 201.546707,724.657349 197.219650,728.066650  C196.526123,728.613098 195.814697,729.030701 194.959702,728.613831  C194.089569,728.189697 194.240280,727.251709 193.991989,726.484375  C193.511765,725.000122 194.823090,724.033386 194.794281,722.449524  C194.723343,718.548340 196.531250,714.629211 194.300613,710.600098  C196.843338,712.229614 200.761841,712.947510 197.523346,717.333862  z\"})),_path1617||(_path1617=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M187.693558,755.955200  C188.820221,756.578308 189.637909,757.156677 190.726196,757.868408  C190.997116,758.752502 190.997421,759.503174 190.994598,760.629395  C187.416214,761.449829 184.147339,760.645874 180.960205,758.615479  C179.284668,759.010986 180.560699,761.435669 178.961166,762.043030  C178.731781,761.928650 178.276749,761.837952 178.242859,761.664795  C177.538116,758.063721 178.083740,755.087708 182.624084,754.013306  C183.387253,753.619690 183.847275,753.472473 184.691559,753.779114  C185.795685,754.636780 186.590134,755.273560 187.693558,755.955200  z\"})),_path1618||(_path1618=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M173.823975,799.767090  C170.740936,800.092529 172.221985,797.842102 172.064713,796.639099  C171.716156,793.972900 171.988068,791.308228 173.504776,788.944641  C174.142685,787.950684 173.873505,785.904480 175.880829,786.430603  C177.352005,786.816284 176.741959,788.358521 177.015793,789.421570  C178.041733,793.404358 176.770294,796.650024 173.823975,799.767090  z\"})),_path1619||(_path1619=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M187.679108,786.744019  C188.000000,787.000000 188.004623,787.494934 188.005035,787.742432  C188.772430,792.008789 185.384308,793.869507 183.280426,796.769470  C181.238235,798.273682 181.080658,796.882935 181.042099,795.716187  C180.956177,793.115540 181.004791,790.510498 180.998062,787.453613  C182.886917,783.961182 185.128250,785.295105 187.679108,786.744019  z\"})),_path1620||(_path1620=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M187.955566,786.691040  C185.862900,787.387268 183.844101,785.194946 181.326447,786.854492  C177.527588,785.927673 176.653885,783.372253 177.051849,780.091125  C177.182205,779.016418 177.569641,778.073303 178.857681,778.359802  C179.836334,778.577515 179.992035,779.503540 179.702911,780.330811  C179.010437,782.312195 179.349243,783.863220 181.653534,784.935303  C182.213776,784.771423 182.443298,784.554321 182.842407,784.172607  C183.002106,783.997559 183.499222,783.997681 183.747772,783.997620  C184.383484,783.618408 184.844513,783.472656 185.689941,783.779968  C186.637436,784.794067 187.274277,785.588074 187.955566,786.691040  z\"})),_path1621||(_path1621=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M183.255051,797.107483  C182.599640,793.089233 186.871780,791.815735 187.863647,788.301758  C188.313461,788.113770 188.567627,788.308044 188.884567,788.785156  C189.935913,789.900452 190.398804,790.966675 190.064606,792.639526  C189.992310,793.163208 189.993561,793.330566 189.998016,793.748962  C189.858521,794.290955 189.660706,794.537781 189.204407,794.865356  C187.805603,795.832642 186.610153,796.674988 185.206482,797.758667  C184.502747,797.739929 184.007248,797.479919 183.255051,797.107483  z\"})),_path1622||(_path1622=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M186.000763,783.543396  C185.555252,783.999817 185.109879,783.999634 184.330429,783.998535  C184.113327,783.127075 184.230301,782.256592 184.173035,781.194275  C182.891891,780.091125 183.083298,778.817749 183.025238,777.303284  C182.847610,774.057556 183.028458,771.172668 184.744370,768.252563  C186.198120,772.972107 185.979782,778.037292 186.000763,783.543396  z\"})),_path1623||(_path1623=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M221.250763,638.999023  C219.048553,635.093079 218.322632,631.054626 219.633133,626.128418  C223.085800,630.022766 221.655930,634.239380 222.000519,638.546631  C221.999390,639.000000 221.500305,638.997986 221.250763,638.999023  z\"})),_path1624||(_path1624=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M199.996902,665.994080  C203.573471,666.724731 202.073532,669.341797 201.987305,671.416626  C201.947861,672.365601 201.964600,673.687683 200.653580,673.529480  C199.032822,673.333801 197.549377,672.555115 197.045410,670.345642  C196.996674,669.995117 196.999802,670.000000 196.997192,669.998779  C198.091431,668.991455 198.310104,667.352356 199.770294,666.223267  C199.989151,665.996216 199.998566,665.999573 199.996902,665.994080  z\"})),_path1625||(_path1625=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M183.636475,802.000732  C184.327896,803.744202 184.655167,805.488403 184.990295,807.616333  C184.605820,808.370361 184.142822,808.515930 183.296814,808.218994  C182.479782,807.441956 181.975082,806.882568 181.235199,806.161621  C180.442596,805.490601 179.885178,804.981201 179.164261,804.237122  C180.166779,802.785034 181.375931,801.659729 183.636475,802.000732  z\"})),_path1626||(_path1626=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M175.359772,768.524170  C176.510971,769.985657 177.420517,771.306580 175.634399,772.476013  C174.711426,773.080383 173.533401,772.956787 173.278519,771.769470  C172.964752,770.307800 172.251038,768.303101 175.359772,768.524170  z\"})),_path1627||(_path1627=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M222.539322,648.347839  C223.364578,647.406311 224.126785,646.663330 225.038528,647.535889  C225.260483,647.748291 225.044632,648.786133 224.709213,649.142212  C223.786743,650.121521 222.825989,650.372620 222.539322,648.347839  z\"})),_path1628||(_path1628=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M182.749451,777.232361  C185.602081,777.437805 183.559662,779.269592 184.002075,780.678589  C181.745407,780.566162 181.729477,779.182068 182.749451,777.232361  z\"})),_path1629||(_path1629=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M187.975662,752.352173  C188.469543,751.434998 188.969849,750.846313 189.734161,750.128784  C189.830154,751.367676 190.508423,753.018860 188.361542,753.917725  C188.001801,753.556641 187.991943,753.118591 187.975662,752.352173  z\"})),_path1630||(_path1630=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M175.956177,765.553955  C175.280365,765.182495 175.271347,764.808777 175.754562,764.478577  C175.855576,764.409607 176.090271,764.412964 176.188965,764.484863  C176.660172,764.828796 176.643692,765.201965 175.956177,765.553955  z\"})),_path1631||(_path1631=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M184.956161,753.711670  C184.556885,754.000000 184.112564,754.000000 183.335022,754.000000  C183.102158,753.362366 183.158447,752.598145 183.957947,752.554688  C184.259018,752.538269 184.592438,753.116333 184.956161,753.711670  z\"})),_path1632||(_path1632=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M185.970093,801.707886  C185.552917,802.001587 185.109070,802.000793 184.332306,802.000000  C184.176422,801.452637 184.353439,800.905273 184.762817,800.178955  C185.311264,800.471130 185.627335,800.942261 185.970093,801.707886  z\"})),_path1633||(_path1633=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M189.534424,697.479065  C189.556213,697.520142 189.512650,697.437988 189.534424,697.479065  z\"})),_path1634||(_path1634=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M182.788742,784.114258  C182.880386,784.308044 182.686676,784.563965 182.207550,784.882202  C182.115860,784.688477 182.309616,784.432495 182.788742,784.114258  z\"})),_path1635||(_path1635=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M136.882584,774.786255  C136.688004,774.882324 136.434845,774.693787 136.123886,774.220459  C136.319229,774.123779 136.571884,774.312439 136.882584,774.786255  z\"})),_path1636||(_path1636=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M109.303711,806.930176  C109.142471,805.481140 109.013466,804.305420 109.188133,803.176819  C109.373283,801.980347 110.186745,801.061340 111.307602,800.588989  C112.366081,800.142883 112.756996,800.942810 113.040123,801.773804  C113.465553,803.022705 114.175613,804.380127 112.506226,805.226318  C111.406334,805.783752 111.283325,807.799072 109.303711,806.930176  z\"})),_path1637||(_path1637=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M190.359131,792.984680  C188.865326,792.146118 189.025864,790.907043 189.001007,789.360840  C191.163376,789.108826 192.368256,787.094238 194.681580,786.368103  C194.336182,789.437561 193.739441,791.879395 190.359131,792.984680  z\"})),_path1638||(_path1638=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M190.053146,795.120361  C190.113525,795.120728 190.219940,795.248718 190.326355,795.376770  C190.250641,795.333862 190.174911,795.290955 190.053146,795.120361  z\"})),_path1639||(_path1639=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M189.249084,794.995361  C189.123383,794.683899 189.316208,794.431396 189.790375,794.116333  C190.001221,794.000000 190.006271,794.496460 190.006699,794.744568  C190.007126,794.992676 190.000015,795.000000 189.996643,795.003662  C189.993286,795.007324 189.497131,795.000488 189.249084,794.995361  z\"})),_path1640||(_path1640=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M185.389923,812.993530  C185.840622,811.797485 186.668854,810.584351 187.749161,809.185669  C187.864029,810.666748 188.522034,812.780090 185.389923,812.993530  z\"})),_path1641||(_path1641=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M183.140594,808.212402  C183.432053,808.000671 183.879639,808.000061 184.662689,807.999756  C184.560318,808.660645 184.035446,808.971680 183.140594,808.212402  z\"})),_path1642||(_path1642=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M245.481140,830.467102  C245.521423,830.445679 245.440842,830.488525 245.481140,830.467102  z\"})),_path1643||(_path1643=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M483.929810,950.919556  C484.080597,952.740051 483.805176,954.432922 485.609192,955.830688  C485.869202,957.758911 485.839203,959.504578 485.703918,961.680786  C481.860504,960.645935 477.074127,961.478088 474.326843,957.058105  C473.539490,957.259949 473.158386,957.190002 472.947906,956.394836  C474.922882,952.172058 479.133820,952.042114 482.674866,950.148865  C483.005188,950.003479 482.999023,950.000000 482.995880,949.997559  C483.264984,950.218445 483.518738,950.460999 483.929810,950.919556  z\"})),_path1644||(_path1644=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M435.669678,972.351257  C436.164642,971.494324 436.379608,970.918884 436.849640,970.162720  C440.848877,967.291931 444.864990,966.326660 449.645203,968.024048  C451.090546,968.323792 452.196960,968.657349 453.655762,968.990356  C455.127838,969.767273 456.266357,969.410583 457.702454,969.009399  C458.433807,970.155151 460.283478,969.659424 460.605408,971.498230  C454.051697,970.213745 458.210144,975.285950 457.166412,977.394348  C456.345123,979.053223 456.859131,979.623352 453.988037,980.084167  C448.062439,981.035339 444.054993,979.034302 439.776825,976.053833  C439.327576,975.740845 438.477997,976.002563 437.411499,975.998779  C436.461945,976.184387 435.993591,976.062500 435.410095,975.294189  C434.991852,974.156067 435.056427,973.384460 435.669678,972.351257  z\"})),_path1645||(_path1645=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M431.394104,984.046631  C431.263306,983.084290 431.246094,982.391785 431.244995,981.353149  C431.148468,980.565125 431.053009,980.119568 430.923309,979.332397  C430.868713,977.926575 430.865509,976.858704 430.851929,975.390503  C430.841553,974.990051 431.005554,975.079163 431.098694,975.084595  C431.483246,974.704468 431.875366,974.508545 432.691406,974.548706  C434.153076,975.325562 434.782501,976.809509 436.702301,976.880737  C438.691315,981.806335 438.985565,987.432434 444.824707,989.695984  C445.230286,989.853210 445.495392,990.752686 445.532410,991.325989  C445.551910,991.628235 444.660706,992.266968 444.647247,992.254456  C441.576111,989.385071 438.541016,992.958130 435.516602,992.285217  C434.230225,991.999084 432.934662,991.663208 431.973175,990.080078  C431.771240,988.765808 431.791626,987.759949 431.821777,986.374268  C431.922180,985.396729 431.827759,984.834778 431.394104,984.046631  z\"})),_path1646||(_path1646=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M482.023132,989.797485  C480.727417,993.206177 479.122284,995.845215 474.703247,995.045349  C474.174133,995.150269 474.034302,995.260437 473.449066,995.186646  C473.449921,992.933533 469.751862,992.924438 470.898682,990.278198  C471.815613,990.115173 472.635437,990.199036 473.440430,990.358093  C474.808777,990.628235 474.943817,993.419434 476.953827,992.239807  C478.899689,991.097717 477.576935,988.897461 478.106171,987.218506  C478.499695,985.969971 475.756165,983.355347 478.377625,982.806458  C481.078827,982.240845 479.316864,985.552063 480.224915,986.838684  C480.498749,987.226807 480.918488,987.511902 481.625397,987.948975  C481.989624,988.518311 481.999847,988.982910 482.023132,989.797485  z\"})),_path1647||(_path1647=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M473.902588,995.913452  C473.721680,1002.548462 468.610962,998.863586 465.367920,999.977661  C465.656128,995.591003 470.358826,997.597839 472.672363,995.145142  C473.003632,995.002563 473.000000,995.000000 472.997620,994.998413  C473.262146,995.215881 473.510406,995.454224 473.902588,995.913452  z\"})),_path1648||(_path1648=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M470.998779,990.001221  C468.894043,990.007507 466.732025,990.136597 465.579956,987.368958  C467.945892,986.905945 469.951874,986.532166 470.953186,989.638489  C471.002441,989.997559 471.000000,990.000000 470.998779,990.001221  z\"})),_path1649||(_path1649=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M437.018494,976.764343  C435.407990,977.555420 433.437897,979.283936 433.077362,975.460938  C433.700562,974.415710 434.454163,974.290955 435.648804,974.721313  C436.187073,975.206726 436.378021,975.479492 436.788940,975.876099  C437.013306,976.169861 437.017700,976.339661 437.018494,976.764343  z\"})),_path1650||(_path1650=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M460.752930,977.279358  C461.846252,977.071838 462.888306,976.784119 463.244843,977.640808  C463.708801,978.755615 462.661133,978.958801 461.876678,978.931824  C461.007599,978.901978 459.224304,979.482117 460.752930,977.279358  z\"})),_path1651||(_path1651=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M462.471924,980.458191  C462.520203,980.431091 462.423676,980.485291 462.471924,980.458191  z\"})),_path1652||(_path1652=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M462.530762,986.534424  C462.485718,986.559021 462.575806,986.509766 462.530762,986.534424  z\"})),_path1653||(_path1653=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M468.752686,882.755127  C469.805328,884.795349 470.430023,886.670898 471.939606,888.104309  C472.637909,888.767273 473.675690,890.256775 473.474548,890.510010  C468.306091,897.019348 476.148163,893.847961 477.447296,895.982239  C476.471069,897.847534 472.931488,897.297546 472.733978,900.535156  C480.343170,898.481445 474.638062,906.435059 478.224731,907.688354  C477.737335,908.397827 477.798126,908.957764 478.766571,908.934937  C479.394684,908.920166 480.016144,908.620972 480.839966,908.216919  C481.837677,908.139771 483.060150,908.834045 482.491791,909.292969  C480.627930,910.798096 480.868835,913.710754 478.274292,914.883545  C478.002380,915.443420 478.002258,915.889221 477.998260,916.669434  C477.570374,917.556335 476.989288,917.745667 476.017395,917.638916  C475.368134,917.323486 475.049133,917.063171 474.550385,916.548035  C474.042908,916.156616 473.909454,915.919983 473.939575,915.625977  C473.970917,915.320496 473.954163,915.414734 474.102234,916.113403  C474.604187,916.607178 474.889832,916.895142 475.406921,917.392822  C477.057983,918.934021 478.970520,919.444641 480.765686,920.762024  C481.125122,922.748779 480.720398,924.802368 481.489441,926.218567  C482.940521,928.890991 480.546814,928.259888 479.322632,928.966553  C478.283112,925.713318 475.631104,924.542297 472.874237,924.120422  C469.534851,923.609558 466.418915,923.999939 466.882690,928.850525  C467.017090,930.256104 466.345490,931.738831 466.046265,933.565063  C465.844635,934.665588 465.343048,935.057007 464.313904,935.107910  C463.994049,931.940125 463.994049,928.882202 463.998413,925.824097  C458.482697,928.332947 458.208527,928.285706 456.069305,922.156555  C455.408630,920.263489 454.637665,919.264832 452.273193,919.865479  C450.956726,918.999023 450.146729,917.897461 449.594543,916.231506  C449.563904,915.657288 449.599243,915.426697 449.838989,914.912354  C450.186798,914.545410 450.322357,914.409546 450.474854,914.386719  C455.956604,913.565674 455.956818,913.567200 454.978394,907.339905  C454.978821,906.763367 454.995178,906.533997 455.079041,905.969177  C456.523895,902.546936 457.221619,899.737915 452.153687,899.075317  C442.982391,898.279236 441.381195,891.440308 439.846008,884.338562  C439.998779,884.002441 440.006866,883.537842 440.009064,883.305542  C440.266052,882.691101 440.605103,882.410950 441.354523,882.157410  C441.902039,882.075745 442.123230,882.069153 442.671387,882.100769  C444.230804,882.501648 445.499115,882.691833 447.070984,883.000244  C447.583405,883.157532 447.784180,883.235168 448.270569,883.462402  C449.273193,884.092773 449.984344,884.589966 451.269867,884.436584  C454.332001,884.511780 457.104614,884.279724 459.818359,886.118103  C461.806122,888.021118 460.209045,890.504089 461.602814,892.508728  C463.746185,890.876709 463.720123,888.560120 464.116272,886.371033  C464.544128,884.006714 465.233704,881.746277 468.752686,882.755127  z\"})),_path1654||(_path1654=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M463.736084,935.209229  C464.504364,934.730164 465.014709,934.462280 465.787048,934.069214  C467.955322,933.550964 469.883698,935.093445 471.816406,933.784363  C472.871765,933.069580 474.424316,932.164673 475.103821,933.869568  C475.598175,935.109985 474.334656,936.854309 473.231659,937.031372  C466.063568,938.182312 470.147095,943.806641 468.948914,947.640198  C468.784485,948.136230 468.630402,948.288574 468.236389,948.221680  C466.819153,947.009155 465.955597,945.726562 466.194092,944.212585  C466.469055,942.467041 466.253021,942.131653 464.312195,941.435486  C461.695892,940.497070 461.681458,937.747070 463.736084,935.209229  z\"})),_path1655||(_path1655=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M467.872284,948.290222  C467.996429,948.002441 468.468262,947.993408 468.703430,947.988647  C471.355133,948.610901 474.471710,948.740967 471.791229,952.604919  C471.056244,953.664612 471.828766,954.740112 472.773560,955.855469  C473.148438,956.346741 473.335052,956.587830 473.793701,956.886658  C472.519562,958.619812 470.564240,957.789246 468.410889,958.009827  C467.881897,957.849487 467.755249,957.686768 467.814941,957.277222  C467.916870,954.212891 467.832520,951.395447 467.872284,948.290222  z\"})),_path1656||(_path1656=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M449.625244,915.742432  C451.377441,916.633423 452.035004,917.737793 451.972473,919.617737  C450.070068,920.392151 449.090912,918.750610 447.350983,917.974121  C447.012817,917.888000 447.022980,917.471130 447.022919,917.262634  C446.869873,915.232483 448.088806,915.408203 449.625244,915.742432  z\"})),_path1657||(_path1657=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M462.154053,945.017944  C459.952148,945.372009 459.357544,943.964661 458.630981,942.286926  C461.010712,941.805969 462.297180,942.398804 462.154053,945.017944  z\"})),_path1658||(_path1658=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M467.700195,957.069336  C468.001221,957.030334 468.002106,957.521118 468.005310,957.766663  C467.919006,958.636780 468.023529,959.408936 467.689758,959.847717  C467.291504,960.371216 466.946625,959.728577 466.741943,959.362915  C466.205750,958.405090 466.068817,957.535034 467.700195,957.069336  z\"})),_path1659||(_path1659=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M474.118805,995.841797  C473.791382,995.896606 473.514893,995.680908 473.116821,995.230957  C473.214417,994.994629 473.433594,994.992554 473.983337,995.015259  C474.265839,995.217285 474.217773,995.394348 474.118805,995.841797  z\"})),_path1660||(_path1660=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M393.001587,882.350464  C394.692444,881.888367 396.789185,882.491394 396.971191,879.370300  C400.478546,879.968689 399.926910,882.873779 399.945923,885.402832  C399.958008,887.011536 399.581268,888.620056 399.439545,890.234009  C399.276489,892.090332 399.666046,893.967773 400.994507,895.186218  C402.704956,896.755066 403.761414,894.103577 405.663147,894.028564  C406.529785,896.534180 408.782013,896.058411 410.718384,896.786743  C410.645447,899.080444 410.332367,901.138672 410.007782,903.588867  C405.816406,907.713989 401.716431,905.767822 397.337341,903.494507  C395.930511,901.829285 392.459656,905.770752 392.986694,901.104248  C393.644745,900.349670 394.463623,899.977295 394.238464,899.055908  C393.951843,899.181580 393.712677,899.370544 393.264221,899.802979  C388.679871,899.973022 389.090485,897.240295 391.193451,895.489380  C393.706482,893.397156 393.329987,891.260071 393.013123,888.405884  C393.018311,886.947510 393.020264,885.872803 392.970123,884.398376  C392.939240,883.558960 392.960419,883.119385 393.001587,882.350464  z\"})),_path1661||(_path1661=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M396.891693,903.463867  C401.157654,902.710999 404.982361,906.174927 409.597595,904.005737  C411.077545,903.985168 412.158844,903.989441 413.646057,903.964600  C414.780060,903.964783 415.508087,903.994080 416.600250,904.046997  C417.374298,904.052734 417.783875,904.057617 418.498474,904.164673  C418.991272,904.342896 419.178711,904.443970 419.608002,904.760986  C419.976105,905.156067 420.102325,905.335266 420.338074,905.829224  C420.447144,906.368896 420.446686,906.593811 420.357117,907.147278  C420.079437,907.894348 419.847290,908.287537 419.356812,908.925537  C413.884796,913.457336 408.229950,914.160645 401.792053,911.135010  C399.425903,911.130371 397.488861,910.788818 395.375610,909.647827  C394.949280,909.195801 394.824677,908.974915 394.816467,908.391846  C395.530365,906.601624 396.127869,905.173584 396.891693,903.463867  z\"})),_path1662||(_path1662=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M394.586365,907.868042  C394.932831,908.029663 395.017456,908.468933 395.046448,908.690674  C396.501312,913.887268 395.161621,915.429688 388.655151,915.641357  C388.046783,915.224243 387.852448,914.993042 387.699829,914.310791  C387.720856,912.536133 387.700165,911.212463 387.603729,909.491455  C389.193451,905.865540 391.717285,906.788940 394.586365,907.868042  z\"})),_path1663||(_path1663=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M393.062134,900.224365  C393.015411,899.652161 392.968323,899.308472 393.041168,898.992432  C393.311951,897.817688 392.356140,896.067627 394.148926,895.621521  C395.301697,895.334656 395.984161,896.603821 395.854767,897.542786  C395.670654,898.879211 397.655487,901.726074 393.549927,900.992432  C393.246063,900.942993 393.116821,900.465515 393.062134,900.224365  z\"})),_path1664||(_path1664=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M387.675537,915.222900  C391.206757,914.386780 395.174805,914.787598 395.051575,909.314270  C397.116028,909.262573 399.156616,909.612732 401.589111,909.970947  C403.478882,912.340820 401.844818,913.872864 400.262634,915.779419  C399.762848,916.838135 400.661774,918.841797 398.430817,917.417114  C397.449707,916.790649 395.962402,915.250488 395.229614,917.281494  C394.490173,919.330933 392.041779,921.546997 393.263824,923.412781  C395.570648,926.934875 395.741974,922.241821 397.162262,921.864319  C399.111176,928.444580 397.626556,932.539124 392.390808,934.000366  C391.851807,933.446655 391.706055,932.895752 391.339294,932.157654  C390.841980,931.785645 390.588989,931.573059 390.183014,931.158020  C390.006683,930.983337 390.001648,930.998047 390.012146,930.990967  C390.017609,929.923157 390.012573,928.862427 390.015594,927.403687  C389.994080,926.407166 389.815033,925.862610 389.251526,925.165222  C388.553162,923.118774 388.043579,921.295654 387.283478,919.227478  C385.878448,917.690552 386.559875,916.563354 387.675537,915.222900  z\"})),_path1665||(_path1665=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M381.266724,920.772766  C378.960083,917.298584 381.263794,916.462524 384.552246,916.018433  C385.088226,916.153015 385.259857,916.299011 385.558899,916.758423  C385.717102,917.529602 385.628326,917.962891 385.165710,918.594666  C383.459015,918.783447 382.325012,919.353027 381.266724,920.772766  z\"})),_path1666||(_path1666=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M385.166168,917.260620  C384.951141,916.888428 384.946442,916.712036 384.929199,916.271362  C385.667694,915.345947 386.418732,914.684814 387.455658,913.941772  C387.800262,914.046265 387.858978,914.232788 387.959442,914.709656  C387.695007,916.099060 387.388794,917.198120 387.057739,918.639771  C386.862244,918.986328 386.691528,918.990356 386.264771,918.998413  C385.503571,918.607483 385.531158,917.994690 385.166168,917.260620  z\"})),_path1667||(_path1667=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M389.069061,925.245483  C389.931671,925.178040 391.022278,925.234985 390.231750,926.825256  C389.707581,926.520203 389.391510,926.034668 389.069061,925.245483  z\"})),_path1668||(_path1668=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M384.953094,917.358032  C385.283081,917.516479 385.610352,917.968079 385.973145,918.711060  C385.824219,918.984375 385.639771,918.966309 385.183533,918.882935  C384.924591,918.428894 384.937469,918.040100 384.953094,917.358032  z\"})),_path1669||(_path1669=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M392.896210,879.009460  C393.055115,879.085022 393.052246,879.276062 393.038696,879.753906  C392.864685,879.848511 392.680115,879.668823 392.552795,879.455078  C392.520233,879.400513 392.668976,879.237915 392.896210,879.009460  z\"})),_path1670||(_path1670=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M391.000854,873.999268  C390.895905,873.873169 390.790100,873.747742 390.684265,873.622314  C390.757111,873.667725 390.829926,873.713196 390.950775,873.880554  C390.998779,874.002441 391.000000,874.000000 391.000854,873.999268  z\"})),_path1671||(_path1671=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M410.517578,823.471924  C413.697632,823.726685 414.292419,826.849548 415.765991,828.685547  C420.304962,834.341187 423.917969,840.739990 428.199097,846.946777  C429.447662,847.217529 430.012054,847.899475 430.133179,848.722168  C431.721924,859.513184 434.106293,870.220825 433.395660,881.585632  C432.909851,885.417664 432.676239,888.897156 432.157715,892.663025  C428.502563,892.333069 427.993805,889.608887 427.583862,886.596313  C428.422913,882.475098 428.523285,878.679443 427.655914,874.901001  C427.475311,874.114197 427.135498,873.208679 426.084717,873.408813  C425.166565,873.583740 424.888214,874.469604 424.729218,875.287170  C424.326233,877.359009 425.022156,879.150146 426.123749,880.878418  C427.057343,882.343140 428.807648,883.447510 428.117920,885.848816  C426.745087,887.060242 425.503540,886.643311 423.896423,886.327271  C421.381226,885.490784 421.194275,883.629822 420.948730,881.392944  C420.937042,877.971191 420.956787,874.940796 420.986938,871.456421  C421.193054,870.210938 421.529297,869.436401 421.250610,868.285645  C421.154083,866.921204 421.094910,865.863342 421.037659,864.408081  C423.255798,861.583252 422.062897,859.127136 421.090027,856.336731  C419.010101,851.693787 418.545135,846.611328 414.499695,843.034973  C413.432434,841.664062 412.938751,840.290039 412.968781,838.394775  C411.288666,836.532959 409.080780,835.382996 409.820953,832.298828  C410.985443,830.360168 411.183624,828.572693 410.940308,826.324585  C410.398743,825.303162 410.182922,824.600525 410.517578,823.471924  z\"})),_path1672||(_path1672=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M433.535706,881.942261  C431.677612,870.601990 430.211761,859.265747 428.626678,847.486572  C428.507446,847.043579 428.827271,847.032593 428.986389,847.015747  C429.513580,846.640747 429.922272,846.337341 430.738281,845.977173  C431.870178,845.758850 432.617889,845.846558 433.693909,846.207153  C435.512451,848.182312 437.622345,856.105225 437.240051,858.675659  C439.811920,854.802795 434.418396,851.522339 436.997589,847.603516  C440.952911,845.978577 444.766541,848.187683 448.820282,846.983887  C451.958832,847.814087 452.712463,850.104980 453.338867,852.876587  C452.687286,855.705750 450.152161,856.424744 448.392151,858.357788  C443.877686,859.423767 445.745850,863.331665 444.530334,866.047424  C444.648682,868.665894 445.248230,870.875854 444.376495,873.224060  C443.584137,875.358398 444.569031,877.431091 445.826752,879.240784  C446.754272,880.575439 448.177612,881.611145 448.096191,883.745117  C446.462158,883.875916 444.981110,883.698425 443.238770,883.260010  C442.977448,882.999023 442.775238,882.571594 442.775238,882.571594  C442.775238,882.571594 442.303253,882.609253 442.182251,882.814453  C441.605377,883.024475 441.149536,883.029419 440.352478,883.053772  C438.141327,881.845520 436.016907,881.991821 433.535706,881.942261  z\"})),_path1673||(_path1673=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M431.346741,931.036377  C430.189087,928.916016 437.135376,927.639160 431.285217,925.029968  C430.621307,924.641663 430.413940,924.228760 430.377441,923.400085  C432.688812,919.828308 436.151459,916.860352 432.407684,912.186279  C431.954987,911.783264 431.787201,911.602478 431.420410,911.102478  C431.010742,910.315125 430.861603,909.828064 430.734100,908.933350  C430.772156,906.406250 431.076996,904.339966 432.826538,902.364624  C436.072235,902.859192 434.677063,905.303284 435.026978,907.069214  C435.264313,908.266968 434.397858,910.444092 436.116608,910.425659  C443.379578,910.347717 438.951263,915.664124 439.953461,918.391113  C441.677063,923.080811 438.121765,927.014282 437.895691,931.715698  C435.608521,933.736206 433.786194,931.464661 431.346741,931.036377  z\"})),_path1674||(_path1674=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M439.624268,884.006470  C441.320251,886.528137 442.945740,888.794434 443.394257,891.848267  C444.042419,896.261108 448.166016,896.553223 451.861023,897.685303  C452.671906,901.909607 449.806000,901.132446 447.134491,901.093262  C446.155365,900.709106 445.712372,900.327148 445.185974,899.419067  C443.132751,898.063049 441.283112,897.084656 439.408264,896.157166  C437.992554,895.456909 436.762604,894.460632 437.114258,892.805481  C437.533508,890.832153 437.477356,889.260498 436.466187,887.327087  C435.322266,885.140015 437.190643,884.201294 439.624268,884.006470  z\"})),_path1675||(_path1675=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M423.709045,885.305786  C425.039764,885.307434 426.172302,885.617371 427.648193,885.959717  C429.119141,888.174744 430.246765,890.357300 431.623596,892.744629  C431.917053,894.346924 431.961365,895.744446 431.970215,897.558777  C430.666565,899.753845 429.061157,901.180542 426.949829,902.585205  C425.307373,903.085632 424.138336,902.813843 422.838104,901.710327  C420.887512,898.149902 421.973907,895.056580 423.497375,892.131958  C424.312439,890.567261 424.958160,889.244080 423.500824,887.388794  C423.315094,886.559937 423.359070,886.082031 423.709045,885.305786  z\"})),_path1676||(_path1676=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M444.821503,899.249756  C445.319214,899.095032 445.588837,899.261719 445.931519,899.723267  C449.173767,903.316467 449.132568,907.583130 449.564667,912.007080  C449.917450,912.393311 450.061768,912.548706 450.357727,912.988281  C450.596832,913.703064 450.576355,914.127075 450.212372,914.784058  C449.992126,915.024414 449.990631,915.496704 449.989807,915.732483  C449.136993,916.155823 448.284973,916.343384 447.227905,916.792603  C445.462311,915.329834 439.275085,915.636536 444.690887,910.801880  C446.232666,909.425659 443.420959,907.434814 441.482727,906.124146  C440.497131,905.632202 440.272675,905.005859 440.216278,903.951050  C440.477997,902.455933 441.358246,901.693909 442.510681,900.393188  C443.580994,899.837036 444.115387,899.658447 444.821503,899.249756  z\"})),_path1677||(_path1677=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M422.641113,900.646484  C424.016663,901.587585 425.035339,902.204285 426.675598,901.971558  C428.295441,900.992493 429.635681,900.606873 431.462799,901.609253  C432.016144,901.926819 432.235382,901.960754 432.784668,902.044800  C432.735443,904.112793 432.356140,906.130554 431.957001,908.535400  C431.338501,909.388794 430.682037,909.281799 429.705139,909.013306  C427.585358,908.285156 425.830109,907.446472 423.524597,907.679199  C422.564880,907.906250 421.912079,907.979065 420.918579,907.890869  C420.386017,907.732422 420.183929,907.635010 419.767395,907.278198  C419.552979,907.018799 419.620544,906.539062 419.680725,906.304443  C419.656250,905.873108 419.571533,905.676331 419.233246,905.282227  C418.979645,905.084839 418.930878,905.080994 418.913422,905.063843  C418.610840,904.687561 418.484772,904.282410 418.746399,903.561890  C418.984009,902.853455 419.016998,902.407349 419.035919,901.625854  C419.859955,900.120728 420.980865,899.979919 422.641113,900.646484  z\"})),_path1678||(_path1678=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M449.948120,967.663452  C449.749481,969.259216 450.107941,971.805298 447.777771,970.021606  C444.939392,967.848877 442.786957,967.179443 440.407806,970.430969  C439.753723,971.324951 438.601807,970.780396 437.411499,970.133911  C437.087860,969.815552 437.071014,969.649170 437.032043,969.232910  C436.876892,968.821594 436.743896,968.660095 436.805420,968.252380  C437.004395,967.837219 437.008789,967.668274 437.007172,967.246033  C436.871002,966.828918 436.740906,966.665100 436.808044,966.257324  C437.005249,966.013306 437.039459,965.525818 437.057831,965.282471  C438.798035,964.995667 440.066803,958.463928 442.440643,964.718933  C442.704773,965.414856 445.581909,966.239868 447.455353,965.734131  C448.913116,965.340698 449.607208,966.014954 449.948120,967.663452  z\"})),_path1679||(_path1679=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M441.184143,902.758911  C441.021667,903.744629 441.041962,904.489258 441.133423,905.600403  C439.838837,907.894775 438.529999,908.419800 437.456970,905.751099  C437.221161,905.164673 437.173401,904.496338 437.080688,903.859619  C436.097168,897.105530 436.099487,897.105164 442.804138,899.741028  C443.046600,900.015625 443.012817,900.013306 443.016235,900.025757  C442.187744,900.677429 441.743988,901.575439 441.184143,902.758911  z\"})),_path1680||(_path1680=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M431.863403,901.506409  C430.472321,901.923950 429.147705,901.954956 427.424744,901.939514  C427.528687,899.610413 429.542175,899.004700 431.599121,898.025269  C431.933105,899.023743 431.931488,900.071838 431.863403,901.506409  z\"})),_path1681||(_path1681=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M438.528992,960.534546  C438.485962,960.557678 438.572052,960.511475 438.528992,960.534546  z\"})),_path1682||(_path1682=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M442.462646,920.525146  C442.438263,920.480530 442.487030,920.569763 442.462646,920.525146  z\"})),_path1683||(_path1683=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C3C5C3\",opacity:1,stroke:\"none\",d:\" M421.557037,972.981445  C422.143707,972.985046 422.319122,972.995178 422.757935,973.019714  C422.938202,975.798584 423.527802,979.736145 420.641266,980.384644  C418.261230,980.919250 418.920837,976.370239 417.050598,974.399048  C416.998108,974.037842 417.010742,973.545898 417.020844,973.300781  C418.402557,973.033020 419.774170,973.010498 421.557037,972.981445  z\"})),_path1684||(_path1684=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M430.681274,979.180542  C431.581116,979.337646 431.977570,979.825745 431.450684,980.830322  C430.485626,980.703796 430.101898,980.216614 430.681274,979.180542  z\"})),_path1685||(_path1685=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M431.195435,984.080811  C432.111877,984.178101 433.137482,984.474365 432.090057,985.873169  C431.591156,985.457886 431.350800,984.921326 431.195435,984.080811  z\"})),_path1686||(_path1686=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M400.376343,916.059570  C399.546082,913.893311 401.341522,912.512817 401.943970,910.337891  C402.744385,908.954895 403.700928,909.052795 404.528381,909.749634  C409.681000,914.088684 413.947632,910.389587 418.661011,908.052002  C419.183258,907.740723 419.439606,907.657715 420.041809,907.784912  C421.854614,910.117065 421.542633,912.605225 421.734802,915.364136  C420.607788,917.736694 419.019623,919.066101 416.508667,919.826660  C415.579468,919.875610 415.076385,919.740784 414.299744,919.234863  C412.886688,918.675232 411.781128,918.360474 410.324768,918.074341  C409.483795,918.029175 408.685394,918.116821 408.549835,917.857727  C406.629181,914.186401 403.789978,914.730896 400.376343,916.059570  z\"})),_path1687||(_path1687=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M392.001221,934.001221  C391.885834,934.402161 391.769257,934.801880 391.652710,935.201660  C390.973450,934.902832 391.379791,934.570129 391.810181,934.120056  C391.997559,933.997620 392.000000,934.000000 392.001221,934.001221  z\"})),_path1688||(_path1688=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M390.134277,931.205811  C390.281433,931.172546 390.556152,931.361816 390.974548,931.760803  C390.832794,931.789795 390.547333,931.609070 390.134277,931.205811  z\"})),_path1689||(_path1689=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M425.213593,932.744385  C424.083923,932.691772 423.257172,931.808777 422.008850,932.853638  C416.909668,931.715515 420.060486,928.294067 419.893188,925.319946  C419.797638,924.420166 419.955841,923.984131 420.612793,923.426270  C421.154846,923.183228 421.385162,923.124756 421.966797,923.067261  C423.300690,924.066040 425.392975,930.388489 425.213593,932.744385  z\"})),_path1690||(_path1690=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M420.733582,922.860229  C420.642334,923.993835 420.384766,924.232422 419.992554,924.700378  C416.308746,924.994507 414.693878,922.888000 414.005249,919.358643  C414.435272,919.000549 414.878357,919.011169 415.652954,919.045349  C417.864746,919.476318 419.238953,920.684448 420.733582,922.860229  z\"})),_path1691||(_path1691=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M418.995728,935.003052  C418.887085,934.874084 418.782684,934.742065 418.678284,934.610046  C418.755341,934.654541 418.832397,934.699036 418.957947,934.867798  C419.006439,934.992126 419.000000,935.000000 418.995728,935.003052  z\"})),_path1692||(_path1692=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M413.455994,940.527283  C413.423615,940.471924 413.488403,940.582642 413.455994,940.527283  z\"})),_path1693||(_path1693=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M425.210938,933.002319  C424.806610,932.052246 424.951263,930.752563 424.385864,930.247009  C422.416595,928.485901 421.477417,926.615662 422.334778,924.026123  C421.801514,923.814392 421.547607,923.606384 421.172577,923.174438  C421.036102,922.969299 421.006104,922.997559 421.023712,922.981934  C419.539093,921.404175 419.573181,919.669861 420.683044,917.543823  C422.167114,914.931519 425.071289,918.223389 426.392212,915.393677  C426.633514,914.942383 426.755646,914.778076 427.110046,914.420532  C427.969116,913.809753 428.676300,913.474304 429.013580,912.388306  C429.225250,911.704407 429.411316,911.335571 429.898651,910.786072  C430.586121,910.449707 431.018402,910.450684 431.704224,910.784973  C432.127167,911.002014 432.298279,910.999023 432.726105,911.000793  C434.176910,915.088806 433.396027,918.830444 430.937012,922.658508  C430.853912,923.459778 430.863525,923.900391 430.909180,924.669678  C430.433411,925.861389 429.921600,926.724365 429.164062,927.773193  C428.487610,928.424255 428.295349,928.947205 428.702881,929.813110  C428.903870,930.776794 428.929321,931.500183 428.926361,932.584839  C428.243042,933.629272 427.456390,933.701172 426.240234,933.227722  C425.882172,933.013733 425.434357,933.016846 425.210938,933.002319  z\"})),_path1694||(_path1694=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M426.038513,933.269653  C426.638245,933.000122 427.394348,932.986511 428.524170,932.959473  C428.762085,933.512268 428.626251,934.078430 428.253723,934.825317  C427.409698,934.512573 426.802277,934.019104 426.038513,933.269653  z\"})),_path1695||(_path1695=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M428.914520,929.705322  C427.559479,929.686646 426.631775,929.218628 428.640625,928.010620  C428.929138,928.425171 428.939880,928.891174 428.914520,929.705322  z\"})),_path1696||(_path1696=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M430.998230,930.997681  C430.996460,930.995300 430.750854,931.417908 430.750854,931.417908  C430.750854,931.417908 430.767334,931.102112 430.886047,931.052734  C431.004761,931.003418 431.000000,931.000000 430.998230,930.997681  z\"})),_path1697||(_path1697=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M435.989410,974.575928  C435.271088,974.966858 434.546051,974.999817 433.461853,975.071350  C432.676544,975.093506 432.250397,975.076965 431.508057,975.075195  C430.375610,973.452942 430.899658,972.021240 431.905396,970.364258  C433.416412,969.958984 434.323395,971.005310 435.661804,971.914795  C435.960693,972.785767 435.971680,973.501770 435.989410,974.575928  z\"})),_path1698||(_path1698=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M436.843445,968.095703  C437.000000,968.006104 437.008575,968.494690 437.009247,968.738892  C436.902252,968.717163 436.794586,968.451294 436.843445,968.095703  z\"})),_path1699||(_path1699=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M436.847076,966.101013  C437.005249,966.013306 437.007874,966.503052 437.004517,966.747864  C436.838867,966.829163 436.659851,966.677612 436.527283,966.492737  C436.497528,966.451355 436.630707,966.293152 436.847076,966.101013  z\"})),_path1700||(_path1700=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M171.311035,602.194946  C171.248642,601.382629 171.039383,600.034607 172.895370,600.841797  C172.616684,601.412415 172.123169,601.781494 171.311035,602.194946  z\"})),_path1701||(_path1701=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M172.533203,606.059143  C172.252609,605.609070 172.223572,605.074402 172.361389,604.165710  C173.750168,604.385742 174.174484,605.073547 172.533203,606.059143  z\"})),_path1702||(_path1702=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M818.829712,661.702881  C818.077271,669.156494 822.901672,673.527771 826.953125,678.639282  C826.818665,679.728088 826.311829,680.198792 825.254395,680.536621  C822.471741,680.073181 821.057373,677.867432 818.546814,676.786377  C813.598450,672.888977 808.118896,669.776001 808.628540,662.303955  C808.723938,661.022034 808.771912,659.981506 808.443176,659.078186  C806.702271,654.294617 805.519043,649.513123 808.127014,644.472839  C813.572266,644.860840 812.757812,650.403748 814.431946,653.667175  C815.773071,656.281494 816.937256,658.985352 818.829712,661.702881  z\"})),_path1703||(_path1703=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M800.920288,663.295410  C800.066528,657.282410 797.802307,651.742371 798.087769,645.348267  C801.325012,649.879883 804.647095,654.778198 806.968018,660.637207  C808.796631,665.328918 811.140808,669.472961 811.267456,674.621216  C809.975159,674.967224 808.896606,674.980103 807.413879,674.991577  C805.201111,671.357422 803.392456,667.724670 801.278381,664.048462  C800.973022,664.004944 800.944397,663.531372 800.920288,663.295410  z\"})),_path1704||(_path1704=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M811.394531,675.011353  C809.706482,670.568054 808.359131,666.181702 807.019836,661.393799  C807.482056,661.249207 807.936279,661.506226 808.620117,661.881226  C809.703491,668.251587 814.207214,671.816528 818.874207,675.677368  C820.436279,678.108948 823.244873,678.880371 824.130371,681.693970  C818.235413,682.645203 815.513123,677.925171 811.394531,675.011353  z\"})),_path1705||(_path1705=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M795.230225,638.871216  C792.598877,636.672180 788.930786,635.523560 788.054321,631.353577  C790.011169,630.686157 791.558228,634.195190 793.310364,632.234131  C794.871216,630.487183 794.172791,627.833984 793.277466,625.602051  C792.922852,624.718384 792.618958,623.814331 792.301758,622.946289  C793.849670,621.824280 795.039246,623.278870 796.663696,623.001465  C796.971924,627.030029 796.919556,631.049438 796.829224,635.529724  C796.028931,636.738159 796.105591,637.888733 795.230225,638.871216  z\"})),_path1706||(_path1706=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M797.513428,622.941040  C796.242615,620.484558 795.252747,617.907104 797.710327,615.220581  C799.430664,617.628723 799.676147,620.241516 797.513428,622.941040  z\"})),_path1707||(_path1707=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M794.976807,639.431763  C795.069031,637.951782 794.847168,636.735352 796.477905,636.072876  C796.894836,638.341187 796.998291,640.691772 797.159485,643.475586  C796.667419,643.686157 796.117615,643.463501 795.299561,643.116821  C795.014221,641.937439 794.997314,640.882080 794.976807,639.431763  z\"})),_path1708||(_path1708=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M798.430664,611.988403  C798.363525,610.600830 798.642517,609.145508 798.997253,607.322510  C802.539734,608.822693 801.244812,610.406677 798.430664,611.988403  z\"})),_path1709||(_path1709=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M817.975464,652.018616  C817.848633,651.884033 817.742676,651.730957 817.636658,651.577881  C817.728333,651.617859 817.820007,651.657776 817.972412,651.827942  C818.033142,651.958191 817.996338,652.000122 817.975464,652.018616  z\"})),_path1710||(_path1710=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M824.805420,680.306641  C825.538086,679.745300 826.026978,679.479919 826.767700,679.093872  C828.949768,679.244812 830.425171,680.190430 830.776245,682.169067  C831.056824,683.750610 829.691406,683.874573 828.189575,684.144897  C826.982422,683.667847 826.147095,683.101685 825.154541,682.268250  C824.622253,681.606445 824.477051,681.140320 824.805420,680.306641  z\"})),_path1711||(_path1711=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M824.776245,679.819458  C825.046143,680.453186 825.042969,680.895691 825.018555,681.669556  C824.829712,682.012573 824.662109,682.024292 824.242554,682.023926  C823.015015,679.622864 819.526733,679.536316 819.063721,676.313843  C821.375000,676.424744 822.983765,677.959778 824.776245,679.819458  z\"})),_path1712||(_path1712=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M464.368073,86.989670  C461.845032,83.813065 464.423004,84.187225 466.630463,84.001663  C467.040619,85.597305 466.783936,86.969170 464.368073,86.989670  z\"})),_path1713||(_path1713=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M342.647308,193.004623  C345.607910,193.952728 346.615753,196.713730 348.807007,198.158981  C350.571503,199.322754 349.205048,200.598907 348.656433,201.594879  C346.174255,206.101044 343.570007,210.540909 340.947968,214.968079  C340.547028,215.645050 339.810699,216.119034 339.250793,216.707199  C338.388672,217.612793 332.768158,215.741364 337.353760,219.924179  C337.445404,220.007767 336.860107,221.303818 336.412811,221.437027  C330.113525,223.313004 330.289093,230.521835 325.955017,234.174622  C324.357086,235.521347 324.642731,239.102264 324.067810,241.663849  C323.816681,242.782867 323.847900,244.101212 323.239227,244.970901  C322.409973,246.155731 321.925964,248.638412 319.703552,247.433685  C318.184875,246.610458 317.544556,244.657669 318.255219,243.018356  C322.118225,234.107452 323.529846,224.320831 328.134369,215.677505  C330.110626,211.967773 332.691681,208.810654 335.636993,205.815872  C338.338074,203.069458 340.560120,199.847763 340.134216,195.309998  C340.121155,193.591354 340.954346,193.007614 342.647308,193.004623  z\"})),_path1714||(_path1714=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M289.332458,296.945557  C289.479279,292.982330 292.288086,290.061737 294.040222,286.659943  C295.496429,283.832794 298.110016,285.871918 300.614929,285.992554  C302.738129,288.226959 300.896729,289.048462 299.495941,290.264191  C297.492584,292.002838 295.271332,293.906769 298.357910,297.055481  C299.499603,303.034058 295.646912,307.625061 294.969910,313.288574  C294.047394,315.040405 292.100769,315.746185 292.272461,318.127014  C291.967194,319.206390 291.592773,319.842957 290.797852,320.647034  C287.850067,321.944672 287.348114,324.532776 286.439362,326.771301  C283.189392,334.776947 282.063629,343.325836 280.221649,351.689087  C279.901611,353.142212 279.749817,354.626221 279.004852,355.946930  C277.222046,359.107666 275.951477,359.097992 273.298950,355.557343  C273.108582,354.704437 273.092682,354.209229 273.232422,353.357513  C273.576141,352.217346 274.655029,351.239105 274.328857,350.849518  C269.144928,344.657837 274.494293,339.835938 276.533417,334.778748  C279.225708,328.101715 283.518860,322.035095 283.933777,314.324158  C282.631104,314.260590 281.884308,315.926880 280.274139,315.192169  C279.723358,311.706696 281.262695,308.850281 282.244232,305.887360  C283.035065,303.500122 285.206940,303.247681 287.444916,302.821838  C289.867279,302.360962 292.918976,302.245789 293.021606,298.406799  C293.116486,294.858459 291.696228,295.361053 289.332458,296.945557  z\"})),_path1715||(_path1715=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M279.619080,314.998352  C282.812897,314.896759 282.184265,311.587067 284.573151,310.202362  C286.631500,315.383270 285.047546,319.901581 283.096649,324.302979  C279.971466,331.353912 276.662170,338.323029 273.486755,345.352051  C272.948547,346.543365 272.489532,347.809631 274.284607,348.641235  C277.414459,350.091248 277.383362,350.158386 274.316254,352.854980  C272.201996,353.298065 272.621796,354.886353 272.237152,356.012177  C271.679626,357.644165 270.968445,359.062561 268.567261,357.930908  C267.408295,355.987152 267.669434,354.260345 268.231384,352.179626  C269.032166,349.052185 268.603699,346.839996 265.975677,345.028320  C262.416626,342.574890 264.639130,339.095520 265.006165,335.661560  C265.436096,334.453094 266.121429,333.770752 266.437195,332.530762  C266.513153,331.016388 266.627167,329.857452 267.188843,328.428589  C268.061951,326.831329 269.657135,326.606140 270.751434,325.239685  C270.991455,324.993896 271.000000,325.000000 270.997437,324.995941  C271.535400,324.467255 272.066620,323.933350 272.791229,323.193390  C275.168671,320.404236 274.962860,315.947540 279.619080,314.998352  z\"})),_path1716||(_path1716=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M266.226044,334.746643  C265.847107,336.958435 265.843414,338.948944 265.492279,340.876099  C265.229340,342.319244 264.951843,343.470306 266.790497,343.944702  C270.924713,345.011505 270.918701,347.970062 270.042450,351.642883  C265.551483,352.368011 261.064880,352.872070 257.657715,348.373108  C253.867691,345.405945 250.803223,342.346375 250.268555,337.261383  C247.330902,332.027649 247.934280,329.740662 253.774872,325.512634  C250.124908,329.980988 253.352997,333.468964 254.829910,337.651398  C256.837463,335.006500 255.566513,332.192017 256.018372,329.677551  C256.374207,327.697327 254.869919,324.154236 258.665955,324.629150  C262.178955,325.068604 260.666107,328.041260 260.214447,330.223480  C260.158569,330.493500 260.396423,330.824341 260.621857,331.494965  C262.725494,330.774841 262.816742,329.048248 262.996155,327.344299  C263.150757,325.876648 263.180176,324.352081 263.629913,322.971619  C264.068878,321.624329 264.648102,319.976379 266.698517,320.468597  C269.067108,321.037231 268.731873,322.636292 268.038757,324.660156  C268.326599,325.321136 268.527679,325.704620 268.512756,326.487122  C266.456879,328.304871 266.141113,330.298035 266.769104,332.892242  C266.780640,333.673615 266.658447,334.097534 266.226044,334.746643  z\"})),_path1717||(_path1717=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M249.579224,358.698425  C246.263336,358.998779 243.525467,358.998779 240.128464,358.998779  C245.049362,352.090240 239.771866,342.979736 247.121994,337.624451  C249.037979,339.208374 244.429565,341.327484 247.688232,342.949646  C249.019028,345.544281 249.623627,348.208740 252.380432,349.795532  C254.346115,350.926941 254.261642,353.081909 253.199219,355.378937  C252.322662,356.843170 251.029282,357.397705 249.579224,358.698425  z\"})),_path1718||(_path1718=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M251.858185,356.383026  C252.553299,353.431915 254.109970,350.857544 249.622894,349.719513  C247.183014,349.100739 246.608566,346.263672 247.852478,343.338562  C249.335495,341.507111 249.674744,339.629761 250.014069,337.379028  C250.798569,337.206238 251.568878,337.401459 252.339188,337.596710  C251.035553,342.286713 255.622879,343.696869 257.691956,346.841217  C260.852386,351.355865 257.417328,353.781830 254.797455,356.827271  C254.061539,357.418182 253.560486,357.571930 252.629547,357.463623  C252.072586,357.155853 251.898453,356.956390 251.858185,356.383026  z\"})),_path1719||(_path1719=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M317.862061,220.777771  C316.428497,222.060944 315.907562,224.614578 313.545502,223.367111  C312.697815,222.919418 312.028717,221.699219 312.527924,220.839661  C313.690369,218.838211 315.598846,216.511963 317.608276,216.656357  C320.407104,216.857437 317.920715,219.097992 317.862061,220.777771  z\"})),_path1720||(_path1720=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M267.810333,327.256897  C267.999023,326.555542 267.999237,326.111115 267.999756,325.333313  C268.747986,324.998932 269.495972,324.997833 270.617706,324.995300  C271.032379,326.582550 270.799255,327.965790 268.382172,328.000732  C267.884552,327.847717 267.753204,327.680786 267.810333,327.256897  z\"})),_path1721||(_path1721=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M252.294250,361.649689  C251.270737,361.997559 250.518036,361.999786 249.389389,362.002258  C249.009628,361.251526 249.005829,360.500610 249.001617,359.374237  C249.001221,358.998779 249.000000,359.000000 248.999359,359.000610  C249.708969,358.402985 250.512756,358.174042 251.811493,358.596375  C252.756683,359.574219 252.831680,360.413818 252.294250,361.649689  z\"})),_path1722||(_path1722=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M272.677490,323.046082  C272.901764,323.889832 272.630920,324.655823 271.310516,324.943604  C271.096588,324.104156 271.372589,323.342560 272.677490,323.046082  z\"})),_path1723||(_path1723=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M341.359619,257.756744  C341.088684,259.139557 340.926270,260.552307 342.448212,260.797241  C344.579742,261.140259 346.734039,261.433685 345.657959,264.352570  C344.955933,266.256744 345.258026,269.520935 341.429016,268.393494  C340.300385,268.061188 339.494934,268.899078 339.270355,269.963440  C339.016327,271.167480 339.721588,271.852142 340.907593,271.936493  C345.098755,272.234558 343.964600,274.398560 341.938751,275.841583  C337.290894,279.152222 336.329346,284.358765 333.910553,288.944275  C330.775940,294.886719 329.919037,301.537262 327.871460,307.605621  C325.584076,314.384552 321.026031,321.439484 322.871826,329.525635  C323.200592,330.965973 322.376648,332.805084 321.722534,334.301636  C320.790955,336.433014 322.474640,336.661530 323.537231,337.623840  C325.080902,339.021759 325.769867,338.375671 326.536407,336.962128  C327.120453,335.885132 328.057983,334.627930 329.067322,336.231140  C330.198975,338.028625 334.126190,336.685791 333.373016,340.615417  C332.806519,343.571228 330.750610,346.068054 331.002258,349.602905  C324.493683,355.656647 320.795471,363.317139 317.481201,370.887878  C315.786316,374.759460 314.783447,379.465179 314.809967,384.007507  C314.818634,385.497131 314.896149,386.957886 314.635162,388.438812  C313.581451,394.417847 313.659027,394.513763 319.851227,395.870209  C320.499512,396.012207 321.146057,396.136993 322.009705,396.669708  C322.947449,398.476471 322.210388,399.666901 320.858521,400.103241  C317.363190,401.231323 316.931274,403.722443 317.508636,406.779297  C317.962189,409.180573 317.729645,411.366119 315.974945,413.266418  C314.926758,414.401611 314.415802,415.824249 314.567230,417.394775  C314.862000,420.451691 312.974152,421.477448 310.059326,421.933502  C306.581421,421.232025 306.700623,418.960724 307.173035,416.611206  C307.660767,414.185455 309.168243,412.215088 310.396088,409.726440  C312.886932,403.947968 310.856750,400.092346 305.879761,396.962830  C305.228516,396.417114 304.905273,396.052338 304.422668,395.339111  C304.037903,394.563782 303.894073,394.093140 303.750122,393.247803  C303.637360,391.044678 304.143463,389.287262 304.532623,387.518066  C305.404633,383.553619 304.329651,381.741547 300.532135,380.512390  C298.525085,379.862793 298.182526,381.169586 298.000061,382.509674  C297.392395,386.971985 294.772430,390.799957 294.138611,395.278290  C293.809692,397.602142 292.354187,399.193848 289.291565,398.448425  C287.365814,396.604797 287.386444,394.449341 288.235596,392.700958  C289.924530,389.223480 288.882080,387.135071 285.466064,385.369019  C285.058105,384.058075 285.222961,383.112671 285.701172,381.851532  C286.922180,379.870911 287.385132,377.916016 288.366974,376.237457  C289.248779,374.729919 290.492432,373.631927 292.320404,375.221771  C292.344940,375.243073 292.469604,377.484833 292.964020,375.378418  C293.026703,375.111389 294.248383,373.594208 292.415863,373.933868  C289.545044,374.466003 289.042297,371.925507 287.516235,370.170776  C286.738220,366.089386 288.355957,363.083801 290.791931,360.008484  C293.232117,358.057831 295.003845,356.172516 294.109680,352.706879  C294.783875,348.891022 296.170044,345.633942 297.833771,342.615051  C303.537781,332.264893 307.463928,321.140228 311.487732,310.137482  C312.972717,306.076843 314.140625,301.457977 314.640442,296.536011  C314.746735,295.646149 314.900238,295.158997 315.362244,294.380371  C315.821259,293.936829 316.048981,293.808899 316.638367,293.831726  C317.575409,294.932129 317.749847,296.491638 319.080597,296.474487  C320.926331,296.450684 321.254120,294.610535 321.730316,293.292389  C325.164337,283.786438 331.205536,275.342712 333.133331,265.213287  C333.367523,263.982574 334.296173,262.884003 334.949982,261.361511  C335.017700,260.403534 335.198761,259.866791 335.785583,259.199402  C335.993439,258.552765 335.995392,258.109833 335.997437,257.334656  C335.870270,256.836182 335.742950,256.669922 335.810547,256.257324  C337.884094,256.044373 338.158112,254.049149 339.709930,253.150391  C340.233215,252.849899 340.470093,252.706284 341.122437,252.595627  C343.520172,254.193573 343.451874,255.829437 341.359619,257.756744  z\"})),_path1724||(_path1724=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M315.893555,293.675110  C315.996460,294.444031 315.994171,294.886871 315.986511,295.661743  C314.451538,299.526978 312.268097,302.593750 309.456879,305.225464  C307.244598,307.296509 305.814240,309.770111 304.753296,312.674622  C302.357971,319.232361 296.556519,323.347656 292.427582,328.671692  C290.805298,330.763519 288.211578,329.490265 287.993530,326.715332  C287.823822,324.556030 288.230774,322.423462 289.752930,320.281219  C290.311890,319.528046 290.626221,319.057312 290.969666,318.293274  C292.307739,317.141144 292.468262,315.461517 293.758423,314.202606  C293.128571,308.073578 297.338165,303.332550 297.836243,297.352203  C297.838348,296.520233 297.908508,296.091278 298.550354,295.545715  C300.725006,295.232758 302.772247,295.345337 303.030670,292.307922  C303.605621,290.865356 304.214264,289.864075 305.684845,289.156433  C311.354767,286.738220 312.211700,280.916382 315.266418,276.870941  C317.288269,274.193298 319.599487,271.590637 321.271179,268.597839  C321.673401,267.877747 322.343842,267.141052 323.238953,267.643463  C324.243500,268.207306 323.918915,269.364105 323.990356,270.675598  C323.124847,271.646881 323.057587,272.740265 322.288635,273.747803  C321.237793,276.393280 318.032196,277.293945 318.009766,280.632233  C315.661041,284.829956 315.716400,289.087952 315.893555,293.675110  z\"})),_path1725||(_path1725=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M341.347961,252.832581  C340.870453,252.977463 340.695648,252.981689 340.258606,252.989716  C338.154785,248.477615 334.968018,243.969116 339.950989,239.412125  C340.102722,239.273376 339.907349,238.775452 339.905457,238.444809  C339.897736,237.090759 338.217010,235.674011 339.995422,234.420074  C340.273376,234.224060 341.125122,234.343567 341.315552,234.605316  C342.299072,235.956833 343.037750,237.488876 342.720520,239.201935  C342.402863,240.917358 341.321411,242.591217 342.903748,244.536133  C346.138275,242.751358 347.011078,239.884262 346.305359,236.674942  C345.285828,232.038361 345.583221,228.671860 350.117065,225.417252  C353.658630,222.874939 355.881897,218.312820 358.253967,214.384323  C360.061493,211.390762 363.080353,209.556976 364.830139,206.482285  C365.631500,205.074127 368.236145,203.568207 368.989899,207.634888  C369.237610,208.404648 369.252960,208.815659 368.844910,209.493866  C367.313660,210.394958 366.980133,211.690201 366.478455,213.250488  C365.083313,215.956940 363.284821,218.003510 361.497375,220.471344  C356.004669,223.845840 356.203033,228.994568 356.234833,234.447540  C356.115234,235.016556 356.049683,235.239761 355.842102,235.780518  C354.602386,237.535767 353.720306,239.152649 351.976440,240.466568  C350.883606,241.237305 349.896332,241.692795 349.952942,243.278900  C349.794250,245.433456 348.985779,247.030380 347.982574,248.913910  C347.543182,249.579346 347.252411,249.929535 346.697571,250.501816  C345.021606,251.804794 343.721985,253.199310 341.347961,252.832581  z\"})),_path1726||(_path1726=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M299.220642,295.755615  C298.678162,296.103973 298.424072,296.301270 298.106506,296.781921  C296.263580,296.970184 293.732941,296.586090 294.413269,294.744812  C295.246338,292.490021 296.251740,289.480469 298.879608,288.634705  C300.198486,288.210236 300.940033,288.103271 300.988647,286.347229  C301.466370,285.685272 301.936920,285.368713 302.706177,285.028503  C303.060760,286.741455 304.735260,287.365601 305.751068,288.812927  C305.504883,289.883850 304.998138,290.763397 304.246887,291.822693  C302.830261,293.622437 301.088776,294.509369 299.220642,295.755615  z\"})),_path1727||(_path1727=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M367.883820,209.304901  C368.311920,208.880997 368.566498,208.688293 368.884827,208.213165  C372.549896,207.173889 370.789276,202.108368 374.672791,201.147888  C376.580627,201.289749 378.808655,198.648026 379.670593,201.329041  C380.605011,204.235611 379.108551,206.785217 376.214661,208.217743  C375.536102,207.394775 375.107178,206.679703 374.109375,207.724945  C373.628052,210.531265 371.246826,210.099045 369.354187,210.955475  C368.377441,210.721344 367.921936,210.296265 367.883820,209.304901  z\"})),_path1728||(_path1728=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M316.249084,293.997223  C315.029297,293.943054 313.258331,293.411469 313.456635,293.183319  C316.500000,289.682159 312.074219,283.803314 317.666412,281.063385  C318.285889,285.097504 317.770264,289.127991 317.001862,293.560181  C316.833130,293.986115 316.666260,293.989685 316.249084,293.997223  z\"})),_path1729||(_path1729=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M335.868103,255.690842  C336.005432,256.010986 336.003326,256.506683 336.000427,256.754578  C334.423767,256.816986 333.153748,257.528992 331.659943,259.307709  C331.415314,255.917358 332.373199,253.686279 333.043610,251.416489  C333.327728,250.454620 333.740021,249.319138 334.967560,249.579483  C336.283051,249.858475 336.024536,251.126328 335.797760,252.036591  C335.515533,253.169449 335.004547,254.238876 335.868103,255.690842  z\"})),_path1730||(_path1730=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M302.997559,284.997559  C302.995544,284.833130 303.010742,284.669647 302.994263,284.509399  C302.722870,281.871185 303.776154,280.103821 306.408997,279.459045  C307.092346,279.291718 307.833679,279.612885 307.748169,280.400177  C307.486267,282.810486 306.640442,284.817810 303.378265,284.995667  C303.004883,285.004883 303.000000,285.000000 302.997559,284.997559  z\"})),_path1731||(_path1731=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M351.581421,195.549774  C349.600342,195.920944 347.763733,195.434677 348.838104,193.593933  C349.623901,192.247650 351.505249,189.610046 353.273468,190.848007  C354.941986,192.016144 352.920654,193.973602 351.581421,195.549774  z\"})),_path1732||(_path1732=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M322.432678,273.919769  C322.041870,272.827026 321.839752,271.619415 323.651978,271.083923  C323.972382,272.149811 324.304474,273.412231 322.432678,273.919769  z\"})),_path1733||(_path1733=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M335.709534,259.034180  C335.816010,259.544586 335.640533,260.093475 335.231018,260.820557  C333.997498,260.101257 334.232086,259.479553 335.709534,259.034180  z\"})),_path1734||(_path1734=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M284.044464,280.447571  C284.718109,280.817291 284.726257,281.189056 284.244690,281.517365  C284.143890,281.586090 283.910339,281.583405 283.812225,281.511871  C283.342529,281.169342 283.360260,280.797852 284.044464,280.447571  z\"})),_path1735||(_path1735=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M416.296082,108.991302  C416.186646,108.125206 416.170410,106.992989 417.840393,107.792183  C417.547852,108.321907 417.069977,108.639740 416.296082,108.991302  z\"})),_path1736||(_path1736=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M487.807739,105.279831  C490.174042,103.157761 492.822327,103.876030 495.161621,104.102013  C499.009583,104.473740 501.930847,101.417038 505.668701,101.766510  C505.893433,101.787506 506.389557,101.360741 506.368103,101.192032  C506.038910,98.601006 506.153290,96.608559 509.744659,96.958115  C514.267761,97.398361 519.082947,96.569801 522.195129,101.256432  C523.589539,103.356331 525.181885,105.498085 527.907166,105.984840  C529.027100,104.134430 527.477539,103.966469 526.975281,103.287865  C526.545715,102.707344 526.173645,102.044128 526.778687,101.587318  C527.189148,101.277428 528.162476,101.188797 528.556213,101.466377  C531.074829,103.242134 534.224060,104.293648 535.581482,107.450897  C537.435303,107.611267 536.022888,104.134537 538.690796,105.005737  C539.436584,105.470108 539.948303,105.829475 540.553528,106.050117  C540.185547,105.865761 539.798645,105.715637 539.238159,105.225967  C538.947632,100.723854 533.368591,101.309280 531.995972,96.649841  C536.422913,98.431076 540.740723,97.898163 543.313477,102.018265  C543.858521,102.891029 545.099060,103.550758 546.149780,103.850220  C552.631226,105.697433 554.540710,111.466942 557.236023,116.560219  C557.940186,117.890800 557.857300,118.877861 555.906006,118.509575  C555.592285,118.450363 555.035278,118.381165 554.965759,118.513550  C550.983398,126.096695 542.368774,125.568214 536.093140,129.632980  C533.970703,131.936569 531.582642,133.030365 528.834656,132.040619  C526.476624,131.191345 524.813477,133.023804 522.683411,133.174286  C518.609375,133.462112 514.599609,134.202194 510.456543,133.762238  C507.255066,133.422256 505.368805,136.677460 502.065247,137.357712  C499.455872,137.559082 497.859985,139.106598 496.022400,140.092270  C493.412659,141.492126 490.867218,142.047821 487.986023,140.048370  C487.306854,138.486572 488.677612,137.760529 488.720490,136.419617  C485.306610,136.743698 482.196503,134.354614 478.611420,135.810577  C477.164825,136.398071 475.627228,135.579193 475.233185,133.805405  C474.821930,131.954285 475.453339,130.477951 477.443726,130.069290  C480.150208,129.513596 482.825287,128.591766 485.986633,129.152832  C488.401672,130.969131 490.825378,131.788376 493.778778,132.056000  C492.608307,131.779175 491.889099,131.342407 491.326660,130.196930  C491.165649,129.383972 491.207336,128.915665 491.520630,128.149689  C493.961456,126.427460 496.591309,126.513649 498.990021,126.672241  C506.282776,127.154419 513.564270,125.652679 520.809326,126.577141  C524.869019,127.095146 528.283752,125.118774 531.905640,124.224602  C534.880859,123.490082 532.908264,121.142189 531.297729,118.790962  C531.252380,121.303139 531.907104,123.675797 529.054016,123.984283  C527.105286,124.194977 525.172241,125.557449 523.221985,124.509285  C520.388611,122.986450 520.513428,120.587929 521.838989,118.088928  C522.528870,116.788338 522.866760,115.623657 521.475952,114.571083  C519.726257,113.246826 519.779358,115.187798 519.092163,115.846603  C517.792603,117.092445 516.417908,116.474869 515.610596,115.425644  C512.276917,111.093124 506.877655,111.834129 502.556305,109.964172  C500.319641,108.996315 498.772339,110.239716 498.294281,112.715469  C497.772064,115.419739 496.048218,116.184059 493.478821,115.517204  C490.417145,114.722595 487.583588,114.587105 485.728760,117.940025  C485.066681,119.136902 483.351501,118.953430 482.336456,119.770195  C483.395355,122.252495 485.239105,122.827339 487.835419,122.921181  C490.257416,123.008728 493.606354,123.381027 491.233459,127.740753  C484.701202,129.300293 478.142761,129.034271 472.118927,131.530487  C471.404816,131.826401 469.627136,130.968536 470.110687,132.667435  C471.647705,138.067566 467.429443,137.663422 464.455353,138.434235  C463.524902,138.675400 462.502960,138.752136 461.886719,138.810959  C467.483429,137.704926 473.328400,139.114456 479.181427,139.848129  C481.752289,140.170395 483.369446,141.843231 482.309326,145.117844  C481.299957,146.092514 480.340820,146.307449 478.976013,146.415741  C477.382812,146.566727 476.122650,146.303818 474.829468,146.653244  C476.828979,146.889969 478.582550,147.295380 478.634888,150.090210  C477.793030,152.015533 476.298279,152.248474 474.443726,152.509796  C472.517303,152.279770 471.410645,153.007278 470.225586,154.416931  C469.253387,154.996933 468.524994,155.170624 467.373535,155.194214  C466.465302,155.062286 465.989960,154.854538 465.279480,154.269806  C464.775024,152.246704 463.534790,151.875015 462.101685,152.025894  C455.156281,152.757156 448.939545,150.181763 442.750885,147.670975  C441.273315,147.071518 440.234833,147.591522 438.974579,147.844742  C437.262817,148.188721 435.666718,149.627792 433.231476,148.202087  C435.081848,146.729492 436.665161,145.229523 438.476501,144.092911  C440.428162,142.868225 442.666077,142.206467 441.439636,138.993073  C441.047272,137.965134 441.839752,136.494263 443.684326,136.421829  C448.046570,136.250519 450.644592,133.742279 451.996460,129.374084  C455.341370,126.859390 460.074585,127.191101 462.317902,123.172859  C458.962555,124.752296 456.204590,127.501114 452.251709,128.758621  C449.650299,129.522171 447.474945,130.592941 445.074677,128.460556  C443.552124,127.107925 441.354614,128.230301 438.833466,130.020584  C439.752899,126.356613 441.774200,125.953102 443.823059,126.057373  C446.369598,126.186966 447.982452,125.095047 449.812866,123.389595  C452.783661,120.621552 456.329437,118.478058 459.562805,115.980713  C460.840332,114.993973 461.604492,116.190262 462.595459,116.307808  C464.437744,116.526352 466.531830,116.599342 467.926422,114.345276  C473.172180,111.244156 479.166107,110.841263 484.423431,108.217743  C485.831787,107.514969 486.979065,106.977173 487.807739,105.279831  z\"})),_path1737||(_path1737=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M501.691101,136.228210  C508.099396,130.260300 516.065735,133.608276 522.866333,131.635376  C527.022461,130.429657 531.288818,131.593658 535.632935,130.001938  C541.290039,129.943314 546.921265,133.497025 551.748169,128.473328  C552.032166,128.177765 552.665710,128.128540 553.139893,128.118454  C562.542908,127.918022 562.833252,127.849716 571.245300,122.776985  C573.234741,121.577271 574.955994,121.673340 576.721069,123.786011  C576.689209,124.792297 576.376099,125.579636 576.031494,126.684601  C574.506653,128.029205 572.208862,128.227676 571.511902,130.002014  C568.362427,138.020569 561.903931,137.167862 555.544678,135.915680  C552.783936,135.372101 550.496887,135.236633 547.983887,136.690308  C546.014343,137.829620 543.774109,137.211258 541.695557,136.407272  C540.459167,135.929031 539.198425,135.350632 537.589233,136.426926  C536.833801,136.690796 536.385925,136.756577 535.599487,136.702271  C534.083618,136.214783 533.106018,135.290878 531.490845,135.075714  C530.605408,134.836685 530.022827,134.661209 529.134521,134.483292  C528.020691,134.426407 527.221741,134.499054 526.151611,134.881668  C525.438171,135.082413 525.021912,135.171661 524.280762,135.295380  C521.687012,135.757843 519.080200,135.111710 517.132385,137.614136  C513.417725,140.884491 508.718933,141.915970 505.309875,145.182571  C503.220734,147.184402 499.893707,146.402328 496.862946,147.252548  C494.419373,147.290680 492.466583,147.554810 491.395264,150.187805  C490.907776,150.536804 490.686340,150.642136 490.098022,150.815582  C489.220062,150.887802 488.730133,150.787598 487.952637,150.356735  C485.571747,145.194733 489.650330,143.593399 492.550964,141.787399  C495.462250,139.974792 498.823883,138.884918 501.691101,136.228210  z\"})),_path1738||(_path1738=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M385.714417,242.371948  C386.349915,235.577881 389.700195,229.962250 390.949066,223.383606  C392.658875,220.077164 391.888123,216.869965 392.204224,213.451233  C392.772369,212.237900 393.592651,211.807114 394.716034,211.201523  C398.662781,214.884430 399.646423,208.860672 402.661682,209.014832  C404.513580,213.655014 402.320404,217.946533 400.785583,221.837982  C396.289062,233.238571 393.690643,245.137680 390.244232,256.813049  C389.269989,260.113525 387.740570,263.176361 388.430237,267.106537  C388.387756,267.977020 388.345398,268.469147 388.221313,269.313416  C387.625397,271.204987 387.165131,272.748871 387.821075,274.727997  C388.054077,276.282623 387.699554,277.430695 387.444885,278.955994  C387.352478,280.064758 387.141022,280.767487 386.575714,281.732697  C386.126831,282.145325 385.904175,282.258789 385.347412,282.202209  C383.577423,279.034393 380.950958,276.300842 383.524628,272.560364  C384.285431,271.454620 382.933167,270.471741 382.167694,269.652313  C380.979980,268.380920 380.843719,267.018921 381.741669,265.592957  C384.189301,261.705994 385.226654,257.534973 384.179382,253.009064  C383.605438,250.528519 387.246735,249.905548 386.226379,247.212280  C384.622559,245.738754 384.698212,244.285446 385.714417,242.371948  z\"})),_path1739||(_path1739=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M387.394287,268.275330  C386.289795,263.846283 387.377197,260.156525 388.784637,256.075684  C391.900116,247.042358 392.817352,237.183716 396.460663,228.422455  C399.019165,222.269897 400.002991,215.693100 402.967102,209.381058  C403.326141,208.534088 403.633087,208.059708 403.964417,207.291977  C407.085297,201.962326 409.558990,196.564331 412.957428,191.328720  C413.197357,190.450867 413.372742,189.910156 413.774475,189.188629  C415.767731,187.786346 416.275024,185.355820 418.735657,184.417694  C419.334198,184.442902 419.570404,184.502808 420.094788,184.789398  C421.877655,188.029556 419.273041,190.000488 418.391907,192.780609  C417.871429,194.252182 417.240173,195.255280 416.286316,196.469833  C415.191132,197.501480 414.419159,198.331192 414.078186,199.865845  C407.763031,214.480927 402.621582,229.158081 397.455688,243.825195  C397.012787,245.082581 396.534424,246.306488 395.641296,247.748154  C395.101929,248.679626 394.714935,249.284225 394.529663,250.352875  C394.349823,253.694458 393.207733,256.433258 392.294586,259.612701  C391.866119,260.915497 391.425629,261.831238 391.486481,263.262512  C391.584503,265.045074 391.372681,266.374847 390.457520,267.948242  C389.417542,268.766327 388.603058,268.827515 387.394287,268.275330  z\"})),_path1740||(_path1740=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M360.768250,220.282089  C361.989868,217.459152 362.776489,214.774628 365.794678,213.263657  C366.167603,212.873245 366.333984,212.745865 366.750183,212.809250  C368.546570,215.121201 363.444977,218.436737 368.625671,219.985443  C370.175049,223.364014 370.133759,226.149765 366.373383,228.117081  C363.645081,229.544418 361.675354,231.619522 361.496613,235.308044  C361.396332,237.377594 359.445282,239.357483 358.163452,241.690414  C357.209442,242.753448 356.284668,243.097244 354.823486,242.826416  C354.242645,242.570892 354.030670,242.426971 353.620178,241.954987  C353.052734,239.783371 354.046387,238.235168 354.757812,236.286469  C354.998779,235.999390 355.000000,235.500015 355.000610,235.250336  C356.379944,233.701767 356.290344,231.824280 357.020020,229.911102  C357.880066,228.044678 359.569214,227.639328 360.767548,226.646027  C362.266083,225.403900 362.225342,224.382523 360.564575,222.961273  C360.163635,221.940567 360.201691,221.242493 360.768250,220.282089  z\"})),_path1741||(_path1741=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M487.619934,104.944977  C488.718079,108.141121 489.734833,111.506714 484.234589,109.327515  C483.766357,109.141991 482.777069,109.370903 482.495483,109.751648  C478.956543,114.537193 473.352936,112.534676 468.411621,114.000000  C470.543152,112.316017 469.809998,108.455688 472.565033,106.982025  C477.185272,104.510643 482.243866,104.804733 487.619934,104.944977  z\"})),_path1742||(_path1742=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M393.227783,212.755493  C392.825562,216.315277 394.882996,219.924438 391.351532,222.921204  C389.613068,220.364212 392.325836,216.449341 388.251831,214.518616  C387.609894,214.214401 387.721405,212.078308 388.805969,211.472763  C391.961853,209.710693 391.872009,206.761612 391.999084,203.413574  C391.751648,202.193054 391.504486,201.388550 391.128693,200.291397  C396.297546,201.548538 396.500153,202.169250 394.007568,209.618958  C393.370605,210.738815 394.034485,211.759003 393.227783,212.755493  z\"})),_path1743||(_path1743=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M444.650116,163.990784  C445.807678,163.734467 446.608795,163.484909 447.700073,163.103134  C449.130798,161.977417 450.418793,161.623444 452.259949,162.250153  C454.171234,164.599304 452.392181,165.728683 450.959229,166.114624  C443.652130,168.082718 437.073669,171.342407 431.278442,176.218338  C430.659363,176.739212 429.716705,176.716782 428.518372,176.405350  C426.383972,173.365097 428.957520,172.094788 430.672150,170.208313  C434.192230,168.527954 437.363190,167.018539 440.770142,165.257614  C441.895538,163.997055 443.098694,164.010529 444.650116,163.990784  z\"})),_path1744||(_path1744=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M430.814758,169.802734  C431.642456,172.678879 428.478638,173.213623 427.972107,175.944214  C427.573456,177.127823 427.159271,177.593521 427.021973,178.508087  C426.975830,179.213608 426.926056,179.615494 426.787567,180.314026  C426.636292,180.801651 426.556091,180.990494 426.308380,181.437195  C425.761658,182.177719 425.316681,182.603363 424.733948,183.320496  C424.239960,183.858063 423.928894,184.138565 423.335327,184.579712  C422.299561,185.176178 421.493713,185.445831 420.317139,185.181854  C419.859711,185.016632 419.684937,185.007828 419.247894,184.988892  C418.599396,184.599335 418.455780,184.143463 418.772522,183.302078  C422.921478,178.568604 423.198853,170.982391 430.814758,169.802734  z\"})),_path1745||(_path1745=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M453.377502,163.273636  C451.652802,163.031082 450.244324,163.011261 448.413055,162.981171  C448.182861,161.029861 449.308197,160.222626 451.201416,159.992020  C455.322296,159.490005 458.619415,156.320526 462.943359,156.275238  C463.519653,156.269196 464.084869,155.207657 464.828125,154.313416  C465.446411,154.001389 465.891785,154.010864 466.670959,154.034271  C467.554962,154.660751 467.814362,155.377594 467.692047,156.582047  C466.002869,159.751755 463.480957,161.118652 460.380066,161.384079  C458.678131,161.529755 457.184357,161.982254 455.560486,163.286346  C454.713440,163.617645 454.204926,163.627213 453.377502,163.273636  z\"})),_path1746||(_path1746=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M412.720886,191.152710  C413.234558,191.408051 413.736267,192.062241 413.617706,192.206497  C409.971161,196.642685 408.979980,202.725266 404.306458,206.853485  C402.181549,203.994217 405.670471,202.856903 406.463898,200.824905  C407.791382,197.425217 409.721008,194.036148 412.720886,191.152710  z\"})),_path1747||(_path1747=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M418.647949,183.040390  C418.991028,183.434479 418.991608,183.875992 418.988892,184.648132  C416.994690,185.689972 416.993011,188.576752 414.335419,188.966309  C414.708588,186.505783 415.776276,184.265442 418.647949,183.040390  z\"})),_path1748||(_path1748=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M374.334167,208.001785  C372.295746,205.812103 374.384064,204.584290 375.596497,204.575562  C377.738892,204.560120 376.670990,206.256714 376.134277,207.695709  C375.554871,208.001389 375.110992,208.001572 374.334167,208.001785  z\"})),_path1749||(_path1749=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M444.771057,163.738312  C444.168274,165.133133 442.922821,164.979324 441.370056,165.006454  C441.425171,162.735321 442.824646,162.750854 444.771057,163.738312  z\"})),_path1750||(_path1750=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M367.234924,212.836426  C367.000000,213.000000 366.500610,213.000259 366.250916,213.000427  C365.969330,211.587189 366.055878,210.218979 367.702820,209.167206  C368.260895,209.497513 368.518219,209.992416 368.887146,210.743347  C368.489136,211.557190 367.979492,212.115005 367.234924,212.836426  z\"})),_path1751||(_path1751=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M398.586914,206.283432  C398.496552,204.948715 398.665863,203.848236 400.022949,203.578552  C400.169983,203.549332 400.587128,203.973007 400.565033,204.146622  C400.424744,205.248062 400.223572,206.359436 398.586914,206.283432  z\"})),_path1752||(_path1752=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M484.155640,98.874939  C484.705963,99.707191 484.788879,100.405754 483.949799,100.527016  C483.031525,100.659714 482.378815,100.012665 482.504944,99.092300  C482.620636,98.248032 483.319519,98.332092 484.155640,98.874939  z\"})),_path1753||(_path1753=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M542.058899,88.320938  C542.882080,88.163010 544.050476,87.665421 544.414734,88.985191  C544.466431,89.172485 544.171814,89.615425 543.952576,89.689751  C542.997742,90.013496 542.433411,89.514488 542.058899,88.320938  z\"})),_path1754||(_path1754=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M516.000000,93.000305  C516.878357,93.162758 518.042175,92.664993 518.412659,93.980377  C518.465088,94.166695 518.171631,94.611496 517.953308,94.685219  C516.998840,95.007561 516.435364,94.508499 516.058105,93.320198  C516.000000,92.999390 516.000000,93.000000 516.000000,93.000305  z\"})),_path1755||(_path1755=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M393.314728,212.949982  C393.167236,212.145447 393.334473,211.290359 393.750244,210.216644  C394.119476,210.306747 394.311401,210.561951 394.785645,210.881470  C394.902557,211.892899 394.629730,212.657898 393.314728,212.949982  z\"})),_path1756||(_path1756=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M540.328491,88.004761  C540.468201,87.685722 540.941223,87.369400 541.709595,87.024872  C542.004883,86.996658 542.009460,87.495850 542.007202,87.745377  C542.004883,87.994904 542.000000,88.000000 541.997559,88.002533  C541.550720,88.005875 541.106262,88.006668 540.328491,88.004761  z\"})),_path1757||(_path1757=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M459.357513,96.957993  C459.219177,94.315567 461.067291,93.931816 463.617737,94.003113  C463.631989,96.537582 461.243378,96.093773 459.357513,96.957993  z\"})),_path1758||(_path1758=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M452.044769,104.448303  C452.718536,104.817688 452.726013,105.189117 452.244781,105.517090  C452.144043,105.585777 451.910736,105.583115 451.812592,105.511604  C451.343018,105.169403 451.360504,104.798233 452.044769,104.448303  z\"})),_path1759||(_path1759=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M457.542938,93.999557  C456.762756,94.979469 455.991455,94.993233 455.423065,94.201408  C455.019440,93.639091 455.104706,92.817215 455.786072,92.552101  C456.722839,92.187553 457.263123,92.872398 457.542938,93.999557  z\"})),_path1760||(_path1760=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M758.807129,518.779297  C760.629211,524.745361 762.260864,530.485901 763.945068,536.613159  C762.470093,538.245667 761.755432,536.993591 760.922913,536.030212  C761.965759,537.428467 762.309692,539.228638 763.768005,540.764160  C768.043640,543.247314 765.663696,545.663940 763.995850,547.768433  C761.883606,550.433716 761.087036,547.594604 759.971802,546.504333  C758.752441,545.312134 757.331848,544.535339 755.351318,544.046997  C754.994202,544.007935 755.000000,544.000000 754.996094,544.001709  C754.080261,542.530701 753.541260,540.736938 751.316589,540.060547  C749.546509,538.892578 748.029663,537.858887 746.677917,536.641846  C745.099426,535.220581 744.951050,533.522034 746.170166,531.730774  C747.329285,530.027710 748.462952,529.717407 750.246094,531.156433  C752.425659,532.915344 753.145996,530.814880 753.691895,529.299072  C754.436951,527.230164 753.352722,525.444214 752.433838,523.646973  C750.266541,523.522034 750.921021,528.713989 748.547363,526.324280  C746.573120,524.336731 746.114624,520.722717 747.002441,517.648987  C747.341187,516.476257 748.767517,515.662109 749.394165,514.518005  C750.463196,512.566223 753.057129,510.629456 749.902771,508.259674  C749.570618,508.010071 749.231018,507.167053 749.382141,506.966309  C752.407898,502.947968 748.242554,499.924072 747.918091,496.377869  C747.700745,494.001678 745.094360,491.896545 747.546631,489.188049  C748.187439,488.480286 747.199524,486.880615 746.080139,486.374451  C744.916016,485.848083 744.386658,486.802032 743.863159,487.743896  C742.291809,490.571075 740.554382,493.307587 739.034729,496.160950  C738.502319,497.160553 738.501465,498.672577 736.934082,498.397675  C735.613342,498.166046 735.322998,496.785889 735.150085,495.668915  C734.896973,494.033478 734.694275,492.311615 735.785583,490.852600  C738.727600,486.918945 740.283020,482.415771 741.328613,477.582489  C740.850159,477.582489 740.389404,477.542542 739.937744,477.589722  C738.322998,477.758301 736.857056,480.582886 735.730530,479.202271  C733.947937,477.017822 737.578308,476.782013 738.160217,475.244873  C739.761963,471.013458 741.199585,466.739777 741.203369,462.140717  C741.204773,460.403076 740.220398,458.470825 742.638611,457.091339  C743.321472,457.091644 743.920227,457.236267 743.914795,457.264526  C742.872131,462.680817 748.265503,464.536560 750.012268,468.367981  C751.980774,472.685822 750.703064,477.500000 751.806702,482.062561  C752.940979,486.751190 752.794983,491.709229 752.875366,496.598877  C752.945312,500.855286 757.190979,501.496490 760.627319,502.966248  C760.982971,503.451721 760.986450,503.891022 760.984680,504.659912  C758.602661,507.112213 756.957947,509.522583 757.824402,513.253357  C757.521790,514.783386 756.825867,515.814453 756.299683,517.186646  C756.072266,517.759338 756.171814,517.989502 756.774048,518.115234  C757.595886,518.125122 758.126892,518.264465 758.807129,518.779297  z\"})),_path1761||(_path1761=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M757.061279,514.322876  C756.143555,510.328857 754.054626,506.213043 760.604492,505.042267  C761.513184,505.584564 762.046875,506.179657 762.860352,506.895325  C765.336914,508.802887 766.733765,511.132874 767.765381,514.084961  C767.692383,515.797852 768.016663,517.057922 768.926025,518.537842  C769.454346,520.392334 769.459961,521.876282 768.399841,523.565308  C764.355713,524.238037 764.089233,519.243958 760.359009,519.010071  C758.630615,517.819763 757.574463,516.433655 757.061279,514.322876  z\"})),_path1762||(_path1762=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5E5B5B\",opacity:1,stroke:\"none\",d:\" M768.114136,523.854858  C768.047913,522.201172 767.966248,520.561951 767.859375,518.509644  C767.296570,517.372559 766.976807,516.573364 766.973389,515.330383  C765.694763,512.572388 764.434143,510.142609 763.156799,507.364349  C764.491821,507.030029 765.750000,507.179352 766.645691,508.428497  C770.883362,514.338623 773.917175,520.874207 776.601868,527.585266  C776.801025,528.083008 776.667542,528.954224 776.335876,529.371399  C775.732788,530.130005 774.744202,529.957153 774.137573,529.373901  C773.201477,528.473816 772.450806,527.380859 771.371582,526.137329  C770.058899,525.720459 769.154053,525.257324 768.282837,524.154846  C768.094604,523.907043 768.098755,523.869385 768.114136,523.854858  z\"})),_path1763||(_path1763=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M775.998047,545.612793  C774.061890,543.784302 770.910339,547.282410 769.379822,544.886902  C767.671509,542.212952 772.598694,542.025940 772.038574,539.357056  C771.855408,538.484436 772.321411,537.475525 772.764038,536.258301  C774.021057,539.066406 775.004517,542.145203 775.998047,545.612793  z\"})),_path1764||(_path1764=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M768.074524,524.281494  C769.242188,523.928894 770.383057,523.964539 771.018677,525.584717  C771.094055,526.086914 771.066467,526.268799 771.012085,526.725342  C769.358582,527.031128 767.982483,526.748840 768.074524,524.281494  z\"})),_path1765||(_path1765=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M760.059448,489.184692  C762.037842,489.266632 762.467773,490.804657 762.898926,492.695343  C761.336914,492.932098 760.868652,491.641663 760.075500,490.241547  C759.948853,489.775604 759.973389,489.605377 760.059448,489.184692  z\"})),_path1766||(_path1766=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M776.942383,548.717163  C776.068604,548.803833 774.974670,548.764954 775.821289,547.162109  C776.335693,547.466248 776.633240,547.944885 776.942383,548.717163  z\"})),_path1767||(_path1767=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M649.360596,575.158447  C645.853699,569.918579 644.862976,569.827515 641.091248,573.863525  C639.156982,575.933167 637.911255,578.887878 634.138184,579.723755  C634.979675,576.275757 634.408936,573.551575 632.913818,570.648071  C630.625854,566.204956 631.990173,563.468689 637.162964,562.606323  C639.696533,562.184021 638.691406,561.050720 639.368896,559.980347  C641.496826,556.618408 641.864868,554.066895 639.120728,550.967529  C638.397888,550.151062 639.281433,548.458008 640.110107,547.319580  C640.966980,546.142578 641.398010,544.908569 639.249878,544.015259  C637.500183,540.044373 641.805725,538.540039 642.503357,535.159912  C642.650085,534.374817 642.754089,533.931946 642.997559,533.176270  C643.727539,531.433472 644.476013,530.088379 645.728760,528.694336  C646.503601,527.928772 647.262512,527.574890 647.593628,526.476196  C647.801270,525.593262 648.001160,525.018555 648.376221,524.172913  C648.968140,523.155212 649.591980,522.558838 650.341492,521.633179  C652.148987,519.947388 653.090332,518.145142 653.654663,515.746948  C653.852295,514.955261 654.020996,514.520752 654.412109,513.802734  C658.290527,508.067596 659.486877,501.750397 660.903198,495.176636  C660.838013,493.661652 661.046448,492.546417 661.795410,491.234924  C662.859863,490.017303 663.493896,489.000031 662.934937,487.297852  C662.747375,485.456665 663.101013,484.087494 664.273193,482.599457  C666.282349,481.101807 667.990845,479.803558 669.999207,478.984253  C678.434326,475.543213 681.153259,468.411591 682.103882,460.159210  C682.479675,456.896851 682.194031,453.570648 683.176880,449.998535  C684.851685,445.999420 686.306885,442.418488 688.851501,439.182770  C690.911560,436.563202 689.629700,433.013519 688.188049,430.178741  C686.407104,426.676666 686.505432,423.461578 688.711182,420.304535  C689.912476,418.585266 690.410217,416.702576 690.387512,414.660950  C690.355286,411.755463 690.988525,409.095245 692.644348,406.629700  C694.505981,403.857727 695.052368,400.855316 693.724792,397.608643  C692.732483,395.181854 692.291077,392.828644 695.035522,390.992493  C696.788025,389.820038 695.987549,387.972137 695.675964,386.387390  C693.719360,376.437073 692.073792,366.406891 688.250793,356.924591  C687.502563,355.068604 686.997253,353.138306 686.566040,351.178741  C685.585327,346.722290 685.149536,342.546112 690.227234,340.030579  C691.392761,339.453125 691.973328,338.051483 692.780212,336.992828  C694.266663,335.042542 696.062073,334.221161 698.702271,335.755432  C700.655640,339.081879 702.313782,342.166229 703.988403,345.627716  C704.004883,346.004883 703.997192,346.502014 703.994995,346.750610  C702.974304,348.182678 701.648193,347.927612 700.090271,347.718262  C699.419861,347.573822 699.282654,347.727966 699.450867,348.107727  C699.513855,348.250000 699.660767,348.306671 700.121704,348.433044  C705.739380,352.931854 706.426208,355.294708 704.043945,361.254913  C703.543701,362.506470 702.954529,363.807495 703.430847,365.100952  C705.251892,370.046082 704.085999,374.934845 703.294678,380.205933  C702.262024,383.460785 703.660950,386.135315 704.073364,389.250641  C704.413574,391.217377 704.092590,392.828979 704.068726,394.788971  C704.076111,395.361176 704.074158,395.589996 704.041565,396.160645  C702.758850,398.781311 702.682251,401.085968 703.840698,403.765778  C703.756775,404.337097 703.691589,404.560760 703.448120,405.085785  C700.125000,408.402466 700.719421,412.838531 699.129211,416.458984  C698.641479,417.569550 699.181519,419.253235 698.384888,420.257477  C695.577759,423.795776 697.013611,426.565460 699.831970,429.553619  C700.148010,430.327759 700.262329,430.791321 700.369751,431.621948  C700.127136,436.798157 703.312012,440.996704 702.559814,446.029388  C701.613770,452.358948 699.356628,458.196320 696.172852,463.519775  C694.241089,466.749695 693.749084,468.990265 696.390381,471.697296  C696.964661,472.285919 697.027344,473.197968 697.011108,474.390564  C696.755066,475.710327 696.177246,476.436066 695.162720,477.253784  C693.811829,478.123810 692.482483,478.469727 691.702515,480.046021  C691.345886,480.475342 691.189026,480.637573 690.764404,481.012054  C688.310852,482.481476 686.206787,483.791138 685.317261,486.383331  C684.537903,488.654388 682.676270,489.715607 679.572998,490.616669  C681.669312,491.035797 683.006592,491.305542 684.136230,492.034027  C685.865173,493.148926 685.950989,494.698395 685.268188,496.412506  C684.634155,498.004028 683.583435,498.885651 681.766418,498.199402  C678.098816,496.814117 677.203003,498.897125 677.373840,501.898132  C677.550232,504.994659 676.387695,507.178619 674.090820,509.279724  C669.883911,513.127991 666.403625,517.606873 664.615540,523.171753  C664.360962,523.964233 664.262878,525.053284 663.618896,525.419678  C659.848877,527.564941 659.851624,531.148315 659.899353,534.755188  C661.907837,533.844849 664.149658,531.400879 665.759460,535.723022  C665.153809,540.142639 662.656555,542.757935 658.841431,544.683411  C657.816711,544.722351 656.771973,544.221252 656.592957,544.494812  C654.379578,547.876953 652.403992,551.416077 651.119995,555.257935  C650.297241,557.720032 652.421570,559.118103 653.800842,561.144531  C654.898865,564.622742 654.720764,567.730042 653.511475,571.171265  C652.830627,572.751221 652.105896,573.828491 650.795715,574.936462  C650.218628,575.205994 649.966309,575.262146 649.360596,575.158447  z\"})),_path1768||(_path1768=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M657.675293,544.126953  C660.770142,542.013916 663.510254,540.004395 664.742432,536.237061  C666.006897,533.515259 668.089722,531.877441 669.672241,529.859741  C675.377869,522.584778 682.282043,516.187317 686.847656,508.102661  C690.552368,501.542572 691.781982,493.869690 696.286987,486.507599  C693.000793,488.173431 692.538330,492.764709 689.315247,491.028442  C686.539551,489.533173 689.423462,486.504791 689.135193,484.145142  C688.970703,482.798279 689.611084,481.552704 690.764404,480.258667  C691.004883,480.006317 691.000000,480.000000 691.003662,480.002380  C691.844604,479.129761 692.565674,478.139038 693.787720,477.218475  C694.559998,476.493439 695.114014,475.979553 695.830383,475.229858  C696.449097,474.399384 697.588440,474.776855 697.681152,474.445221  C700.990356,462.607208 703.373047,450.585358 704.639709,438.350006  C704.795898,436.841034 705.192505,435.403839 706.689941,434.161072  C709.084290,434.955475 712.739868,431.827972 713.295044,435.407745  C713.656555,437.738373 712.639465,440.839020 709.274536,442.408508  C706.263794,443.812775 706.488586,447.830841 706.648682,450.464630  C706.847168,453.727753 705.134521,458.419250 710.792542,459.833923  C706.113403,462.920898 705.907227,468.106445 703.658508,472.164795  C702.812866,473.690857 704.356445,474.128082 705.365662,474.575470  C706.688843,475.162140 707.662659,474.686829 708.016663,473.276886  C708.757324,470.327454 710.474976,467.863037 711.903748,465.255005  C712.371582,464.400909 712.833435,463.277405 714.042358,463.626282  C715.280823,463.983673 714.970276,465.245850 714.978271,466.181793  C715.017395,470.761810 715.955505,475.366302 714.247070,479.890839  C713.185974,482.700806 716.618225,486.143738 713.157837,488.771667  C713.031067,488.867950 713.450684,490.177032 713.854980,490.345032  C714.288696,490.525238 715.094666,490.147522 715.580872,489.795868  C716.755249,488.946503 716.787231,487.535095 717.179932,486.270081  C717.859558,484.080688 719.771179,482.817139 721.752563,483.443237  C723.941223,484.134796 722.722046,486.190887 722.244629,487.687500  C720.283997,493.833099 719.503235,500.194763 718.628296,506.548492  C718.457458,507.789093 718.142517,508.870270 719.461853,509.540710  C720.849304,510.245789 721.494873,509.444763 722.144775,508.265869  C722.956787,506.793213 724.442322,505.206818 725.967529,505.691345  C727.900024,506.305176 726.800049,508.573944 726.969238,510.118011  C727.113220,511.431671 726.998962,512.773621 726.998291,514.551514  C726.463562,515.500732 725.866211,515.887939 724.790283,516.077332  C723.074585,516.160217 721.640869,515.501770 720.288940,516.358643  C720.450928,518.401062 722.241455,518.288757 723.659058,519.167236  C727.143860,522.647095 725.191101,524.709106 721.859497,526.522095  C719.388428,524.856445 717.279846,523.197205 714.085999,523.106934  C712.072327,520.274292 713.930664,517.011780 712.166870,513.927002  C709.971375,516.886719 707.237549,519.012634 705.137268,521.817200  C703.010742,524.656921 701.080078,524.356567 699.721313,521.068481  C698.192871,517.369812 696.596924,513.981567 701.346436,510.646027  C704.046021,508.750092 705.070312,504.669189 705.586304,500.147888  C701.370728,502.954041 698.716553,506.197021 697.954224,509.960754  C696.447876,517.397888 694.161438,524.647461 692.638733,532.278259  C691.953308,532.586792 691.668152,532.048279 691.340698,532.176086  C691.058960,532.286133 691.173218,532.599854 691.710205,533.046387  C691.124146,538.653198 690.993530,544.293274 685.765381,547.664612  C684.712219,548.343750 684.791138,550.612122 683.034119,549.926636  C681.379639,549.281311 680.906250,547.623108 680.991150,546.630432  C683.098999,549.579712 682.091614,552.737915 680.055542,556.282654  C678.154907,559.591797 681.312256,561.561646 683.787354,563.723999  C683.988953,564.007080 683.984741,564.496216 683.983826,564.740784  C683.135559,565.946472 682.066101,566.693848 681.854675,568.159607  C681.639404,569.652039 682.388306,571.824585 680.188904,572.285645  C677.902222,572.765076 677.734131,570.107849 676.381348,569.037231  C675.693237,570.406738 675.039978,571.712891 675.234070,573.611572  C675.250122,574.454041 675.209351,574.936035 675.047668,575.775391  C674.065918,577.900696 673.271423,579.753967 670.846924,580.525696  C670.254578,580.426331 670.030701,580.332581 669.565308,579.971558  C668.644470,574.556458 665.713440,570.729004 662.536804,566.787659  C659.811340,563.405884 659.176758,565.234985 658.008545,567.600952  C656.842651,569.962158 656.663757,573.510132 652.236328,572.241455  C653.158264,568.713623 653.072205,565.299866 653.011719,561.444336  C653.991211,557.474854 656.040344,554.838257 659.443542,553.370972  C660.544983,552.896057 662.480347,553.451172 662.357056,551.483215  C662.238464,549.589050 661.376953,547.956421 659.126282,547.713379  C656.776672,547.459595 655.592224,546.616089 657.675293,544.126953  z\"})),_path1769||(_path1769=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M734.993164,580.598633  C731.428345,579.320862 731.999817,582.004944 732.069519,583.882996  C732.161682,586.367676 734.034058,588.817932 732.374573,591.257019  C731.133789,590.164062 729.867737,589.217163 728.804565,588.080444  C725.687927,584.748413 723.655823,584.973999 722.118469,589.355896  C720.716736,593.351257 719.073364,597.457703 720.469727,601.860840  C721.014465,603.578613 720.939758,604.812622 718.385254,604.983643  C718.420471,601.706238 717.636353,598.770142 715.534180,596.169373  C714.846863,595.319031 713.582214,594.126038 714.966064,593.224792  C718.063721,591.207336 716.387878,588.859924 715.716797,586.613953  C714.106384,581.224243 713.448242,581.081299 709.250366,585.019043  C708.820801,585.422058 708.544250,585.988281 707.820374,587.009644  C705.899841,578.087830 703.192871,570.011169 702.892944,561.364807  C702.780701,558.129456 704.703369,556.194092 705.938965,553.373535  C703.665588,550.667725 706.611755,548.096069 705.824097,545.342163  C705.983215,544.547241 705.985413,544.105225 705.988708,543.331665  C706.423523,541.193237 706.388733,539.204956 708.294861,537.694214  C710.533569,537.246582 712.610840,537.598022 714.561890,536.023438  C715.589417,535.351013 715.816711,534.636597 716.048645,533.794495  C717.334534,529.125122 719.227173,528.749878 723.090454,532.651245  C723.018188,535.824707 723.122070,538.639160 722.135986,541.378235  C720.343506,546.357117 723.392639,551.054871 723.119751,555.966614  C723.090088,556.500610 723.620667,557.485168 724.022888,557.560730  C730.310059,558.741882 728.631348,563.180603 728.018616,567.167969  C727.854736,568.234253 728.445801,569.533264 727.109924,570.347900  C725.179626,569.862976 726.107971,566.778259 723.485840,566.590942  C723.016846,569.818237 724.623535,572.625854 725.205017,575.570618  C725.490479,577.015869 726.686707,576.700378 727.400879,575.792053  C728.558350,574.319946 728.267822,570.721802 731.363159,572.148254  C734.214050,573.461914 735.549011,576.318481 735.000671,579.688416  C734.974304,579.850586 734.996582,580.020691 734.993164,580.598633  z\"})),_path1770||(_path1770=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M703.213867,396.253052  C703.004883,395.998627 702.999084,395.499573 702.995605,395.250061  C703.506897,393.520050 705.229919,392.164001 703.239990,390.219330  C701.936340,387.258575 701.269409,384.451843 701.740906,381.239258  C704.003479,379.590637 705.710999,379.581787 706.587952,382.204498  C709.336487,390.424866 712.174927,398.629944 712.760803,407.712616  C713.314148,408.790405 713.627380,409.573517 713.971558,410.672729  C714.016602,411.587952 714.193604,412.128448 714.788818,412.796631  C716.419739,415.947021 714.745483,418.545746 714.454590,421.392120  C712.658691,420.931030 713.049988,419.731934 713.028442,418.864441  C712.980652,416.936676 712.125061,415.179901 710.257446,415.596283  C708.005859,416.098358 709.760376,417.980621 709.882874,419.251953  C710.163208,422.160309 710.033630,424.984009 711.561707,427.858459  C713.232910,431.002258 710.969543,432.289551 707.413147,431.999146  C703.114441,431.896332 702.866394,429.031921 702.543396,425.785797  C701.628357,418.789185 699.233521,412.202026 702.721436,405.294373  C702.982910,404.985535 702.986267,404.490356 702.990540,404.242798  C704.172913,401.558502 702.112915,398.936707 703.213867,396.253052  z\"})),_path1771||(_path1771=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M713.060303,407.597412  C709.634583,407.031982 710.698181,403.794006 710.310242,401.734619  C709.239685,396.050934 708.591125,390.225037 705.188904,385.437103  C704.159363,383.988220 707.296570,380.169403 702.342651,380.996521  C701.556763,375.529755 704.940735,369.918091 701.259399,364.512268  C700.836975,363.891998 701.456177,362.080536 702.132019,361.272888  C706.434204,356.131226 703.230042,352.706085 699.304688,349.157288  C698.359985,348.327728 698.234253,347.550781 698.766846,346.344482  C700.422791,346.329071 701.840698,346.656921 703.625671,346.992004  C708.445862,350.686279 708.486267,356.076935 708.655518,361.009155  C708.809570,365.498840 709.845032,369.679565 711.019775,373.868835  C711.376343,375.140289 712.420654,376.371613 711.354492,377.464996  C707.927124,380.980164 710.197266,384.328918 711.196716,387.902710  C712.954102,394.186920 715.609558,400.453491 713.060303,407.597412  z\"})),_path1772||(_path1772=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M703.643921,424.906616  C703.686829,427.607422 704.278442,429.878662 706.718628,431.782959  C706.998657,432.443604 706.999756,432.887970 707.001648,433.665558  C705.948792,440.777802 704.056702,447.459595 704.057617,454.359589  C704.058472,460.193848 702.176697,465.354645 699.236694,470.192688  C698.436462,471.509521 698.248413,472.477112 698.891907,473.835388  C699.556396,475.237793 700.739258,476.708557 699.214783,478.376434  C697.353394,478.050598 698.483337,475.414795 696.329102,475.066650  C695.989380,474.827942 696.057312,474.592651 695.972656,474.505463  C689.353210,467.687408 695.822937,462.830872 698.009216,456.887543  C700.194275,450.947388 703.472229,444.456085 699.781250,437.687073  C698.958801,436.178711 698.942566,434.495819 699.010620,432.407532  C699.920288,431.090271 701.009644,430.296234 700.915283,428.449402  C701.102295,426.567047 701.607178,425.268738 703.643921,424.906616  z\"})),_path1773||(_path1773=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M723.369751,532.989807  C720.692017,531.927917 717.026978,527.050659 717.893799,534.848389  C718.055664,536.304382 717.108093,536.910645 715.375610,536.985535  C711.209167,532.818115 712.900635,528.973938 719.858276,526.888184  C722.249390,527.425598 724.348755,527.050720 726.663818,527.825439  C726.827454,530.258179 726.779724,532.598145 723.369751,532.989807  z\"})),_path1774||(_path1774=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M727.000244,527.585999  C725.261108,528.959045 723.494873,529.407104 721.321167,528.143127  C720.622009,527.614990 720.486023,527.158508 720.794556,526.315308  C723.101562,524.663330 725.468079,523.446167 723.287231,520.151123  C722.154236,518.418030 722.483276,516.949280 723.713074,515.268982  C724.751282,515.000000 725.500061,515.000000 726.623230,515.000000  C726.998596,519.057312 726.999573,523.114685 727.000244,527.585999  z\"})),_path1775||(_path1775=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M751.135864,540.290527  C754.197266,538.788940 755.008667,540.518799 754.994263,543.632874  C753.755249,542.860168 752.518311,541.716980 751.135864,540.290527  z\"})),_path1776||(_path1776=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M724.163574,366.421021  C725.587769,364.692719 726.271606,365.770782 726.698669,366.884033  C727.005554,367.684082 726.738892,368.605316 725.672791,368.698517  C724.317993,368.816956 724.138428,367.797333 724.163574,366.421021  z\"})),_path1777||(_path1777=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M714.970825,412.705078  C714.114075,412.804077 712.998779,412.807556 713.792480,411.170410  C714.316345,411.462677 714.630249,411.936554 714.970825,412.705078  z\"})),_path1778||(_path1778=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M633.296143,183.222778  C630.699097,181.909180 628.104797,179.743164 627.221008,184.782043  C624.606995,186.480133 622.869019,185.111404 622.183167,183.228302  C619.573486,176.062958 613.423401,172.245987 608.049500,167.690750  C606.789551,166.622742 605.872253,165.190430 604.078674,164.207153  C603.154724,163.631531 602.695618,163.095459 602.260498,162.108856  C601.989319,159.962875 600.617371,158.485291 600.854004,156.301193  C603.434631,155.989059 605.689758,156.805161 608.316772,156.322922  C611.676147,155.706207 612.090149,160.220688 612.551514,161.732849  C613.953308,166.328110 616.543762,167.200943 620.650085,167.206390  C622.103699,167.208328 623.986023,166.734848 625.320190,168.263779  C626.074402,169.128143 627.674316,169.101837 627.915283,168.231537  C629.182190,163.655991 632.511047,164.584579 635.722107,164.970947  C637.564941,165.192688 638.640564,163.482697 640.626831,163.055115  C642.271484,164.052536 644.863647,163.509109 644.860413,166.070724  C644.858032,167.938141 643.242798,168.303925 641.919678,168.902466  C639.027283,170.210922 640.109619,171.341705 642.058411,172.499420  C643.268494,173.218292 645.139587,172.528793 645.922607,174.645935  C644.091492,177.102020 641.699280,175.821320 639.497070,175.950012  C636.753479,176.110367 632.867493,175.414276 635.840149,180.393127  C636.252930,181.084473 635.913696,182.002823 635.289246,183.030960  C634.575684,183.492233 634.094116,183.531097 633.296143,183.222778  z\"})),_path1779||(_path1779=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M602.894409,140.270981  C603.047058,137.709244 604.220459,135.726685 606.115112,137.959305  C609.687988,142.169388 613.554749,140.020676 617.720337,139.273224  C618.742859,139.000046 619.491638,138.990509 620.614502,138.974915  C621.033325,141.761597 616.732666,141.307495 617.009705,144.641083  C614.657227,145.517883 612.426270,146.657852 610.064087,144.505219  C609.207825,143.724930 607.171936,143.844101 605.784790,144.116089  C601.780457,144.901215 597.598816,147.244858 594.383728,142.018097  C594.613403,138.506851 596.895813,138.651901 599.746582,139.739273  C600.753906,141.063690 601.549744,141.920364 602.894409,140.270981  z\"})),_path1780||(_path1780=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M600.944946,155.662796  C601.241699,157.829666 603.660889,158.532394 603.170410,160.805878  C601.380066,161.814606 600.068481,161.210114 598.586060,159.971069  C597.416809,156.927368 595.621948,155.068451 592.365723,154.299698  C589.944153,153.248779 587.617065,152.531799 587.776733,149.310791  C591.641479,147.302246 591.078064,144.669022 589.531616,141.831146  C590.881165,140.852234 592.058167,142.275940 593.656311,141.997604  C594.349243,147.450684 596.808777,151.804153 600.944946,155.662796  z\"})),_path1781||(_path1781=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M635.238037,183.291534  C634.911194,181.412720 635.386292,179.600739 633.200439,178.911591  C632.014832,178.537781 631.057373,177.745895 631.278992,176.412796  C631.529663,174.904785 632.994751,175.314789 634.030090,174.959137  C637.771057,173.674088 641.453369,174.839081 645.580078,174.998627  C646.002441,174.997559 646.000000,175.000000 646.001221,174.998779  C647.484924,177.427704 650.460510,177.112656 652.749756,178.761246  C655.452393,179.899963 657.899963,180.806030 660.669800,181.860352  C662.269470,185.641632 666.540649,186.778549 667.973938,190.669159  C667.574951,191.014832 667.126038,191.014450 666.340820,191.016953  C655.701172,189.051392 645.144165,188.125793 635.238037,183.291534  z\"})),_path1782||(_path1782=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M652.992249,178.601303  C650.589233,178.117294 646.345581,181.267792 646.004333,175.407318  C648.596863,175.484085 652.346069,173.461624 652.992249,178.601303  z\"})),_path1783||(_path1783=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M634.673462,182.997040  C641.599731,184.701736 648.451355,185.408752 654.766052,188.172104  C655.351440,188.428268 656.296021,188.940674 656.546143,188.724228  C660.356812,185.426987 662.703735,189.297180 665.794312,190.750015  C665.383667,194.079376 663.310425,192.232132 662.106262,191.917725  C659.422791,191.217056 656.921936,190.982803 654.222107,192.749939  C646.414734,191.287796 639.942871,187.127472 633.068359,183.350800  C633.440552,183.002502 633.888855,183.000748 634.673462,182.997040  z\"})),_path1784||(_path1784=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M678.624146,204.998047  C678.959839,205.481659 678.971008,205.914124 678.982544,206.671448  C676.083496,207.034515 674.290833,205.778915 674.012024,202.376740  C675.438049,202.985901 676.868835,203.966400 678.624146,204.998047  z\"})),_path1785||(_path1785=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M620.907104,130.124084  C622.496399,130.123489 623.014465,130.998688 623.143372,132.563080  C621.494080,132.889862 619.524475,133.160721 620.907104,130.124084  z\"})),_path1786||(_path1786=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M598.772339,158.777588  C600.121582,159.587372 601.240662,160.160080 602.655029,160.861877  C603.137634,161.546783 603.324951,162.102631 603.745117,162.843689  C604.992126,164.326553 604.895813,165.468430 603.113892,166.523697  C601.324768,166.667023 600.295959,165.771149 598.818481,165.000137  C593.903625,160.794830 588.468994,157.797501 584.517761,153.007950  C583.214417,151.428070 581.191650,150.909348 579.316895,150.254852  C577.531067,149.631424 576.125366,148.546219 575.002808,146.582214  C574.534912,144.330368 573.027405,143.125549 571.464844,143.333847  C565.881470,144.078140 561.029175,141.436127 555.480347,140.436813  C554.413147,140.431686 553.702271,140.398315 552.640747,140.270630  C547.230408,139.363556 541.889648,139.646454 537.183472,136.253845  C537.949951,132.810638 539.972534,134.150909 541.747681,134.915192  C544.868408,136.258728 547.808838,136.958099 550.035950,133.442612  C550.123840,133.303894 550.215759,133.019348 550.268921,133.028046  C554.525574,133.726303 558.918152,134.035934 562.950073,135.406296  C564.228455,135.840805 565.055237,136.206970 565.526367,135.262680  C566.627869,133.054886 569.170593,132.147476 569.920959,129.501801  C570.579773,127.179100 572.556946,125.679512 575.689941,126.868645  C576.079895,128.956451 575.655945,131.138504 578.921021,130.856812  C582.440552,130.553146 583.919556,133.258896 584.010925,137.150620  C584.104614,141.139847 584.207214,145.455139 587.682861,148.851120  C588.482910,151.344910 590.508179,152.004059 592.630920,152.977234  C594.564026,155.131287 597.397522,155.983353 598.772339,158.777588  z\"})),_path1787||(_path1787=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M602.625000,139.993423  C604.591675,142.061401 602.928650,142.607376 601.464478,142.863770  C599.786926,143.157547 598.900208,142.428543 599.874634,140.296600  C600.750000,139.996506 601.500000,139.996674 602.625000,139.993423  z\"})),_path1788||(_path1788=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M754.189697,463.283478  C754.374878,463.191010 754.611389,463.368988 754.904175,463.816589  C754.724060,463.905273 754.484253,463.727875 754.189697,463.283478  z\"})),_path1789||(_path1789=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M764.003662,540.600037  C759.380798,540.923462 761.377625,534.837830 756.244385,534.280884  C760.697327,532.621765 761.594788,535.554016 763.657410,536.931274  C763.999146,538.066711 764.000793,539.133362 764.003662,540.600037  z\"})),_path1790||(_path1790=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M756.700562,514.163330  C759.533386,514.367798 759.098206,516.751831 759.954834,518.644531  C759.831543,519.000610 759.664795,519.001282 759.247803,519.003418  C758.248169,519.002991 757.498840,519.001160 756.374756,518.998413  C755.650635,518.933350 755.357300,518.771423 755.066650,518.245056  C754.971802,516.581604 755.057739,515.215759 756.700562,514.163330  z\"})),_path1791||(_path1791=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M262.717529,413.153564  C264.526886,411.418182 265.800110,409.934845 262.744690,408.506927  C261.780426,408.056274 262.047913,406.741638 262.002869,405.380768  C260.473724,401.779572 261.121918,398.629272 262.562561,395.198608  C265.313995,394.386627 267.435333,390.482147 270.160492,393.171204  C272.582062,395.560760 270.959381,398.668243 269.844116,401.440674  C269.420441,402.493896 267.750702,404.593506 271.408875,403.781738  C272.098328,403.591858 272.599365,403.885895 272.814728,403.700378  C273.310394,403.273499 272.959991,403.886597 272.348694,403.120300  C271.827423,400.578339 272.659637,398.707123 274.255615,397.232361  C275.605164,395.985260 276.429077,394.501740 277.118713,392.479614  C277.408691,391.961212 277.546265,391.763947 277.941467,391.310425  C279.303955,390.443115 279.909058,389.283783 281.287720,388.427399  C286.843475,388.880524 285.892151,392.894165 285.703247,396.108887  C285.522125,399.190033 283.836609,402.014618 283.331360,405.502808  C282.762482,408.042725 283.039734,410.171600 283.334076,412.310699  C283.915649,416.537811 283.317078,420.663849 281.237366,424.338837  C279.246765,427.856293 278.157104,431.574432 277.405640,435.853302  C277.311676,436.478180 277.261566,436.723969 277.080994,437.317963  C276.471222,438.746399 275.453491,439.541962 275.200012,441.136261  C274.540863,443.063690 273.806183,444.570343 272.865479,446.381836  C265.182800,456.564728 259.693298,467.705780 253.293671,478.246429  C250.673569,482.561951 250.662552,488.707275 250.160400,494.516022  C249.252960,499.040649 246.684494,502.496216 245.280762,506.830139  C243.111572,510.933929 242.219971,515.394592 238.155487,518.273560  C237.516876,518.351562 237.254822,518.310791 236.685608,518.013794  C233.660324,513.061584 234.814148,507.968658 234.782135,502.612183  C234.571075,500.747925 234.504440,499.259766 234.695938,497.425781  C234.975769,495.840485 235.489151,494.587555 234.474701,493.084106  C234.278580,492.340912 234.262482,491.903290 234.416504,491.146271  C235.144592,489.456390 237.201965,488.219330 234.731201,486.291565  C234.389511,485.585175 234.335205,485.142822 234.470337,484.364349  C234.718475,482.470947 238.682037,483.452454 236.706085,480.303894  C236.387619,479.598969 236.321030,479.165680 236.430695,478.400940  C236.966965,477.096191 238.141678,476.648865 238.452545,475.199646  C238.526016,473.701019 238.662247,472.550964 239.243637,471.131866  C241.468521,469.728821 242.682877,468.677612 241.797729,465.751312  C240.909622,462.815094 240.927719,459.512573 240.813110,456.383606  C240.663437,452.296783 241.411789,448.524567 246.364349,447.110443  C249.367233,446.252991 249.215805,443.206757 249.112656,440.802948  C248.900757,435.864471 250.437134,431.285461 251.649933,426.656616  C252.615616,422.971008 255.147247,420.320648 258.747772,418.243896  C259.002350,418.000000 259.000000,418.000000 259.000000,418.000793  C260.033203,416.355804 260.878052,414.572754 262.717529,413.153564  z\"})),_path1792||(_path1792=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M235.257858,483.757935  C235.013306,484.448364 235.014618,484.888306 235.018585,485.658203  C236.169662,487.291687 236.313354,488.716492 235.271088,490.628510  C235.006790,491.447662 235.007462,491.890747 235.009857,492.666199  C234.277069,493.524658 233.535461,493.671051 232.896790,492.891113  C232.609589,492.540314 232.358002,492.086578 232.891693,491.683838  C232.231583,491.911835 232.529251,492.484924 232.661987,492.760315  C233.872787,495.272430 231.470963,496.996674 231.233429,499.542999  C230.575516,501.205994 230.379013,502.607971 230.158936,504.371521  C229.936295,505.419647 229.647827,506.078033 229.473816,507.134033  C229.404938,508.208313 229.248672,508.905304 228.961090,509.936066  C226.882568,513.862183 227.510437,518.502075 224.157318,521.583740  C223.238678,522.428040 224.788681,523.280029 224.917404,524.211243  C225.316467,527.098022 225.818893,530.049377 221.277802,530.206421  C220.471420,527.935669 219.804016,525.895935 217.292816,528.156311  C216.504669,528.865784 217.011520,531.329224 215.163528,530.585693  C213.251968,529.816589 215.395828,528.045837 214.994080,526.372192  C215.680176,525.587952 216.966904,525.132263 216.943146,524.760193  C216.645767,520.103882 222.032669,516.562195 219.470490,511.452271  C218.846313,510.207428 220.059509,509.221100 221.045166,508.674194  C223.641968,507.233368 226.824295,506.734680 223.530334,502.313904  C222.460678,500.878326 223.233307,495.653564 226.565323,494.173279  C229.953323,492.668091 229.522568,490.446442 228.987381,487.870239  C228.427048,485.173004 228.280014,482.710327 231.350586,481.297302  C231.856796,481.064392 232.530106,479.964203 232.464951,479.895874  C228.359619,475.594177 236.242691,474.481201 234.913651,470.147888  C233.894562,466.825104 233.060043,462.773651 233.911423,458.881714  C234.263184,457.273682 234.015930,455.610779 235.705246,454.524200  C237.158585,453.589417 236.900986,451.913910 236.085281,450.983856  C232.008255,446.334991 234.865433,440.939911 234.578217,435.982819  C234.401138,432.926697 234.871277,429.779602 233.950531,426.745117  C233.378403,424.859558 233.302994,423.306854 235.080612,421.913910  C237.229767,420.229767 238.761581,421.450226 240.699524,422.836395  C241.140900,423.199371 241.269745,423.399261 241.365387,423.953613  C239.170731,428.160065 237.730637,432.026550 239.663010,436.531769  C240.828232,439.248383 238.175644,442.187286 239.825760,446.149994  C241.091003,442.516571 243.360718,440.363617 242.921356,436.753540  C243.014755,432.393555 245.741943,429.083282 246.025818,424.751312  C246.875549,422.861176 248.676193,422.389771 249.725571,420.703735  C251.376221,417.705719 250.665970,414.512726 251.847717,411.406036  C251.873352,410.380341 251.968887,409.707001 252.586121,408.525391  C253.321640,407.923187 253.656021,407.880066 253.962799,407.763977  C255.792923,407.071381 253.373749,402.443939 256.505829,404.048431  C258.735992,405.190887 260.271606,408.668915 257.699280,411.845581  C256.040100,413.894653 254.071823,416.287476 258.619598,417.983551  C254.710876,423.103577 252.003845,428.858643 250.897888,435.517365  C250.282608,439.221649 251.924393,443.150146 249.645920,446.639740  C248.733414,448.037292 249.324005,450.439148 245.724640,449.259674  C243.615524,448.568512 241.688766,452.750092 242.187881,455.191193  C243.252960,460.400360 242.176056,465.864105 244.473511,471.040375  C243.001389,471.945496 241.850784,469.199951 240.280487,470.886505  C238.430573,472.141663 237.993164,473.734955 238.134323,475.917419  C237.972076,476.710602 237.760849,477.117401 237.240448,477.745667  C237.007080,478.446655 237.008041,478.888428 237.010803,479.661530  C237.827179,481.730042 236.500610,482.547974 235.257858,483.757935  z\"})),_path1793||(_path1793=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M240.761536,424.385803  C241.000244,423.832825 241.002319,423.666168 241.008209,423.249451  C241.575317,422.536438 241.884689,421.912048 241.569351,421.253052  C239.395432,416.709900 238.387390,412.253357 241.791855,407.749420  C242.289261,407.091370 241.953247,405.803345 242.003571,404.403992  C242.210541,403.201202 242.669586,402.545654 243.390411,401.693726  C244.176666,400.879517 244.786530,400.320709 245.578644,399.486511  C246.761841,398.345703 247.874588,397.610809 248.881821,396.311279  C249.407837,394.571075 250.017761,393.163818 250.176086,391.707489  C250.558289,388.191772 253.243515,387.978485 255.477341,388.564362  C258.308441,389.306915 256.542755,391.607544 256.313873,393.404022  C255.713989,398.112183 252.021896,402.061462 252.999634,407.566498  C252.165649,408.747589 251.886551,409.584839 252.792053,410.789246  C252.512634,414.163727 252.919403,417.481049 251.189301,420.731720  C249.977173,422.077576 248.340881,422.299652 247.233246,423.781433  C248.278854,428.637726 244.921783,432.135956 244.010345,436.618042  C241.485611,438.503845 240.266144,437.083435 239.699860,434.883728  C238.816696,431.453308 238.659988,428.011658 240.761536,424.385803  z\"})),_path1794||(_path1794=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M278.009216,391.641663  C278.025452,394.614471 278.339447,397.122711 274.972076,398.434906  C273.408539,399.044189 273.269806,401.435760 273.010864,403.613007  C272.339386,404.490051 271.656677,404.953339 271.023285,405.476288  C270.008362,406.314209 268.942383,407.557861 267.629364,406.340576  C266.571198,405.359619 266.813812,403.822815 267.386749,402.612091  C268.226593,400.837463 269.762177,399.372589 269.915710,397.297333  C270.010315,396.018097 270.483063,394.396118 269.241760,393.589447  C267.392303,392.387573 267.352570,394.664032 266.442932,395.336609  C266.060974,395.619019 265.233826,395.299316 264.305603,395.122375  C263.369934,394.021210 263.774475,393.099396 264.321503,391.864777  C267.205200,389.552551 266.750610,385.978149 268.760132,383.257080  C268.997986,382.555145 268.998413,382.111511 268.998810,381.335144  C269.552673,376.598267 266.120178,371.760162 270.779968,367.610535  C271.889526,367.311737 272.591949,367.465210 273.471741,368.193298  C275.302002,371.399261 275.330750,374.891541 277.165771,377.783081  C278.314667,379.593506 276.481476,381.234436 276.295105,382.964478  C276.067993,385.072632 273.107697,387.245483 276.555664,389.480927  C277.541260,389.962433 277.876617,390.558899 278.009216,391.641663  z\"})),_path1795||(_path1795=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M254.069336,357.342560  C253.629761,354.798920 255.329697,353.912018 256.656311,352.769745  C258.212036,351.430267 257.988068,349.583191 257.991943,347.408997  C260.544739,351.420654 265.893127,349.391510 269.636108,351.950867  C269.031281,353.617950 268.913300,355.396881 269.003540,357.606049  C270.814667,360.867401 270.209869,363.888092 269.446442,367.282104  C267.521729,371.008667 268.254333,375.475922 264.389404,378.055603  C262.282501,375.134735 260.932465,372.375092 263.501709,369.101166  C264.254913,368.141388 263.865662,366.285034 264.050781,364.086121  C264.092896,361.188446 266.229523,359.144653 264.092224,356.984436  C260.144043,357.716888 260.600555,361.653107 258.279297,363.796997  C257.478241,365.882904 257.644287,367.755096 257.692993,369.685516  C257.734406,371.325500 257.502380,373.789154 254.372498,373.987610  C253.090546,373.314056 252.928314,372.322113 252.905396,370.908661  C253.022690,369.809601 253.256775,369.118286 253.512573,368.070709  C253.735184,364.374481 256.300781,361.167450 254.069336,357.342560  z\"})),_path1796||(_path1796=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222022\",opacity:1,stroke:\"none\",d:\" M253.671539,357.000732  C256.890015,357.387482 257.314545,359.190826 256.633881,361.610046  C256.107147,363.482086 255.557419,365.347717 255.005661,367.606628  C254.558685,368.392609 254.204681,368.841553 254.023987,369.711182  C253.998062,371.066681 253.998093,372.133331 253.998840,373.600006  C251.885803,376.931549 252.211563,380.633972 250.894150,383.811188  C250.361435,385.095917 250.140717,387.133301 248.137604,386.579193  C246.424713,386.105347 247.494614,384.417114 247.345032,383.211731  C246.478470,376.227753 252.623047,371.163239 252.365540,364.383942  C252.341644,363.754913 252.444489,363.121124 252.255951,362.242432  C252.016083,361.246185 252.008743,360.497040 252.000092,359.373352  C251.619720,358.614136 251.486008,358.157623 251.810410,357.318298  C252.462753,357.005737 252.902298,357.004120 253.671539,357.000732  z\"})),_path1797||(_path1797=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232325\",opacity:1,stroke:\"none\",d:\" M244.207413,401.800781  C243.901672,402.893463 243.628143,403.657166 242.317978,403.949890  C238.172668,400.394562 241.335831,396.184448 243.196228,394.697632  C245.058487,393.209351 243.446655,388.745026 247.012039,389.979980  C249.668411,390.900024 245.349808,394.391144 248.660828,395.930328  C250.732315,398.805328 248.081467,398.996063 246.331940,399.961731  C245.165833,400.229065 244.892014,401.014832 244.207413,401.800781  z\"})),_path1798||(_path1798=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M264.068756,378.342834  C265.744202,374.751038 266.913666,371.292236 267.850830,367.348755  C268.998962,366.182098 269.875092,366.438904 270.839722,367.648193  C269.807312,370.186066 268.681000,372.218872 270.287476,374.874512  C271.368256,376.661102 269.938782,378.639771 269.254730,380.758301  C267.259369,380.475830 265.237305,380.541473 264.068756,378.342834  z\"})),_path1799||(_path1799=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M265.250305,387.663879  C261.898102,388.434845 261.190521,384.767731 258.313324,384.142517  C257.084015,383.378448 257.078979,382.205750 256.219421,381.205933  C254.983047,379.172241 254.882782,376.962372 257.029602,376.592682  C258.940674,376.263611 261.419647,377.342285 261.858734,379.843140  C262.203400,381.806427 261.983734,383.842224 264.676056,384.843506  C265.643524,385.675354 265.765198,386.461365 265.250305,387.663879  z\"})),_path1800||(_path1800=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M264.685822,391.816254  C264.749969,392.826111 264.503571,393.620300 264.129669,394.702942  C262.446136,397.860260 262.704651,401.122620 262.005798,404.590851  C258.567017,400.083527 258.681915,395.698181 262.667297,392.154175  C263.386993,391.619324 263.845459,391.486633 264.685822,391.816254  z\"})),_path1801||(_path1801=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M265.345581,391.954651  C264.552734,392.023560 264.109131,392.015137 263.332764,392.002747  C263.629150,390.882019 264.258301,389.765259 264.942505,388.323608  C265.000000,387.248779 265.002441,386.498779 265.006287,385.373688  C266.122009,384.355499 267.236328,383.712402 268.674103,383.034058  C269.124634,386.415070 268.728027,389.636597 265.345581,391.954651  z\"})),_path1802||(_path1802=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M258.376526,364.001770  C259.445099,361.137451 257.647858,356.148773 263.621826,356.001740  C265.498505,357.271820 265.120331,358.851044 264.543335,360.772369  C263.626862,362.160461 262.331787,362.532501 261.259583,363.737946  C260.253052,363.997925 259.502411,363.999481 258.376526,364.001770  z\"})),_path1803||(_path1803=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M255.790237,381.269684  C256.818237,380.822632 257.769897,379.711304 258.393402,380.794220  C258.735779,381.388916 258.204193,382.486816 258.033325,383.678925  C256.871765,384.553070 256.182495,386.999207 254.536346,385.219513  C253.285080,383.866821 254.331970,382.528442 255.790237,381.269684  z\"})),_path1804||(_path1804=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M262.768616,412.750916  C263.398346,415.673553 261.096527,416.384064 259.302185,417.842621  C259.595734,415.794708 257.419159,411.810822 262.768616,412.750916  z\"})),_path1805||(_path1805=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M230.147400,467.501465  C230.121521,466.267914 229.702408,465.086090 230.902328,464.718079  C231.764725,464.453522 232.012604,465.450104 231.886688,465.968506  C231.686890,466.791168 232.884369,469.147614 230.147400,467.501465  z\"})),_path1806||(_path1806=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M261.378174,363.997314  C261.055725,362.861664 260.883423,361.623566 262.662628,361.064789  C264.049255,361.447174 264.636810,362.174500 264.221069,363.688416  C264.000000,364.000305 264.000000,364.000000 264.000000,364.000000  C263.250885,363.999420 262.501770,363.998871 261.378174,363.997314  z\"})),_path1807||(_path1807=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M237.478485,418.465210  C237.519958,418.443085 237.436996,418.487305 237.478485,418.465210  z\"})),_path1808||(_path1808=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M527.000000,76.000496  C526.510925,75.707680 526.021790,75.414368 525.532715,75.121056  C525.702454,74.922470 525.872192,74.723885 526.041931,74.525284  C526.334595,74.835388 526.627197,75.145493 526.959961,75.727188  C527.000000,75.998779 527.000000,76.000000 527.000000,76.000496  z\"})),_path1809||(_path1809=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B3533\",opacity:1,stroke:\"none\",d:\" M563.534058,87.132874  C565.530701,87.143387 566.824097,87.686150 566.734497,89.642075  C566.719788,89.962585 565.914185,90.566910 565.843872,90.517174  C564.650757,89.673439 561.905457,89.993904 563.534058,87.132874  z\"})),_path1810||(_path1810=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M698.967712,335.680115  C696.726196,336.026062 694.215576,335.439453 693.660828,338.890411  C693.532532,339.688568 692.492065,340.605988 691.653259,340.981750  C685.300842,343.827667 687.084534,349.007233 688.762451,353.257324  C693.055420,364.130646 695.190186,375.496796 697.292053,386.871033  C697.628784,388.693207 701.257751,393.091248 694.766479,392.879669  C693.513794,392.838867 694.107910,395.112427 694.834290,396.239380  C697.702698,400.690002 696.341980,404.666656 693.364868,408.334229  C692.449280,409.462128 691.996887,410.553955 692.008545,411.929932  C692.042053,415.868896 692.341309,419.716675 689.033264,422.956909  C687.556152,424.403809 687.418152,426.971527 689.356506,428.839203  C690.495483,429.936615 690.878845,431.273712 691.037292,432.851624  C691.427063,436.732391 692.327881,440.512665 687.783203,442.976379  C685.315674,444.314056 687.072998,448.185883 684.248047,449.967102  C679.154358,446.826050 674.725891,443.299408 671.916260,437.686890  C671.229065,433.521515 672.646851,429.881134 672.687012,425.744080  C673.499390,423.377869 673.328674,421.299591 673.473694,418.875427  C673.536987,418.001892 673.561218,417.505463 673.605591,416.645630  C673.676880,415.812225 673.765869,415.350067 674.026123,414.583618  C674.874939,413.020050 675.889343,411.841064 675.066284,409.911957  C674.896240,408.939087 674.895813,408.280243 674.981812,407.286194  C675.713745,404.953552 675.812195,403.022491 674.221924,400.940979  C673.559021,399.170227 673.538086,397.690796 673.835083,395.824829  C674.109802,394.732391 674.455322,394.071808 674.962219,393.089783  C679.614258,387.060852 676.301270,381.000397 675.816711,374.721802  C675.493530,371.890625 674.121094,369.514557 675.182556,366.597107  C678.942993,365.171021 680.417114,363.199585 678.488831,359.442322  C677.585083,357.681427 678.124817,355.818390 679.423645,354.356964  C681.311646,352.232635 681.500793,349.859894 680.447510,347.419617  C678.669312,343.299957 677.564331,338.970062 676.225403,334.713318  C675.714722,333.089935 675.041504,331.675598 673.534546,330.702911  C668.920593,327.724731 667.349548,323.261353 667.404358,317.678955  C667.231201,316.928711 667.189514,316.495758 667.222107,315.746643  C667.399170,314.645966 667.509644,313.857422 667.133728,312.776276  C666.379028,310.895355 666.875244,308.963379 665.402100,307.270905  C665.010864,306.299988 664.926270,305.612366 664.954102,304.561707  C665.575012,302.187653 665.960876,300.183136 664.260864,298.036926  C663.655151,296.520203 663.640198,295.287476 663.795044,293.673401  C664.141602,292.124237 664.619263,290.983551 664.658691,289.382599  C666.181030,284.802521 668.428223,286.600708 670.717407,288.266907  C668.135010,284.128510 666.846313,279.490814 665.288086,274.969360  C664.789551,273.522614 664.690735,271.921143 666.156250,270.903595  C667.679077,269.846283 668.515015,271.433655 669.441284,271.956635  C666.464722,267.486786 665.383179,261.797760 661.358276,257.317993  C660.280090,255.640106 659.767456,254.207031 660.769897,252.303040  C664.114197,251.952362 667.893799,252.812347 666.639099,247.934921  C676.515869,251.381058 683.490051,257.993256 687.956909,267.651703  C687.850403,270.760925 688.939209,273.076965 690.483582,275.280151  C693.899109,280.152771 695.565552,285.781860 697.154724,291.688690  C697.173401,293.371643 696.501099,295.021667 698.645203,295.923431  C700.882324,298.137451 699.211609,301.464294 701.746948,303.734467  C701.828735,305.831909 702.265320,307.555481 702.957336,309.621338  C700.965271,311.770325 700.232544,311.682953 698.301575,308.900421  C694.791260,303.841919 691.982788,298.405457 690.088867,292.530518  C689.704651,291.338867 689.506775,290.088806 689.027588,289.352295  C690.151245,292.393433 690.984741,295.934113 692.575134,299.259277  C693.608765,301.420288 693.835327,304.389832 691.725220,306.252869  C689.789307,307.962158 687.687012,306.648621 685.361145,305.092712  C689.260803,312.215179 690.581604,319.922394 694.973083,326.651062  C694.997437,327.444427 694.997253,327.888885 694.997070,328.666626  C695.539062,330.407318 696.791626,331.304535 697.772766,332.780212  C698.309387,333.790314 698.623596,334.576508 698.967712,335.680115  z\"})),_path1811||(_path1811=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M695.311096,326.834595  C692.692993,322.688324 686.266541,320.420135 688.511414,313.833038  C688.835999,312.880463 688.363831,312.216278 687.205200,312.465393  C686.068542,312.709778 685.031189,312.675995 685.518494,311.117004  C686.358276,308.430634 685.106018,306.631134 683.199036,305.073669  C682.491089,304.495514 681.872925,303.767639 682.356995,302.986053  C683.088867,301.804504 684.102417,302.625580 684.964478,303.021942  C685.412598,303.227966 685.834534,303.514221 686.223755,303.820801  C687.742249,305.016998 689.824890,307.373383 691.104309,305.209045  C691.973755,303.738098 692.424805,300.802429 690.909668,298.270966  C688.474609,294.202332 687.301147,289.598267 687.158569,284.876770  C687.569824,284.741669 687.981079,284.606567 688.392334,284.471466  C690.252014,289.236023 691.720337,294.206238 694.084656,298.705627  C696.319641,302.958923 697.709351,308.034271 702.797119,310.225922  C703.868347,312.896393 703.768921,315.968628 706.582214,318.359467  C707.773499,319.371887 707.784058,322.803253 706.035461,324.758667  C704.489868,326.487091 702.807434,327.219818 700.498962,325.473083  C698.786743,324.177521 697.071594,325.484406 695.311096,326.834595  z\"})),_path1812||(_path1812=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M601.807495,166.306274  C603.452271,165.871826 604.000366,165.028122 603.975098,163.371002  C607.665955,162.888443 609.309753,166.421753 611.184998,168.266403  C615.474304,172.485687 622.058594,175.087540 623.049927,182.180496  C623.302246,183.985657 624.798889,184.443497 626.605469,184.959686  C626.970581,185.175797 626.973022,185.344131 626.982788,185.764893  C628.043030,191.167038 632.721008,193.630447 635.740540,197.753693  C637.012512,202.269440 640.414551,205.262360 641.685181,209.753052  C640.361328,210.300354 639.541138,209.800064 638.433472,209.095093  C635.813965,206.613068 633.685913,204.153641 631.944519,201.398972  C630.588379,199.253769 628.819153,197.691040 626.148682,196.620941  C623.104919,192.943756 619.911743,189.807877 617.429016,185.688232  C615.865906,180.950226 612.370300,178.020309 609.220276,174.510895  C608.459351,174.301895 608.041931,174.138382 607.366089,173.746811  C606.944519,173.400330 606.798157,173.238983 606.510132,172.789886  C606.095215,171.513809 605.836182,170.513123 604.222107,170.338501  C602.976685,169.991608 602.150818,169.571289 601.461426,168.395706  C601.265503,167.537109 601.337219,167.047409 601.807495,166.306274  z\"})),_path1813||(_path1813=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M643.566284,213.608932  C647.191223,214.631851 647.930969,218.164597 649.565674,220.819641  C652.647339,225.825089 654.713928,231.454651 657.213684,236.819550  C658.171448,238.875137 656.867004,240.634644 656.253540,242.760422  C653.416931,243.221832 652.691528,241.114563 651.977783,239.429703  C650.612488,236.206512 648.631042,233.428040 646.345886,230.361633  C645.960205,229.552795 645.809509,229.062805 645.664795,228.171753  C646.316833,222.982605 642.359375,219.041733 643.566284,213.608932  z\"})),_path1814||(_path1814=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M660.759277,251.796570  C661.325867,253.426178 661.622620,254.846878 661.963989,256.630737  C663.335449,263.481323 664.133423,270.063995 665.533020,276.541351  C665.731689,277.460754 664.955078,278.387299 663.823608,279.233643  C659.988098,279.318451 661.129822,275.838745 659.499207,273.926788  C659.118835,273.136047 658.960449,272.664368 658.765503,271.825012  C658.586426,270.068146 658.566223,268.641663 657.353027,267.192383  C657.080811,266.642334 656.988281,266.411743 656.804321,265.815704  C656.546936,264.180206 656.513611,262.904022 656.534912,261.233948  C656.364197,256.397858 655.426575,251.955444 656.783081,247.230011  C659.713623,247.390778 658.940186,250.345383 660.759277,251.796570  z\"})),_path1815||(_path1815=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M697.348267,291.931519  C695.280396,289.811279 694.238831,287.526917 693.699524,284.600037  C693.038208,281.010834 690.738586,277.786560 688.399902,274.763947  C687.019165,272.979492 684.979858,270.873291 687.708618,268.160278  C688.751648,268.624695 689.936401,269.112823 690.181824,269.895508  C692.322449,276.720825 696.964478,282.451233 698.666016,289.454010  C698.925781,290.523041 698.860352,291.399658 697.348267,291.931519  z\"})),_path1816||(_path1816=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M656.908936,246.646667  C657.360413,251.391373 657.647949,255.829651 657.894409,260.687012  C655.040588,261.958679 654.917480,259.715118 654.533020,258.056976  C652.747131,250.354309 651.511536,242.495575 647.030762,235.671616  C646.045776,234.171585 645.595276,232.287491 646.840698,230.181366  C651.632019,233.013519 652.300232,238.615860 655.725830,242.793762  C656.245850,244.114700 656.495361,245.227478 656.908936,246.646667  z\"})),_path1817||(_path1817=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M635.987610,197.606506  C629.560120,195.065887 626.262085,190.953720 626.951904,186.358948  C630.905518,187.182770 635.603394,193.020996 635.987610,197.606506  z\"})),_path1818||(_path1818=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M701.988281,303.606354  C697.439880,303.112274 699.506836,299.441925 698.996338,296.427734  C702.345032,297.429871 700.784485,300.889984 701.988281,303.606354  z\"})),_path1819||(_path1819=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M697.990356,332.641541  C695.998169,332.616577 694.279541,331.962219 694.770874,329.202789  C697.024414,329.153015 697.971008,330.291229 697.990356,332.641541  z\"})),_path1820||(_path1820=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M642.012817,209.986816  C643.416809,210.127014 643.991455,210.969711 644.011108,212.642242  C644.026184,212.989182 643.977051,213.009109 643.953064,213.020401  C641.708557,213.809937 641.333435,212.574585 641.717407,210.402863  C641.963379,210.026413 641.996643,210.000565 642.012817,209.986816  z\"})),_path1821||(_path1821=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M623.255066,557.823730  C622.765930,558.490601 622.457825,558.941956 622.025757,559.637085  C619.939148,562.161316 617.496826,563.983704 615.398438,566.628418  C613.886536,567.675903 612.504211,568.099365 610.709717,568.413025  C607.676514,568.821228 606.562012,572.114807 603.283447,572.060425  C599.306824,571.719543 595.463562,572.412598 592.065735,569.520020  C591.180542,568.324158 591.265503,567.339661 591.749634,565.998291  C596.685059,561.212646 601.555359,557.372070 608.556702,556.408447  C613.947876,555.666443 619.614929,554.374268 623.381653,549.398499  C626.298279,545.545532 631.205750,543.928345 634.343323,540.219055  C635.085693,539.341431 636.364014,539.138062 637.897217,539.671448  C639.240479,542.005127 637.657959,543.129028 636.144897,544.630188  C633.605469,547.326721 631.372131,549.792114 629.043457,552.571655  C628.309937,553.737793 628.193298,554.906921 626.975220,555.626221  C626.279602,555.700073 625.905212,555.749207 625.261719,555.890015  C624.484741,556.534363 623.942078,557.053711 623.255066,557.823730  z\"})),_path1822||(_path1822=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M674.167725,576.294800  C674.003296,575.556458 674.005615,575.113892 674.010742,574.339294  C677.642212,571.527405 679.356750,571.909851 681.257874,575.529053  C681.903259,576.757690 681.698547,578.510437 683.694580,579.061096  C685.841797,579.185913 686.963318,580.712219 686.680725,582.031189  C686.087280,584.800720 686.664673,587.103149 687.827332,589.535095  C688.268433,590.457886 688.357544,592.032532 686.976990,592.558044  C685.326416,593.186523 685.131714,591.663269 684.771118,590.612976  C684.395325,589.518311 684.286072,588.300720 683.755615,587.298096  C683.001953,585.873779 682.102600,584.071228 680.197510,584.419006  C678.481628,584.732178 679.215149,586.594788 678.964600,587.812561  C677.958740,592.701965 675.279724,596.885254 672.876526,601.552124  C672.324158,597.566956 669.971130,594.023987 669.430054,590.535950  C668.861877,586.873718 664.394287,584.913574 665.999634,580.423706  C666.991821,579.177979 668.072327,578.928955 669.641724,579.743835  C670.004883,579.995117 670.000000,580.000000 670.002441,579.997559  C670.797546,580.127869 671.268921,583.007263 672.379944,580.299316  C672.915588,578.993652 674.189209,578.090576 674.167725,576.294800  z\"})),_path1823||(_path1823=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M670.004639,579.554932  C668.936829,579.996399 667.868835,579.997620 666.400391,579.999390  C665.761902,577.599304 666.512390,575.109680 665.169128,572.093201  C663.607544,575.049500 662.562134,577.900757 659.982483,579.548706  C657.344360,576.587891 661.011536,573.430237 659.048889,569.905945  C657.211853,572.301758 655.668335,574.314758 654.061157,576.662720  C652.166748,578.004822 650.431702,578.645752 649.797913,575.422302  C650.501282,574.118225 651.002563,573.238953 651.747070,572.180176  C654.281494,572.080750 655.963745,571.350769 655.973022,568.727966  C655.981323,566.373047 657.809998,564.915710 658.762146,563.058289  C659.777893,561.076782 661.689636,560.318787 662.223328,563.491211  C662.813477,566.999146 666.138916,568.475403 667.905640,571.015747  C669.904907,573.890442 669.701233,576.338013 670.004639,579.554932  z\"})),_path1824||(_path1824=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M683.995117,578.562683  C683.899536,580.133850 684.264343,581.347595 683.092102,582.639404  C681.507568,580.898254 680.616821,578.795593 680.172913,576.690674  C679.446838,573.247498 677.533630,572.875793 674.365906,573.962708  C672.335449,570.860291 675.176880,568.530945 675.721375,565.800964  C675.979309,564.507690 677.697327,565.465637 677.891418,566.838013  C678.141663,568.607300 678.217529,570.380188 680.078613,571.690613  C681.244324,569.303589 677.702637,564.923035 683.588623,564.992615  C683.987671,565.156128 683.992432,565.326904 684.002319,565.754028  C684.382812,566.390442 684.528809,566.844299 684.228760,567.678711  C684.008911,568.741882 684.005615,569.498474 684.006042,570.633606  C684.004883,573.380798 684.000000,575.749451 683.995117,578.562683  z\"})),_path1825||(_path1825=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M649.751831,574.997986  C650.231628,577.051270 651.760925,576.993652 653.625244,576.997253  C653.098206,578.501160 653.015991,579.980408 653.678284,581.668518  C654.311707,583.283203 653.061401,584.051270 651.744873,584.505798  C650.331909,584.993530 649.561768,584.141479 649.159851,582.957275  C648.330811,580.514709 645.627197,578.220093 648.736938,575.216553  C649.007324,574.998535 649.503662,574.998413 649.751831,574.997986  z\"})),_path1826||(_path1826=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M636.167114,544.885376  C636.551819,543.482605 637.264893,542.103882 638.022644,540.389160  C638.083557,538.371216 639.329041,537.312500 640.324219,535.757568  C641.208496,534.839294 641.973022,534.386719 643.275818,534.508301  C643.938110,538.476074 640.147400,540.156372 638.966309,543.595032  C638.098022,544.261719 637.296753,544.585571 636.167114,544.885376  z\"})),_path1827||(_path1827=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M626.760376,556.063721  C626.784180,554.512146 627.435120,553.714722 628.642883,552.984009  C629.265686,556.073975 628.850891,559.188232 627.959473,562.681824  C624.604065,561.365479 628.201538,558.530029 626.760376,556.063721  z\"})),_path1828||(_path1828=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M627.367188,573.956055  C627.188354,573.159424 627.322510,572.300781 627.690674,571.210815  C629.178650,572.062988 629.346008,573.055359 627.367188,573.956055  z\"})),_path1829||(_path1829=/*#__PURE__*/React.createElement(\"path\",{fill:\"#14100E\",opacity:1,stroke:\"none\",d:\" M627.232422,581.842041  C626.356079,581.565979 626.059570,581.041321 626.803711,580.153381  C627.663879,580.437256 627.969116,580.958191 627.232422,581.842041  z\"})),_path1830||(_path1830=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M676.447449,621.956177  C676.817749,621.281616 677.190247,621.272034 677.519409,621.755127  C677.588196,621.856140 677.585266,622.090027 677.513550,622.188477  C677.170532,622.659180 676.798340,622.642151 676.447449,621.956177  z\"})),_path1831||(_path1831=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M709.294250,537.760132  C707.398865,539.143799 708.508850,541.685608 706.291504,542.833679  C703.909180,539.901917 699.122314,538.041382 701.381958,532.839600  C701.487549,532.596619 699.190491,531.205261 697.909363,530.549927  C697.642334,530.413330 696.729553,531.054810 696.444031,531.534058  C695.736389,532.722229 696.282593,533.837891 697.197632,534.630127  C700.549866,537.532349 698.081726,542.411255 697.131287,543.106995  C693.417053,545.826050 693.416992,549.739319 692.469543,553.380981  C690.448364,552.963806 691.372375,550.778564 690.025024,550.314392  C688.799683,549.892151 687.443848,549.203674 686.278503,549.404419  C684.553833,549.701538 684.726196,551.635742 685.084961,552.704285  C686.335388,556.428711 683.433167,559.610657 683.992676,563.594177  C677.231750,562.546631 675.969360,558.341553 680.678833,552.602112  C681.627075,551.446594 681.459351,550.778076 680.744934,549.614868  C679.423462,547.463379 679.724915,545.236328 681.452087,542.661499  C682.536621,544.911926 681.314148,547.590088 683.017395,548.778259  C688.677124,544.917542 689.640320,538.772339 690.997681,532.402100  C691.445251,531.805298 691.887146,531.615479 692.328979,531.425659  C689.278564,529.092957 692.442810,527.391663 692.933777,525.414490  C693.952454,521.311829 695.514954,517.247986 695.836731,513.089478  C696.429871,505.424347 701.317200,501.247620 706.900940,497.083984  C708.343689,502.248596 705.318665,506.048859 704.065002,510.262238  C703.649658,511.658264 702.966614,512.664246 701.460022,512.934753  C698.417175,513.481201 698.877441,515.167847 699.838196,517.326355  C702.030823,522.252686 701.953491,522.278503 705.664612,518.645508  C707.668701,516.683472 710.124634,515.117432 711.129211,512.292419  C711.462341,511.355469 712.205627,511.035980 713.106201,511.275513  C713.953857,511.500946 714.814392,512.145081 714.582825,513.004761  C713.760315,516.058777 715.487427,519.241516 713.736267,522.816040  C712.573669,523.759216 710.440125,522.660095 711.432251,525.183289  C711.901733,526.377197 712.114990,527.632568 711.946289,529.284912  C711.165039,532.278198 711.005554,535.084167 709.294250,537.760132  z\"})),_path1832||(_path1832=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M717.006836,610.618286  C715.798462,610.506653 714.599426,610.011414 713.200195,609.258057  C712.692749,607.894592 712.385498,606.789246 712.040283,605.339478  C713.714844,604.997375 715.427185,604.999573 717.567383,605.003357  C717.668762,606.748108 717.342407,608.491394 717.006836,610.618286  z\"})),_path1833||(_path1833=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M705.673096,545.046509  C707.906311,547.397583 705.703613,549.816162 705.993408,552.618408  C700.641846,550.778198 705.378479,547.753906 705.673096,545.046509  z\"})),_path1834||(_path1834=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M684.298645,567.944275  C684.010681,567.546387 684.009155,567.107483 684.007568,566.339417  C684.643188,566.104065 685.398621,566.162781 685.444214,566.955627  C685.461426,567.253967 684.888794,567.586365 684.298645,567.944275  z\"})),_path1835||(_path1835=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M741.171753,626.761780  C738.480103,626.509155 736.640198,627.782471 734.071289,630.913940  C735.282593,626.066101 730.687378,624.934692 731.750244,621.231323  C733.122070,620.828308 734.757080,621.071411 735.284607,620.419006  C739.317871,615.431030 741.319092,621.645386 744.160095,622.298157  C746.307861,622.791687 746.446045,626.482666 744.302612,628.949829  C742.974609,628.211365 742.568726,627.009338 741.936584,625.957825  C741.919617,625.929504 741.628845,626.008362 741.528870,626.103577  C741.426575,626.200989 741.402039,626.380188 741.171753,626.761780  z\"})),_path1836||(_path1836=/*#__PURE__*/React.createElement(\"path\",{fill:\"#090707\",opacity:1,stroke:\"none\",d:\" M741.188416,627.227173  C740.428528,625.547058 739.032715,623.452698 740.812500,622.729919  C742.954529,621.859863 742.794922,624.604492 743.424683,625.905457  C743.764160,626.606812 743.805664,627.452393 743.990784,628.615234  C743.833313,628.998779 743.666687,629.000061 743.250000,629.001953  C742.088806,628.874512 741.752441,628.143921 741.188416,627.227173  z\"})),_path1837||(_path1837=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M741.003540,627.335327  C741.582275,627.492615 742.164551,627.985168 742.873413,628.740112  C742.879517,629.310608 742.687683,629.565002 742.213501,629.882812  C741.163818,629.440125 741.012817,628.586426 741.003540,627.335327  z\"})),_path1838||(_path1838=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M747.646729,622.574646  C748.384644,622.368103 748.651428,622.626770 748.537292,623.199097  C748.513550,623.318054 748.344849,623.478149 748.224670,623.495911  C747.646179,623.581665 747.404053,623.300110 747.646729,622.574646  z\"})),_path1839||(_path1839=/*#__PURE__*/React.createElement(\"path\",{fill:\"#824630\",opacity:1,stroke:\"none\",d:\" M609.733765,567.313477  C611.393250,566.707397 612.774780,566.362000 614.510498,565.958252  C621.860291,575.540405 624.750854,586.463745 624.965942,598.223267  C625.035156,602.006958 626.143860,605.653442 626.665466,609.752136  C626.904297,610.522400 626.920959,610.947388 626.937744,611.691650  C625.697205,613.397217 625.547241,614.713074 627.495605,616.026855  C627.845581,619.123413 627.889587,622.106201 627.918945,625.540161  C627.471680,625.990906 627.039124,625.990540 626.281311,625.988098  C623.281128,625.893921 622.739136,623.767578 622.642639,621.880554  C622.254089,614.279480 620.589294,606.937622 618.557983,599.241821  C617.027649,591.974182 615.159363,585.484741 608.397461,581.518372  C604.516602,579.241943 604.062927,574.787537 606.816895,571.139709  C607.706360,569.961670 608.098389,568.397705 609.733765,567.313477  z\"})),_path1840||(_path1840=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M626.927490,609.640015  C625.241943,609.718994 625.151245,608.457520 624.983582,607.069885  C624.020264,599.101257 622.909119,591.150208 621.981628,583.177673  C621.455872,578.657776 617.799500,575.832153 616.148071,571.904175  C615.415283,570.161377 614.999817,568.536194 614.909790,566.313477  C616.491882,563.396545 617.746460,560.498413 621.548279,559.902344  C623.491089,563.922058 624.172485,567.842102 623.321533,572.389099  C622.191589,578.427185 625.396729,584.294434 625.446655,590.473267  C625.497192,596.713379 626.424194,602.946411 626.927490,609.640015  z\"})),_path1841||(_path1841=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M623.385132,557.983765  C623.039185,557.085999 623.309265,556.330200 624.670044,556.026672  C624.941101,556.884033 624.662720,557.635376 623.385132,557.983765  z\"})),_path1842||(_path1842=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M619.729004,597.720825  C623.114990,606.911682 622.695068,616.508850 625.671875,625.740601  C625.965271,626.436096 625.974487,626.886230 625.981140,627.674072  C624.082642,630.522095 625.391907,633.424438 624.987427,636.555054  C624.480225,637.421753 624.324524,637.946106 624.759888,638.797485  C624.964722,640.075439 624.967773,641.132019 624.965210,642.584839  C623.797913,643.889465 624.224365,645.463684 623.253235,646.791504  C623.044373,648.419067 623.049133,649.796692 623.059814,651.587585  C622.889465,652.149231 622.713196,652.297546 622.196899,652.519531  C621.625854,652.556091 621.394897,652.519043 620.857544,652.306274  C620.023743,651.635559 619.646301,651.035828 619.198669,650.057373  C618.849304,649.030029 618.753418,648.316467 618.705566,647.232300  C618.720947,646.389038 618.773376,645.910645 618.927490,645.083130  C619.740173,642.647522 619.781067,640.553955 619.007141,638.084839  C618.803345,636.957214 618.806641,636.191467 618.930420,635.034424  C620.850952,620.288147 619.833435,606.620300 609.342346,594.817261  C608.596497,592.918518 608.023499,591.377625 608.526611,589.324951  C613.426392,588.232117 615.767151,589.333801 616.978394,593.242310  C617.493347,594.904114 618.601318,596.060547 619.729004,597.720825  z\"})),_path1843||(_path1843=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M617.159668,678.741333  C616.732056,682.685669 613.546143,683.996460 611.352173,685.974854  C608.579346,688.475342 605.748779,690.841675 604.075439,694.635010  C603.451782,696.543579 602.252258,696.966675 600.338745,696.558899  C597.500488,692.812500 599.583496,689.916931 601.854370,687.610107  C606.942078,682.441833 610.070374,676.172546 613.207092,669.793274  C615.446838,665.238281 615.894592,660.299011 617.409851,655.208862  C618.292725,654.318665 619.061035,654.134216 620.296753,654.312012  C620.909729,654.584412 621.129578,654.744568 621.557495,655.254700  C621.942932,656.114746 622.039734,656.639526 622.033081,657.571289  C621.584412,659.431213 621.339600,660.922668 621.454224,662.836243  C620.944092,668.512024 618.037354,673.152771 617.159668,678.741333  z\"})),_path1844||(_path1844=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M605.764893,695.280762  C606.464478,695.006042 606.908569,694.999878 607.685791,694.988525  C609.277771,694.639893 609.616455,695.619446 610.203125,696.742981  C610.434204,697.998169 610.875061,698.789612 611.494141,699.880859  C611.710266,700.656128 611.716858,701.112427 611.539246,701.892944  C609.868408,704.777649 605.919434,706.495605 608.619324,710.853210  C608.838318,711.675171 608.856140,712.164673 608.723389,713.029785  C605.966858,716.773193 602.440796,719.270081 599.489807,722.380066  C596.465088,725.567688 592.831543,723.852844 590.653442,718.359131  C594.454224,716.182251 596.949158,713.987793 598.000732,709.275452  C598.736938,705.976257 603.358093,703.746521 603.617249,699.057739  C604.031860,697.499573 604.615356,696.435364 605.764893,695.280762  z\"})),_path1845||(_path1845=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M608.148438,713.312744  C607.990906,712.556824 607.991577,712.111450 607.985474,711.332092  C607.670959,707.848755 608.707153,705.091614 610.698608,702.258118  C610.954590,701.542053 610.958923,701.107788 610.958252,700.347778  C610.451660,699.465088 609.930908,698.925964 609.232056,698.168762  C608.868713,697.110840 608.691284,696.263733 608.266357,695.199951  C608.119568,692.232971 608.808838,690.700684 611.275391,693.573181  C612.671021,695.198486 613.962402,696.979004 613.953186,699.250854  C613.938232,702.928528 616.327454,704.626099 619.593018,705.967346  C619.920898,709.456360 617.265625,708.337158 615.174011,708.799011  C612.940063,710.837097 612.467651,714.906067 608.148438,713.312744  z\"})),_path1846||(_path1846=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M621.012756,658.319580  C621.016357,657.553894 621.015137,657.116272 621.016724,656.350342  C621.686951,655.425354 622.450317,655.270081 623.644165,655.757080  C624.205627,656.258179 624.425964,656.527832 624.883179,656.918945  C625.101135,657.460754 625.082153,657.881104 625.062744,658.616089  C624.937866,660.852173 622.884216,662.872375 625.651245,664.828735  C625.946411,665.731689 625.946411,666.466553 625.954895,667.566895  C622.959473,668.272522 622.028320,670.585815 621.540100,672.987976  C621.023315,675.530762 619.797974,677.403931 617.336670,678.917480  C614.957336,676.084656 616.927917,673.523132 617.887695,670.808594  C618.700684,668.509155 619.299805,666.134216 620.007935,663.404175  C621.109924,661.730896 620.981812,660.171875 621.012756,658.319580  z\"})),_path1847||(_path1847=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M605.695618,695.006775  C605.772461,696.137207 605.524597,697.262268 605.135925,698.708252  C602.307617,701.105042 599.547546,702.827148 596.024170,700.455688  C596.654297,699.249207 597.292664,698.454529 597.986328,697.352783  C598.321167,696.466431 598.816040,696.192932 599.712036,696.116821  C601.139160,695.861938 602.274475,695.565125 603.742554,695.132751  C604.507141,694.998596 604.938965,695.000000 605.695618,695.006775  z\"})),_path1848||(_path1848=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M607.712891,713.214233  C611.814880,714.420715 611.181458,708.781128 614.621033,709.032593  C620.565796,714.662537 614.793884,717.624695 612.044678,721.653931  C611.683655,722.460266 611.364868,722.919556 611.015869,723.668884  C609.832764,725.162415 608.565247,726.253235 607.265137,727.751465  C607.035339,728.429382 607.019409,728.878296 607.003906,729.664124  C604.597900,731.086853 601.179260,727.499939 599.727112,730.658447  C597.431641,735.651428 591.914124,735.590942 588.357666,738.948853  C583.988403,737.363403 584.151062,734.042053 585.262573,730.906738  C585.832153,729.300232 585.752991,727.701965 586.131958,726.162476  C587.288818,725.961609 587.487610,726.963867 588.004272,727.475220  C589.074524,728.534607 590.105835,729.149353 591.291931,727.674622  C591.948853,726.857910 593.878540,727.158020 593.459290,725.481201  C593.151672,724.250549 591.844604,723.611816 590.791504,723.511169  C587.756287,723.221008 586.612427,721.333862 586.040894,718.343201  C586.287720,717.586365 586.655884,717.294556 587.441895,716.995117  C588.266724,716.839111 588.745422,716.841064 589.571411,716.996460  C590.127869,717.208923 590.336853,717.326904 590.770508,717.726074  C594.995361,724.229858 597.599976,724.537170 601.078369,718.326721  C602.698853,715.433533 605.766724,715.578308 607.712891,713.214233  z\"})),_path1849||(_path1849=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M607.421387,727.977173  C606.815613,725.636658 607.106934,723.707153 610.591675,723.968750  C611.092041,726.228821 610.467102,727.916992 607.421387,727.977173  z\"})),_path1850||(_path1850=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M623.387634,646.951965  C623.151489,645.652344 622.497925,644.021912 624.612305,643.067871  C624.854675,644.370422 625.505005,645.997986 623.387634,646.951965  z\"})),_path1851||(_path1851=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M623.990112,655.658447  C623.243713,655.995117 622.502075,656.001709 621.390015,656.015137  C621.011108,655.852600 621.002686,655.683167 620.987305,655.259277  C620.821350,654.497986 620.942932,654.059509 621.637634,653.516968  C622.469604,653.289001 622.952393,653.343872 623.704895,653.773376  C623.993408,654.447632 623.994080,654.888000 623.990112,655.658447  z\"})),_path1852||(_path1852=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M623.973511,653.715942  C623.539124,654.004944 623.085571,654.002502 622.291748,653.999146  C621.583252,653.606567 621.450806,653.147034 621.770996,652.310974  C622.167175,652.002625 622.346619,652.002869 622.795898,652.001953  C623.361938,652.475403 623.658203,652.950012 623.973511,653.715942  z\"})),_path1853||(_path1853=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M624.976685,638.681335  C624.332031,638.903076 623.577393,638.824402 623.552429,638.033630  C623.542786,637.727051 624.111511,637.402222 624.702454,637.039368  C624.989319,637.443298 624.990479,637.893616 624.976685,638.681335  z\"})),_path1854||(_path1854=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E79B75\",opacity:1,stroke:\"none\",d:\" M485.380005,757.000610  C483.076813,756.632019 481.160034,756.256226 481.010254,753.359802  C481.302765,752.244141 481.849701,751.692200 482.816620,751.010986  C488.704559,748.799927 493.206635,745.709839 495.139343,739.716431  C495.727631,737.892151 497.533234,736.994080 499.104248,736.052307  C503.361267,733.500244 505.501587,729.599915 505.323792,724.812073  C505.041382,717.207092 506.232147,709.593201 505.083374,702.004517  C504.931030,700.998230 505.081940,699.966431 505.536346,699.074036  C506.866028,696.462585 505.897614,694.634888 503.707825,693.125732  C501.062042,691.302246 499.716339,688.656616 499.338013,685.566589  C498.854828,681.620300 501.509705,679.450317 505.158813,681.074951  C508.304504,682.475342 511.229706,682.532593 514.332947,681.346069  C518.813477,679.632996 523.286438,680.755798 527.624878,681.779663  C531.468506,682.686646 534.877502,682.162170 538.196594,680.301453  C541.443726,678.481262 545.007507,677.495972 548.593262,676.904602  C553.139343,676.154785 555.081909,678.718262 553.525635,682.904358  C553.296753,683.520142 552.523132,684.319946 552.833557,684.699890  C556.819336,689.578613 552.629822,695.000061 553.950928,700.130188  C555.089539,704.551758 552.391907,708.212646 549.678589,711.406128  C547.321045,714.180847 546.334167,717.056152 547.195496,720.600708  C548.755188,727.019165 546.135620,732.927856 544.073486,738.575378  C540.616821,748.042114 543.623169,756.151672 547.696899,764.731445  C548.727905,767.596313 548.335999,769.971008 546.871704,772.575439  C544.197693,774.604187 542.453308,773.025452 541.038574,771.425903  C535.478516,765.140076 531.081055,758.231628 529.754150,749.695496  C529.337341,747.014038 529.670898,743.317322 526.579224,742.425659  C523.398743,741.508484 520.564392,743.668396 518.318909,746.085693  C516.815552,747.703918 515.127686,749.227295 512.846375,749.271423  C503.116486,749.459534 494.833557,754.606995 485.380005,757.000610  z\"})),_path1855||(_path1855=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M485.010284,757.365112  C485.515564,755.858643 486.418640,755.020874 487.564178,754.769226  C495.706299,752.980408 502.795959,747.411621 511.586212,748.020264  C514.270264,748.206177 516.050232,746.876099 517.415405,744.877502  C518.377991,743.468201 519.364380,742.420471 521.083008,741.773743  C528.701782,738.906494 531.087402,740.657532 531.654968,748.725403  C532.062012,754.510620 533.209167,760.264954 537.959534,764.551331  C540.709045,767.032288 541.135498,771.617493 545.646240,772.958862  C548.914795,778.001709 547.894226,783.119263 546.218994,788.624207  C541.598755,791.541138 537.246216,788.616943 532.866699,788.887329  C531.954651,788.943604 531.160095,788.256836 531.542480,787.295227  C532.897095,783.888123 530.658630,782.028564 528.595093,780.094727  C527.261902,778.845459 526.879700,777.314758 527.003906,775.586609  C527.141968,773.665955 526.727112,771.949707 525.168030,770.682556  C523.311646,769.173767 523.015686,767.183594 522.953552,764.912903  C522.791199,758.982605 518.832397,756.683960 513.786926,759.549927  C509.377014,762.054871 504.347961,761.502075 499.774109,761.596191  C496.255707,761.668701 493.454651,761.395447 491.030396,764.236877  C490.586609,764.757019 489.522095,764.747498 488.373352,764.988770  C487.013641,762.572510 485.198761,760.489624 485.010284,757.365112  z\"})),_path1856||(_path1856=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M483.262695,751.643433  C482.532227,752.311218 482.060760,752.627258 481.295044,752.971680  C477.421326,757.022522 474.665863,761.845947 474.515869,766.992004  C474.419861,770.287170 476.184631,774.029541 477.322479,777.482056  C478.937988,782.384033 476.456329,786.897278 476.621338,791.645264  C476.682983,793.419006 474.265442,792.833130 472.440552,793.000366  C470.053040,788.811707 467.255920,784.811279 469.000397,779.376709  C467.070923,769.308533 465.472534,759.627258 468.150116,749.420837  C471.736023,745.832153 475.664337,743.916138 480.863953,744.297607  C483.562958,746.222351 484.749756,748.359619 483.262695,751.643433  z\"})),_path1857||(_path1857=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M453.234436,853.231323  C450.529388,852.500549 452.350830,849.348389 450.135010,848.344666  C443.857147,847.412048 438.125854,842.201355 431.310242,846.668823  C430.639801,846.933044 430.211609,846.954773 429.464478,846.987671  C429.079437,846.569702 429.013367,846.140625 428.935638,845.385620  C427.916901,843.956787 429.406433,842.560669 428.306335,841.194092  C427.620056,839.724792 427.127136,838.507385 426.386444,837.070557  C424.843201,835.735413 425.064667,834.199036 424.995758,832.373047  C424.662079,830.596985 424.331970,829.190002 423.956299,827.422668  C422.273865,825.000854 422.092468,822.827698 423.791992,820.215332  C426.294739,820.250244 428.095459,819.816528 429.444763,817.968994  C430.016876,817.185547 430.855530,816.600220 431.455353,815.832825  C432.617279,814.346375 435.476959,816.884644 435.592010,814.639099  C435.742920,811.695251 432.992188,814.175537 431.785553,813.379761  C430.399719,812.465759 430.366486,803.279663 431.962646,802.324524  C435.660431,800.112000 438.899353,797.346741 442.194702,794.621338  C443.056183,793.908875 444.310211,793.495056 445.299408,794.621216  C445.709686,795.088257 445.817810,795.818481 446.696838,795.185242  C450.174255,792.680298 450.185181,792.695435 451.856079,796.668762  C452.005341,797.162903 452.003998,797.331238 452.000122,797.752258  C449.419403,797.737488 446.841248,797.470154 443.579071,797.131836  C445.911926,799.560486 445.455017,801.562500 443.507751,803.567749  C442.106201,805.011108 440.316162,806.591614 442.597748,808.986084  C442.904907,809.068237 442.927734,809.554932 442.941315,809.798096  C443.089142,810.193909 443.223358,810.346497 443.149414,810.721924  C442.642548,811.086609 442.403564,811.296631 442.114136,811.789062  C441.869476,812.168945 441.735016,812.334473 441.798523,812.751221  C441.932312,815.335449 441.774933,817.664490 443.860260,819.414062  C444.446747,819.906250 445.093384,820.766479 444.201965,821.519470  C443.477844,822.131042 442.703949,821.658020 441.927795,821.285217  C440.966553,820.823547 440.238678,818.623169 438.848938,820.532288  C437.415466,822.501648 439.417908,822.928345 440.522003,823.810791  C446.141602,828.301941 446.492188,829.597290 443.462219,835.970825  C442.923645,837.103760 443.698761,836.730591 444.055878,837.061218  C447.494904,840.243835 450.938202,842.724548 455.456177,838.661621  C456.895874,837.367065 458.687408,838.319580 459.318909,839.540405  C462.014130,844.750488 466.031555,847.855835 471.874756,848.685364  C472.532501,848.778748 473.061646,849.778076 473.839905,850.666931  C473.937073,851.960938 474.105682,853.682800 473.714203,853.821289  C464.949524,856.921570 473.750153,861.868347 472.693756,865.840820  C471.612152,868.935486 469.457001,871.619446 470.018707,875.590271  C470.034271,876.846985 469.803986,877.657410 469.828247,878.738464  C470.004883,878.997498 470.000000,879.000000 470.003052,878.998779  C469.186066,881.981140 467.299957,881.002991 465.168518,879.934204  C463.823700,878.061096 464.484619,876.592590 465.373779,874.807373  C470.021820,865.929688 469.617096,862.932739 462.799988,856.112305  C459.829865,853.894104 456.437256,854.468384 453.234436,853.231323  z\"})),_path1858||(_path1858=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M442.001190,812.752686  C441.835968,812.835144 441.657715,812.680054 441.528107,812.491516  C441.497559,812.447083 441.630768,812.289917 441.846252,812.094055  C442.003906,812.003479 442.005951,812.502991 442.001190,812.752686  z\"})),_path1859||(_path1859=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M443.104004,810.872559  C442.941254,810.944641 442.953613,810.492615 442.954254,810.266968  C443.119934,810.194214 443.298157,810.336609 443.437805,810.509949  C443.462708,810.540771 443.327850,810.700378 443.104004,810.872559  z\"})),_path1860||(_path1860=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M480.998169,920.742676  C478.317139,921.190979 476.030914,920.673584 475.042480,917.356934  C475.762695,916.986511 476.506622,916.998108 477.622467,917.006775  C477.994385,917.003845 478.000000,917.000000 477.998901,917.002808  C478.956116,917.815308 480.462311,917.950989 480.955811,919.700562  C480.994141,920.021667 480.996368,920.502319 480.998169,920.742676  z\"})),_path1861||(_path1861=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M481.251099,919.888916  C480.084106,919.202393 479.174042,918.383118 478.130890,917.284790  C479.316376,916.976685 480.707367,915.908386 481.911041,917.434204  C482.710449,918.447510 482.401337,919.114502 481.251099,919.888916  z\"})),_path1862||(_path1862=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M481.019714,907.739868  C480.859192,907.817993 480.683350,907.671387 480.550812,907.492737  C480.523071,907.455261 480.655060,907.299438 480.869873,907.114929  C481.026367,907.031677 481.019775,907.503784 481.019714,907.739868  z\"})),_path1863||(_path1863=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8B8888\",opacity:1,stroke:\"none\",d:\" M479.001831,929.002441  C478.919525,929.037109 478.835358,929.069336 478.873169,929.049194  C478.995117,928.996826 479.000000,929.000000 479.001831,929.002441  z\"})),_path1864||(_path1864=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M471.948486,941.876953  C471.891205,941.872803 471.781219,941.747986 471.671204,941.623169  C471.746094,941.667603 471.820953,941.712036 471.948486,941.876953  z\"})),_path1865||(_path1865=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M471.999390,942.000366  C472.105652,942.127441 472.212524,942.254150 472.319427,942.380920  C472.245605,942.335205 472.171783,942.289429 472.049591,942.120605  C472.001221,941.997559 472.000000,942.000000 471.999390,942.000366  z\"})),_path1866||(_path1866=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M452.972290,820.019165  C452.843933,819.887329 452.742432,819.731323 452.640930,819.575317  C452.731628,819.614014 452.822327,819.652771 452.979858,819.816101  C453.046753,819.940674 452.999115,819.994995 452.972290,820.019165  z\"})),_path1867||(_path1867=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M464.730164,878.826355  C466.496155,879.763611 467.923798,880.507812 469.780792,879.249512  C472.485687,880.559753 471.533966,881.778931 469.312134,882.945923  C466.515472,882.859131 464.773438,884.227234 465.513092,886.490356  C466.362518,889.089111 464.420135,890.500244 464.115936,892.499512  C463.775879,894.734558 462.506653,895.290466 460.621826,894.823364  C458.569855,894.314758 458.999908,892.583191 459.178070,891.143555  C459.318848,890.006226 459.712067,888.900085 459.995361,887.371826  C459.475189,886.441406 458.950958,885.920959 458.435211,884.942261  C458.933838,881.162109 461.408905,879.660095 464.730164,878.826355  z\"})),_path1868||(_path1868=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M470.120514,878.731079  C469.026306,878.270203 468.859680,877.400024 469.782715,876.190186  C471.082886,876.735291 470.710236,877.595581 470.120514,878.731079  z\"})),_path1869||(_path1869=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M480.004028,887.005310  C479.920074,887.039490 479.832123,887.068298 479.866760,887.044495  C479.989288,886.991821 480.000000,887.000000 480.004028,887.005310  z\"})),_path1870||(_path1870=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M469.012054,748.614685  C467.263031,758.787537 469.813293,768.533997 469.150452,778.644775  C465.652161,778.663696 464.343262,780.090393 465.280792,783.380920  C465.558746,784.356445 465.960052,785.312805 464.321045,785.941772  C460.150177,787.398743 458.870026,785.083740 458.156982,781.557556  C459.227997,777.780701 462.488495,775.271606 461.637268,771.100342  C461.276154,769.330750 460.912750,767.646301 460.318024,765.920593  C458.812500,761.552185 459.061584,757.114380 460.945923,752.445801  C463.277588,750.418701 463.711243,746.998962 467.295532,746.435913  C468.442322,746.823792 468.824036,747.456726 469.012054,748.614685  z\"})),_path1871||(_path1871=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M458.899658,780.665649  C459.289093,783.643433 460.720337,785.279968 463.639099,785.970093  C464.558044,788.811096 466.977966,790.528198 468.080048,793.031128  C468.477570,793.933838 468.632599,794.478027 467.347565,794.979248  C464.292633,794.831238 463.478790,792.525391 462.121429,790.333801  C460.173889,787.737122 457.181671,786.849731 455.207214,784.262878  C453.856812,783.376282 452.754089,782.709412 451.323425,782.026489  C449.887878,779.274780 447.194244,777.874878 445.296112,775.425110  C444.917480,773.283020 446.151855,773.603638 447.682190,773.945923  C451.994720,773.439697 453.334625,777.776550 456.884399,778.807861  C457.859924,779.261719 458.399170,779.711914 458.899658,780.665649  z\"})),_path1872||(_path1872=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M455.005615,784.367432  C457.934998,784.946838 460.317108,786.630310 461.937012,789.689941  C461.162048,789.779297 460.369263,789.517578 459.282288,789.136475  C458.225769,788.640015 457.463470,788.262817 456.376953,787.809631  C455.718994,786.719666 455.385315,785.705688 455.005615,784.367432  z\"})),_path1873||(_path1873=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M476.951111,858.879089  C476.894592,858.874451 476.789185,858.748901 476.683807,858.623352  C476.756622,858.668274 476.829437,858.713196 476.951111,858.879089  z\"})),_path1874||(_path1874=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M560.554504,808.944092  C560.054932,809.911316 559.493469,809.721191 559.011536,809.210388  C558.862061,809.051941 558.810974,808.535522 558.929626,808.434082  C559.514282,807.934021 560.070862,808.122070 560.554504,808.944092  z\"})),_path1875||(_path1875=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D99D7B\",opacity:1,stroke:\"none\",d:\" M546.248657,789.248718  C545.990723,783.974731 545.993835,778.950684 545.994751,773.464478  C546.329773,770.610779 546.666931,768.219177 547.004456,765.416138  C547.324951,762.798340 547.946106,760.711975 549.721924,758.740295  C552.304260,757.840576 554.059082,758.792175 555.815674,760.652710  C553.361450,766.233154 557.275696,771.327209 556.255676,776.742676  C555.540283,780.541565 555.277527,784.450623 553.978027,788.561523  C553.090637,789.103333 552.355042,789.415649 552.043457,790.667236  C551.008545,792.403687 551.411560,794.892944 548.486694,795.136902  C546.799622,793.517883 547.328308,791.314514 546.248657,789.248718  z\"})),_path1876||(_path1876=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M484.146088,950.847595  C483.827118,950.894409 483.545471,950.675598 483.128296,950.225952  C483.199799,950.000793 483.406830,950.006409 483.926270,950.030273  C484.220245,950.226318 484.201813,950.404175 484.146088,950.847595  z\"})),_path1877||(_path1877=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C48355\",opacity:1,stroke:\"none\",d:\" M569.046143,749.617676  C565.423035,749.236694 561.949402,748.663086 564.769897,743.465576  C565.963257,741.266602 565.768982,738.593811 565.378662,735.838867  C564.746704,731.378235 566.279907,726.960388 567.988159,722.377197  C566.956177,720.932373 566.626038,719.580933 567.219666,718.309021  C569.593201,713.222961 571.193237,707.800903 575.451782,703.635498  C581.739258,697.485657 586.633301,690.091248 592.473022,683.502075  C596.218384,679.276062 600.272217,675.157166 601.928833,669.117859  C602.974792,665.304810 604.492310,661.720581 604.559631,657.639282  C604.704468,648.849304 606.337097,640.146912 605.964355,631.301941  C605.586487,622.337830 600.049377,618.767212 591.898438,622.575745  C590.238708,623.351257 588.640015,624.250854 586.980713,625.027161  C585.918884,625.523926 584.597351,626.318604 583.656433,625.767151  C575.550598,621.016296 568.820435,627.216797 561.518372,628.519470  C558.251404,629.102295 555.154358,630.484497 551.762329,629.389648  C550.291321,628.914856 549.044189,628.148132 547.976379,626.499023  C546.988342,624.099426 546.312195,622.027344 546.802612,619.375610  C548.119202,615.908447 550.619202,615.037170 553.664734,614.864197  C558.528809,614.587891 563.258911,615.723267 568.056274,616.030090  C575.683655,616.517944 582.900391,614.647339 589.761292,611.348022  C592.922180,609.828125 596.082703,609.267395 599.611450,611.460083  C610.451355,610.642761 609.840698,610.828979 613.100891,621.520264  C617.366882,635.509521 615.508118,649.513977 614.209045,663.420715  C613.495178,671.062988 609.833984,678.146851 603.609924,683.631409  C599.170227,687.543457 596.169189,692.880249 592.066406,697.632080  C586.654724,700.529846 582.079590,704.391541 580.624207,709.963989  C578.023071,719.924011 571.066162,727.954041 569.032837,738.060425  C568.279053,741.807251 571.062317,745.496948 569.046143,749.617676  z\"})),_path1878||(_path1878=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9764E\",opacity:1,stroke:\"none\",d:\" M592.379150,697.956848  C590.168213,696.959534 589.328979,695.381409 591.604126,694.359436  C595.114197,692.782715 596.343933,689.373047 598.641968,686.838501  C603.541809,681.434326 608.790466,676.343384 611.315552,669.154785  C612.983276,664.407043 613.555847,659.659912 613.444092,654.678711  C613.345825,650.297974 613.333801,645.842834 614.011169,641.535034  C614.915894,635.780945 613.687378,630.368835 612.353027,624.947815  C611.883911,623.041870 611.080322,621.266785 610.950134,619.214294  C610.503845,612.182434 608.197571,610.857788 601.880798,613.706970  C601.517944,613.870605 600.947693,613.574219 600.238159,613.244751  C599.445129,609.879883 598.895508,607.159729 594.407898,608.766357  C592.116150,609.586731 590.389221,607.737061 589.371582,605.181274  C589.883057,600.509277 592.962830,601.132324 595.945740,601.435242  C598.542236,601.699036 601.249695,603.653076 604.048462,600.828613  C610.889160,598.752380 613.011536,600.171631 616.121460,606.047791  C620.887085,615.052368 618.998352,624.750549 620.005615,634.571289  C620.008362,635.749146 620.008423,636.500122 620.007202,637.626709  C620.381531,640.122070 619.972717,642.239746 619.981201,644.678223  C619.975891,645.439697 619.977356,645.881653 619.978394,646.655029  C619.124512,647.721802 618.699768,648.569397 619.396362,649.972168  C619.695740,650.667114 619.792908,651.087524 619.796875,651.858276  C619.585449,653.110596 619.128052,653.875488 618.241699,654.779114  C617.885315,668.292908 611.669922,678.855469 603.116516,688.336731  C601.271362,690.382019 599.828308,692.470886 600.001709,695.753479  C599.536133,696.433289 599.068481,696.707886 598.321289,697.014160  C596.194031,696.799194 594.463379,697.272461 592.379150,697.956848  z\"})),_path1879||(_path1879=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M591.393494,718.003540  C590.995117,718.007324 590.504211,717.991943 590.258728,717.987427  C589.578491,717.480591 589.051514,717.319336 588.189941,717.747925  C587.524292,717.953186 587.086853,717.962280 586.321167,717.970886  C584.815186,717.328247 585.180054,715.400696 583.271118,715.042969  C582.958130,714.548279 582.971741,714.106384 583.000000,713.333252  C585.973083,709.292664 588.231689,704.933228 592.856689,702.308533  C593.153748,700.610779 593.970520,700.019043 595.667114,700.042664  C598.953918,701.350159 601.449707,699.062988 604.609253,699.031555  C603.825684,702.495605 604.804565,707.124390 599.685364,708.481628  C599.060181,708.647339 598.241699,710.248474 598.422485,710.950012  C599.964905,716.937012 596.039490,717.581055 591.393494,718.003540  z\"})),_path1880||(_path1880=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M592.678650,702.048767  C592.929749,705.007446 590.092957,705.875671 588.459900,707.615784  C587.325073,708.825012 586.093323,709.388428 586.614868,711.520264  C587.418884,714.806824 585.067017,713.263184 583.354492,713.045654  C583.705872,707.308533 587.581787,704.329346 592.678650,702.048767  z\"})),_path1881||(_path1881=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M587.631226,740.037109  C588.267517,743.135803 589.373535,746.214172 588.032227,749.642456  C587.998657,749.975037 587.996033,750.010132 588.000488,750.026794  C586.961426,751.459900 586.242126,753.234009 583.578796,753.252136  C584.027588,749.467590 584.897278,745.875244 584.512207,742.209534  C584.238037,739.599670 585.881775,740.150452 587.631226,740.037109  z\"})),_path1882||(_path1882=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M581.369202,759.723511  C580.371338,761.757507 579.081665,762.912415 577.068359,763.769409  C575.568909,760.328735 580.013550,759.251465 580.950806,756.378052  C582.069092,757.430786 582.085693,758.413513 581.369202,759.723511  z\"})),_path1883||(_path1883=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M580.996094,755.963135  C581.051575,754.814270 580.901917,753.592834 582.652588,753.052551  C582.985779,752.986816 583.046204,753.045532 583.076416,753.074829  C583.986755,754.671143 583.200562,755.542664 581.437012,756.115967  C581.046631,756.062744 581.013000,755.996277 580.996094,755.963135  z\"})),_path1884||(_path1884=/*#__PURE__*/React.createElement(\"path\",{fill:\"#686360\",opacity:1,stroke:\"none\",d:\" M581.035767,756.459351  C582.026978,755.556824 582.722717,754.815857 583.045532,753.410217  C584.534180,752.161316 585.961670,751.218567 587.697021,750.159607  C588.603027,754.996948 586.048645,758.002136 581.506042,760.019226  C581.112976,758.981323 581.068970,757.918640 581.035767,756.459351  z\"})),_path1885||(_path1885=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D08B5D\",opacity:1,stroke:\"none\",d:\" M548.681274,625.698669  C552.415466,629.739441 556.519592,628.857300 560.342407,627.219360  C566.167053,624.723816 572.703491,624.562317 578.305664,621.438782  C579.451416,620.799927 580.911743,621.027527 581.355530,622.206482  C582.969360,626.493591 585.160400,624.306213 587.490723,623.047363  C592.551208,620.313965 597.081543,617.601624 603.545593,621.310791  C607.833435,623.771240 607.702026,627.380249 607.472839,629.957153  C606.946350,635.874817 609.205566,641.952332 606.344299,647.776062  C605.208374,650.088135 606.092529,653.165100 606.406921,655.458008  C607.406189,662.745972 602.710266,668.304871 601.796753,674.887573  C601.694153,675.626953 601.066650,676.395630 600.490662,676.952087  C591.061646,686.061035 583.896667,697.129578 574.767334,706.540100  C571.080627,710.340393 569.426270,715.930298 567.997803,721.610229  C564.115784,722.404236 562.710571,726.286438 559.351074,727.949829  C557.357910,725.310913 559.400391,723.077820 560.055542,720.310059  C563.370178,712.791809 568.570251,706.822876 572.102661,699.880371  C574.907227,694.368469 579.716125,690.693726 583.935303,686.487000  C587.042969,683.388489 589.874878,680.235168 590.868286,675.774231  C591.308838,673.796143 592.448120,672.076477 593.993896,670.756226  C598.053894,667.288574 598.208679,662.979797 596.438049,658.492065  C595.185303,655.317017 594.973328,652.518066 596.857239,649.501709  C598.945679,646.157898 597.814453,642.041626 599.121826,638.383667  C599.741089,636.651062 597.391418,636.226685 595.908997,636.327332  C592.511047,636.557983 589.315979,636.178406 586.265564,634.497314  C584.397888,633.467957 582.174683,633.843018 580.416992,634.577393  C573.500549,637.467224 565.837891,637.812378 559.042358,641.031982  C558.741882,641.174255 558.407288,641.259277 558.132385,641.439697  C552.721619,644.989624 546.891724,647.011353 539.937622,646.385864  C533.197632,647.166321 527.720825,647.110474 526.425049,638.590698  C525.904053,635.165649 523.553833,631.991943 524.756714,627.852661  C530.414124,625.027710 535.982422,623.206360 542.025635,623.328918  C544.343811,623.375977 546.645996,623.496277 548.681274,625.698669  z\"})),_path1886||(_path1886=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M561.245911,719.698242  C561.445862,722.703918 559.889099,724.880127 559.052307,727.626160  C559.003296,730.039368 558.999268,732.083557 558.996399,734.565674  C558.094055,739.092957 559.327209,743.420410 557.307007,747.710266  C555.649780,752.097839 557.955994,756.330383 556.268311,760.711304  C554.232788,760.361084 552.467957,759.724243 550.351562,759.044922  C546.526184,754.948608 546.853027,750.090027 547.422119,745.339661  C547.701782,743.004883 547.829468,740.806824 547.526550,738.455383  C546.745483,732.391296 549.904602,727.163208 551.999756,721.884949  C554.748108,714.960754 557.794250,708.100891 561.330139,701.500183  C561.799316,700.624390 561.921570,699.452209 562.625488,698.823303  C570.337708,691.931946 566.616272,680.147949 575.285461,672.935364  C570.290955,671.972534 565.532715,675.032959 563.449707,669.332458  C564.983826,664.807312 568.540771,666.060303 571.980957,665.902954  C575.346191,666.144531 578.346558,666.212708 581.283447,666.669067  C585.023315,667.250122 586.575623,670.794617 583.733093,673.069397  C578.011963,677.647583 578.276306,684.715332 575.466858,690.456421  C574.171326,693.103699 573.449463,696.097778 571.688171,698.511353  C567.041260,704.879089 564.686035,712.336060 561.245911,719.698242  z\"})),_path1887||(_path1887=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D08B5D\",opacity:1,stroke:\"none\",d:\" M557.256409,748.111938  C556.881958,743.777954 556.859009,739.566040 558.728760,735.274048  C559.754517,739.445984 561.376770,743.867249 559.160645,748.686584  C558.502930,748.737732 558.007874,748.480347 557.256409,748.111938  z\"})),_path1888||(_path1888=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M271.962158,446.357849  C272.606140,444.548889 273.194458,443.093872 273.934082,441.334778  C274.870026,440.321808 274.964783,439.223907 275.767303,438.185425  C275.971649,437.961029 275.989349,437.481262 276.002228,437.241577  C277.283813,435.890015 276.950867,434.235809 277.381470,432.846252  C278.169006,430.305084 279.093872,428.549408 282.266541,430.168091  C285.149506,431.638947 285.820496,429.388947 285.938965,427.309540  C286.438171,418.547455 291.515533,411.517731 294.867493,403.880188  C296.725677,399.646301 298.856842,399.610596 302.752228,402.618317  C303.625580,405.877075 302.127136,408.408722 301.449097,411.462219  C301.356293,412.322662 301.257111,412.801575 300.970459,413.599854  C299.872589,415.230560 299.320435,416.704193 298.882751,418.590790  C298.286377,419.874603 297.410980,420.660583 297.361298,422.180084  C297.225891,422.959961 297.105865,423.398407 296.840149,424.155518  C294.557068,429.155640 292.539703,433.823517 292.795502,439.196045  C292.942352,442.280762 291.733826,444.971191 289.229370,447.046143  C284.858765,450.667206 280.338104,463.101593 281.174377,468.977631  C283.133545,468.122864 285.201904,467.592987 286.963165,466.321533  C288.320984,465.341370 289.686523,465.016327 290.852142,467.134705  C291.404816,469.539215 290.011780,471.056244 289.239075,473.119324  C289.006653,473.640869 288.899048,473.840454 288.601410,474.316162  C286.869446,475.927673 286.413086,477.813782 285.710236,479.936798  C285.016022,481.148956 284.365204,482.008728 283.666595,483.229095  C281.988770,486.378571 279.013062,488.632355 279.790680,492.790619  C279.779236,493.608704 279.652985,494.055237 279.192871,494.722412  C274.454285,495.416168 273.782928,498.490540 273.977325,502.572388  C269.117401,506.296234 268.327850,512.190430 265.315399,516.676758  C264.766876,517.493591 264.407379,518.466980 263.871002,519.292358  C262.548096,521.328125 260.774170,523.166443 258.176575,522.239563  C255.521698,521.292175 256.220032,518.737061 256.424835,516.606323  C256.584930,514.940857 256.979431,513.326904 257.638184,511.780579  C257.964752,511.014008 258.534119,509.876007 258.018036,509.425812  C254.517502,506.372253 255.836060,501.576508 253.653992,497.705933  C253.559372,497.110840 253.539993,496.870270 253.487320,496.268982  C255.765823,485.883026 257.953064,475.809998 263.545502,466.934662  C264.337891,465.677094 265.629669,464.567139 265.586700,463.038727  C265.407837,456.680542 269.632629,452.083679 271.962158,446.357849  z\"})),_path1889||(_path1889=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M271.713074,446.162445  C272.297058,449.937958 270.054657,453.088348 268.703003,456.507996  C268.482056,457.067017 267.380920,457.469971 267.404724,457.905762  C267.927582,467.467377 260.064850,473.793701 258.040161,482.350464  C257.813324,483.309113 257.172211,484.378662 257.409027,485.198730  C258.110901,487.629028 258.982452,489.737610 255.542389,490.981750  C254.934875,491.201477 255.158463,493.719208 254.997101,495.590027  C254.864044,496.170288 254.732132,496.336243 254.798996,496.750366  C255.292664,499.697998 259.162018,501.786011 256.376343,505.025116  C256.309723,505.102539 256.382416,505.451813 256.458893,505.478699  C264.372437,508.262726 257.206909,513.062927 257.974030,516.795105  C258.295593,518.359375 255.873871,520.914246 258.734650,521.303040  C260.369629,521.525208 262.366760,519.838745 263.369659,517.566895  C265.252777,513.301147 267.781311,509.323669 269.755310,505.092834  C270.549622,503.390411 271.587463,502.921692 273.591431,502.988647  C272.473145,508.007477 268.820770,511.993896 267.298798,517.072205  C266.689087,519.106506 264.457001,520.580811 265.753296,523.220032  C266.206390,524.142578 265.455811,525.247253 264.462585,525.590088  C261.229340,526.706055 261.401794,529.955139 260.054443,532.641052  C261.040619,535.512695 260.693207,537.759827 258.376678,539.853333  C256.811005,539.562622 254.868637,538.308044 254.503433,539.750305  C253.218994,544.822937 248.363190,542.383484 245.249435,545.449097  C246.008514,540.134705 250.655380,539.372620 252.461029,536.064026  C253.820343,533.573364 254.991241,530.785461 256.857361,528.470215  C257.446655,527.739075 258.620972,525.926697 256.549530,525.222656  C255.117554,524.735962 253.642883,524.813538 253.023651,526.818726  C252.496613,528.525330 251.377853,530.070618 250.986801,531.793030  C250.292221,534.852539 248.491165,536.693542 245.334106,537.858765  C244.511154,537.743042 244.006958,537.477905 243.242584,537.096680  C241.552094,532.679016 242.905273,528.812500 245.083893,525.211060  C247.043365,521.971863 248.157440,518.690491 247.395004,514.862549  C246.877747,512.265564 247.977753,510.009338 249.398270,507.822418  C246.335556,510.544708 245.295959,514.456299 243.135193,517.648743  C241.004456,520.796875 239.576401,520.927429 237.788269,518.285278  C239.897705,514.549438 241.789398,511.084198 243.844086,507.311890  C245.976501,503.360565 249.203522,500.271027 249.010529,495.337097  C247.337997,489.366333 252.273773,484.340912 250.498505,478.461609  C250.133316,477.252197 253.428528,475.024231 254.768097,472.961823  C257.461060,468.815582 260.609009,464.955963 261.226807,459.818237  C261.566620,456.992493 264.702057,457.076996 265.997864,455.127197  C267.909485,452.250824 268.721741,448.704773 271.713074,446.162445  z\"})),_path1890||(_path1890=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M250.364471,582.089661  C247.943008,581.126160 246.538391,580.312195 248.467545,577.716553  C250.356918,575.174500 250.731567,571.922058 250.956940,568.788086  C251.046585,567.541199 251.371353,565.940674 249.790329,565.312134  C245.099655,563.447632 246.646011,561.423706 249.732834,559.712341  C251.649948,558.649414 251.715973,557.474365 251.126236,555.685364  C250.403168,553.491821 251.470627,551.947693 252.446014,549.853943  C254.702484,545.010193 257.272949,544.785156 261.605896,546.979248  C263.073547,549.314392 262.511993,551.727783 262.276184,554.515503  C261.626068,557.326721 261.636414,559.812439 261.384583,562.271179  C261.069489,565.347412 252.900192,580.412781 250.364471,582.089661  z\"})),_path1891||(_path1891=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M282.941956,483.335388  C283.070312,481.878387 282.881256,480.635803 284.623901,480.041229  C286.511993,478.466614 285.859894,475.937714 287.747009,474.233673  C287.977905,473.979553 288.000000,474.000000 287.988892,473.989136  C289.233154,472.227661 290.342743,470.378052 292.155914,469.070526  C293.229065,468.296631 294.114227,467.063019 295.619934,467.765533  C297.251892,468.526978 297.263000,470.133331 297.233002,471.644409  C297.192352,473.692993 296.325256,475.512329 295.254822,477.668457  C294.493591,478.869995 293.988403,479.741241 293.245148,480.809601  C292.474579,481.541107 291.931671,482.065125 291.207489,482.807892  C288.709381,488.430573 286.410950,493.852814 284.061829,499.642883  C282.678284,501.164795 281.345490,502.318878 279.745056,503.704712  C277.892059,500.983765 281.354889,498.070587 279.102905,495.307129  C278.942780,494.526611 278.950317,494.089539 278.954468,493.324219  C279.167450,489.423157 281.594421,486.786407 282.941956,483.335388  z\"})),_path1892||(_path1892=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M237.989594,597.323853  C238.003036,595.611328 238.001892,594.222656 237.999161,592.417358  C238.305359,587.801880 240.944855,583.509705 237.250824,579.226807  C237.575027,577.531555 238.144562,576.070435 238.857056,574.302246  C241.752258,573.053955 242.670227,573.540710 243.213470,576.910461  C243.990402,581.729736 241.447266,586.648804 244.255371,591.479736  C244.961975,592.695374 242.793335,595.551086 242.133377,597.756775  C241.017242,601.487183 240.348282,604.949585 240.959305,608.769714  C241.749512,613.709961 238.487518,618.063354 238.779831,623.082275  C236.955276,619.418213 234.907166,615.978516 235.000580,611.409180  C237.021957,607.831665 234.716110,603.857422 236.964294,600.365356  C237.615448,599.335632 237.844910,598.512024 237.989594,597.323853  z\"})),_path1893||(_path1893=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M249.989761,582.428711  C250.508423,581.361938 251.081024,580.757568 251.540115,580.076782  C254.192856,576.142761 253.387512,570.784119 257.855377,567.308655  C261.230194,564.683411 259.593170,559.556213 260.722107,555.296631  C263.228790,552.510986 264.523712,554.671448 264.652466,556.270264  C265.029846,560.957275 265.385956,565.808777 261.391968,569.870850  C259.708923,576.752258 257.529572,583.286987 256.999756,590.570923  C253.972382,592.492920 252.364395,590.143433 250.244537,588.296143  C250.017136,586.273010 250.004196,584.564392 249.989761,582.428711  z\"})),_path1894||(_path1894=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M253.801117,598.687500  C253.918015,606.144226 250.105042,612.068054 247.562515,618.392944  C246.861465,620.136841 245.470779,619.916931 244.733017,618.239441  C244.284256,617.219116 243.862488,615.934631 244.085068,614.911560  C245.749908,607.259216 243.866043,599.006775 247.994110,591.393433  C252.790298,589.207886 254.161530,590.186462 253.648926,595.020325  C253.530731,596.134949 252.802673,597.246460 253.801117,598.687500  z\"})),_path1895||(_path1895=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M261.343536,570.167725  C263.456787,566.296021 263.478394,561.975525 263.787140,557.768005  C263.880463,556.496399 263.891235,554.582947 261.278748,554.901733  C261.174377,552.567871 260.522003,550.061707 261.820740,547.352417  C261.615356,545.220764 260.914246,543.461548 261.968140,541.345093  C262.198517,540.167969 262.755737,539.618713 263.718994,539.072998  C269.783386,541.087585 270.925629,543.636780 269.341339,549.034546  C267.630890,554.862244 266.460754,560.846863 264.958618,566.738525  C264.526062,568.435242 265.020325,571.232788 261.343536,570.167725  z\"})),_path1896||(_path1896=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M250.000549,641.046204  C250.261032,643.222412 249.208542,645.346741 250.997223,646.620850  C253.673370,648.526855 254.298416,649.464844 250.208710,649.487488  C248.963516,649.494324 249.505005,650.667542 249.661575,651.434448  C250.060379,653.387817 250.354630,655.339355 249.068695,658.109680  C246.975616,653.261536 246.986237,648.736877 247.284042,644.445312  C247.465607,641.829346 247.720703,639.644531 246.038147,637.484680  C244.692001,635.756653 244.489227,633.798706 245.850510,631.961792  C246.510971,631.070557 247.568893,630.881042 248.492096,631.610107  C250.111053,632.888611 251.404297,634.230957 250.361389,636.668335  C249.868042,637.821289 250.098175,639.283813 250.000549,641.046204  z\"})),_path1897||(_path1897=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M241.741913,665.153198  C243.747879,665.018677 244.419678,662.758179 246.626373,663.025940  C246.655090,665.083984 246.332855,667.144470 246.010025,669.602417  C246.086197,671.208557 245.633759,672.272949 245.042877,673.658875  C245.362198,676.692871 243.036255,678.650513 243.006195,681.612915  C240.029968,681.311646 241.433258,678.854187 240.959961,677.129944  C240.319336,674.796204 242.474945,672.414490 240.404755,670.062500  C239.709610,669.730164 239.478119,669.399841 239.406097,668.657959  C239.634750,667.516357 240.226074,666.911316 240.851288,665.970886  C241.173965,665.575745 241.319397,665.431213 241.741913,665.153198  z\"})),_path1898||(_path1898=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M254.216309,598.719482  C251.122925,599.068787 250.524155,597.727051 251.847488,595.369019  C253.876236,591.754028 252.323624,590.718811 248.408142,591.005371  C247.983307,589.794922 248.823074,589.146057 249.840942,588.235840  C252.519836,588.095703 254.099258,590.159302 256.638977,590.946655  C256.549133,593.613037 256.592072,596.402710 254.216309,598.719482  z\"})),_path1899||(_path1899=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M264.002838,538.604248  C263.903320,539.873718 263.640778,540.649292 262.324341,540.950073  C260.805206,539.589417 259.019440,543.866821 258.001221,540.295471  C258.568420,537.891663 259.139252,535.785706 259.860535,533.343750  C263.024292,533.459778 264.096405,535.396423 264.002838,538.604248  z\"})),_path1900||(_path1900=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M245.706573,650.843018  C243.859558,652.456482 243.262375,651.456299 243.075043,649.853394  C242.983139,649.067017 242.895523,647.821960 243.772339,647.759888  C245.535675,647.635071 245.513351,649.288147 245.706573,650.843018  z\"})),_path1901||(_path1901=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M247.854782,624.037537  C248.883926,626.268372 247.459671,625.933716 246.337708,625.795959  C245.583633,625.703369 245.117905,625.100281 245.282150,624.386475  C245.652756,622.776184 246.689514,623.513306 247.854782,624.037537  z\"})),_path1902||(_path1902=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M245.269928,673.848511  C243.432770,672.537170 244.906998,671.516541 245.761719,670.184204  C247.582077,671.441833 246.881180,672.606567 245.269928,673.848511  z\"})),_path1903||(_path1903=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M375.747803,264.089752  C377.500183,270.850159 377.590363,277.810028 377.547546,284.772461  C377.538605,286.230072 377.191650,287.685638 376.999603,289.572296  C370.494263,290.998749 370.183960,290.619446 371.576843,283.740540  C372.027405,281.515533 372.365540,279.703766 370.158813,277.573303  C367.697021,275.196625 369.490204,272.141846 371.715973,270.057526  C372.712036,269.124817 374.644989,269.235291 374.849823,267.285004  C373.758636,265.883575 372.865295,268.217285 371.437042,267.123810  C372.892242,266.177185 371.654175,262.329803 375.747803,264.089752  z\"})),_path1904||(_path1904=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M343.786011,313.881836  C344.109344,317.979309 339.658539,316.205322 338.287415,318.396637  C338.242065,318.469116 336.964844,317.119476 337.499725,316.514435  C338.827850,315.012177 338.486694,311.073303 342.656860,312.963745  C343.121094,313.309875 343.312897,313.563873 343.786011,313.881836  z\"})),_path1905||(_path1905=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M353.708923,242.345032  C355.067261,242.001495 356.133301,242.001175 357.599060,242.001953  C357.833252,242.856323 357.667725,243.709595 357.254517,244.781006  C356.200287,245.246811 355.393738,245.494476 354.294220,245.871368  C352.996185,245.039474 352.943848,243.910187 353.708923,242.345032  z\"})),_path1906||(_path1906=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M379.998199,254.250580  C383.911926,255.655334 380.569366,257.574982 380.578461,260.072632  C378.402435,258.286011 379.805450,256.941284 379.955261,255.345215  C379.996887,254.994507 379.997620,254.498566 379.998199,254.250580  z\"})),_path1907||(_path1907=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M370.826294,294.304260  C371.956360,295.252197 372.113434,296.100677 370.868591,296.642242  C370.542267,296.784210 369.806122,296.591949 369.605927,296.307983  C368.849670,295.235504 369.307251,294.536011 370.826294,294.304260  z\"})),_path1908||(_path1908=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M364.275574,305.346130  C363.814911,306.157532 363.225525,306.891418 362.754089,306.358002  C361.747772,305.219391 362.757721,304.022736 363.609772,303.681580  C364.769531,303.217255 364.653839,304.288177 364.275574,305.346130  z\"})),_path1909||(_path1909=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M353.210938,258.881500  C353.120392,258.689545 353.313110,258.435150 353.787598,258.116638  C353.880402,258.309601 353.688629,258.565094 353.210938,258.881500  z\"})),_path1910||(_path1910=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M295.336792,477.940552  C294.291962,474.883331 296.751678,471.937378 295.410950,468.235901  C293.018280,470.232819 290.835907,472.054291 288.315613,473.927002  C287.592041,471.843658 289.346741,470.505341 289.982056,468.378784  C291.280792,466.625641 291.934723,464.651947 294.263153,463.858826  C297.903870,462.877228 297.662842,460.514984 296.965942,457.623108  C296.853424,456.434784 296.790253,455.554413 297.126129,454.815735  C301.709015,444.736664 304.538635,434.045654 308.082092,423.604248  C308.349396,422.816559 308.899750,422.178741 309.736816,421.290894  C311.102081,419.866455 315.033386,420.650391 312.560547,416.976135  C312.119019,416.320160 312.881775,414.082367 313.733551,413.465363  C316.858795,411.201324 316.849213,408.123474 315.873810,405.189240  C314.615051,401.402374 315.710938,399.713470 319.495605,399.258514  C320.439209,399.145081 321.460052,398.842529 321.912537,397.367340  C320.504150,393.994843 319.837677,391.099640 323.617188,388.912537  C325.130554,389.423340 324.765259,391.733826 326.121826,391.279327  C327.618652,390.777832 327.783752,388.811829 327.846527,387.440918  C328.182373,380.107544 329.546661,372.998505 331.993561,366.090302  C332.798065,363.818939 333.670593,361.571686 334.964813,359.451233  C336.831177,367.477539 330.297424,374.291077 331.998810,382.604523  C331.182129,386.336639 331.124298,389.749420 328.684326,392.785034  C327.618530,394.111023 329.889679,397.472931 327.070374,399.244019  C325.930176,399.960297 323.745117,397.886536 323.243500,400.826874  C321.083893,404.644653 319.276459,408.304993 321.740356,412.743164  C321.273956,415.676605 319.284607,417.961426 319.466949,420.932953  C319.487091,421.260834 319.562164,421.873505 319.554291,421.874420  C311.734375,422.811035 315.903625,429.879425 314.786316,433.419128  C312.790894,439.740570 311.093689,446.627777 310.749939,453.750061  C308.409912,456.736694 307.946472,460.770020 306.142426,463.481476  C302.896240,468.360352 300.757721,474.286499 295.336792,477.940552  z\"})),_path1911||(_path1911=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M324.156006,388.644287  C320.796112,390.737030 323.544769,394.097260 321.998383,396.651306  C320.528412,397.159393 318.980896,397.690216 317.624146,397.381836  C311.862793,396.072357 311.552643,395.352936 312.941437,389.280426  C313.437836,387.110046 314.682251,384.840698 312.569672,382.791260  C312.460785,382.685669 312.334656,382.425201 312.384521,382.353394  C314.746429,378.949646 313.687073,374.271973 315.362885,371.277100  C318.601044,365.490112 320.864075,359.075592 325.351593,353.905151  C326.864532,352.161957 328.358551,351.048767 330.676758,350.146362  C329.814758,354.813843 329.340240,359.970856 327.221497,364.328400  C325.457336,367.956604 325.956268,372.159241 323.495483,375.431244  C323.199554,375.824707 323.234680,377.028351 323.531769,377.223267  C328.684601,380.603394 324.159943,384.609375 324.156006,388.644287  z\"})),_path1912||(_path1912=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M354.000610,242.000916  C354.000916,243.068146 354.000610,244.134445 354.000763,245.600677  C353.879333,246.308868 353.686554,246.563492 353.211487,246.881927  C352.476288,247.542435 351.929382,248.062134 351.197632,248.797028  C351.000000,248.999390 350.501221,249.001770 350.251831,249.002716  C349.316833,249.601929 348.538361,249.763748 347.334045,249.250092  C347.637482,247.234848 348.276184,245.469711 348.956848,243.352890  C349.108643,242.304398 349.507111,241.795197 350.348328,241.233200  C351.695679,240.712433 352.755981,240.270447 353.796204,241.740540  C353.998779,241.998779 354.000000,242.000000 354.000610,242.000916  z\"})),_path1913||(_path1913=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M341.286987,253.210297  C342.478394,252.022079 343.911560,251.070938 345.672119,250.061432  C346.993500,250.963089 347.037109,252.072891 346.259796,253.637482  C345.038696,255.809525 344.932617,258.530914 341.386841,257.991180  C341.680145,256.532349 342.492432,255.090836 341.286987,253.210297  z\"})),_path1914||(_path1914=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M346.387451,253.992371  C346.003143,252.936279 346.001404,251.869522 345.999603,250.402893  C346.119843,249.693451 346.311798,249.437637 346.787109,249.117828  C347.749664,249.000336 348.500580,249.000687 349.626953,249.002350  C350.008209,251.366394 350.175568,253.834061 346.387451,253.992371  z\"})),_path1915||(_path1915=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M353.733887,250.646362  C354.352173,249.717667 355.013397,248.907578 355.615082,249.963272  C356.264160,251.102051 355.621674,252.252151 354.392426,252.485580  C353.204590,252.711121 353.348724,251.722397 353.733887,250.646362  z\"})),_path1916||(_path1916=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M351.314575,248.948700  C351.097595,248.107178 351.371033,247.341919 352.685364,247.050262  C352.901154,247.890823 352.628754,248.656937 351.314575,248.948700  z\"})),_path1917||(_path1917=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M337.658936,503.062256  C337.944519,504.130402 338.119324,505.367645 336.348267,505.936798  C336.056122,504.866486 335.880310,503.629089 337.658936,503.062256  z\"})),_path1918||(_path1918=/*#__PURE__*/React.createElement(\"path\",{fill:\"#212022\",opacity:1,stroke:\"none\",d:\" M322.996582,519.683228  C322.836578,520.000000 322.669525,520.000000 322.251831,520.000000  C321.850250,519.166016 320.610962,518.075378 321.975342,517.589233  C322.855347,517.275635 322.895599,518.597229 322.996582,519.683228  z\"})),_path1919||(_path1919=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M291.321960,482.956207  C291.097229,482.110291 291.369659,481.343414 292.690735,481.054047  C292.911530,481.900391 292.631500,482.660706 291.321960,482.956207  z\"})),_path1920||(_path1920=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M385.013916,282.270752  C385.233124,282.026306 385.452911,282.020447 386.002441,282.009277  C389.310364,280.803528 389.660797,284.101379 391.236115,285.145050  C395.772980,288.150818 400.711029,286.483551 405.202576,286.489136  C410.017731,286.495148 415.235962,285.273285 420.050018,282.569427  C420.682281,281.987366 421.086212,281.699341 421.858032,281.268921  C425.085571,280.310822 427.925323,280.422150 431.010681,281.757965  C431.933105,283.931152 430.750580,284.921570 429.299011,285.470764  C423.561615,287.641449 417.947052,290.270813 411.316833,290.780792  C409.278717,290.986786 407.597015,291.025055 405.495483,291.083008  C404.462585,291.541382 403.934662,292.076477 403.187134,292.787659  C400.169159,293.479706 397.423126,295.138580 394.545563,292.763428  C393.180328,291.636566 391.743317,293.143860 390.508301,293.790466  C388.721313,294.725983 387.119232,294.901581 385.456787,293.639526  C383.637024,292.258087 384.068787,290.571411 384.570557,288.727509  C385.035217,287.019989 385.181671,285.225891 385.232300,283.227997  C384.996338,282.986084 385.014496,282.509338 385.013916,282.270752  z\"})),_path1921||(_path1921=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M385.605591,242.002014  C385.995209,243.388382 385.996552,244.778000 385.996521,246.584534  C384.131012,247.990952 382.684784,249.839615 379.301636,249.799271  C381.118347,246.659668 380.469147,242.624985 385.605591,242.002014  z\"})),_path1922||(_path1922=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M384.955505,233.551117  C384.283356,233.182144 384.275360,232.811081 384.755737,232.483414  C384.856293,232.414810 385.089355,232.417587 385.187286,232.489014  C385.655853,232.830811 385.638580,233.201569 384.955505,233.551117  z\"})),_path1923||(_path1923=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M321.987152,412.655640  C320.856842,412.912292 319.346802,413.038483 319.238739,411.594452  C318.952728,407.772308 318.590057,403.823792 322.649475,401.056458  C323.193268,401.549377 323.363556,402.096924 323.764771,402.824890  C324.454651,403.724609 324.023895,404.177399 323.262695,404.808441  C322.702454,406.111145 322.395355,407.212433 322.049927,408.656494  C322.005920,409.443909 322.001831,409.888550 321.999268,410.666779  C321.996277,411.441772 321.993774,411.883209 321.987152,412.655640  z\"})),_path1924||(_path1924=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M323.333984,405.000488  C323.264160,404.512634 323.518799,404.015442 323.884552,403.261780  C324.492981,403.312164 325.404541,403.608551 325.412659,403.927795  C325.440857,405.040558 324.399689,404.861877 323.333984,405.000488  z\"})),_path1925||(_path1925=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M322.209534,410.847839  C321.346863,410.559601 321.030701,410.037018 321.798157,409.150757  C322.657043,409.441895 322.964020,409.966156 322.209534,410.847839  z\"})),_path1926||(_path1926=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M383.669403,317.168335  C384.143829,319.097137 382.644501,321.168640 383.939270,323.636597  C384.859070,327.477753 384.500000,331.170441 386.290894,334.545532  C388.538025,338.780457 390.239624,339.413147 395.015289,336.582764  C399.018677,330.621826 403.623810,326.929932 411.146545,330.147888  C411.417969,334.022461 407.730927,334.263245 406.104126,336.338226  C405.906677,336.590118 405.572021,336.730774 405.359558,336.973694  C403.854065,338.695312 400.535614,339.251343 401.216064,342.326843  C401.569641,343.925049 407.554688,343.215698 410.344025,341.129272  C410.838135,340.782257 411.061310,340.678162 411.657379,340.554443  C413.287537,340.823730 414.338928,341.519531 415.684082,342.467590  C416.970154,343.896759 419.087738,344.553009 418.211792,346.660858  C417.536133,348.286835 415.846039,348.496918 414.378174,348.373535  C407.311005,347.779510 400.402069,351.480377 392.923798,349.182800  C389.264679,349.761932 386.506561,351.847534 383.177063,352.362305  C380.629822,352.756165 380.192596,355.109039 379.421356,357.141785  C378.108765,360.601501 378.328918,364.802734 374.356262,367.088043  C370.994904,363.721405 374.924866,361.234863 375.060425,358.276276  C375.240112,354.354095 376.281738,350.717499 378.628143,347.204681  C380.770935,343.996765 380.904297,339.810303 380.456329,335.760162  C379.752533,329.396820 379.147400,322.967743 383.669403,317.168335  z\"})),_path1927||(_path1927=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M374.001556,367.409912  C376.534912,363.984039 376.996826,360.183044 378.016937,356.585022  C378.938751,353.333588 379.311218,349.840759 384.512451,350.650024  C386.580688,350.971832 389.001892,349.024780 391.628632,348.070435  C392.832275,349.090088 392.475006,350.100647 391.604492,351.412903  C382.290100,357.143372 377.852570,364.897797 377.299835,375.662628  C376.905457,383.343384 375.181458,390.977875 375.302582,398.762299  C375.331635,400.630981 374.415802,402.261688 372.786011,403.868286  C372.210266,404.199066 371.953735,404.282806 371.333527,404.188782  C369.008911,400.962067 371.011658,397.882812 370.846344,394.419739  C373.329681,391.064850 371.220428,387.942902 371.133667,384.494232  C371.467438,383.616669 371.825714,383.157959 371.984741,382.290710  C372.028320,380.952271 372.046722,379.902008 372.080444,378.458130  C372.458038,377.611267 372.817810,377.156555 373.003418,376.291382  C373.356903,373.276337 373.676544,370.549408 374.001556,367.409912  z\"})),_path1928||(_path1928=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M372.789185,376.178040  C374.008026,376.877502 373.800385,377.515564 372.370117,378.014038  C372.244293,377.493988 372.392731,376.923431 372.789185,376.178040  z\"})),_path1929||(_path1929=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M371.768555,382.186096  C372.994080,382.841797 372.796234,383.482910 371.413177,384.032715  C371.273163,383.520050 371.400146,382.944824 371.768555,382.186096  z\"})),_path1930||(_path1930=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M385.031738,314.312836  C385.687805,314.088928 386.434906,314.182648 386.449036,314.972961  C386.454620,315.282349 385.886719,315.601959 385.293640,315.959625  C385.007599,315.551636 385.007874,315.100922 385.031738,314.312836  z\"})),_path1931||(_path1931=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M372.029541,422.405884  C372.030060,420.935669 372.022491,419.866394 372.023804,418.396179  C372.006317,417.196381 372.001801,416.397156 371.994873,415.298218  C371.657471,412.582794 371.322815,410.167114 370.914276,407.343567  C370.840363,406.935699 370.940796,406.476868 370.976929,406.244812  C371.423889,405.639618 371.902832,405.404999 372.856689,405.341248  C375.070160,406.009796 375.405731,407.715027 376.156677,409.586548  C376.531769,411.283295 376.557770,412.607849 376.516479,414.321442  C376.490173,416.228912 376.281921,417.767975 376.977051,419.615234  C377.287231,421.041992 377.273865,422.094666 377.016479,423.542480  C376.645782,424.716278 376.206818,425.392609 375.277161,426.193909  C371.976807,426.816437 372.097351,424.732269 372.029541,422.405884  z\"})),_path1932||(_path1932=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M368.579590,426.005310  C368.955688,426.448822 368.964203,426.890259 368.958435,427.662567  C367.819977,427.946625 366.602783,428.097900 366.064026,426.335876  C366.738129,426.001892 367.475037,426.002533 368.579590,426.005310  z\"})),_path1933||(_path1933=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M373.273254,405.678467  C372.630981,406.018585 372.168518,406.018829 371.359528,406.015930  C370.985748,405.567841 370.958466,405.122894 370.950562,404.344513  C371.159882,403.983978 371.349884,403.956879 371.824524,403.886261  C373.058319,403.890991 373.406769,404.479065 373.273254,405.678467  z\"})),_path1934||(_path1934=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M411.166626,291.126007  C411.207825,289.226868 412.520813,289.237122 413.860168,288.922180  C419.725555,287.542908 425.429718,285.654816 430.940918,282.616211  C431.618896,281.083069 432.740723,280.815704 434.326965,280.602173  C435.606445,280.606079 436.450897,280.675201 437.673889,281.009155  C440.866760,283.320374 443.996094,282.557739 447.001038,281.956573  C450.623810,281.231873 453.843689,282.299805 456.978119,283.775330  C459.443909,284.936096 460.426971,286.771088 458.390442,289.622742  C457.928680,290.093628 457.730194,290.265442 457.194641,290.632751  C452.311707,291.288330 448.033234,293.274231 443.308472,292.919403  C440.985840,292.744995 438.951782,294.252441 436.615845,295.561462  C435.584167,295.958618 434.866730,296.020966 433.796692,295.889099  C432.125366,295.269928 430.829834,294.232666 429.050476,295.638855  C428.088013,295.960724 427.421753,295.989349 426.422180,295.802002  C423.261780,293.539948 420.785797,294.850250 418.024475,296.664001  C416.992737,297.044098 416.262207,297.114044 415.136047,297.052002  C413.064911,296.292755 411.051422,296.756104 409.249756,295.247711  C407.597992,292.294373 411.983276,293.428314 411.166626,291.126007  z\"})),_path1935||(_path1935=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M388.712219,319.291504  C388.048553,312.726837 392.073425,308.459259 394.999390,303.389679  C395.140198,301.341583 396.558105,300.532867 397.658142,299.127808  C398.337982,298.569275 398.854675,298.285309 399.658447,297.931885  C401.082184,298.981415 401.902710,300.242828 401.710205,302.293701  C399.013367,306.468475 395.281464,309.492920 394.711700,314.686249  C394.315094,318.301910 395.290527,320.669830 398.173309,322.617584  C399.387787,323.438141 400.464996,324.536469 400.745728,326.517456  C399.745605,329.857971 397.373199,330.883331 394.589111,330.880798  C391.671722,330.878113 390.335327,328.680115 389.406464,326.286499  C388.582336,324.162842 387.446075,322.046021 388.712219,319.291504  z\"})),_path1936||(_path1936=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M401.125366,303.298981  C400.639954,301.539062 400.315186,300.081757 399.968018,298.243439  C399.945587,297.862427 400.324463,297.632599 400.526855,297.542358  C401.315094,297.357208 401.848969,297.085449 402.712952,296.893433  C403.390106,296.764252 403.778473,296.695709 404.454559,296.558228  C407.854736,295.703125 410.915619,296.687866 414.411530,296.898560  C415.381104,297.213379 415.870087,297.508392 416.532410,298.280457  C417.267487,299.732391 417.291107,300.852600 416.791870,302.368774  C416.288208,303.186310 415.868011,303.505280 414.976196,303.774353  C411.173157,302.583679 409.263214,306.824768 405.666443,306.190521  C405.087006,306.100677 404.859467,306.044464 404.307892,305.856018  C402.994629,305.130737 402.090027,304.430084 401.125366,303.298981  z\"})),_path1937||(_path1937=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M415.158386,297.541290  C411.721466,298.101166 408.606689,297.782715 405.153442,296.646973  C405.482819,294.938019 406.925476,295.055969 408.647827,294.966492  C410.811707,295.074097 412.620972,295.210999 414.731598,295.581543  C415.399017,296.229706 415.526581,296.707825 415.158386,297.541290  z\"})),_path1938||(_path1938=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M397.487549,298.881897  C398.308167,300.812439 397.326477,301.954559 395.364014,302.882568  C394.595123,303.032227 394.131561,303.020203 393.320557,302.995972  C392.984650,302.551697 392.996246,302.119690 393.014771,301.364075  C394.409332,300.350494 395.409821,298.909363 397.487549,298.881897  z\"})),_path1939||(_path1939=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M402.826050,296.657837  C402.452759,297.121674 401.903717,297.410553 401.041992,297.575775  C401.150177,296.694122 401.611206,296.015594 402.826050,296.657837  z\"})),_path1940||(_path1940=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M403.298523,292.945129  C403.096039,292.078400 403.392944,291.317932 404.752075,291.118042  C404.905029,291.961639 404.593781,292.706329 403.298523,292.945129  z\"})),_path1941||(_path1941=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A55135\",opacity:1,stroke:\"none\",d:\" M388.594391,319.042175  C388.637390,322.372375 390.283356,325.491852 391.944122,327.972382  C394.672485,332.047424 397.446320,328.886108 399.922485,326.387604  C401.255859,323.723999 403.706635,322.908691 406.015259,321.389221  C406.505310,321.155212 406.705261,321.074890 407.210205,320.902039  C408.512909,320.606537 409.541687,320.488464 410.620544,319.618103  C411.278381,319.307861 411.678192,319.187805 412.398895,319.040588  C413.577332,318.847443 414.362946,318.513489 415.388733,317.827301  C422.593079,315.453613 429.418793,312.888885 437.184326,313.879120  C438.027008,314.732422 438.327911,315.440704 438.335938,316.619446  C436.242645,319.061707 433.432434,318.788940 430.938202,319.511475  C426.252899,320.868683 421.353516,322.024170 418.941101,327.489807  C417.400391,330.979828 414.900909,332.005432 411.324707,331.167664  C404.699707,329.034912 399.984009,331.187897 396.324341,336.861603  C391.488434,337.956451 388.242645,336.263489 386.894104,331.988312  C386.156464,329.649841 385.478790,327.202728 386.735046,324.358826  C387.280609,322.351044 386.241974,320.357025 388.594391,319.042175  z\"})),_path1942||(_path1942=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M386.610168,323.999268  C387.820312,329.548889 387.526306,335.824310 395.660645,336.967834  C393.854919,340.693665 387.872711,341.467682 386.191376,338.019775  C384.168396,333.871307 381.598663,329.616638 383.715576,324.288666  C384.732178,323.992737 385.483612,323.995636 386.610168,323.999268  z\"})),_path1943||(_path1943=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M369.781860,460.152710  C370.649139,460.435120 370.952271,460.960358 370.207397,461.849030  C369.346191,461.564423 369.029419,461.043091 369.781860,460.152710  z\"})),_path1944||(_path1944=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M394.230499,545.724854  C393.239929,546.014954 392.501862,546.001648 391.395508,545.981140  C391.141998,544.519165 390.678558,543.334290 389.213928,542.255249  C389.012787,541.236938 389.013519,540.486084 389.022339,539.359619  C389.660767,538.440002 390.384399,538.158508 391.614929,538.304321  C392.744812,538.782043 393.286957,539.365845 393.907532,540.413025  C394.545319,542.292908 395.061890,543.810669 394.230499,545.724854  z\"})),_path1945||(_path1945=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M392.248749,538.652222  C391.258087,538.996765 390.514923,538.993469 389.401062,538.987122  C389.016998,538.549561 389.003632,538.114990 388.983459,537.354919  C388.684967,535.586182 388.393280,534.142944 388.067017,532.331482  C392.780670,531.781860 392.103882,535.419495 392.248749,538.652222  z\"})),_path1946||(_path1946=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M392.117676,539.250488  C391.334900,536.500183 390.591400,534.037354 388.369141,532.042419  C388.198914,529.240173 386.189972,527.422180 385.251068,525.159546  C381.569153,516.287109 379.494659,507.016815 377.812683,497.543457  C376.072906,487.744476 374.452911,477.978180 373.803741,468.047363  C373.255890,459.665802 372.638367,451.288239 371.971252,442.915283  C371.432465,436.152435 370.205231,429.413788 371.750244,422.306671  C373.525970,422.863495 372.417938,425.247406 374.638184,425.944000  C377.874542,430.698395 376.947266,436.087250 376.889954,440.997833  C376.786560,449.862518 378.245300,458.519043 378.897461,467.271210  C379.058563,469.432831 379.256897,471.569794 379.108643,473.733826  C378.287598,485.720825 381.509003,497.092926 384.410828,508.513092  C384.618073,509.328766 384.931854,510.090576 385.806885,510.971924  C386.507446,511.851501 386.785645,512.520020 386.957977,513.587769  C387.006439,514.774414 386.800873,515.625977 387.131805,516.763794  C387.730957,518.237671 388.432922,519.315979 389.056793,520.803223  C390.100586,524.617249 391.742249,527.872559 392.909180,531.627563  C393.234711,532.076599 393.361542,532.258240 393.650482,532.728516  C394.398468,534.411011 394.823120,535.891479 396.159515,537.269165  C396.477936,537.752563 396.585236,537.962646 396.782501,538.521362  C396.945435,539.628418 396.794891,540.336670 396.110779,541.238281  C395.083069,541.799133 394.347687,541.796570 393.329346,541.198364  C392.771729,540.465393 392.502960,539.983215 392.117676,539.250488  z\"})),_path1947||(_path1947=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M371.758301,415.193207  C372.983337,415.708130 373.176147,416.572723 372.265411,417.800781  C371.025543,417.289459 370.858673,416.419830 371.758301,415.193207  z\"})),_path1948||(_path1948=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M425.036560,624.344910  C426.792175,621.066406 426.702728,617.605347 425.430115,614.963928  C423.994293,611.983765 424.200226,609.209961 424.792328,606.507690  C426.643646,598.058838 424.788818,589.812439 423.829498,581.536621  C423.432343,578.110535 418.866211,577.181702 418.052002,573.352783  C420.916626,571.282654 422.109863,574.340759 424.383545,575.452759  C430.061279,580.580078 430.985596,587.454773 432.854950,593.902588  C432.947083,594.220337 433.051453,594.585938 432.965790,594.887390  C431.022552,601.726685 433.933777,608.821838 431.957031,615.616089  C430.161224,621.788208 433.994598,627.714722 432.456421,634.196045  C432.420044,635.296082 432.402435,636.025269 432.232727,637.092163  C431.564697,639.075439 431.904846,640.446350 433.522705,641.799316  C434.789429,644.450012 435.421814,646.995056 436.813751,649.621338  C437.083710,650.425110 437.183167,650.898071 437.264282,651.738831  C435.759094,656.028992 434.294434,656.474609 431.544586,653.819397  C430.079926,652.405090 429.340607,650.560669 428.561157,648.730225  C427.732483,646.784119 426.794250,644.892029 423.968750,644.357727  C424.150513,652.229980 429.202423,659.552551 425.212402,667.623535  C424.978271,668.176880 424.861145,668.389038 424.489960,668.864136  C422.763947,669.634583 421.936371,668.845154 421.146973,667.337219  C419.697540,664.569458 418.402252,662.133240 417.028687,659.357300  C416.198425,657.654907 416.530243,656.055908 416.006592,654.321411  C416.011719,653.553467 416.006714,653.109863 416.000854,652.333618  C416.047852,646.190125 418.061371,640.685913 418.649689,634.952209  C419.068726,630.868164 423.502350,630.930237 425.823364,628.297363  C425.701416,626.906494 425.390106,625.798157 425.036560,624.344910  z\"})),_path1949||(_path1949=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M425.645569,627.962891  C427.303192,629.879395 426.118500,632.035156 424.805267,631.891541  C418.901123,631.245850 419.329254,636.171814 419.324707,638.883057  C419.317078,643.442505 417.625519,647.345825 416.267517,651.752258  C410.884644,651.344360 408.463287,649.855042 411.138306,643.801880  C411.877533,642.129089 409.392853,637.099060 411.479370,635.258240  C415.452911,631.752563 413.539062,628.986206 411.553711,625.427673  C416.728546,624.354736 421.197327,624.927734 425.645569,627.962891  z\"})),_path1950||(_path1950=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M420.840942,667.351562  C421.805054,667.586853 422.617249,668.168030 423.697845,668.885742  C424.583954,670.455566 424.010773,671.927917 424.067871,673.692200  C424.333374,674.792175 424.639893,675.578308 424.982727,676.680176  C423.828674,676.608093 422.638275,676.220276 421.316650,675.789734  C421.178284,679.108032 422.866791,682.972168 418.035492,684.377502  C416.908600,684.705261 417.263214,685.952454 417.470215,686.958740  C418.031433,689.687073 418.493469,692.435913 418.993652,695.591125  C415.917206,693.110413 414.011810,684.126038 414.663391,680.423157  C415.527863,675.509949 420.394928,672.718994 420.840942,667.351562  z\"})),_path1951||(_path1951=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M415.698242,654.055908  C418.018219,655.022766 418.364716,656.509949 417.098206,658.711548  C414.743896,657.922363 413.603027,656.485840 415.698242,654.055908  z\"})),_path1952||(_path1952=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M424.281067,575.395264  C421.647858,576.074036 420.788696,573.458740 418.349243,573.042725  C414.456604,570.190430 413.093018,565.267639 408.361359,563.152710  C407.796936,562.498718 407.527222,562.002563 407.134247,561.252441  C406.064880,559.005188 404.300842,557.549011 403.204498,555.261719  C402.997070,555.005310 403.000000,555.000000 402.996765,555.001221  C402.627350,554.615540 402.459808,554.156006 402.625885,553.268066  C404.188416,551.736511 405.640289,552.423523 407.419189,553.024048  C407.941010,553.346252 408.132416,553.497925 408.550232,553.931152  C409.441406,555.414734 409.811707,556.785217 411.056732,558.042847  C411.430786,558.480774 411.571533,558.664490 411.893799,559.145264  C414.323761,563.521912 418.926849,565.399292 421.318298,569.390259  C422.395264,571.187500 424.314911,572.473572 424.281067,575.395264  z\"})),_path1953||(_path1953=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M403.054565,552.660034  C403.020264,553.431030 403.012695,553.879944 402.999329,554.665649  C400.122284,555.192749 400.150665,551.468201 397.365173,551.036987  C396.037659,549.554138 395.049316,548.119141 394.019470,546.356201  C393.660980,544.584839 393.344025,543.141479 393.033813,541.322815  C393.780029,540.967529 394.519531,540.987488 395.629517,541.006714  C399.005920,540.903992 398.963165,543.609741 400.094604,545.658386  C400.366241,547.548096 401.077911,548.844727 402.337341,550.229370  C402.847015,551.067505 403.042969,551.678833 403.054565,552.660034  z\"})),_path1954||(_path1954=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M403.001740,555.361572  C404.944611,556.300049 406.881378,557.602966 407.004700,560.641724  C405.054962,559.709351 403.123016,558.401917 403.001740,555.361572  z\"})),_path1955||(_path1955=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M423.023987,900.483154  C421.956543,900.983093 420.887268,901.074768 419.419922,901.228516  C418.450775,897.564575 420.433929,894.322388 421.019653,890.418396  C422.149353,889.206482 421.805389,887.348572 423.645508,886.911011  C426.092163,888.607056 428.743317,889.702393 424.792908,892.692505  C422.989716,894.057312 422.868011,897.403076 423.023987,900.483154  z\"})),_path1956||(_path1956=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M420.771362,856.131348  C424.387268,857.609680 424.229675,860.568359 423.877533,863.501709  C423.714203,864.862366 422.655823,864.714905 421.353729,864.149231  C417.606934,862.178955 417.373749,859.040405 420.771362,856.131348  z\"})),_path1957||(_path1957=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M412.540649,873.031494  C408.953888,870.372253 408.722717,867.427551 411.874146,865.209412  C412.970245,867.600769 415.731781,870.059814 412.540649,873.031494  z\"})),_path1958||(_path1958=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M423.966797,886.672302  C422.807404,887.657654 423.201508,889.548401 421.349548,889.963379  C420.830933,887.191223 420.628967,884.358704 420.672119,881.263794  C422.556152,881.765869 421.405701,884.221252 423.581207,884.927734  C423.925507,885.444092 423.943787,885.890564 423.966797,886.672302  z\"})),_path1959||(_path1959=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A8A9A6\",opacity:1,stroke:\"none\",d:\" M420.925476,868.013062  C423.252899,868.671326 423.693939,869.599670 421.320679,870.949158  C420.283813,870.089539 418.613220,869.293091 420.925476,868.013062  z\"})),_path1960||(_path1960=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M418.664215,903.242065  C418.951965,903.687012 418.952911,904.074402 418.924927,904.754272  C418.369659,904.870361 417.843353,904.694031 417.140747,904.294067  C417.435394,903.775208 417.906403,903.479858 418.664215,903.242065  z\"})),_path1961||(_path1961=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M410.970215,896.634888  C408.901093,896.593201 407.450623,897.274963 407.082672,899.830444  C405.485107,897.972839 406.218658,896.295959 406.007599,894.381042  C407.925507,894.435547 408.723694,892.867188 409.765167,891.751587  C411.527863,892.988403 410.815948,894.732666 410.970215,896.634888  z\"})),_path1962||(_path1962=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M409.119812,858.182007  C409.326508,858.080200 409.589844,858.278381 409.908478,858.777954  C409.704132,858.875854 409.441711,858.676819 409.119812,858.182007  z\"})),_path1963||(_path1963=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M409.859161,832.028442  C410.007263,834.334961 411.969116,835.567139 412.913025,837.687988  C410.744446,836.801208 409.988556,838.898132 408.441345,839.892212  C407.859985,837.439575 408.438263,835.051575 409.077698,832.345886  C409.165192,832.031250 409.627838,832.026672 409.859161,832.028442  z\"})),_path1964||(_path1964=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M410.373047,823.106323  C410.790771,823.838196 410.872589,824.534546 410.924866,825.580811  C409.401154,825.858154 408.392059,825.181763 408.027344,823.323608  C408.672180,823.017273 409.354675,823.044006 410.373047,823.106323  z\"})),_path1965||(_path1965=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M424.136230,819.535767  C424.110016,821.983032 424.046265,824.075012 423.946625,826.614624  C416.673004,825.695129 415.506226,824.359253 414.976898,816.429932  C417.701477,813.675232 420.429565,814.362610 423.502258,816.039734  C424.015381,816.192383 424.183838,816.327881 424.195374,816.747253  C424.058502,817.747498 424.078583,818.463928 424.136230,819.535767  z\"})),_path1966||(_path1966=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5B5C5E\",opacity:1,stroke:\"none\",d:\" M424.355377,816.990295  C424.038422,817.031067 423.943237,816.543701 423.895111,816.300293  C423.891571,814.982361 423.936188,813.907898 423.976807,812.431824  C425.662445,813.462952 430.018188,814.516479 424.355377,816.990295  z\"})),_path1967||(_path1967=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M424.739014,832.229553  C426.403290,833.098755 425.849976,834.706299 426.101746,836.482300  C423.896820,836.021606 423.633057,834.448303 424.739014,832.229553  z\"})),_path1968||(_path1968=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M428.070068,841.309814  C432.368134,841.011719 429.579742,843.029358 428.998840,844.737732  C427.898590,844.124939 427.978149,842.897156 428.070068,841.309814  z\"})),_path1969||(_path1969=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M448.407776,773.204407  C445.421631,771.729065 444.989258,769.134338 444.044312,766.450195  C444.795990,763.041870 445.035767,760.371033 443.100250,757.132507  C441.360840,754.222107 444.110168,750.504272 443.799652,746.852295  C443.517975,743.539612 444.726715,740.273132 440.542694,738.654663  C439.556732,738.273254 439.475464,737.273499 439.399475,736.173889  C439.006134,730.481323 438.427002,724.801514 437.912079,719.111084  C436.202545,719.201233 436.424042,721.446533 434.980072,721.415771  C431.910645,714.460266 428.808350,707.603516 431.010895,699.402344  C431.007751,698.665771 430.917084,698.303833 431.017761,698.006531  C431.505890,696.564758 429.625092,694.406006 431.876221,693.663330  C433.737823,693.049194 434.747467,694.853210 435.894104,696.475464  C433.795227,691.473022 431.224823,686.912537 432.775177,681.411255  C433.429291,679.090088 430.860840,677.666199 430.214355,675.276978  C429.840363,674.439453 429.652863,673.892273 429.225677,673.172546  C428.618988,672.568909 428.295410,672.107300 427.890991,671.209412  C427.491730,668.262268 428.101257,666.065857 430.744537,665.218140  C433.516296,664.329163 435.465485,665.880554 437.144012,667.912537  C438.421326,669.458862 438.679718,671.582214 440.363495,673.351929  C441.927734,678.159668 443.060760,682.629089 441.643738,687.342957  C440.938324,689.689514 442.454346,691.866211 442.485352,694.196533  C442.612671,703.776489 444.130280,713.252502 444.686829,722.802002  C445.002869,728.224854 447.777618,732.924744 449.272858,738.002563  C450.131012,740.916870 450.642853,743.786316 450.503082,746.819336  C450.148132,754.521729 452.385345,761.850891 453.836884,769.703613  C453.014771,772.566223 451.677826,774.199097 448.407776,773.204407  z\"})),_path1970||(_path1970=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M429.879211,675.305420  C432.989227,677.224548 436.427673,678.835938 433.717926,683.950378  C432.680725,685.908020 434.048340,689.354187 435.407135,691.944458  C436.749969,694.504333 438.299042,697.129944 437.555756,700.805725  C434.975891,698.986023 434.792511,695.641724 432.233154,694.288391  C431.189392,695.700317 432.636322,697.352783 431.251404,698.777466  C429.942139,694.113525 428.466888,689.384338 429.737793,684.147461  C430.373138,681.529419 427.882233,678.517273 429.879211,675.305420  z\"})),_path1971||(_path1971=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M428.684204,670.799255  C428.941071,671.513062 428.953522,671.937927 428.975983,672.681396  C427.576111,673.330505 426.166229,673.661011 424.391602,673.998779  C422.661133,672.623901 421.273041,671.243774 423.793793,669.273804  C423.966217,669.022217 424.004486,668.992737 424.022614,668.976807  C426.153839,667.641052 427.289673,669.096008 428.684204,670.799255  z\"})),_path1972||(_path1972=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M425.728790,677.012817  C425.706360,677.111328 425.440521,677.200500 425.086731,677.135742  C424.998749,676.981812 425.485413,677.003540 425.728790,677.012817  z\"})),_path1973||(_path1973=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M448.027283,773.217651  C450.133148,773.235535 451.587250,772.250977 452.881226,770.316406  C454.183655,768.486084 453.871735,766.975647 453.214752,765.319641  C451.445099,760.859070 452.252197,756.124939 451.990753,751.508118  C451.900818,749.919312 452.501465,748.526123 454.843323,748.500610  C456.720398,749.354675 457.411804,750.750183 458.106628,752.608459  C458.234863,758.132751 458.950134,762.989624 461.052795,767.898193  C462.812134,772.005249 462.678833,776.820557 457.349915,779.799927  C452.850677,780.102356 451.661377,775.807129 448.286865,774.128235  C447.990875,773.807251 447.998810,773.638672 448.027283,773.217651  z\"})),_path1974||(_path1974=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M226.727386,546.733032  C226.567093,549.329956 227.088318,552.180603 223.399796,553.000366  C222.968765,549.114563 218.318466,548.126587 217.369110,548.634521  C214.988907,549.908020 214.139206,553.186523 213.622284,556.016724  C213.436554,557.033630 214.306259,558.223816 213.232330,559.499756  C210.294144,557.166626 211.304153,554.464783 212.253021,551.717102  C213.931686,546.856079 216.959641,542.803833 219.953979,538.349976  C220.312958,537.529846 220.629120,537.059692 220.974167,536.295898  C221.219498,535.405884 221.658051,534.985107 222.358917,534.388123  C223.070419,533.794128 223.605896,533.466187 224.223282,532.732910  C224.614288,532.339783 224.779877,532.186584 225.223846,531.829712  C229.837646,530.680359 230.461136,531.566956 228.837891,536.955505  C226.123047,539.909973 222.970459,542.426147 226.727386,546.733032  z\"})),_path1975||(_path1975=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M208.665955,607.041016  C208.905075,607.887756 208.636169,608.652161 207.315308,608.947754  C207.093140,608.108826 207.365936,607.347961 208.665955,607.041016  z\"})),_path1976||(_path1976=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M184.151947,680.912842  C184.000763,680.841125 184.000305,680.672424 184.000397,680.250610  C184.101532,680.270325 184.202118,680.543091 184.151947,680.912842  z\"})),_path1977||(_path1977=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M223.200668,534.798950  C222.528137,535.312195 222.059082,535.629272 221.296539,535.974243  C220.040253,535.791443 218.531265,537.121094 218.165665,535.463623  C217.705017,533.375427 218.110428,531.318298 220.650421,530.070068  C223.328842,529.799011 223.951309,528.314697 224.010895,526.229126  C224.068878,524.198730 223.610718,523.127380 221.210220,523.510681  C220.127304,523.683533 220.005325,521.920471 220.507828,521.797119  C226.567368,520.309998 225.094116,514.536804 226.995148,510.714783  C227.063721,510.576935 227.235291,510.490295 227.682190,510.189270  C230.206360,508.661102 232.184219,509.578613 231.364624,511.789734  C229.407532,517.069519 230.812698,522.222107 230.781006,527.778503  C229.853149,530.639221 226.230026,529.832825 225.245941,532.744019  C225.001755,533.002441 225.000000,533.000000 225.000763,533.001221  C224.465942,533.532776 223.932541,534.065247 223.200668,534.798950  z\"})),_path1978||(_path1978=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M216.301331,534.734070  C215.261978,536.013977 214.467621,535.749573 213.947861,534.607239  C213.788467,534.256836 213.882309,533.418762 214.073807,533.342773  C215.167404,532.909241 215.969452,533.347229 216.301331,534.734070  z\"})),_path1979||(_path1979=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M183.647446,626.070984  C183.999359,627.712036 183.998734,629.424011 183.994781,631.566406  C178.735657,630.642883 181.168777,628.374146 183.647446,626.070984  z\"})),_path1980||(_path1980=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M183.998169,631.995850  C184.486145,632.286987 184.975937,632.582214 185.465729,632.877441  C185.295746,633.076172 185.125763,633.274902 184.955795,633.473633  C184.662720,633.162598 184.369644,632.851562 184.034027,632.268677  C183.991486,631.996765 184.000000,632.000000 183.998169,631.995850  z\"})),_path1981||(_path1981=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M216.957443,681.799683  C215.347290,681.680176 213.794342,680.302124 214.630096,679.865540  C218.477722,677.855957 217.801056,673.892639 219.177994,670.863220  C219.890350,669.295898 221.380188,668.466492 223.040939,666.870911  C216.719727,667.039368 218.013458,664.466064 220.288696,661.302063  C222.096786,661.813110 220.549118,664.594299 222.779922,664.497070  C223.625412,664.451294 223.725815,663.805786 223.499573,663.132507  C222.841492,661.174072 223.016586,659.294312 225.040222,658.530334  C226.329514,658.043457 227.449677,659.251465 228.183426,660.471252  C229.393448,662.483032 228.055695,663.572388 226.686584,664.589844  C225.131760,665.745117 224.126480,666.931641 224.495544,669.161133  C224.845657,671.276123 225.746307,674.252869 221.283051,672.764221  C219.629257,672.212646 220.034470,674.310730 220.271759,675.291504  C220.995010,678.281006 220.385452,680.548706 216.957443,681.799683  z\"})),_path1982||(_path1982=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M232.178284,706.744873  C233.576492,712.778503 227.123550,715.470886 226.730606,720.639465  C226.597534,722.389832 224.882889,721.470459 224.387741,720.315674  C223.882568,719.137390 223.789368,717.782532 223.257385,716.250000  C222.605881,715.616272 222.459213,715.158569 222.778931,714.310913  C225.306534,710.900085 225.685196,705.825073 231.592972,705.998291  C232.115768,706.163208 232.236160,706.328918 232.178284,706.744873  z\"})),_path1983||(_path1983=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M240.224487,667.822876  C240.036667,668.463684 240.040085,668.896179 240.055054,669.652466  C238.258499,670.715698 236.450409,671.455139 234.350830,672.313843  C233.627182,667.840637 235.965500,664.480591 238.578949,661.887756  C240.702911,659.780518 241.174637,662.877625 241.966949,664.659302  C242.018997,665.019714 242.007843,665.507019 242.000977,665.750610  C241.457031,666.523682 240.935242,667.067993 240.224487,667.822876  z\"})),_path1984||(_path1984=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M207.378326,680.991089  C207.003647,680.508179 206.991791,680.015747 207.013565,679.524719  C207.115097,677.235046 207.869629,675.340271 210.228760,674.520081  C211.274200,674.156616 212.026199,674.868713 211.773987,675.703064  C211.107513,677.908142 211.260834,680.891541 207.378326,680.991089  z\"})),_path1985||(_path1985=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M212.999695,714.000000  C217.335831,715.274597 217.335831,715.274597 214.283401,721.520813  C210.649963,719.831787 213.512680,716.948181 213.000061,714.384583  C213.000610,714.000000 213.000000,714.000000 212.999695,714.000000  z\"})),_path1986||(_path1986=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M218.000305,705.000000  C219.151627,704.633118 219.826569,703.140503 221.795853,703.593628  C220.764603,705.639465 220.407257,708.238892 217.902145,708.359863  C216.533127,708.425964 217.338028,706.615051 217.865173,705.307800  C217.999390,705.000000 218.000000,705.000000 218.000305,705.000000  z\"})),_path1987||(_path1987=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2C2221\",opacity:1,stroke:\"none\",d:\" M222.634918,714.001709  C222.998901,714.443420 222.999039,714.886780 222.999054,715.662659  C222.049438,716.270447 221.789978,718.290649 220.372528,717.175476  C219.841171,716.757446 219.371399,715.730164 219.499619,715.110107  C219.809219,713.612732 221.242645,714.157104 222.634918,714.001709  z\"})),_path1988||(_path1988=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M211.609161,659.579712  C209.535873,660.571716 209.119385,659.304443 209.154800,657.679382  C209.162491,657.326050 209.687607,656.662292 209.913910,656.687378  C211.446014,656.857239 210.936798,658.458801 211.609161,659.579712  z\"})),_path1989||(_path1989=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M211.508270,668.730957  C212.691132,668.294678 213.354095,668.763916 213.532700,669.642883  C213.687866,670.406616 213.077591,670.860413 212.355103,670.762573  C211.342621,670.625549 211.105362,669.883362 211.508270,668.730957  z\"})),_path1990||(_path1990=/*#__PURE__*/React.createElement(\"path\",{fill:\"#303034\",opacity:1,stroke:\"none\",d:\" M207.955139,662.552856  C207.282089,662.183167 207.273666,661.811096 207.755081,661.482605  C207.855835,661.413757 208.089386,661.416565 208.187622,661.488098  C208.657822,661.830811 208.639404,662.202271 207.955139,662.552856  z\"})),_path1991||(_path1991=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M232.151520,706.901245  C232.000000,706.995117 231.998825,706.496338 231.997101,706.246948  C232.097931,706.267456 232.200485,706.537415 232.151520,706.901245  z\"})),_path1992||(_path1992=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M237.754669,518.009094  C239.318283,521.215698 240.314774,518.940247 241.228119,517.772705  C243.960800,514.279602 244.856949,509.634125 248.250809,506.540161  C249.287933,505.594696 249.526428,503.813232 251.394897,503.532806  C249.991211,514.839844 246.606842,525.541260 243.146027,536.622314  C239.218979,538.496765 239.348526,542.648926 237.328278,545.347778  C236.666245,546.232117 236.451233,547.734436 234.931305,547.424255  C233.752625,547.183655 233.885406,545.852539 233.533340,544.983398  C232.741669,543.029053 232.774475,541.149170 234.112579,539.331116  C235.290421,537.730835 236.494720,536.083435 237.279907,534.279541  C238.051422,532.506897 240.767532,530.787781 239.507629,529.147156  C238.124420,527.345886 235.644211,529.250122 233.325302,529.852295  C231.714996,530.845520 230.970428,530.305298 230.496124,528.637817  C229.861191,526.032043 231.074417,523.983643 231.149719,521.452759  C232.747131,519.572998 233.804367,517.509216 236.667511,517.774719  C237.168182,517.997925 237.335754,518.000732 237.754669,518.009094  z\"})),_path1993||(_path1993=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M236.990570,579.362427  C240.319153,577.723816 241.930710,579.153015 240.797577,582.260742  C239.698700,585.274536 241.283081,588.914001 238.232513,591.705017  C237.213120,589.243225 237.578491,586.337952 234.513062,584.118103  C232.658005,582.774719 237.555527,582.099365 236.990570,579.362427  z\"})),_path1994||(_path1994=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M227.034607,546.592041  C224.365555,547.216187 223.256912,545.578796 223.129471,543.401367  C222.954315,540.408691 224.648666,538.427307 227.670486,537.130005  C228.461899,536.813538 228.855911,536.916382 229.082687,537.670105  C227.418396,540.520020 228.489426,543.652405 227.034607,546.592041  z\"})),_path1995||(_path1995=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M227.668640,552.587769  C228.051147,551.442200 228.179306,550.588989 228.570663,549.881409  C229.416351,548.352539 228.379257,544.957458 231.344879,545.632385  C233.695419,546.167358 231.687561,548.775574 231.891281,550.431335  C232.040771,551.646423 231.379059,552.973999 231.021622,554.235291  C230.645889,555.561035 229.724014,556.161682 228.391174,555.765564  C226.787369,555.288818 227.159210,554.089905 227.668640,552.587769  z\"})),_path1996||(_path1996=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M229.254669,538.003418  C228.883301,537.694275 228.686203,537.433533 228.202179,537.104126  C227.906418,535.295410 230.000961,533.571472 228.121109,531.982727  C227.144104,531.156982 226.586365,532.919922 225.305634,532.957642  C225.104950,530.091553 227.060486,529.042358 229.761658,528.249207  C230.165298,527.821716 230.330887,527.648376 230.745789,527.734131  C231.097183,528.881653 231.363800,529.651855 232.675659,529.948608  C232.654541,531.737976 232.319489,533.475891 231.968048,535.596375  C231.452835,536.537292 230.923080,537.065735 230.192078,537.789917  C229.992691,537.987366 229.500656,537.997559 229.254669,538.003418  z\"})),_path1997||(_path1997=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M229.257568,578.813477  C230.874512,577.235413 230.832855,578.439575 230.994232,579.457825  C231.491730,582.596680 228.787399,584.450012 227.868347,587.103394  C226.331818,584.125427 229.423431,581.872803 229.257568,578.813477  z\"})),_path1998||(_path1998=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M237.753937,597.217590  C239.432098,598.180420 238.478104,598.954956 237.274353,599.868713  C237.174606,599.148682 237.339157,598.291931 237.753937,597.217590  z\"})),_path1999||(_path1999=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M230.308380,537.939514  C230.093842,537.110657 230.358185,536.349792 231.643814,536.037170  C231.898544,536.886780 231.631760,537.646362 230.308380,537.939514  z\"})),_path2000||(_path2000=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M193.997314,745.557861  C192.302032,745.829407 189.082993,746.157837 189.657440,744.315491  C190.655533,741.114502 188.250610,735.756348 194.638885,734.999512  C193.838699,738.280945 193.942963,741.699524 193.997314,745.557861  z\"})),_path2001||(_path2001=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M199.636688,666.043335  C199.757797,667.617798 199.377319,669.150146 197.328827,669.941101  C196.967300,668.231934 197.183777,666.609192 199.636688,666.043335  z\"})),_path2002||(_path2002=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M450.378662,915.025269  C449.994019,914.573914 449.995941,914.123352 450.000122,913.337891  C449.234467,912.325439 446.025299,914.689636 447.678986,910.857422  C449.182922,907.372314 446.324036,904.171082 446.053558,900.330017  C448.028809,899.617981 450.356934,901.007996 452.014221,898.315063  C458.413879,898.244629 459.636902,900.366943 456.228455,905.742554  C455.867615,906.199829 455.734039,906.362427 455.797180,906.771973  C457.228058,908.734985 456.046448,911.200989 458.067719,912.826294  C459.409973,913.905701 458.180176,914.559265 457.003540,915.196228  C454.806702,916.385559 452.831818,915.235596 450.378662,915.025269  z\"})),_path2003||(_path2003=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M458.713379,884.726196  C459.275574,885.442322 459.605927,885.907349 459.966919,886.667969  C456.981903,886.612854 453.966278,886.262146 450.521423,885.890381  C449.460999,885.459167 448.940948,884.918701 448.169769,884.240845  C447.951355,884.065125 447.951721,884.048706 447.947449,884.051025  C441.380127,879.714417 443.550232,872.895874 443.070740,866.448608  C443.454376,865.677002 443.881256,865.375427 444.756622,865.084839  C445.676605,865.014954 446.185760,865.121338 446.989197,865.557251  C447.970062,866.615662 448.140503,867.595703 448.127686,868.976685  C448.123993,870.468750 446.988403,871.887634 449.219299,872.650513  C449.979004,872.879395 450.393463,873.071838 451.066895,873.521362  C451.477783,873.934265 451.612946,874.126648 451.881775,874.644653  C452.217926,876.548767 452.487579,878.152039 450.075012,879.186218  C454.175171,879.370422 456.978882,880.990906 458.713379,884.726196  z\"})),_path2004||(_path2004=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M448.017151,884.378906  C448.850922,884.072998 449.590424,884.343750 450.011475,885.569702  C449.146027,885.949158 448.401489,885.684753 448.017151,884.378906  z\"})),_path2005||(_path2005=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M442.290283,883.014160  C442.110565,882.453125 441.855286,881.659912 442.810577,881.701721  C442.997467,881.709961 443.156219,882.360840 443.152710,882.857178  C442.977448,882.999023 442.519348,883.008850 442.290283,883.014160  z\"})),_path2006||(_path2006=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M455.995728,906.773499  C455.892426,906.749207 455.790985,906.479431 455.845398,906.123413  C456.001221,906.037170 455.997589,906.528076 455.995728,906.773499  z\"})),_path2007||(_path2007=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76706E\",opacity:1,stroke:\"none\",d:\" M465.525696,894.548462  C465.474243,894.578186 465.577179,894.518677 465.525696,894.548462  z\"})),_path2008||(_path2008=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M474.984924,917.011169  C474.660767,916.903076 474.405823,916.710327 474.109619,916.213623  C474.321136,916.103027 474.576477,916.293945 474.898499,916.765808  C475.018768,916.974976 474.998016,917.000793 474.984924,917.011169  z\"})),_path2009||(_path2009=/*#__PURE__*/React.createElement(\"path\",{fill:\"#979796\",opacity:1,stroke:\"none\",d:\" M473.990784,916.006958  C473.875946,915.882507 473.769501,915.751343 473.663086,915.620117  C473.741821,915.661377 473.820557,915.702637 473.955750,915.863831  C474.012177,915.983826 473.999207,916.000244 473.990784,916.006958  z\"})),_path2010||(_path2010=/*#__PURE__*/React.createElement(\"path\",{fill:\"#989392\",opacity:1,stroke:\"none\",d:\" M478.001282,914.998779  C477.893555,914.874817 477.784546,914.752075 477.675507,914.629333  C477.748749,914.673523 477.821991,914.717651 477.946564,914.882080  C477.997894,915.002441 478.000000,915.000000 478.001282,914.998779  z\"})),_path2011||(_path2011=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M419.062805,905.280457  C419.296539,905.154663 419.528564,905.334167 419.708313,905.846619  C419.495758,905.918884 419.297424,905.720947 419.062805,905.280457  z\"})),_path2012||(_path2012=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M420.035919,907.717346  C419.751678,907.884644 419.340729,907.842896 419.133820,907.833313  C419.022034,907.609558 419.143860,907.411804 419.422668,907.124634  C419.552979,907.018799 419.764221,907.013062 419.869202,907.000732  C420.089478,907.175598 420.204834,907.362793 420.035919,907.717346  z\"})),_path2013||(_path2013=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M428.004578,886.004150  C426.170074,882.517822 422.421478,880.140137 422.849335,875.285889  C423.099701,872.445068 424.929749,871.247131 426.628967,870.797913  C428.757324,870.235229 428.563293,872.812683 429.063232,874.268860  C430.412231,878.197876 429.867035,882.046631 428.324097,885.935425  C427.991516,885.992188 428.000061,886.000000 428.004578,886.004150  z\"})),_path2014||(_path2014=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C494D\",opacity:1,stroke:\"none\",d:\" M431.419556,846.935059  C431.164215,843.049072 434.544128,842.103027 436.775970,842.730225  C440.792938,843.859192 444.457672,846.082581 448.921173,845.373840  C449.757324,845.241028 449.890228,846.505188 449.983002,847.697266  C445.925903,848.984802 441.864136,849.121887 437.394806,847.952759  C436.084808,848.013550 435.206207,848.017395 434.156006,847.287292  C433.181366,847.049255 432.476227,847.004028 431.419556,846.935059  z\"})),_path2015||(_path2015=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M452.794434,853.257080  C456.349518,852.375793 459.650848,852.154785 462.793396,854.660034  C463.331970,855.298950 463.524445,855.706421 463.500916,856.528076  C463.285187,857.062744 463.145294,857.252808 462.713013,857.643921  C460.897583,858.442871 459.240051,858.727417 457.564362,859.927795  C454.874146,860.675659 452.523712,860.723511 449.782410,860.024902  C448.907288,859.609375 448.514343,859.235352 448.110809,858.358765  C448.176666,855.075867 450.981964,854.916260 452.794434,853.257080  z\"})),_path2016||(_path2016=/*#__PURE__*/React.createElement(\"path\",{fill:\"#565354\",opacity:1,stroke:\"none\",d:\" M433.964722,847.387207  C434.763702,847.215515 435.640900,847.336609 436.746887,847.699585  C437.021973,849.571655 436.917999,851.132507 438.231171,852.539429  C440.871399,855.367920 438.929718,857.865479 437.349457,860.333862  C436.654541,861.419312 435.807709,861.500916 434.908813,860.712891  C434.108063,860.010864 434.324219,859.150513 435.097473,858.648132  C437.619110,857.009644 436.935028,855.677002 434.923950,854.177795  C432.497742,852.369385 436.772308,849.529114 433.964722,847.387207  z\"})),_path2017||(_path2017=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M447.641296,857.961548  C448.277405,858.176331 448.552765,858.392944 448.955139,858.842285  C449.530853,860.541565 448.462158,861.535461 447.783752,862.982056  C447.007080,864.159241 446.121460,864.792725 445.165466,865.799927  C444.522980,866.024902 444.111725,866.030151 443.393860,866.049194  C443.371246,864.280579 444.293518,862.302368 443.818207,860.752869  C442.453613,856.304626 445.202393,857.710083 447.641296,857.961548  z\"})),_path2018||(_path2018=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M431.153595,922.894775  C431.463684,919.262451 432.083069,915.505798 432.842590,911.377319  C435.125946,912.743530 438.935577,914.031860 434.730286,917.482605  C437.291565,921.500854 433.267334,921.449768 431.153595,922.894775  z\"})),_path2019||(_path2019=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M431.964539,910.658447  C431.498138,910.999878 431.040222,910.994812 430.238525,910.989868  C428.979706,911.226135 428.292969,910.844666 428.007141,910.024658  C427.584045,908.810974 428.474884,908.354919 429.776245,907.923157  C430.586182,908.126648 431.029572,908.406372 431.705078,908.804260  C431.949097,909.385681 431.961060,909.848816 431.964539,910.658447  z\"})),_path2020||(_path2020=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M441.336823,902.936279  C440.077820,901.351807 440.596771,900.397400 442.715942,900.052368  C442.946014,901.161438 443.097595,902.391785 441.336823,902.936279  z\"})),_path2021||(_path2021=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M419.828186,908.301880  C419.751678,907.884644 419.889160,907.443115 419.931641,907.215759  C420.660614,906.921936 421.347107,906.855530 422.377991,906.760559  C424.903748,908.740234 425.321320,911.748596 426.891052,914.461670  C426.759918,916.393738 428.584778,917.765259 427.354095,919.489807  C425.219604,919.824097 424.610840,917.280029 422.447052,917.017090  C421.721466,916.928589 421.413269,916.753540 421.146851,916.164734  C420.231201,913.578552 419.790283,911.195557 419.828186,908.301880  z\"})),_path2022||(_path2022=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D2CFCB\",opacity:1,stroke:\"none\",d:\" M427.127625,914.821655  C424.316162,913.095398 422.236450,911.098572 422.812500,907.161621  C425.348633,903.429626 427.198700,908.330322 429.872437,907.614929  C429.922607,908.818115 427.490875,909.244324 429.661469,910.868530  C429.906769,911.433411 429.918762,911.876831 429.932770,912.652832  C429.653473,913.682495 429.039612,914.033875 428.157349,914.603027  C427.863495,914.794312 427.373077,914.818665 427.127625,914.821655  z\"})),_path2023||(_path2023=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M420.780609,915.974609  C421.405121,916.051392 421.649567,916.270508 421.975922,916.755676  C420.877563,918.532837 421.045288,920.372437 421.064331,922.576904  C418.688812,922.959045 417.662384,921.062317 416.143524,919.354736  C417.473053,918.066406 418.961639,917.063965 420.780609,915.974609  z\"})),_path2024||(_path2024=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D7C7D\",opacity:1,stroke:\"none\",d:\" M421.000061,923.165405  C421.304749,923.162476 421.573395,923.355713 421.956421,923.776245  C421.873566,923.974304 421.676361,923.945007 421.189514,923.835449  C420.899872,923.755188 420.964020,923.361572 421.000061,923.165405  z\"})),_path2025||(_path2025=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BDBBB4\",opacity:1,stroke:\"none\",d:\" M428.195526,914.849426  C428.089203,913.994080 428.449402,913.309814 429.637146,913.033875  C431.484924,915.105591 429.703003,914.782715 428.195526,914.849426  z\"})),_path2026||(_path2026=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M277.263977,390.113464  C275.148621,389.678162 275.358429,392.360992 273.685150,392.368256  C272.591187,390.974915 272.624573,389.231720 273.253784,388.088593  C276.665863,381.890015 274.508728,375.874817 273.020203,369.407684  C274.274506,366.032227 275.045959,363.495270 271.839905,360.740875  C270.053284,359.205963 271.324127,356.441376 273.667633,354.894470  C275.517609,357.833466 277.136597,358.313141 278.039581,354.765442  C279.104095,350.583069 279.414459,346.198822 280.601440,342.059723  C282.781128,334.458923 282.630005,325.890991 289.625916,320.011841  C290.046906,321.991394 289.972565,323.948364 289.257996,325.867737  C288.929016,326.751373 288.706940,328.033203 289.917023,328.417816  C291.116608,328.799103 292.254181,328.201660 292.573120,326.886475  C293.459045,323.233643 296.582672,321.081024 298.876404,318.680573  C300.478851,317.003571 302.108551,315.579254 302.634705,313.377747  C304.442261,305.814423 311.374756,302.080994 315.645111,296.058411  C316.065033,298.817627 316.384735,301.701355 313.827576,303.807343  C313.587128,304.005371 313.283295,304.415710 313.340637,304.644257  C315.218262,312.125824 310.002808,317.712372 307.716614,323.919159  C305.355438,330.329529 303.292450,337.010315 299.512634,342.922882  C297.680359,345.789001 296.679413,349.186646 295.151672,352.671204  C294.421997,355.269958 293.255554,357.279724 292.089783,359.665710  C290.274811,362.903046 288.723389,365.877502 288.067139,369.617371  C289.170471,372.760590 287.622192,375.029053 286.515778,377.305664  C285.787842,378.803406 284.679321,380.105255 286.796997,381.735291  C286.711945,382.771667 286.392517,383.564301 286.039703,384.676941  C285.424591,387.525360 282.609314,386.925262 281.131927,388.693970  C280.944824,390.138824 281.116516,391.378052 279.337341,391.935425  C278.401550,391.498505 278.105194,390.746796 277.263977,390.113464  z\"})),_path2027||(_path2027=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M274.001526,354.660156  C272.311371,357.494659 269.610107,360.190552 275.332947,361.121002  C276.893066,361.374634 277.167603,362.598053 276.506073,363.755615  C275.542511,365.441711 275.600677,367.696960 273.356476,368.933228  C272.536133,368.691132 272.061310,368.373383 271.290222,368.028076  C270.208832,367.687622 269.423706,367.374695 268.321777,367.032104  C269.691071,364.408051 267.659973,361.372467 268.994873,358.365967  C272.387665,357.232910 270.350006,353.795837 271.923401,352.061798  C273.003418,350.871490 273.666412,349.685028 273.996307,352.687012  C274.000397,353.444519 274.000763,353.886566 274.001526,354.660156  z\"})),_path2028||(_path2028=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M293.595764,313.993286  C293.870544,315.654541 294.541016,317.767395 291.378479,317.985291  C291.134857,316.335602 290.480072,314.230011 293.595764,313.993286  z\"})),_path2029||(_path2029=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M267.637390,327.053650  C268.000519,327.169067 268.002228,327.338135 268.009918,327.760925  C268.004333,329.394501 267.992798,330.774384 267.976685,332.568542  C267.598175,333.370361 267.145081,333.523163 266.305786,333.221863  C264.483887,330.616943 264.234741,328.505707 267.637390,327.053650  z\"})),_path2030||(_path2030=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M265.999207,333.334534  C266.437561,332.998932 266.876373,332.995453 267.643646,332.987427  C267.902100,333.885040 267.634491,334.648499 266.315063,334.945007  C265.999878,334.552338 265.999756,334.109497 265.999207,333.334534  z\"})),_path2031||(_path2031=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M252.013443,356.757843  C252.017136,357.449829 252.011078,357.892365 252.001907,358.666809  C251.248795,358.999329 250.498825,358.999908 249.373779,359.000854  C249.098587,357.493439 249.749161,356.424622 251.655975,356.049194  C251.992065,356.009125 252.003708,356.508362 252.013443,356.757843  z\"})),_path2032||(_path2032=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M295.212128,464.747162  C292.874451,465.001282 292.656647,467.729370 290.366516,467.974609  C289.842194,467.586029 289.650208,467.145721 289.458191,466.705414  C287.550018,469.302856 283.280457,468.245087 281.878906,471.588562  C281.591553,472.274109 281.193542,472.778778 280.480896,472.728241  C279.322388,472.646057 279.615051,471.761230 279.482208,470.935730  C278.611603,465.526794 279.133484,460.443848 282.637604,455.994995  C283.613525,454.755951 284.014282,453.427643 284.024109,451.870850  C284.041168,449.158997 285.294739,447.136658 287.804535,446.051514  C290.858551,444.731079 291.770203,441.875244 291.417847,439.247314  C290.660461,433.598572 293.024841,429.036621 295.691437,424.182373  C297.115631,424.031494 298.243042,424.359009 299.629883,423.695862  C301.948212,421.759277 302.519043,419.216370 302.808929,416.824646  C303.327209,412.547943 305.801605,409.145630 307.291382,405.315521  C307.819580,403.957550 308.497467,402.166748 310.372559,402.745850  C312.316437,403.346191 311.649963,405.122589 311.316986,406.564972  C311.162292,407.235107 311.152863,407.869537 311.759064,408.731201  C312.178528,410.790894 311.095062,411.999603 310.231506,413.440125  C308.903473,415.655487 306.605011,418.016937 309.647156,420.921387  C307.115540,431.207336 304.867767,441.627808 300.140533,451.219604  C299.182281,453.163940 298.344177,455.082642 298.000732,457.601013  C297.547760,460.311432 296.897888,462.557159 295.212128,464.747162  z\"})),_path2033||(_path2033=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M302.331238,403.151978  C300.461792,401.547516 298.826599,400.110687 297.168549,402.752380  C292.951538,409.470978 290.538269,417.059692 287.486542,424.295868  C286.539398,426.541718 288.276337,429.928528 285.496368,432.295288  C284.294006,433.318939 283.499359,434.204926 282.389709,432.566010  C279.457275,428.234894 278.765045,431.214691 278.069733,433.883789  C277.786438,434.971252 278.118103,436.276550 276.368103,436.918854  C276.225464,432.693787 277.018494,428.545288 279.234558,424.757812  C281.855682,420.278015 282.851746,415.555878 281.316589,410.452789  C280.929871,409.167267 280.801483,407.836700 281.756348,406.298645  C283.311340,404.290131 284.216888,402.310516 285.720703,400.335510  C286.477509,399.441589 287.139282,398.921234 288.420532,398.224335  C290.735840,398.009308 292.894287,397.747803 292.749908,395.728333  C292.346863,390.089935 297.467621,385.892792 296.440033,380.125061  C296.151276,378.504181 297.794250,378.095490 299.221222,378.081421  C302.251373,378.051575 303.618622,382.399048 307.265961,381.136353  C307.673767,380.995178 308.110168,382.871674 307.463135,383.725739  C305.555267,386.244171 305.986969,389.397675 305.004517,392.556641  C304.581055,393.473022 303.847321,393.915680 304.789368,394.854523  C305.311798,395.124573 305.567047,395.317596 305.887421,395.792816  C307.303253,397.407440 306.781067,399.027649 306.417908,400.939087  C305.346252,402.431885 304.185730,403.194550 302.331238,403.151978  z\"})),_path2034||(_path2034=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M305.755249,401.260376  C304.966370,399.566803 305.377319,398.115356 305.969971,396.333038  C312.538086,398.972565 313.918640,401.735931 312.050110,408.600616  C306.714325,408.772430 312.070343,405.014069 309.490021,403.133057  C308.846619,407.664429 305.544098,410.658569 304.803680,415.129578  C304.238922,418.539764 303.833466,422.374878 300.353394,424.930054  C299.667267,424.696716 299.431793,424.332336 299.277832,423.566620  C299.257294,422.583069 299.445038,421.951965 299.513641,420.982117  C299.810486,418.596161 297.799622,416.521759 299.770355,414.231506  C300.002258,413.558136 300.009399,413.117218 300.022949,412.345581  C303.248901,409.244324 303.383789,404.860260 305.755249,401.260376  z\"})),_path2035||(_path2035=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M287.217285,399.810242  C286.054199,402.325317 285.190643,404.713501 282.360168,405.962708  C281.945892,402.826691 283.117706,399.915100 283.978516,396.905823  C284.820251,393.963287 285.387451,390.840912 281.384766,389.019287  C280.723541,386.739685 280.723541,386.739685 285.679749,385.140198  C287.535645,387.381989 288.959076,385.285919 290.556488,384.713684  C292.211975,389.244446 288.360352,392.940125 288.994263,397.574615  C288.992676,397.991455 288.999542,397.999359 288.995789,397.996277  C288.458069,398.523651 287.935760,399.065521 287.217285,399.810242  z\"})),_path2036||(_path2036=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M311.018188,369.014404  C310.138794,371.260284 309.354553,373.447327 307.806732,369.771820  C307.282959,368.528107 306.900726,367.323639 307.536926,365.960358  C309.618408,361.499969 311.543732,356.963257 313.752197,352.567993  C314.355530,351.367188 314.476990,348.642578 316.894287,349.865387  C318.575958,350.716064 318.536285,353.160339 317.750061,354.356934  C314.813293,358.826721 314.927277,364.676147 311.018188,369.014404  z\"})),_path2037||(_path2037=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M287.248230,381.701447  C285.515320,381.711578 283.427795,382.874695 282.618286,380.965759  C282.048645,379.622284 283.801575,378.803131 284.639709,377.860748  C286.483337,375.787811 286.478668,372.958801 287.870514,370.318451  C290.035492,370.079590 291.319519,375.176910 294.085754,370.808899  C294.498901,370.156555 295.882324,371.189148 295.703705,371.952057  C295.084351,374.597778 294.207367,377.186615 293.334320,379.765228  C293.222900,380.094330 292.562805,380.409271 292.144165,380.426819  C291.284393,380.462830 291.073303,379.712494 291.107574,379.054657  C291.165131,377.949921 291.372742,376.853027 291.563141,375.403137  C287.638885,376.002289 290.203247,380.509338 287.248230,381.701447  z\"})),_path2038||(_path2038=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M292.345703,359.953186  C289.840881,356.706543 293.282776,355.431519 294.703796,353.159607  C296.582001,356.086029 295.763092,358.371735 292.345703,359.953186  z\"})),_path2039||(_path2039=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M305.002625,394.661285  C304.326111,395.129120 303.858215,396.655457 303.236572,395.742432  C302.592499,394.796478 303.029572,393.575592 304.679657,393.021606  C304.996338,393.409241 304.999329,393.864685 305.002625,394.661285  z\"})),_path2040||(_path2040=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M318.575317,358.351471  C318.369781,357.616119 318.626251,357.348572 319.197815,357.463074  C319.316406,357.486847 319.475586,357.655273 319.493469,357.775299  C319.579376,358.352112 319.299072,358.594025 318.575317,358.351471  z\"})),_path2041||(_path2041=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M299.317139,296.040405  C299.199738,293.321136 301.319794,292.778839 303.651978,292.042847  C303.398224,294.269348 305.751862,299.676819 299.317139,296.040405  z\"})),_path2042||(_path2042=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M357.863770,229.793289  C357.950745,231.966187 357.740234,233.853577 355.345520,234.934631  C355.030640,231.197418 354.285736,227.337967 356.217316,223.702911  C357.151794,221.944275 357.731049,219.976425 360.620544,220.006897  C360.998383,220.748322 360.999176,221.498901 361.000000,222.624741  C361.665039,225.372589 360.132233,226.719940 358.385132,228.248993  C357.850800,228.641434 357.531616,228.799042 357.241272,229.075928  C357.319733,229.309052 357.729950,229.585358 357.863770,229.793289  z\"})),_path2043||(_path2043=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M354.049408,241.621094  C353.186188,241.660843 352.381317,241.223709 351.249786,241.901550  C350.607635,241.621964 350.459869,241.164658 350.781311,240.318420  C352.117798,238.711578 353.231934,237.413910 354.672424,236.057816  C355.169403,237.827988 354.732330,239.552429 354.049408,241.621094  z\"})),_path2044||(_path2044=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M350.684875,240.043091  C351.003082,240.451447 351.002502,240.893677 351.002167,241.667633  C350.505829,242.258423 350.009216,242.517456 349.255676,242.888855  C347.379181,241.056107 349.001953,240.626999 350.684875,240.043091  z\"})),_path2045||(_path2045=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M490.913300,127.336494  C490.358521,124.122391 489.373322,123.729523 485.589111,124.232254  C484.268158,124.407745 480.696716,127.674332 482.274445,122.202286  C482.785858,120.428551 479.580139,121.581932 478.817474,119.747292  C479.366730,118.268532 480.856598,118.150909 482.285492,118.018631  C483.462708,117.909645 484.605469,117.833099 485.406982,116.783318  C488.125458,113.222801 489.476959,112.771095 494.390381,114.396141  C496.320892,115.034630 496.653625,114.247871 496.990112,112.684235  C498.036377,107.822105 499.601288,106.965500 504.207672,108.653748  C506.967102,109.665085 509.487885,110.886681 512.744324,110.612770  C515.328979,110.395378 515.302002,114.950302 518.030212,115.622658  C519.748962,114.007584 515.680603,111.968658 518.184753,111.440933  C520.798523,110.890099 522.955627,113.429832 524.872498,115.147888  C526.676880,116.765114 524.204529,117.217369 523.500244,118.010124  C522.141968,119.539085 521.391479,121.127663 522.729370,122.904968  C523.908081,124.470886 525.438904,124.009048 526.624023,122.860588  C527.815369,121.706123 529.211731,123.090210 530.499634,122.279037  C530.417664,121.853333 530.372009,121.400787 530.240723,120.974609  C529.845032,119.690262 526.099365,119.798470 528.480286,117.562599  C529.796326,116.326691 531.902588,116.618011 533.255859,118.486137  C534.540771,120.259842 536.047363,122.181160 535.325867,124.328232  C534.472900,126.866570 531.259705,125.429298 530.045227,126.251839  C523.946228,130.382645 517.027466,125.713730 510.854218,128.641205  C509.090210,129.477753 506.347626,128.335526 504.071045,127.987411  C500.284271,127.408348 496.531097,129.126526 492.372742,128.049927  C491.533203,128.175095 491.148193,128.078293 490.913300,127.336494  z\"})),_path2046||(_path2046=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M490.550476,127.005219  C491.102997,127.310509 491.301758,127.565498 491.782593,127.886078  C491.997681,128.449478 491.999054,128.894089 492.001068,129.672180  C490.421021,131.771805 488.590820,131.088211 486.387695,130.269958  C482.937531,128.935623 480.430542,131.578079 477.418427,131.284683  C476.306396,131.176361 475.959503,132.496887 476.247040,133.554764  C476.657166,135.063583 478.284607,135.392273 478.938599,134.610962  C480.988983,132.161469 482.474976,133.066498 484.620483,134.511475  C485.793243,135.301331 487.810150,134.876694 489.448517,134.922394  C490.508209,134.951965 491.968414,133.910995 492.439301,135.517593  C492.944824,137.242371 490.956909,136.826233 490.186951,137.494247  C489.689087,137.926178 489.132751,138.290649 488.301300,138.842560  C489.312225,145.820679 488.490143,146.830566 482.296509,145.315826  C482.179688,141.902206 480.483826,141.133957 477.673157,140.943710  C470.675140,140.470032 463.715393,139.309921 455.267761,140.664246  C459.389709,137.248352 463.185120,137.591492 466.534393,136.602905  C467.704926,136.257416 469.580750,136.316788 469.689331,134.657837  C469.823059,132.614365 468.099182,133.735321 467.135254,133.571350  C466.271637,133.424454 466.123505,132.767792 466.317841,132.087280  C466.632172,130.986603 467.679962,130.422852 468.588684,130.378845  C472.609680,130.184158 476.362213,128.535995 480.270660,128.171570  C483.571533,127.863800 486.842224,127.388451 490.550476,127.005219  z\"})),_path2047||(_path2047=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M481.595703,144.996216  C486.918274,146.250366 487.816437,143.486069 487.743408,139.247787  C490.651489,140.679535 493.020630,140.313400 495.632996,138.569199  C497.288544,137.463837 498.789978,135.565933 501.618439,136.011673  C501.118866,138.856140 499.415619,140.281342 496.363190,141.335007  C492.746552,142.583481 488.663574,144.393478 488.003876,149.623993  C487.250427,151.597946 485.987335,152.357635 483.901001,152.109222  C482.613586,150.135025 481.867523,148.253799 479.346588,148.012146  C478.271393,147.909058 477.360229,146.988968 477.782867,145.295593  C479.065430,144.998901 480.130859,144.997787 481.595703,144.996216  z\"})),_path2048||(_path2048=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1F20\",opacity:1,stroke:\"none\",d:\" M451.998230,128.998169  C455.734833,124.737648 460.141998,121.709503 467.286407,120.754677  C462.371765,125.214333 459.270691,129.986832 452.421112,129.003723  C452.003662,129.003662 452.000000,129.000000 451.998230,128.998169  z\"})),_path2049||(_path2049=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M477.558563,145.000000  C478.219849,146.676758 479.394958,147.079330 480.812561,146.986160  C483.985260,146.777634 484.114197,148.840714 483.991974,151.540558  C483.803741,152.085403 483.617218,152.215836 483.089600,152.366547  C481.215912,151.988693 479.717987,151.511856 478.230164,150.248047  C477.341400,147.103653 474.968536,148.282684 473.215240,147.994705  C472.030975,147.800171 470.231903,148.297119 470.433655,146.274963  C470.585052,144.757629 472.130096,145.075928 473.211060,145.021744  C474.510193,144.956619 475.814850,145.002289 477.558563,145.000000  z\"})),_path2050||(_path2050=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M477.739563,150.263519  C479.673096,150.053574 481.465637,149.696503 482.829071,151.694000  C483.370544,152.390289 483.552277,152.847260 483.451355,153.742783  C482.561798,155.210739 481.423004,155.656830 479.778198,155.833618  C477.658966,155.420670 475.973114,155.476013 474.243835,156.186172  C472.717834,156.812866 471.041901,157.207169 470.476501,154.548767  C470.921265,153.105515 471.580139,152.197159 472.760956,151.250153  C474.496887,150.849747 475.986816,150.688080 477.739563,150.263519  z\"})),_path2051||(_path2051=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M470.741089,153.817963  C471.464417,156.708420 473.072052,155.542068 474.237457,154.806549  C475.718719,153.871628 477.034760,152.960968 478.812073,154.731567  C480.099487,156.624908 479.002167,157.543518 477.471130,158.629898  C473.720520,158.399063 470.082733,160.654510 466.972107,157.412003  C467.000763,156.263641 467.001587,155.524246 467.003601,154.416534  C467.753845,154.035843 468.502930,154.023453 469.626587,154.005539  C470.167084,153.873184 470.332916,153.746353 470.741089,153.817963  z\"})),_path2052||(_path2052=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111112\",opacity:1,stroke:\"none\",d:\" M486.081146,130.361588  C487.715637,130.001755 489.430023,130.001663 491.573059,130.003632  C493.210724,132.094147 497.909454,129.831696 497.115723,133.007233  C496.597839,135.079163 493.130859,132.648941 490.900452,132.828293  C489.261780,132.960068 487.251129,132.514465 486.081146,130.361588  z\"})),_path2053||(_path2053=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M539.001221,104.999390  C541.252441,104.982559 543.070007,105.584167 543.678040,108.499008  C541.343933,108.560349 540.216003,107.135887 539.057495,105.331596  C538.998840,105.001221 539.000000,105.000000 539.001221,104.999390  z\"})),_path2054||(_path2054=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M471.267273,153.864777  C470.983429,154.016388 470.492279,154.009415 470.246765,154.004700  C469.968719,152.406265 470.210541,151.021957 472.639160,151.018860  C472.961487,152.148972 472.531311,153.079254 471.267273,153.864777  z\"})),_path2055||(_path2055=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M476.806091,158.331879  C477.581482,157.149826 478.247864,156.374527 478.956909,155.287354  C480.098572,154.669693 481.197662,154.363922 482.638367,154.013062  C485.007416,152.517883 487.492645,151.926361 489.767639,150.245743  C490.013367,150.011734 490.504242,150.001999 490.749695,149.997131  C492.355225,148.626511 493.543945,147.044754 495.758545,146.239197  C498.984985,144.257248 503.417938,146.523193 505.570618,143.200089  C508.183868,139.166000 512.996948,139.571564 516.620178,137.009338  C518.893982,135.425812 521.432678,135.496918 523.773804,134.237244  C524.451172,134.015442 524.893738,134.015137 525.668091,134.016754  C526.874451,133.985214 527.764282,134.022842 528.772095,133.252228  C529.561707,133.204269 530.105713,133.375443 530.828064,133.776703  C532.009644,134.736786 533.330383,135.203461 533.152100,137.124817  C531.145935,139.464554 528.591187,139.120071 526.253174,139.632782  C523.926453,140.142990 521.597534,140.958878 519.605225,143.061462  C509.424408,145.440384 501.828888,152.847321 492.056030,155.314758  C490.363495,155.742096 489.320251,157.039078 488.009979,158.580078  C484.539368,159.914581 481.282440,159.945663 477.615662,159.558685  C477.052185,159.173553 476.874634,158.956085 476.806091,158.331879  z\"})),_path2056||(_path2056=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M536.654663,135.965515  C541.899536,136.613388 546.533997,138.841156 551.809204,138.831772  C551.987610,143.343674 548.000122,140.842667 546.024902,142.467361  C545.425598,142.562943 545.177795,142.564316 544.565002,142.472916  C542.420837,141.153473 540.365906,141.521729 538.402710,141.398331  C536.078247,141.252213 534.152344,140.581924 533.507812,137.632141  C533.529297,136.677505 533.768738,136.236298 534.623047,135.931000  C535.454407,135.955170 535.890930,135.962555 536.654663,135.965515  z\"})),_path2057||(_path2057=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M489.678162,150.008301  C489.328033,153.537949 486.570862,153.805237 483.369812,153.977753  C482.985931,153.531967 482.991852,153.095947 483.002563,152.332718  C483.007324,152.005493 483.499298,151.988480 483.744781,151.971741  C485.111908,151.327408 486.233521,150.699829 487.678802,150.037048  C488.449280,150.002838 488.896088,150.003845 489.678162,150.008301  z\"})),_path2058||(_path2058=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M523.663269,134.013763  C522.634033,136.720169 519.848816,136.737457 517.218262,137.236755  C517.471130,132.562012 521.279297,135.152817 523.663269,134.013763  z\"})),_path2059||(_path2059=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M495.631195,146.038559  C494.702423,147.499481 494.257690,149.908188 491.345154,149.988113  C490.828613,146.978317 492.377838,145.798492 495.631195,146.038559  z\"})),_path2060||(_path2060=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M534.931519,135.603333  C534.755127,136.158966 534.492249,136.370132 534.109253,136.805664  C533.821777,137.132004 533.654358,137.233994 533.247070,137.165787  C532.427795,136.179886 531.848328,135.364182 531.137573,134.277649  C532.369507,134.167999 534.002075,133.502991 534.931519,135.603333  z\"})),_path2061||(_path2061=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M528.679749,133.026443  C528.753296,134.591278 528.036499,135.341736 526.210449,134.253113  C526.560120,133.168854 527.417053,133.014725 528.679749,133.026443  z\"})),_path2062||(_path2062=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M420.844025,282.822571  C420.700958,283.738464 420.389618,284.782043 420.074158,284.783295  C414.008575,284.807373 408.769104,289.848267 402.287506,287.628235  C401.028992,287.197205 399.383820,287.802002 397.934692,288.037720  C393.317657,288.788666 388.691681,286.341583 386.655884,282.096527  C386.309509,281.296722 386.286804,280.589508 386.293213,279.529114  C387.013397,277.951874 388.459015,276.986176 387.554901,274.947937  C387.300201,274.219727 387.258972,273.786041 387.391083,273.018738  C388.480164,271.454651 388.486450,269.737030 389.711029,268.243347  C389.983032,266.621887 390.040741,265.259460 390.111694,263.488220  C390.726257,262.389740 390.999786,261.578064 391.045441,260.345093  C391.740234,256.971436 392.410583,253.925110 393.095367,250.481995  C393.456665,249.618332 393.820984,249.161697 394.031372,248.300735  C399.013306,234.902145 404.129089,221.853943 408.756500,208.634811  C409.859222,205.484680 411.667145,202.765656 412.914490,199.360107  C413.786346,198.304169 414.203857,197.389786 414.823303,196.250092  C415.597260,195.203415 416.175659,194.385910 416.895447,193.298157  C417.659058,192.449707 418.391418,192.221466 419.591980,192.488586  C421.483551,194.504852 420.165466,196.094604 419.402252,197.681808  C414.794189,207.264618 410.508148,216.989670 406.987427,227.023209  C403.294647,237.547256 401.680054,248.616089 398.848969,259.370819  C397.836365,263.217529 397.439789,267.211792 395.462769,270.794708  C394.300140,272.901703 394.509644,275.324036 394.592316,277.646790  C394.775330,282.789917 395.770813,283.697449 400.893433,282.924561  C405.573792,282.218445 410.508636,284.791901 415.320740,281.588318  C416.392151,281.085693 417.162506,280.976929 418.348999,281.074280  C419.523285,281.379456 420.168030,281.821075 420.844025,282.822571  z\"})),_path2063||(_path2063=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M389.564575,267.988281  C389.786713,269.668304 390.705170,271.594421 388.450531,272.982697  C387.104370,272.569763 387.052124,271.632782 387.032654,270.333618  C387.033752,269.552429 387.030853,269.120636 387.032043,268.365906  C387.758667,268.026031 388.481232,268.009125 389.564575,267.988281  z\"})),_path2064||(_path2064=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M387.781860,274.798157  C389.417145,276.811188 389.593048,278.317017 386.651062,279.126892  C386.502075,278.022339 386.681885,276.868713 386.893799,275.362366  C387.114838,274.874298 387.303741,274.738922 387.781860,274.798157  z\"})),_path2065||(_path2065=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M388.070312,274.675171  C387.880463,274.995270 387.689850,274.997772 387.212585,275.004974  C385.628052,273.598541 385.805573,272.054840 386.777100,270.223694  C387.868500,270.584015 387.989532,271.475372 388.061829,272.745544  C388.087097,273.512787 388.078308,273.935181 388.070312,274.675171  z\"})),_path2066||(_path2066=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M420.195740,192.887375  C419.160980,192.965286 418.452423,192.989014 417.390381,193.020325  C416.881561,190.134735 419.976715,188.572342 420.023987,185.391617  C420.786621,184.687073 421.538727,184.348679 422.601105,183.989716  C423.992584,183.213608 424.842529,183.496887 425.624390,184.915863  C425.806580,186.346191 425.324493,187.173950 424.372009,188.143982  C423.507538,188.965195 422.690399,189.363327 422.275330,190.544006  C421.802704,191.662857 421.327728,192.384659 420.195740,192.887375  z\"})),_path2067||(_path2067=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M390.802826,260.228363  C392.203308,261.134857 392.266266,262.125214 390.425232,263.002502  C390.261902,262.199249 390.398834,261.319122 390.802826,260.228363  z\"})),_path2068||(_path2068=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M414.726532,196.157745  C414.966095,197.144257 415.103394,198.352829 413.406891,198.964890  C413.014557,197.873032 413.450439,196.948837 414.726532,196.157745  z\"})),_path2069||(_path2069=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M393.823486,248.186157  C395.029480,248.904236 394.745514,249.525284 393.379425,250.027008  C393.263367,249.509933 393.416962,248.934647 393.823486,248.186157  z\"})),_path2070||(_path2070=/*#__PURE__*/React.createElement(\"path\",{fill:\"#232326\",opacity:1,stroke:\"none\",d:\" M358.225281,229.745850  C357.997620,230.001221 357.499420,230.000854 357.250305,230.000336  C356.881744,229.833115 356.762299,229.666428 356.821411,229.249252  C358.233459,227.193542 359.466949,225.388321 360.850220,223.291534  C362.242950,223.175308 363.880737,222.468353 364.568085,223.974380  C365.361145,225.712128 363.398773,226.016022 362.621338,226.940338  C361.511963,228.259338 359.975128,228.857956 358.225281,229.745850  z\"})),_path2071||(_path2071=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M452.869049,163.356430  C453.490326,163.041000 453.919403,163.031097 454.670410,163.004181  C460.875824,161.360657 466.476654,158.440872 473.230774,159.250549  C474.858429,160.572006 474.156769,161.816574 473.207733,162.309311  C468.710022,164.644531 464.853973,168.677628 459.348511,168.497940  C451.136536,168.229904 444.119568,171.229828 437.297424,176.021240  C436.331940,177.015732 435.475494,177.505905 434.241272,178.049438  C431.944763,178.372726 430.722229,179.660172 429.331177,181.321869  C428.828918,181.615204 428.608398,181.700195 428.032562,181.825073  C427.193878,181.819733 426.743988,181.670044 426.107178,181.141220  C425.908081,180.439316 425.924500,180.027191 425.961548,179.306244  C426.071655,177.877151 426.849030,177.182541 427.776367,176.228683  C427.992493,176.010376 428.001617,176.003677 428.005798,175.998077  C432.410767,176.015381 434.160217,171.836380 437.239166,169.816925  C442.092590,166.633560 448.056000,166.931717 452.869049,163.356430  z\"})),_path2072||(_path2072=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M425.897247,180.869232  C426.372528,180.903702 426.853363,180.955963 427.695404,181.035965  C429.183350,183.709106 428.772186,185.667725 425.296722,186.171707  C424.801422,185.051437 424.535278,184.284210 423.226562,184.014084  C423.058624,183.672928 423.258026,183.417419 423.716278,183.072617  C424.520874,182.475189 425.048248,181.933731 425.724731,181.146301  C425.886017,180.913040 425.902832,180.887009 425.897247,180.869232  z\"})),_path2073||(_path2073=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M427.674652,176.040588  C427.977051,177.157074 427.522644,178.070969 426.270325,178.855957  C424.400482,177.063736 425.993469,176.621201 427.674652,176.040588  z\"})),_path2074||(_path2074=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M425.579102,180.972977  C425.920410,181.881256 425.640045,182.643143 424.254089,182.919891  C424.023315,182.059219 424.343048,181.330811 425.579102,180.972977  z\"})),_path2075||(_path2075=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D2C21\",opacity:1,stroke:\"none\",d:\" M474.327698,160.038010  C467.596069,158.926254 462.166077,163.621902 455.421753,162.993469  C455.355164,160.757187 457.131561,160.047913 458.899658,160.112610  C461.901886,160.222473 464.156799,158.936752 466.649445,157.074371  C469.832245,159.527695 473.275787,156.087082 476.545837,157.934204  C476.915070,157.925110 476.954041,158.380386 476.963440,158.608673  C476.517853,159.826813 475.646851,160.055191 474.327698,160.038010  z\"})),_path2076||(_path2076=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M754.774719,518.188904  C755.311646,518.117310 755.565247,518.311218 755.882935,518.786072  C755.840088,519.744019 755.713257,520.802246 754.692322,520.392883  C753.854675,520.056946 754.077271,519.105591 754.774719,518.188904  z\"})),_path2077||(_path2077=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B4442\",opacity:1,stroke:\"none\",d:\" M766.728516,515.212463  C767.840088,515.576111 767.981079,516.451843 767.882324,517.750854  C766.369263,517.713928 765.679321,516.945190 766.728516,515.212463  z\"})),_path2078||(_path2078=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M690.644409,480.048523  C689.775635,482.819000 691.824158,486.220764 689.382446,488.853027  C688.918091,489.353668 689.163879,490.241882 689.880493,490.468536  C690.859680,490.778320 691.504333,490.019745 691.726685,489.227997  C692.547852,486.304749 694.631104,484.683350 697.391541,482.814667  C698.166199,486.467255 696.990601,489.441040 695.545654,491.339844  C691.075623,497.213562 691.803406,505.160919 687.144043,510.881317  C686.413757,511.777863 686.344604,513.445679 685.228088,514.219238  C679.139038,518.438171 676.244751,525.240662 671.657654,530.656006  C670.021973,532.587036 667.073303,533.381348 665.350586,535.927856  C664.339661,533.333496 662.963074,533.801941 661.485535,535.261475  C660.350769,536.382385 659.330322,537.619202 657.388306,539.767883  C657.334595,534.831299 660.620972,531.278320 657.670898,527.793823  C657.632324,527.748291 658.263062,526.832214 658.593506,526.824280  C662.858704,526.721497 662.908936,523.062500 664.078003,520.386780  C666.439331,514.982666 670.015808,510.517517 674.634827,506.924408  C676.870605,505.185181 676.313599,502.830353 675.698547,501.032715  C674.536804,497.636993 677.193604,497.119476 678.856628,495.756012  C681.226929,493.812683 681.695984,496.845123 683.123718,497.539734  C684.156250,496.296509 685.299561,494.673309 684.166260,493.614624  C682.156006,491.736572 679.390686,491.762634 676.818787,492.671234  C676.617249,492.050659 676.521118,491.754761 676.425049,491.458862  C682.754395,489.753754 684.005676,481.858002 690.644409,480.048523  z\"})),_path2079||(_path2079=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9764E\",opacity:1,stroke:\"none\",d:\" M641.244995,535.767700  C640.768066,537.631897 639.703857,538.682922 638.338135,539.883179  C632.644653,543.511292 627.410278,547.187195 622.994507,551.945129  C620.542725,554.586853 617.543396,555.956238 613.801697,556.598511  C606.389404,557.870911 599.258362,560.253601 593.269775,565.788940  C589.044861,568.745728 584.376160,570.300415 580.329346,573.622253  C578.082886,574.612000 576.028992,574.848145 573.618103,575.271484  C572.423828,575.322632 571.639343,575.227661 570.533997,574.762451  C570.005432,574.383118 569.825256,574.192688 569.517517,573.633179  C569.885559,568.420410 574.449524,567.358337 577.637451,564.518066  C589.941833,560.592712 599.669739,553.093201 609.325684,545.487732  C613.454895,542.235352 618.226257,540.356628 623.130371,538.695862  C625.337158,537.948547 627.471069,536.992371 629.979736,536.032104  C635.263611,533.540466 638.152039,528.965637 641.930481,524.855957  C642.220886,524.328186 642.362732,524.128479 642.795532,523.695801  C643.799927,523.128906 644.541443,523.075623 645.661316,523.390869  C646.889648,524.202087 647.305847,525.136414 647.668701,526.530151  C647.777466,527.431335 647.674072,527.927673 647.180054,528.678101  C646.022583,530.162170 645.124695,531.364746 643.950806,532.730225  C643.066467,533.876587 641.821106,534.303284 641.244995,535.767700  z\"})),_path2080||(_path2080=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M672.390259,438.032715  C675.641235,442.474426 681.338623,444.384430 683.634766,449.839081  C684.294617,456.669891 683.554443,463.185974 681.580750,469.481140  C680.075745,474.281250 676.493713,477.612000 672.077637,479.692688  C669.972046,480.684723 667.965271,481.791656 665.619324,483.000946  C665.072571,482.980743 664.861145,482.886749 664.466187,482.496765  C664.142334,481.753235 664.072571,481.294922 664.110107,480.477539  C664.359009,479.211456 664.709412,478.346954 665.346802,477.225037  C665.731506,476.785828 665.913391,476.636047 666.415039,476.338043  C676.046814,473.457031 681.400574,463.777710 678.742004,454.489502  C678.478394,453.568573 678.536072,452.316650 677.364685,452.115509  C676.227356,451.920258 675.715881,453.022644 675.161499,453.828888  C673.627991,456.059021 672.727417,459.147552 668.708374,458.077087  C667.296631,455.892303 667.767578,453.940765 668.505127,451.638489  C668.966675,450.399902 669.503113,449.576691 669.558838,448.229126  C669.585022,447.155029 669.703674,446.449432 669.895996,445.390503  C670.198730,444.107697 670.606079,443.215332 670.567993,441.854034  C670.658203,440.180756 670.912231,438.953491 672.390259,438.032715  z\"})),_path2081||(_path2081=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M657.823975,543.689453  C657.572510,545.235168 656.302917,547.247070 659.265137,546.064758  C660.825623,545.441956 661.384583,545.268005 662.212341,546.962708  C663.367126,549.327087 664.650452,551.571960 664.336365,554.312805  C664.313538,554.511841 663.754822,554.864685 663.568970,554.798462  C657.874695,552.771301 656.592346,558.169067 653.310059,560.843018  C648.212830,558.828552 647.655884,556.280273 651.478394,549.937500  C652.672424,547.956238 653.918762,546.366577 654.192993,543.881836  C654.494873,541.146301 656.245850,542.008484 657.823975,543.689453  z\"})),_path2082||(_path2082=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M704.221313,424.762299  C702.587952,425.649658 701.970032,426.778046 702.004578,428.649414  C701.616211,430.137756 700.826172,430.616791 699.321045,430.225891  C697.739563,428.726654 696.487549,427.433563 695.202942,426.173737  C694.595764,425.578217 693.728333,424.649902 694.287598,424.104889  C697.333740,421.135986 697.538086,417.543274 697.927612,413.572266  C698.094727,411.868011 700.301514,410.187439 699.482544,407.550873  C698.884644,405.626068 700.641602,405.140900 702.614136,404.997375  C701.897339,411.615997 702.210022,418.141998 704.221313,424.762299  z\"})),_path2083||(_path2083=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M661.899048,494.787567  C661.422974,501.766266 659.539673,508.143158 655.507996,513.979614  C652.160767,512.563416 654.604614,510.561249 654.720276,508.471344  C654.872925,507.946503 654.948364,507.742950 655.169067,507.252594  C655.859253,506.102264 656.653503,505.393341 657.033203,504.074768  C657.422791,503.015045 657.717957,502.246582 658.039307,501.150024  C658.318970,500.222382 658.587036,499.626526 658.835083,498.666809  C659.304810,497.237762 659.685547,496.137177 660.650269,494.944244  C661.152283,494.658508 661.386292,494.610535 661.899048,494.787567  z\"})),_path2084||(_path2084=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M655.933105,507.808716  C655.790039,509.867249 655.331543,511.685455 655.012695,513.770752  C655.008545,514.354553 654.864685,514.671387 654.679199,515.246338  C654.709106,516.532532 653.962524,516.757812 652.812927,516.983521  C652.172974,516.943115 651.921387,516.888123 651.330078,516.652832  C650.613586,516.119385 650.346924,515.697144 650.138000,514.838989  C650.100220,514.231934 650.118530,513.989502 650.236816,513.400085  C650.698792,512.191895 651.420776,511.505219 651.623291,510.178436  C651.885986,509.090240 652.206665,508.420929 653.016541,507.618896  C654.122925,507.138947 654.883240,507.176300 655.933105,507.808716  z\"})),_path2085||(_path2085=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161719\",opacity:1,stroke:\"none\",d:\" M702.936279,396.341064  C704.182800,398.539246 704.931458,401.115723 703.328369,403.928040  C701.685730,401.580048 700.055115,399.170441 702.936279,396.341064  z\"})),_path2086||(_path2086=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M652.061646,516.374390  C652.960388,516.109924 653.516296,515.896545 654.354858,515.593872  C654.892517,518.163025 653.741821,520.200867 651.481201,521.978210  C650.967712,521.909973 650.788757,521.759949 650.483215,521.282227  C650.197449,519.758362 650.505249,518.636108 651.063660,517.220886  C651.391296,516.751221 651.555115,516.588379 652.061646,516.374390  z\"})),_path2087||(_path2087=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1818\",opacity:1,stroke:\"none\",d:\" M703.013428,390.331482  C708.505127,390.892273 705.315308,392.878540 703.298584,394.840210  C702.099731,393.554596 703.406067,392.116669 703.013428,390.331482  z\"})),_path2088||(_path2088=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M664.212158,481.752991  C664.727905,482.074677 664.838196,482.274933 665.116333,482.774933  C664.891663,484.483429 664.499268,485.892151 664.111694,487.670898  C663.868530,488.167816 663.620422,488.294708 662.953430,488.398254  C659.907532,485.551514 660.900330,483.411041 664.212158,481.752991  z\"})),_path2089||(_path2089=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M698.681763,346.055389  C699.004028,346.750610 699.003235,347.500000 699.002441,348.624084  C698.149414,349.167480 697.006226,350.396912 696.520630,349.084106  C696.048584,347.807983 697.002136,346.655426 698.681763,346.055389  z\"})),_path2090||(_path2090=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M647.498779,527.236572  C646.276428,526.557617 646.064087,525.723572 646.084106,524.436523  C646.474792,523.451965 647.087463,523.237122 648.128906,523.266663  C648.656189,523.444092 648.850159,523.559937 649.163330,523.993042  C649.145691,524.895447 649.008850,525.480713 648.800720,526.358765  C648.650940,527.186951 648.330627,527.433655 647.498779,527.236572  z\"})),_path2091||(_path2091=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M699.004456,430.337219  C699.808533,429.756134 700.612244,429.506165 701.707947,429.126282  C703.615662,431.819672 701.278259,431.608887 699.360229,431.988953  C699.011108,431.551239 699.007568,431.109772 699.004456,430.337219  z\"})),_path2092||(_path2092=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M662.171936,494.667786  C661.989014,495.013336 661.800171,495.014099 661.328247,495.010315  C660.791687,495.105194 660.538269,495.204559 659.961426,495.051819  C658.940918,492.374939 659.364441,490.450623 662.399170,489.594604  C662.984436,489.875336 663.169128,490.074982 663.319946,490.681152  C662.912659,492.166168 662.539368,493.244598 662.171936,494.667786  z\"})),_path2093||(_path2093=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M667.177490,504.599854  C667.320557,503.737305 667.415588,502.838257 667.794128,502.696533  C668.623901,502.385956 668.883240,503.227844 668.855896,503.853699  C668.814087,504.811523 668.743408,506.015045 667.177490,504.599854  z\"})),_path2094||(_path2094=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M693.638184,477.016296  C693.904175,478.516205 693.242188,479.577515 691.343384,479.962006  C690.966553,478.407684 691.209961,477.026367 693.638184,477.016296  z\"})),_path2095||(_path2095=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M641.341797,535.956055  C640.944519,534.557373 641.051941,533.191650 643.331482,532.923828  C643.701660,533.278076 643.728516,533.663086 643.678589,534.330688  C642.939697,535.024353 642.277710,535.435425 641.341797,535.956055  z\"})),_path2096||(_path2096=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M663.570679,491.005554  C663.185181,490.887726 663.084290,490.687714 662.832886,490.187256  C662.459290,489.452606 662.411194,488.999847 662.777222,488.266724  C663.199585,488.008789 663.382935,488.012634 663.841431,488.028687  C665.218262,489.109497 665.159729,490.072906 663.570679,491.005554  z\"})),_path2097||(_path2097=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M650.289368,520.970337  C650.722839,521.156677 650.804016,521.338806 651.015869,521.790527  C650.700928,522.715637 650.255249,523.371155 649.546021,524.168457  C649.282532,524.310181 649.032227,524.040588 648.905762,523.907104  C648.075684,522.388489 648.731628,521.563965 650.289368,520.970337  z\"})),_path2098||(_path2098=/*#__PURE__*/React.createElement(\"path\",{fill:\"#161617\",opacity:1,stroke:\"none\",d:\" M670.646729,497.572784  C671.386658,497.365723 671.655151,497.624176 671.540161,498.198914  C671.516296,498.318298 671.347168,498.478760 671.226562,498.496704  C670.646179,498.583191 670.403320,498.300568 670.646729,497.572784  z\"})),_path2099||(_path2099=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M647.129150,527.360229  C647.539001,526.963135 647.880920,526.883118 648.476196,526.727295  C648.895752,527.664734 648.727417,528.510437 647.266785,528.921143  C646.967468,528.532104 647.014343,528.104675 647.129150,527.360229  z\"})),_path2100||(_path2100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0B0B0B\",opacity:1,stroke:\"none\",d:\" M694.425659,351.646667  C694.632141,352.384644 694.374329,352.652679 693.801025,352.538147  C693.682007,352.514343 693.521973,352.345398 693.504089,352.225037  C693.418091,351.646423 693.699341,351.403473 694.425659,351.646667  z\"})),_path2101||(_path2101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M709.245850,538.254761  C708.724121,535.042297 709.633667,532.290588 710.737305,529.263855  C712.942200,527.672485 712.029175,525.033630 713.763916,523.251221  C716.893677,521.972168 719.988037,520.316833 720.989868,525.616638  C720.999451,526.444458 720.998901,526.888916 720.997925,527.666687  C714.978821,529.056458 713.610046,530.866638 714.851074,536.663147  C713.672791,539.359436 711.699951,539.364075 709.245850,538.254761  z\"})),_path2102||(_path2102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M723.675781,514.855347  C723.990967,516.477234 724.117737,517.976868 723.153137,519.660583  C722.680664,519.988342 722.353638,520.002869 722.032593,519.966064  C719.695068,519.698364 717.285828,518.027649 717.703430,516.258423  C718.231934,514.019531 720.990540,513.653992 723.675781,514.855347  z\"})),_path2103||(_path2103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M673.799988,576.262756  C675.041565,576.215759 676.341370,576.846802 675.296509,577.832397  C673.072083,579.930603 673.159241,582.774048 672.138123,586.841248  C671.159119,583.911560 670.628967,582.324951 670.051880,580.366699  C672.272827,579.947449 671.923523,577.187866 673.799988,576.262756  z\"})),_path2104||(_path2104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M690.997559,532.001770  C690.889160,531.877747 690.783142,531.752014 690.677185,531.626221  C690.751221,531.669617 690.825256,531.712952 690.951355,531.875732  C691.003418,531.995117 691.000000,532.000000 690.997559,532.001770  z\"})),_path2105||(_path2105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M628.278687,171.601776  C629.176331,172.049438 630.160095,172.273575 630.227722,172.658554  C630.499634,174.207153 629.152893,174.001755 628.313416,173.934723  C625.715393,173.727249 623.713562,171.590881 620.980591,171.601898  C620.366699,171.604385 620.030334,170.583588 620.418518,170.022369  C620.712280,169.597778 621.556824,169.159607 621.985046,169.289963  C624.003601,169.904495 625.963196,170.712921 628.278687,171.601776  z\"})),_path2106||(_path2106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M598.995117,158.646439  C596.490845,157.843903 594.259827,156.360184 593.026245,153.364624  C595.634827,154.023834 598.542480,154.741501 598.995117,158.646439  z\"})),_path2107||(_path2107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M546.139893,142.286301  C546.217407,140.249985 547.229553,139.807755 548.717834,140.406357  C549.941467,140.898514 550.895203,140.675705 551.840515,139.353012  C552.746033,139.058838 553.487549,139.044617 554.599792,139.028885  C559.352966,141.784637 563.971191,143.673096 569.296509,143.692886  C571.393494,143.700668 573.594116,144.122421 575.662109,145.798553  C576.603882,146.803894 577.141663,147.981613 577.944458,148.204330  C586.814331,150.664978 591.544006,158.732117 598.926392,163.703156  C598.889648,164.929443 598.267944,165.570847 597.293823,166.351654  C596.567383,166.694717 596.116211,166.776855 595.305115,166.753357  C594.271973,166.532547 593.659546,166.203766 592.832153,165.556656  C591.623230,164.167908 591.337769,162.303879 589.004639,162.155914  C588.474670,161.940445 588.269104,161.838348 587.780273,161.540009  C583.748352,157.821182 579.328003,155.229584 574.732666,152.332733  C573.904541,152.147858 573.443115,151.982758 572.658936,151.599945  C571.277466,150.640106 570.300110,149.379181 568.931458,149.610428  C561.751709,150.823410 556.151917,146.001358 549.644043,144.684937  C548.376709,144.428574 547.247070,143.619949 546.139893,142.286301  z\"})),_path2108||(_path2108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M575.953735,145.681732  C568.852356,144.431335 560.627930,146.504547 555.042053,139.366928  C557.127991,138.967194 559.113586,139.095352 561.145386,140.316498  C563.533386,141.751770 566.199219,142.239655 569.243896,141.558655  C572.095947,140.920715 575.347473,141.154938 575.953735,145.681732  z\"})),_path2109||(_path2109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M596.828857,166.445038  C597.099426,165.152618 597.389038,164.342422 598.764771,164.052200  C600.237244,164.030777 601.121643,164.522751 601.910828,165.755951  C602.070435,166.431580 602.068054,166.827652 602.067078,167.521179  C600.690613,169.393036 599.215454,168.621338 597.433228,167.752975  C596.984680,167.280350 596.849243,167.052780 596.828857,166.445038  z\"})),_path2110||(_path2110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M570.044678,137.446854  C570.720703,137.817368 570.727722,138.190033 570.245544,138.519180  C570.144653,138.588074 569.910400,138.585205 569.812012,138.513428  C569.341675,138.170273 569.357727,137.797913 570.044678,137.446854  z\"})),_path2111||(_path2111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M236.998352,517.571472  C234.893509,517.978821 234.662567,520.728943 232.356781,520.963806  C230.535797,519.801147 230.222137,517.985168 230.962234,516.579041  C233.074020,512.566833 232.051804,508.259949 232.700348,503.713501  C232.915237,503.057251 233.028976,502.802856 233.407532,502.222260  C234.164093,501.582489 234.698502,501.468170 235.632874,501.775726  C236.799744,507.016968 235.188141,512.195923 236.998352,517.571472  z\"})),_path2112||(_path2112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#342C2D\",opacity:1,stroke:\"none\",d:\" M248.753204,495.246552  C251.787842,500.497772 247.050446,503.254059 244.346497,506.940186  C244.240326,502.675140 247.865219,499.666443 248.753204,495.246552  z\"})),_path2113||(_path2113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M230.285553,500.191284  C229.431992,496.718597 233.009140,494.487610 231.844452,490.774414  C232.973007,491.715149 233.682404,492.306458 234.701691,492.948151  C236.587204,493.246490 237.351425,493.952179 236.231079,495.792908  C234.946152,496.534546 234.453140,497.516815 233.772812,498.781799  C233.132782,499.598724 232.567673,499.974884 231.595490,500.337769  C231.031937,500.412445 230.802124,500.398102 230.285553,500.191284  z\"})),_path2114||(_path2114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M232.842331,499.318695  C233.502747,497.699036 231.726074,494.734741 235.686508,495.871704  C235.992676,497.714172 235.994217,499.428162 235.992996,501.570465  C235.550034,501.999115 235.109848,501.999451 234.339401,501.999878  C233.056458,501.500122 232.693619,500.668793 232.842331,499.318695  z\"})),_path2115||(_path2115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M235.401459,484.004333  C234.954239,482.554932 235.954544,481.625183 236.862061,480.283936  C238.276550,480.130829 240.024429,479.867279 239.704544,481.901337  C239.363373,484.070709 237.452805,483.949005 235.401459,484.004333  z\"})),_path2116||(_path2116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M237.345764,476.235535  C237.323700,474.131134 235.045120,471.063538 239.654831,471.007904  C240.003189,472.391815 240.001480,473.779968 239.999268,475.584656  C239.313675,476.577118 238.544724,476.740662 237.345764,476.235535  z\"})),_path2117||(_path2117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M235.349472,490.935608  C235.006790,489.611328 235.007477,488.218079 235.014709,486.406494  C240.281860,486.920990 237.640091,488.941650 235.349472,490.935608  z\"})),_path2118||(_path2118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M275.636414,438.038269  C275.954285,439.097107 276.144287,440.320587 274.414673,440.952301  C274.032227,439.867828 273.887024,438.666504 275.636414,438.038269  z\"})),_path2119||(_path2119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M237.002960,476.334106  C237.752548,476.000092 238.501266,476.000214 239.624390,476.000793  C239.880402,477.410828 239.048462,477.994904 237.354736,477.995117  C237.004776,477.559326 237.003433,477.113770 237.002960,476.334106  z\"})),_path2120||(_path2120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M277.026337,390.294769  C278.922424,388.602875 278.817963,390.184052 278.995239,391.679291  C279.000000,392.000000 278.500000,392.000000 278.250000,392.000000  C277.685028,391.529449 277.370087,391.058868 277.026337,390.294769  z\"})),_path2121||(_path2121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M273.040955,404.271301  C273.488800,404.292664 273.977570,404.585327 274.466370,404.877991  C274.296906,405.076508 274.127441,405.275055 273.957977,405.473572  C273.665955,405.163269 273.373962,404.852936 273.040955,404.271301  z\"})),_path2122||(_path2122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#202125\",opacity:1,stroke:\"none\",d:\" M229.735916,500.262115  C230.165649,499.999359 230.332520,499.999969 230.749695,500.000916  C232.269836,500.444061 232.622070,501.802490 233.783630,502.785217  C234.140945,506.289307 234.492096,509.589050 234.349838,512.867432  C234.238480,515.433289 230.720367,517.050110 232.013550,520.593140  C231.686478,523.076538 231.352890,525.141602 231.007202,527.599976  C230.995117,527.993286 230.497437,527.996643 230.248581,527.995850  C228.927094,522.524353 227.073029,517.081970 230.400406,511.648376  C231.173538,510.385895 229.683380,510.159302 228.354034,510.008087  C228.005478,509.251038 228.005447,508.503296 228.006790,507.381653  C228.440887,506.610077 228.794312,506.160400 228.968964,505.289062  C229.152557,503.508484 229.312805,502.016968 229.735916,500.262115  z\"})),_path2123||(_path2123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M240.706116,424.131744  C239.972092,427.593262 241.143875,431.177246 241.055222,434.768250  C241.020721,436.165741 241.835403,436.867493 243.603394,436.980652  C245.942947,441.646210 240.833832,444.122375 240.534332,448.119446  C240.482712,448.808319 239.406372,448.566284 238.900299,448.098724  C238.553513,447.778320 238.120682,447.261414 238.151291,446.865173  C238.712860,439.595398 235.479691,432.145569 239.162491,425.042114  C239.356842,424.667236 239.986862,424.518219 240.706116,424.131744  z\"})),_path2124||(_path2124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M247.355255,423.964142  C247.144379,421.971985 248.288986,421.038055 250.629333,421.003021  C250.808350,423.000763 249.224060,423.428650 247.355255,423.964142  z\"})),_path2125||(_path2125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M253.000885,410.623962  C250.972809,410.447510 250.236130,409.604767 252.675232,408.059265  C253.000381,408.749695 253.000763,409.499420 253.000885,410.623962  z\"})),_path2126||(_path2126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#26201F\",opacity:1,stroke:\"none\",d:\" M236.296143,460.868744  C236.140564,460.210815 236.050217,459.698334 236.186798,459.255920  C236.329666,458.793060 236.731049,458.820648 236.850082,459.298492  C237.003586,459.914673 237.175339,460.595734 236.296143,460.868744  z\"})),_path2127||(_path2127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#25262B\",opacity:1,stroke:\"none\",d:\" M228.760239,505.179993  C230.001892,505.892975 229.772659,506.516510 228.290466,506.968384  C228.181488,506.458496 228.354828,505.909271 228.760239,505.179993  z\"})),_path2128||(_path2128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M241.464203,467.522400  C241.442398,467.481110 241.486008,467.563660 241.464203,467.522400  z\"})),_path2129||(_path2129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M244.314972,401.951630  C244.246063,401.006195 243.438507,399.319031 245.797119,399.786652  C245.901428,400.892426 245.627960,401.657990 244.314972,401.951630  z\"})),_path2130||(_path2130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262529\",opacity:1,stroke:\"none\",d:\" M264.362244,363.912842  C263.752747,363.195221 263.505493,362.390167 263.129120,361.292542  C264.391693,359.840576 263.889526,358.233002 264.001007,356.385284  C264.201111,355.240265 264.270416,354.245880 265.413666,354.516998  C266.497986,354.774170 267.097473,355.811249 266.855469,356.725403  C266.224243,359.109833 266.824402,361.887115 264.362244,363.912842  z\"})),_path2131||(_path2131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M254.231781,369.821594  C252.998291,369.102081 253.230331,368.479767 254.711212,368.035400  C254.817444,368.545807 254.641495,369.094482 254.231781,369.821594  z\"})),_path2132||(_path2132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M674.392822,417.767883  C675.245728,420.121368 674.636536,422.196320 674.161011,424.586517  C671.209290,428.611511 670.822327,433.173309 670.018494,437.416260  C668.926880,443.177826 665.244812,448.519562 666.919739,454.776062  C667.037109,455.214661 666.870972,455.885040 666.525940,456.181763  C661.970825,460.098572 663.013977,464.724762 664.351196,469.693085  C665.126160,472.572205 664.439270,475.650787 662.435913,478.180054  C660.935303,480.074463 660.243835,482.374847 660.093140,484.664398  C659.788330,489.297058 656.932129,493.019257 656.019897,497.755859  C656.189514,499.454041 655.911438,500.684692 654.961548,502.108002  C649.768555,506.754883 645.212708,511.503845 640.063110,515.716797  C633.210938,521.322693 625.164856,524.887756 618.253601,530.246704  C617.198914,531.064453 615.615906,531.761902 615.595337,533.053772  C615.509094,538.469238 611.384155,539.471680 607.688660,541.830200  C601.592285,545.720886 596.070740,550.541077 589.858032,554.385376  C587.301147,555.967529 584.867676,557.625977 581.595886,558.471558  C580.010864,558.617615 579.294556,559.574951 578.093872,560.407471  C577.303528,560.671509 576.828064,560.671509 576.016357,560.429932  C575.099609,559.789307 574.689514,559.178711 574.266418,558.145386  C573.778809,555.625244 574.846741,554.063721 576.711548,553.460999  C585.199463,550.717651 587.135742,542.925293 590.222473,536.078491  C591.202515,533.904480 591.721680,531.622498 594.490662,531.095093  C596.404358,530.730652 596.133179,529.362488 595.913696,527.998291  C595.143005,523.207642 597.061096,519.046082 599.610840,515.359863  C601.797913,512.198120 603.132263,508.579437 605.558167,505.564880  C607.872986,502.688477 604.882874,499.861450 605.080200,496.570831  C607.401367,491.626190 611.582031,491.569580 616.207031,491.756073  C618.158875,492.369873 618.944580,493.602783 619.345825,495.086151  C620.299683,498.612274 622.702454,498.331268 624.373047,496.301147  C627.356689,492.675415 630.011108,488.905884 633.595276,485.683990  C635.653442,483.833832 634.819824,479.751984 634.890991,476.639252  C634.928345,475.003876 634.548157,473.360046 635.098267,471.380920  C635.988159,466.242615 637.598267,461.960144 642.042236,459.264771  C642.706848,458.861664 643.080933,457.874359 643.098328,457.068939  C643.290466,448.164124 649.267883,442.336060 654.526855,435.738647  C659.869080,433.845673 662.804810,430.451111 663.687500,425.144409  C664.322083,421.329498 666.347656,417.987488 667.799011,414.449371  C670.865540,406.973297 670.732666,399.249115 669.538940,391.123291  C670.335388,390.245209 671.061646,389.994507 672.254822,389.931824  C672.905823,390.019104 673.160217,390.089447 673.756470,390.358032  C675.203125,391.564728 674.951660,392.930450 675.104431,394.584381  C675.242676,396.669708 675.335022,398.372406 675.577759,400.473206  C676.071045,402.382294 676.007996,403.912384 675.879150,405.814331  C675.507568,407.372650 674.926880,408.527710 675.533875,410.149414  C676.006592,411.462860 676.005066,412.434784 675.557007,413.752014  C675.274475,414.524078 675.137268,414.954254 674.841797,415.684479  C674.391052,416.452911 674.153931,416.935486 674.392822,417.767883  z\"})),_path2133||(_path2133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M655.321045,498.138031  C653.927429,497.140472 653.541565,495.574036 654.308533,494.907593  C658.722717,491.072144 657.695984,485.527344 659.019287,480.748169  C659.453308,479.180695 660.540833,478.247742 661.399353,477.052368  C663.972473,473.469208 664.124268,469.196411 661.884583,465.915741  C659.704407,462.722107 660.396545,460.603516 662.669189,458.765442  C665.370789,456.580444 666.207764,454.419922 665.115662,451.058105  C663.929199,447.405640 667.266296,444.560028 667.654541,441.414001  C668.292175,436.247467 670.484070,431.534821 671.008972,426.423401  C671.164490,424.908936 671.544800,423.745209 673.701050,424.652649  C674.572632,429.069397 673.066101,433.039551 672.773499,437.555481  C671.715881,438.856750 672.060364,440.101746 671.841553,441.558807  C671.249695,442.638306 670.969788,443.446014 671.060974,444.685638  C671.015198,445.735413 670.951538,446.458160 670.808350,447.534851  C670.234070,448.637848 669.970764,449.452454 670.039917,450.685181  C669.733887,453.108795 669.417542,455.205475 669.210327,457.692139  C669.377380,458.283295 669.435364,458.484467 669.436279,458.992615  C669.083679,460.037415 668.664124,460.749084 668.950806,461.901855  C669.076782,462.618347 669.122620,463.033356 669.151001,463.769257  C669.117920,464.509155 669.043762,464.923798 668.831116,465.625916  C668.401489,466.655823 668.063660,467.389221 668.157104,468.543488  C668.268555,469.522675 668.292786,470.188416 668.283203,471.212280  C668.001038,473.277405 667.724792,474.983612 666.462280,476.741974  C666.250000,477.048126 665.911438,476.821777 665.707825,476.822571  C665.159119,477.631104 664.974670,478.470154 665.013794,479.677307  C664.953918,480.424286 664.891724,480.846313 664.723572,481.571411  C662.574768,483.274292 662.024841,485.226959 662.763672,487.784149  C662.971802,488.428955 662.927246,488.852997 662.782593,489.581909  C660.520325,490.597900 660.893860,492.825867 659.965332,494.661926  C658.903564,496.653870 657.516724,497.787628 655.321045,498.138031  z\"})),_path2134||(_path2134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M667.726807,316.776245  C669.085815,317.201447 670.063049,317.551666 669.726624,318.891632  C668.521912,323.689636 670.038696,327.364594 674.554321,329.316345  C678.329041,330.947845 677.693420,334.692474 678.695801,337.448639  C679.691406,340.185852 680.561279,342.993713 681.562500,345.767242  C682.699341,348.916534 684.793579,352.668884 680.263245,355.398468  C678.817993,356.269196 678.782532,357.917267 679.880615,359.324554  C680.744751,360.432068 680.849060,361.698273 681.034119,363.031372  C681.590454,367.037659 680.125183,367.868652 676.354370,366.010803  C673.279358,361.951843 674.555298,357.167267 673.619629,352.780487  C673.081543,350.257904 672.891602,347.685455 671.323730,345.121277  C670.700073,344.482025 670.450378,344.049805 670.210205,343.216003  C670.194946,341.485443 670.034973,340.197205 668.512451,339.106567  C667.777039,337.783997 667.696533,336.664612 667.804565,335.197632  C668.081299,333.691254 668.456970,332.495422 667.385986,331.134399  C666.979553,330.261475 666.817627,329.638397 666.633911,328.680786  C666.529236,327.685211 666.367065,327.040802 666.027466,326.084503  C665.568542,324.390411 665.270386,323.011627 664.864685,321.279572  C664.670593,319.905762 664.718933,318.907928 665.206543,317.586243  C665.557068,317.056763 665.736877,316.872986 666.284058,316.572754  C666.906006,316.487549 667.160706,316.518738 667.726807,316.776245  z\"})),_path2135||(_path2135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1B1514\",opacity:1,stroke:\"none\",d:\" M662.690186,279.295471  C666.546753,275.815125 663.815857,272.175293 662.658569,269.656982  C660.757141,265.519287 661.230896,261.816589 662.000732,257.411438  C666.755493,259.360626 667.372192,264.646179 669.227783,268.661957  C670.209473,270.786469 674.593018,271.768341 672.298401,275.436615  C670.080994,274.788666 669.220032,272.071655 666.477417,271.587341  C665.726624,275.104614 667.963257,277.842163 668.936890,280.692993  C669.834839,283.322327 670.274292,286.403534 672.809998,288.417999  C673.409729,288.894440 674.365173,290.613068 673.136169,291.506622  C671.796570,292.480560 671.330078,290.738312 670.438843,290.183624  C669.123291,289.364807 668.784424,285.774994 666.003662,288.715424  C663.411072,289.037018 663.750977,286.320465 662.177979,284.881226  C661.485168,282.817291 661.463684,281.167755 662.690186,279.295471  z\"})),_path2136||(_path2136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M670.733154,344.216125  C673.080017,343.906403 673.699280,344.957245 674.076477,346.942688  C675.217529,352.947754 676.348694,358.926025 675.982910,365.538788  C676.307617,368.719727 676.622498,371.440979 676.938232,374.572937  C676.940491,376.689240 676.946228,378.397736 674.185547,378.372009  C670.974792,374.898010 672.265259,370.737610 671.609680,366.967590  C671.252319,364.912170 671.968018,362.677673 670.388916,360.422485  C669.943481,359.262299 669.850769,358.444885 669.912476,357.196533  C671.785522,352.752625 669.024231,348.548340 670.733154,344.216125  z\"})),_path2137||(_path2137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M673.801697,378.272827  C675.732544,378.005890 675.862976,376.493408 676.703552,375.203186  C677.652100,380.962067 682.046875,386.988953 676.386475,392.956177  C674.694763,392.424225 675.306763,390.556061 673.846558,389.631470  C673.431641,389.009888 673.286011,388.611420 673.182617,387.876556  C673.168396,386.752411 673.250854,385.939606 673.083618,384.826416  C672.976562,383.907623 673.015259,383.295746 673.176880,382.389099  C673.380371,381.511353 673.508179,380.929474 673.385681,380.019104  C673.341431,379.291626 673.423767,378.887177 673.801697,378.272827  z\"})),_path2138||(_path2138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M668.025940,316.668823  C668.038208,317.002502 667.541443,317.015869 667.293030,317.018860  C666.154053,316.057312 665.075439,315.269348 664.169067,313.780518  C663.486450,311.458557 663.378784,309.520752 664.449524,307.271912  C664.973938,306.817261 665.237976,306.705200 665.878723,306.800995  C669.095337,307.993073 667.552185,310.431091 667.987183,312.612732  C668.376526,313.390137 668.526855,313.846588 668.225403,314.689819  C668.009460,315.444763 668.011536,315.889923 668.025940,316.668823  z\"})),_path2139||(_path2139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M663.013916,284.766418  C665.497253,285.301453 664.623291,287.462006 665.703613,288.799072  C665.796692,290.192383 665.655457,291.357666 665.253052,292.762177  C664.619385,293.336517 664.186646,293.524323 663.334473,293.432190  C662.402893,292.837952 662.147522,292.177948 661.962036,291.110168  C661.870178,289.843018 661.733826,288.941437 661.264893,287.743286  C661.056091,286.651337 661.143738,285.933685 661.733215,284.972565  C662.236572,284.633850 662.483032,284.573669 663.013916,284.766418  z\"})),_path2140||(_path2140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M662.749756,292.886749  C663.559692,292.976471 663.968750,292.981903 664.684814,292.994354  C665.040344,294.362671 665.088867,295.723938 665.204285,297.488495  C665.876770,298.943359 666.031372,300.060150 665.540039,301.616760  C664.540833,302.598358 663.734924,302.574371 662.618164,301.762634  C661.715088,300.445282 661.510010,299.335388 661.471558,297.769287  C661.571777,295.798218 660.538025,294.030640 662.749756,292.886749  z\"})),_path2141||(_path2141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#111011\",opacity:1,stroke:\"none\",d:\" M691.005493,381.995789  C690.564453,380.813385 689.770081,379.676849 691.264587,379.326538  C692.900391,378.943146 692.942810,380.547699 693.280579,381.548065  C693.601013,382.496948 694.752808,383.867188 692.948181,384.319672  C691.896057,384.583496 691.684875,383.065643 691.005493,381.995789  z\"})),_path2142||(_path2142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#30211D\",opacity:1,stroke:\"none\",d:\" M664.512085,302.532349  C664.777222,301.051178 664.922241,299.899811 665.169250,298.320129  C668.000244,299.219604 666.939026,301.425720 666.307129,303.734497  C665.862305,304.134979 665.674805,304.273712 665.160400,304.286133  C664.551392,303.773193 664.411072,303.338348 664.512085,302.532349  z\"})),_path2143||(_path2143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M675.161255,407.318970  C675.059998,405.283813 675.195190,403.483917 675.529297,401.277649  C677.760071,402.568512 677.091064,404.584076 676.110352,406.818726  C675.677307,407.208527 675.537415,407.381378 675.161255,407.318970  z\"})),_path2144||(_path2144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M673.996765,389.199463  C676.191528,389.409515 675.895752,390.961884 676.036255,392.668549  C675.918396,393.564362 675.767456,394.104187 675.383423,394.805481  C673.945801,394.177582 674.291626,392.841858 673.908447,391.378357  C673.524231,390.524933 673.480286,390.000610 673.996765,389.199463  z\"})),_path2145||(_path2145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M675.707153,413.986786  C675.279358,413.007324 675.147034,411.920776 675.011475,410.416809  C675.173401,409.871216 675.338623,409.743042 675.751953,409.806824  C677.273254,411.291534 677.279663,412.585175 675.707153,413.986786  z\"})),_path2146||(_path2146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M664.307861,304.153748  C664.924927,304.058685 665.149780,304.045807 665.712158,304.014587  C666.064697,304.752991 666.079590,305.509735 666.174927,306.637634  C666.045105,307.007233 665.834778,307.005646 665.308899,307.001404  C662.826294,306.783081 663.243164,305.559357 664.307861,304.153748  z\"})),_path2147||(_path2147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M675.982178,409.627380  C676.000000,409.998779 675.504089,410.009521 675.256165,410.004456  C673.943237,409.328827 674.299866,408.458466 674.796997,407.335022  C674.924805,407.083679 675.373352,407.088104 675.595276,407.061890  C675.866272,407.775757 675.915344,408.515900 675.982178,409.627380  z\"})),_path2148||(_path2148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#151515\",opacity:1,stroke:\"none\",d:\" M668.294312,314.954529  C668.000183,314.557556 667.993042,314.115540 667.989075,313.342163  C668.630127,313.104279 669.390320,313.158264 669.440430,313.953979  C669.459229,314.253296 668.885193,314.589874 668.294312,314.954529  z\"})),_path2149||(_path2149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M674.678833,417.708069  C673.218262,417.558502 672.737976,416.968292 674.432800,416.027588  C674.743713,416.454468 674.803833,416.924469 674.678833,417.708069  z\"})),_path2150||(_path2150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M625.960388,195.910217  C628.984070,195.781616 630.801453,197.010071 632.276855,199.345993  C634.107910,202.244812 636.393250,204.856705 638.742432,207.798706  C641.304626,211.697571 642.316956,215.695175 641.680115,220.427460  C640.961731,221.517334 640.210022,221.787659 638.953491,221.752472  C638.328735,221.579117 638.096069,221.467606 637.600586,221.083069  C635.705383,217.096558 634.222961,213.330597 632.865234,209.502167  C632.045166,207.189941 630.352783,205.331345 627.674988,204.110321  C627.175232,203.790985 626.989319,203.640732 626.579773,203.208466  C625.520203,201.174026 625.048462,199.338837 625.181641,197.035492  C625.389893,196.480011 625.513672,196.274460 625.960388,195.910217  z\"})),_path2151||(_path2151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M606.760132,173.056778  C607.523865,172.903351 607.949890,172.919998 608.694702,172.961029  C610.816284,174.863861 612.666199,176.585449 613.085327,179.479218  C613.436584,181.904968 615.950134,182.900589 617.762573,184.740402  C620.578125,188.441544 624.111633,191.136368 626.162476,195.436493  C626.283386,195.751495 626.116211,195.895996 626.034546,195.970459  C620.088257,196.059052 616.978760,191.475952 613.231934,188.151382  C610.924744,186.104187 609.174927,183.411087 606.488770,181.151489  C605.453430,180.254181 604.797791,179.513321 604.293091,178.216980  C604.117432,175.913452 605.143127,174.509201 606.760132,173.056778  z\"})),_path2152||(_path2152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M640.758423,221.303268  C640.304810,216.987427 639.663025,212.907715 639.011841,208.416428  C639.812622,208.585480 640.622742,209.166092 641.698120,209.886551  C642.044189,211.140701 641.892639,212.361877 643.601929,212.954651  C643.494141,218.061981 648.246521,221.971909 646.962585,227.612946  C644.914612,229.320190 644.147278,227.514816 642.871826,226.204514  C642.560364,225.761093 642.448547,225.578079 642.192749,225.113770  C641.724060,224.087265 641.416809,223.332901 640.785034,222.406906  C640.620789,221.938812 640.595520,221.739105 640.758423,221.303268  z\"})),_path2153||(_path2153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M607.085205,172.660339  C607.350220,174.770309 605.911255,175.906219 605.057739,177.678116  C604.805908,178.158096 604.628113,178.293686 604.113464,178.420837  C602.691101,178.088089 601.771362,177.387115 600.375366,176.892670  C599.214355,176.214630 598.571228,175.499466 597.883911,174.327271  C597.053528,171.848419 595.356689,169.895706 596.800049,167.157715  C598.500427,167.204849 599.918762,167.515671 601.702759,167.822571  C602.783081,168.226624 603.497803,168.634613 604.533081,169.076233  C605.732971,169.691879 606.473999,170.400803 606.995972,171.676361  C607.062927,171.980591 607.072449,172.433960 607.085205,172.660339  z\"})),_path2154||(_path2154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M618.190186,184.820343  C614.201599,184.257812 611.355896,182.910843 611.552551,178.189423  C611.613647,176.722778 609.954163,175.184464 609.047974,173.332184  C613.525879,175.748703 616.575439,179.700378 618.190186,184.820343  z\"})),_path2155||(_path2155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M607.284668,171.776733  C605.951843,171.618576 605.261902,170.862473 604.909485,169.424164  C606.473999,169.138077 607.875549,169.401947 607.284668,171.776733  z\"})),_path2156||(_path2156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M642.702148,225.259811  C644.100098,225.974762 645.207581,226.947647 646.627563,227.982864  C646.975159,228.463348 647.010193,228.881516 647.093079,229.610275  C646.762878,231.650955 647.260132,233.425674 648.143982,234.658066  C653.554016,242.201996 654.425415,251.127609 656.196716,259.795898  C656.278992,260.198456 656.820618,260.507202 657.500854,260.982849  C657.884827,262.484894 657.916199,263.863770 657.895996,265.655396  C653.935852,267.241364 654.398804,262.530640 651.728699,261.422607  C650.949402,260.256531 650.802917,259.276581 650.756836,257.907990  C650.702393,251.925659 649.419678,246.676788 645.818542,241.810562  C644.478455,240.284210 643.541321,238.913818 642.979858,236.940125  C642.799561,234.824921 643.143127,232.995712 642.121826,230.987244  C641.926331,230.419769 641.860168,230.184998 641.738647,229.582153  C641.585388,227.914825 641.676514,226.652832 642.702148,225.259811  z\"})),_path2157||(_path2157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M651.820557,261.177307  C655.841125,260.501953 654.728027,265.020111 657.515259,265.985352  C657.844482,266.068176 657.967102,266.509460 657.996460,266.736572  C659.181885,267.889526 658.814514,269.395447 659.547729,270.827667  C659.774231,271.543762 659.841614,271.975067 659.930542,272.733215  C660.915283,274.257782 661.054443,275.631042 660.632202,277.470337  C660.057922,278.282196 659.569580,278.519836 658.580750,278.486816  C656.825623,277.670563 656.760132,276.179443 656.007324,274.634460  C654.811462,271.423187 654.116272,268.457825 652.115417,265.993103  C651.104553,264.747894 650.692200,263.088379 651.820557,261.177307  z\"})),_path2158||(_path2158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M659.433838,278.509521  C659.767273,276.753662 659.854248,275.333038 659.946655,273.486267  C662.688293,274.009735 661.386841,276.815796 662.731689,278.763763  C663.038086,280.723907 663.078613,282.447693 663.208740,284.595428  C663.092163,285.026520 662.886108,285.033722 662.371277,285.020996  C661.620605,285.378937 661.109741,285.541840 660.144409,285.330566  C658.932617,284.308960 658.684875,283.228088 658.590820,281.673523  C658.629944,280.410980 658.747192,279.588562 659.433838,278.509521  z\"})),_path2159||(_path2159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M659.796143,270.741089  C657.849304,270.623535 657.978821,269.128845 658.002563,267.331543  C660.060852,267.326355 659.985229,268.841400 659.796143,270.741089  z\"})),_path2160||(_path2160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A55933\",opacity:1,stroke:\"none\",d:\" M572.725586,574.287109  C575.071106,573.605896 577.028320,572.718262 579.585571,572.977783  C583.759033,571.542480 587.007019,568.733765 591.644531,568.827393  C595.447144,569.569031 598.902283,570.143616 602.688721,570.866577  C603.357300,573.339844 601.537903,574.319275 600.041809,575.144592  C595.814514,577.476807 591.793884,580.235229 587.349609,582.113281  C581.373474,584.638794 576.451477,589.085022 570.211609,591.312073  C576.486633,590.489868 582.770874,590.021667 588.722412,588.078064  C594.187561,586.293274 599.842896,586.072632 605.425293,585.264099  C607.532593,584.958862 609.498901,585.570190 609.233276,588.688232  C609.344482,590.406982 609.666138,591.835022 609.993896,593.632812  C609.349060,594.628723 608.558289,594.698120 607.725159,594.553650  C602.281067,593.610046 597.013000,593.661987 592.173767,596.904907  C591.102051,597.623108 589.685242,597.657043 588.071899,597.965393  C586.336731,598.230286 584.761597,597.773926 583.374756,599.266296  C582.715942,599.649780 582.300354,599.783813 581.538635,599.906250  C578.293823,600.792480 575.200745,598.287415 572.043457,600.566528  C571.050354,600.940063 570.355225,600.971619 569.308960,600.761475  C566.933716,599.308228 564.802551,599.789368 562.726685,600.446655  C558.302063,601.847717 553.808228,600.963989 549.345154,600.936401  C547.792847,600.926819 546.302002,600.273254 545.723999,598.716370  C545.061707,596.932495 546.485535,595.996460 547.683899,595.097229  C549.413452,593.799377 551.224060,592.616211 553.032043,591.429565  C553.713318,590.982422 554.581299,590.492126 554.424377,589.541565  C554.224121,588.328430 553.077942,588.045593 552.121399,588.105469  C548.989563,588.301636 545.830933,587.660522 542.356079,588.488037  C541.736389,588.539551 541.483032,588.518188 540.878296,588.334534  C539.661499,587.429993 539.263611,586.514954 539.669556,585.013000  C541.941711,582.681030 544.699768,582.655640 547.283081,582.179932  C555.954529,580.583130 564.082031,577.220642 572.725586,574.287109  z\"})),_path2161||(_path2161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M609.388855,589.035400  C608.777161,587.333130 608.155518,585.886475 606.168579,586.475769  C600.176514,588.252930 593.906616,588.398438 587.794861,589.943237  C580.794128,591.712769 573.377380,594.703735 564.643860,592.580444  C577.623962,584.744507 590.881348,579.509460 602.808044,571.278076  C606.222351,571.451355 606.509827,567.284973 609.648438,567.049927  C609.795288,569.325684 608.353516,570.987793 607.137268,572.751038  C604.839844,576.081848 607.025818,579.636597 609.069458,580.413818  C615.083435,582.700928 616.662231,587.508972 618.122009,592.716187  C618.567749,594.306274 620.160156,595.405640 619.986511,597.623596  C618.545166,597.927917 616.913025,597.198547 616.819336,596.008362  C616.463196,591.480774 612.911926,590.558167 609.388855,589.035400  z\"})),_path2162||(_path2162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M592.025391,568.677856  C588.204346,570.182129 585.043762,573.129578 580.383850,572.979492  C583.125793,568.995422 587.384155,566.989197 592.615295,566.011841  C592.686340,566.790344 592.372559,567.575806 592.025391,568.677856  z\"})),_path2163||(_path2163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M713.672241,522.939209  C713.750305,525.155457 714.877930,527.838928 711.372498,528.944580  C711.046448,527.659485 710.798340,526.422607 709.902954,525.345703  C708.605225,523.784973 708.932800,522.002747 710.284363,520.982727  C712.307983,519.455566 711.771240,523.067505 713.672241,522.939209  z\"})),_path2164||(_path2164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#201C1C\",opacity:1,stroke:\"none\",d:\" M702.353638,506.425537  C701.614868,506.631958 701.346985,506.373169 701.460999,505.799805  C701.484619,505.680756 701.653992,505.520599 701.774475,505.502747  C702.353699,505.416809 702.596619,505.698792 702.353638,506.425537  z\"})),_path2165||(_path2165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M586.760498,597.328918  C592.520813,595.737610 597.119751,591.686646 603.440125,592.385681  C605.609863,592.625732 607.386780,593.218750 609.643921,593.955566  C617.483704,600.852905 620.789551,609.560303 620.940857,619.495789  C621.016235,624.450500 621.529175,629.443481 620.288635,634.690308  C618.452759,631.650757 617.999512,627.938660 618.146362,624.456116  C618.419617,617.975830 617.095703,612.114502 614.318115,606.300659  C611.777954,600.983765 610.784302,600.242493 604.385864,601.949951  C598.304688,601.217896 592.496460,601.871948 586.617188,600.322021  C586.120056,599.193298 586.150146,598.414490 586.760498,597.328918  z\"})),_path2166||(_path2166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M620.246826,644.734253  C617.975098,642.916382 619.862305,640.580994 619.774292,638.195984  C621.631775,640.042908 621.125061,642.252869 620.246826,644.734253  z\"})),_path2167||(_path2167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M618.381226,655.021240  C618.164734,654.160095 618.319702,653.293335 618.719727,652.199707  C619.362488,651.607788 619.827637,651.469299 620.669434,651.780029  C621.146912,652.003967 621.315125,652.005432 621.735596,652.004639  C621.981384,652.445923 621.974976,652.889404 621.960083,653.665527  C621.647583,654.121582 621.400208,654.316772 621.094910,654.794312  C620.237854,655.008484 619.495239,655.012085 618.381226,655.021240  z\"})),_path2168||(_path2168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M619.246216,650.203247  C618.196533,649.541260 617.262634,649.089417 617.458252,647.969543  C617.631592,646.977783 618.582214,647.109558 619.649597,646.995178  C619.988647,647.742493 619.999329,648.498596 620.009644,649.632507  C619.840332,650.136658 619.671326,650.263000 619.246216,650.203247  z\"})),_path2169||(_path2169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M618.989563,650.343140  C619.160034,650.014954 619.329834,650.012878 619.754456,650.010559  C620.318176,650.479492 620.627075,650.948547 620.957275,651.710083  C620.531494,651.997803 620.084412,651.993164 619.301025,651.980713  C618.972839,651.538330 618.980835,651.103760 618.989563,650.343140  z\"})),_path2170||(_path2170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M620.749023,658.253052  C622.601685,659.699463 622.183838,661.234924 620.318420,662.843445  C620.092407,661.506897 619.692017,659.950256 620.749023,658.253052  z\"})),_path2171||(_path2171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M610.598694,702.033997  C610.137512,704.822693 609.324951,707.669006 608.245544,710.756714  C604.097595,707.614136 604.097595,707.614136 610.598694,702.033997  z\"})),_path2172||(_path2172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M609.077209,698.276001  C609.930115,698.087097 610.680115,698.388306 610.919312,699.705750  C610.065552,699.898376 609.311157,699.602478 609.077209,698.276001  z\"})),_path2173||(_path2173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M588.303467,717.962219  C588.092285,717.320007 588.180908,716.565918 588.967834,716.549500  C589.277100,716.543091 589.598328,717.108948 589.963623,717.698608  C589.557251,717.982117 589.101196,717.981262 588.303467,717.962219  z\"})),_path2174||(_path2174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#797873\",opacity:1,stroke:\"none\",d:\" M612.534912,714.477539  C612.556702,714.519043 612.513062,714.435974 612.534912,714.477539  z\"})),_path2175||(_path2175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E3976F\",opacity:1,stroke:\"none\",d:\" M563.751099,668.753418  C566.208801,673.866211 570.004211,670.728149 573.141479,670.751099  C574.220581,670.759033 575.398499,669.555115 576.377991,670.691406  C577.470215,671.958557 575.833740,672.666138 575.530273,673.659912  C574.889771,675.757080 573.632141,677.442017 572.573364,679.294678  C570.753662,682.479004 567.949036,685.503479 569.671570,689.885864  C570.332520,691.567627 569.478149,693.829529 568.181824,694.942444  C561.409973,700.756287 559.362000,709.174744 556.105042,716.825073  C554.767151,719.967651 552.457397,722.560791 551.805176,726.180847  C550.813477,731.685364 548.855225,736.635559 549.209290,742.780701  C549.496338,747.763428 549.332153,753.037598 549.987366,758.590210  C549.201599,760.940002 549.664001,763.373840 547.351196,764.928223  C542.471497,763.038757 543.443237,758.310364 542.126953,754.831604  C539.239685,747.200745 541.422119,739.763611 544.244812,732.579590  C545.942749,728.258118 546.595398,724.017090 545.353455,719.468018  C544.519104,716.411865 545.257324,713.953186 547.659180,711.399719  C551.004028,707.843750 554.206543,703.867981 552.159790,698.084045  C551.424377,696.005920 551.881775,693.508484 552.738953,691.235168  C553.452637,689.342346 554.789612,687.257629 550.826294,686.802673  C547.890381,686.465637 550.119873,684.825806 550.771423,683.723145  C551.618042,682.290466 554.589294,681.489563 553.115906,679.472412  C551.645447,677.459412 549.149658,677.717102 546.747681,678.772095  C542.298584,680.726013 537.789124,682.584351 533.187744,684.135315  C529.914246,685.238708 526.951843,682.810181 523.670776,682.563110  C520.177124,682.300110 517.055664,681.777710 513.567627,683.354187  C510.905640,684.557312 507.431122,685.205505 504.769531,682.505615  C503.869019,681.592163 503.028503,680.898010 501.796844,681.862549  C500.851776,682.602783 499.968292,683.460815 500.479340,684.799988  C501.508362,687.496277 501.659149,690.519348 504.950989,692.127991  C507.735840,693.488892 510.749115,695.577820 507.005554,699.265259  C506.480774,699.782227 506.004059,700.931641 506.220428,701.529297  C509.041840,709.322937 506.032257,717.261047 506.894531,725.123413  C507.473816,730.405823 504.966827,734.655823 500.158783,737.238770  C497.746613,738.534729 496.567780,740.216309 495.530212,743.008667  C493.670715,748.012878 489.086700,750.798096 483.369781,751.949585  C483.255951,749.662170 482.474701,747.606445 481.152283,745.325317  C482.788422,739.938293 486.625458,736.211304 489.553986,731.899109  C490.858917,729.977661 492.348206,728.185303 493.323975,726.054077  C494.058350,724.450073 494.137024,722.981323 493.072723,721.370667  C488.977173,715.172607 487.861084,708.548950 490.820496,701.552734  C492.079437,698.576660 491.762817,696.068909 489.285248,693.925781  C486.745605,691.728882 486.143799,689.249207 488.427185,686.563843  C489.720032,685.043457 489.838562,683.826233 488.500336,682.232300  C486.734924,680.129517 487.501099,678.438965 489.983765,677.768372  C492.810394,677.005005 494.350983,675.212952 495.662109,672.685486  C498.539917,667.137512 502.849457,665.624329 508.664307,667.772339  C510.118073,668.309387 511.598358,668.501160 513.067261,668.189331  C519.376465,666.849670 525.627441,667.693481 531.892578,668.517212  C533.726685,668.758301 535.573181,669.030396 537.082031,670.105530  C540.250488,672.363403 543.500305,672.507446 547.249023,670.685669  C548.028809,670.320007 548.504700,670.207520 549.359985,670.181763  C550.932373,670.356995 552.052185,671.312683 553.362671,670.145264  C556.354736,667.479858 559.910645,667.761902 563.751099,668.753418  z\"})),_path2176||(_path2176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M548.091064,670.653625  C545.544250,674.057922 542.090149,675.111572 538.990784,673.139526  C531.446289,668.339294 523.312134,668.846497 515.099548,669.518311  C511.839447,669.785095 508.725525,670.998779 505.941925,667.835022  C504.583191,666.290649 497.918640,669.989136 497.102997,672.913391  C496.054108,676.673950 494.472015,679.364075 490.033356,679.071411  C489.412628,679.030518 488.619141,679.214294 488.549561,680.072693  C488.469666,681.058228 489.178589,681.558472 489.989807,681.823853  C494.284210,683.228882 492.849640,685.048950 490.309509,686.808655  C487.275848,688.910156 487.250916,690.560242 490.372986,692.831543  C493.347229,694.995361 494.494995,697.558960 492.470886,701.750244  C489.314850,708.285339 489.607910,715.057983 495.041290,720.803528  C496.339325,722.176147 496.473145,724.051880 495.558197,725.451294  C491.230469,732.070740 487.307373,739.011169 481.207336,744.732788  C476.818176,745.075012 473.482544,747.598083 469.364197,748.952759  C468.685181,748.527039 468.367950,748.056458 468.020477,747.291748  C467.662354,746.627380 467.454468,746.200989 467.426941,745.349915  C469.360138,740.694946 471.793243,736.830261 475.548828,733.842407  C479.213623,730.926819 480.619629,726.543335 482.392090,722.440979  C483.280243,720.385315 482.302582,718.589844 481.429749,716.765015  C479.486267,712.701904 476.244476,709.453369 474.281128,704.996094  C474.171173,704.118469 474.225861,703.615295 474.524384,702.764526  C477.617310,699.370361 478.847992,695.750854 478.710327,691.530640  C478.517242,685.610901 481.183441,680.332458 483.460571,675.205566  C485.848267,669.829712 488.282471,664.821289 487.621521,658.673340  C487.077209,653.610413 488.963928,650.600281 493.527588,649.649292  C503.272522,647.618469 513.214600,647.347412 523.510132,647.524658  C524.772888,648.050903 525.669861,648.463684 526.603943,648.812561  C532.725830,651.099548 532.852844,651.310425 528.775818,656.308044  C526.797791,658.732666 527.855591,659.552979 530.095032,660.602661  C535.160278,662.976562 539.696045,666.441772 545.252991,667.826111  C546.529175,668.144043 547.666809,668.934570 548.091064,670.653625  z\"})),_path2177||(_path2177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M457.816711,859.109131  C458.547546,856.564880 460.404541,857.061157 462.474701,857.152710  C463.032196,857.250610 463.211395,857.329468 463.269836,857.140625  C463.103180,856.451660 463.057281,856.030334 462.993042,855.291260  C469.996643,858.986328 471.486511,865.663330 467.108673,874.574219  C464.481323,875.580322 466.049042,871.816467 463.581696,872.169861  C462.322113,872.225708 461.407074,872.147278 460.224396,871.605225  C459.393250,870.890686 459.146240,870.235779 459.026001,869.172974  C459.099396,867.556580 459.633575,866.297180 459.091003,864.692261  C459.017700,863.970703 459.036926,863.562012 459.195435,862.876465  C459.485016,862.264038 459.759125,862.024658 459.903015,861.761292  C459.528595,861.483765 459.387604,861.358643 459.048340,861.027893  C458.496185,860.365601 458.115387,859.927429 457.816711,859.109131  z\"})),_path2178||(_path2178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M463.707458,871.284729  C466.958801,869.895142 466.958801,869.895142 466.714783,874.686340  C466.329498,876.038635 465.718903,877.184570 465.090759,878.654724  C463.075287,880.760132 461.077362,882.541382 459.012329,884.649902  C455.771118,884.040100 454.168457,880.651978 450.551453,880.014526  C448.818115,879.708984 451.866791,877.486511 450.864685,875.641174  C451.649109,874.031067 452.870056,873.747498 454.601196,873.856628  C456.648163,873.983154 458.186157,876.811890 460.238770,873.948975  C461.317017,872.773254 462.660828,872.495239 463.707458,871.284729  z\"})),_path2179||(_path2179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M475.248657,702.694519  C475.004547,703.442932 475.002991,703.889099 475.000732,704.669800  C475.327698,707.766174 474.657135,710.307983 472.942810,712.448914  C470.372711,715.658569 470.460999,719.957275 468.295166,723.315979  C467.923492,723.892456 468.008667,724.644104 468.356934,725.218201  C472.225525,731.595398 469.996216,738.000366 468.245178,744.699524  C468.003479,745.439575 468.000854,745.884705 467.994202,746.663696  C464.491791,746.761414 465.634216,751.525940 462.353577,751.951416  C459.194489,750.348328 458.669922,747.554749 458.561676,744.692017  C458.285980,737.400879 457.113098,730.448181 455.062988,723.295044  C453.109467,716.478760 455.438751,708.726440 460.363037,702.811523  C462.696747,700.008240 464.442291,697.264587 464.675537,693.574402  C464.903320,689.970154 467.475311,687.216980 468.538239,683.497864  C470.852295,677.899048 470.590698,671.956848 473.765411,666.890015  C475.402649,664.276978 474.535400,660.839783 473.193054,657.804016  C470.970306,652.777161 471.610596,651.186584 476.873413,648.136597  C480.795044,647.968445 481.567902,646.917175 479.403809,643.619385  C476.422760,639.076782 478.042999,636.073242 483.374268,636.087769  C484.370880,638.564636 485.123871,640.702515 486.636841,642.590515  C489.027893,645.574280 489.021484,648.701965 486.257843,651.563904  C484.960266,652.907593 483.840302,654.245911 483.957458,656.314270  C484.381500,663.799133 483.618256,671.120422 481.262054,678.301025  C478.682648,686.161804 475.822113,693.981812 475.248657,702.694519  z\"})),_path2180||(_path2180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M469.686279,682.771240  C470.070007,684.873840 469.888977,686.573975 468.498840,688.094910  C467.648529,689.025269 466.826447,690.364990 466.760437,691.563232  C466.444794,697.291870 463.769592,701.539368 460.023407,705.831116  C456.220245,710.188232 457.642365,716.774475 455.383209,722.005615  C455.283691,722.236023 455.447601,722.704834 455.644470,722.920471  C461.163330,728.965576 459.676697,736.507996 459.911102,743.610596  C460.003204,746.401489 460.975677,748.760559 461.949280,751.614746  C461.630341,757.368408 459.722076,762.366272 463.088898,768.105225  C464.868195,771.138123 463.650360,777.204285 459.272369,780.793396  C458.506165,780.757507 458.012634,780.505249 457.270416,780.131226  C459.365417,776.526794 461.807404,773.078125 460.006592,768.506165  C459.773132,767.913330 459.990082,766.979736 459.608582,766.633911  C455.582367,762.983459 456.706879,758.339661 457.009491,753.428589  C455.816437,748.334473 456.210297,743.378113 454.865631,738.792114  C453.708710,734.846436 451.314789,731.271851 451.900848,726.868164  C452.102722,725.351257 450.773926,724.564209 449.644104,723.329590  C449.252014,722.563354 449.123627,722.085510 449.027771,721.214355  C449.583344,715.970093 446.471985,711.697571 447.080841,706.674683  C447.945526,699.542053 449.790863,693.360535 456.752197,689.864868  C459.008911,688.731750 460.701141,686.850647 462.397644,685.003723  C464.272217,682.962891 466.365143,681.389648 469.686279,682.771240  z\"})),_path2181||(_path2181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M483.247803,635.755798  C478.376221,638.199768 477.914886,639.708008 480.777313,643.269714  C484.019073,647.303467 483.696075,648.158875 478.220367,649.237305  C477.087921,645.859741 474.782227,643.378235 473.720154,639.898254  C471.888519,632.824402 469.733826,626.290283 471.569305,619.045593  C472.590698,615.014160 473.977478,611.563599 477.249847,608.513062  C478.099365,608.156982 478.610382,608.050232 479.520203,608.012329  C484.507690,608.100525 488.945160,610.576050 493.981445,608.779053  C494.525879,608.504883 494.754578,608.417603 495.342804,608.272095  C495.941925,608.224915 496.181549,608.235901 496.766052,608.335266  C499.468536,609.881409 501.868713,611.149231 505.137299,610.086182  C505.996704,609.999817 506.495514,610.019653 507.375183,610.170105  C513.575012,611.364990 519.442993,612.790283 525.341003,612.387512  C533.534485,611.828064 540.533936,614.787292 547.739990,618.684814  C547.884949,621.130920 548.048096,623.226624 548.946655,625.612366  C542.743164,624.207703 536.607910,624.598022 530.655884,627.190674  C529.071655,627.880798 527.486145,628.022034 525.415649,628.003052  C521.294739,627.074036 518.231934,624.769104 514.931519,623.032043  C512.460510,621.731506 510.088348,620.917847 507.364532,621.053955  C502.583282,621.292847 497.892456,622.209351 493.004364,621.822327  C489.041382,621.508545 483.726227,627.938293 483.690125,632.085144  C483.680115,633.236206 484.076508,634.393188 483.247803,635.755798  z\"})),_path2182||(_path2182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C4794A\",opacity:1,stroke:\"none\",d:\" M548.171997,618.688965  C543.751526,619.592163 540.426880,616.782166 536.814514,615.465698  C533.536255,614.270935 530.456726,613.934265 527.212585,614.039001  C520.465881,614.256775 513.909607,613.220520 507.208893,611.278809  C507.103424,608.860901 507.103424,608.860901 511.722015,608.002808  C512.587097,607.806091 513.089966,607.746277 513.977417,607.721680  C519.346191,608.281433 524.324097,609.327515 529.343567,607.884521  C530.626282,607.515808 532.021912,607.436951 533.267761,607.852234  C537.143799,609.144104 540.737122,608.441528 544.595337,606.473755  C545.475159,606.196228 546.000977,606.147705 546.933228,606.236450  C559.276062,609.088013 571.058533,608.682129 582.663208,604.551147  C584.875793,603.763489 587.120178,603.025269 589.684692,604.746338  C591.515991,606.688965 592.678284,608.740051 595.707214,607.341187  C597.337341,606.588379 599.691956,604.857910 601.169922,606.710815  C602.417297,608.274597 600.436707,610.362122 600.049805,612.630371  C593.621155,608.965027 588.567505,614.027832 583.145447,615.703003  C577.383240,617.483215 571.672302,617.851257 565.765442,617.445068  C559.930420,617.043884 553.943359,614.308228 548.171997,618.688965  z\"})),_path2183||(_path2183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BD6C42\",opacity:1,stroke:\"none\",d:\" M590.066772,604.656311  C584.337219,604.214233 579.280823,607.115784 574.209900,608.533386  C566.556885,610.672668 559.384521,609.331238 552.045593,608.651184  C550.521729,608.509949 548.348450,609.774048 547.053955,607.339539  C547.692200,604.915894 549.496521,604.664490 551.288330,604.597229  C552.959412,604.534546 554.465576,604.168457 556.130005,602.949951  C560.119080,601.495850 563.785339,600.468140 568.021179,601.710327  C570.782837,602.797668 573.206116,603.991882 575.822815,601.425415  C576.750305,600.951172 577.422424,600.779724 578.463440,600.638184  C580.929504,600.590393 583.052490,600.624695 585.355591,599.535156  C585.948303,599.509277 586.186096,599.541382 586.711914,599.789185  C588.044312,600.445251 589.132263,601.316956 590.246643,600.723145  C594.845581,598.272888 599.126465,600.331665 603.741882,601.739136  C602.716919,603.954529 601.452087,604.555237 598.788940,603.765808  C596.146484,602.982422 592.712585,600.284119 590.066772,604.656311  z\"})),_path2184||(_path2184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DA9264\",opacity:1,stroke:\"none\",d:\" M548.333618,671.002075  C546.246338,668.969055 543.667786,668.441162 541.326172,668.050354  C535.788635,667.126038 532.432556,662.150208 526.901001,660.957336  C524.082397,660.349548 524.778320,657.317139 527.101379,655.571899  C528.395081,654.600037 530.679871,653.978394 530.382446,652.254822  C530.024414,650.180359 527.282410,651.094299 525.841797,650.103149  C525.444336,649.829773 524.940369,649.711304 524.242676,649.260864  C523.950806,646.719238 525.814636,646.757812 527.069519,646.973633  C531.368286,647.713135 535.272461,645.762329 539.702148,645.245972  C541.920288,644.698242 543.703003,643.751526 545.814758,644.700439  C547.546021,645.478394 549.253845,644.766113 550.952515,643.717529  C556.967102,640.004944 563.145020,636.778381 570.475098,636.228455  C574.708557,635.910828 578.153259,632.060486 582.672852,632.655579  C588.450378,633.416443 594.194092,634.459656 599.924561,635.530151  C601.021057,635.734985 602.582764,637.170532 601.661377,637.985840  C597.339050,641.810120 602.034729,648.321716 597.143372,651.973938  C595.412842,653.266113 596.689270,655.295654 597.469727,656.994568  C600.454529,663.491699 599.705017,667.158020 594.675842,671.953369  C593.855469,672.735596 592.848450,673.760376 592.727600,674.768921  C591.705017,683.307007 584.735901,687.483826 579.477905,692.823608  C577.470581,694.862183 575.628113,696.923584 574.155701,699.327271  C569.973328,706.154907 565.842468,713.014038 561.346924,719.931641  C562.786682,712.654053 565.039001,705.480225 569.372620,699.171753  C571.631226,695.883972 573.952881,692.657166 573.997192,688.454773  C574.014526,686.810730 574.938965,685.734497 575.864807,684.539673  C576.658936,683.514771 577.919250,682.026917 577.652283,681.142639  C576.279602,676.596436 578.394104,674.481506 582.289307,673.002686  C583.511047,672.538879 584.134094,671.097229 583.817993,669.623962  C583.433594,667.832520 581.933350,668.046387 580.641846,668.017700  C578.004211,667.959106 575.332886,668.244568 572.409790,667.059937  C570.555176,666.940979 569.589722,666.115112 568.658630,665.090820  C563.496460,659.411987 558.947449,659.904846 555.562012,666.408081  C554.489746,668.467896 553.364929,670.573608 550.352783,670.999268  C549.556946,671.000671 549.112122,671.001160 548.333618,671.002075  z\"})),_path2185||(_path2185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D88861\",opacity:1,stroke:\"none\",d:\" M539.564697,645.001465  C536.609680,647.889099 532.500916,648.559570 528.272766,648.521912  C527.031128,648.510864 525.793701,647.739014 524.258911,648.738342  C521.417175,647.778931 518.828674,648.526550 516.249817,648.998962  C509.297028,650.272461 502.136292,649.013123 495.220520,650.759094  C489.691956,652.154785 487.333008,654.738037 489.268036,659.922363  C491.112274,664.863586 488.611511,668.760010 486.954956,671.912170  C483.202484,679.052612 480.213989,686.146667 480.205963,694.214111  C480.202148,698.066833 478.899231,700.865417 475.351013,702.930603  C475.004089,699.665955 475.153076,696.326294 474.958679,693.006714  C474.752930,689.493774 475.239532,686.407959 478.288239,684.148193  C478.919586,683.680115 479.685516,682.839600 479.691040,682.165161  C479.762360,673.450134 484.178101,665.143921 482.091309,656.224731  C481.597504,654.114258 482.392365,652.542969 484.235352,651.112122  C488.058777,648.143860 488.111237,645.935608 484.626862,642.824280  C482.653625,641.062317 481.800690,639.213684 482.959137,636.350708  C483.622986,633.602173 480.162628,631.023010 481.863464,629.607544  C484.849335,627.122681 485.446045,622.755066 489.274017,621.124878  C490.336060,620.672607 491.314545,619.790466 492.484497,620.049683  C498.677826,621.422058 505.029083,618.044312 510.744019,619.681213  C515.581299,621.066650 521.056885,622.962341 524.734741,627.792480  C526.477539,631.625977 525.146606,636.436707 529.580505,638.803406  C527.451294,649.051086 535.233948,644.029907 539.564697,645.001465  z\"})),_path2186||(_path2186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M550.154053,671.286377  C552.265503,669.078430 554.320923,667.022644 555.015259,663.965881  C555.447205,662.064026 555.985413,659.061035 558.026550,659.586670  C561.645996,660.518799 566.309998,658.112732 568.868774,662.449951  C569.697754,663.855042 570.144348,665.468689 571.789734,666.725525  C569.648193,668.348328 566.548767,665.819946 564.223022,668.727051  C560.278015,670.145630 555.713440,668.331238 552.762817,672.389526  C552.076538,673.333435 550.964722,672.395203 550.154053,671.286377  z\"})),_path2187||(_path2187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M305.669434,401.033569  C305.264160,405.125977 305.797791,409.859406 300.390106,411.963684  C300.681183,409.269592 301.332977,406.524261 301.995422,403.391296  C303.119476,402.358551 304.232849,401.713440 305.669434,401.033569  z\"})),_path2188||(_path2188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M299.634460,414.084717  C298.771484,416.347351 300.993988,418.150146 300.997192,420.652924  C300.559296,421.392609 300.206268,421.843170 300.033234,422.717712  C300.008698,423.450104 300.006592,423.892578 300.003479,424.666931  C298.598877,426.255157 297.273438,426.582764 296.069153,424.340698  C296.004333,423.560760 296.006500,423.113586 296.011902,422.331177  C296.713898,421.247772 296.879700,420.177917 297.780945,419.209198  C298.293030,417.352875 297.210052,415.344177 299.634460,414.084717  z\"})),_path2189||(_path2189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M282.644287,483.063171  C283.952789,483.581787 285.443390,484.828705 284.271973,485.425995  C281.058533,487.064392 281.786224,490.774811 279.312500,492.919708  C276.586395,488.524231 280.681580,486.247131 282.644287,483.063171  z\"})),_path2190||(_path2190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M262.661316,495.977600  C261.017273,497.249908 259.687714,497.360504 259.150238,495.298248  C258.895477,494.320709 259.096283,492.998138 260.190552,492.851990  C262.055969,492.602905 262.617096,494.063721 262.661316,495.977600  z\"})),_path2191||(_path2191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M287.627441,474.054291  C287.214752,475.936340 287.676056,478.377045 285.309204,479.901489  C285.028748,477.739868 284.877655,475.427277 287.627441,474.054291  z\"})),_path2192||(_path2192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M260.478058,515.210327  C260.977448,514.292847 261.297791,513.182251 262.186188,513.601379  C263.138580,514.050659 262.500732,515.009827 262.091278,515.627075  C261.520172,516.487915 260.800659,517.286987 260.478058,515.210327  z\"})),_path2193||(_path2193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M260.283020,489.098755  C261.018768,488.124084 261.804504,487.897766 262.399872,488.707031  C262.825928,489.286224 262.425812,490.000244 261.835449,490.324280  C260.892151,490.841980 260.347015,490.404205 260.283020,489.098755  z\"})),_path2194||(_path2194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M297.657501,419.061798  C297.968140,420.129578 297.549774,421.058502 296.296265,421.846436  C296.056061,420.860504 295.885803,419.628906 297.657501,419.061798  z\"})),_path2195||(_path2195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#362C2D\",opacity:1,stroke:\"none\",d:\" M254.999115,496.750000  C254.897751,496.730133 254.797729,496.461700 254.846848,496.098816  C254.995972,496.004333 255.000488,496.501465 254.999115,496.750000  z\"})),_path2196||(_path2196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392D2C\",opacity:1,stroke:\"none\",d:\" M255.465607,520.521118  C255.444061,520.480347 255.487137,520.561829 255.465607,520.521118  z\"})),_path2197||(_path2197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#32292B\",opacity:1,stroke:\"none\",d:\" M264.861481,548.500610  C261.989166,547.313354 263.289154,546.146240 264.747681,545.211914  C265.615417,544.656006 266.989777,543.591064 267.671539,545.118408  C268.637634,547.282715 266.836700,547.907349 264.861481,548.500610  z\"})),_path2198||(_path2198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M240.343750,667.969910  C240.092575,667.123108 240.356613,666.355896 241.678375,666.046753  C241.905746,666.883118 241.636063,667.645081 240.343750,667.969910  z\"})),_path2199||(_path2199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#271E1E\",opacity:1,stroke:\"none\",d:\" M295.342590,464.987854  C294.921661,462.470367 295.352112,460.115356 297.685760,458.163361  C299.695251,461.114258 299.626251,463.668182 295.342590,464.987854  z\"})),_path2200||(_path2200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M419.331879,282.047791  C418.287811,282.076141 417.541748,282.087067 416.423584,282.123901  C410.061005,284.060608 404.280884,283.481415 398.588013,280.239471  C398.820526,277.726196 400.533173,276.999420 402.488434,275.964355  C405.930725,275.252655 409.026184,275.222778 412.477539,274.709839  C421.957825,276.138916 430.936859,275.766510 440.038635,274.392944  C447.492157,273.268127 455.046936,272.384613 462.652771,272.449219  C467.067719,272.486725 470.835907,275.182281 475.582947,275.406494  C476.374756,275.930847 476.689270,276.361908 476.999664,277.256561  C476.219574,283.659851 475.800140,283.786224 470.460663,281.620728  C466.531403,280.027130 462.481781,278.506653 457.685059,279.196930  C453.491364,278.870178 449.726532,279.110535 445.739471,280.501556  C444.955902,280.795502 444.490143,280.888214 443.664612,280.923279  C440.655182,280.187531 438.034698,280.322876 435.146545,281.415588  C433.823517,281.716919 432.806213,281.887482 431.417114,282.171204  C428.298035,282.257874 425.550690,282.231415 422.403809,282.205444  C421.221069,282.035736 420.428101,281.997528 419.331879,282.047791  z\"})),_path2201||(_path2201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M419.210876,282.297302  C419.763214,280.952484 420.649780,280.836761 421.843323,281.926788  C421.893829,282.515350 421.696503,282.752441 421.213226,283.048706  C420.472137,282.963257 419.930023,282.746338 419.210876,282.297302  z\"})),_path2202||(_path2202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M410.833618,331.172485  C413.506927,330.269897 416.169434,330.063538 418.007751,327.464722  C423.193024,323.634277 428.838379,322.023376 435.336487,322.237122  C437.810303,326.446075 434.088379,326.168335 432.162384,326.922699  C429.210907,328.078705 425.374573,327.465607 423.705597,331.653015  C420.655701,334.231232 416.859833,335.157715 414.238831,338.382050  C413.126495,339.243256 412.169495,339.760437 411.202759,340.782043  C411.168030,344.085205 409.521423,345.209595 406.675598,344.961670  C405.693451,344.876099 404.732086,344.573883 403.751495,344.444153  C401.925110,344.202606 399.249451,345.647369 398.574127,343.076233  C397.987549,340.842834 400.107910,339.166382 401.803345,337.849884  C404.672729,335.621826 407.684357,333.576996 410.833618,331.172485  z\"})),_path2203||(_path2203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M391.008545,351.477478  C391.299683,350.246643 391.614594,349.455994 391.962158,348.347809  C392.663513,347.127136 393.782166,346.685089 394.618774,347.091644  C402.295776,350.822266 409.619690,344.232147 417.074799,347.528412  C417.585968,344.656403 415.098053,345.054199 415.043060,343.241394  C418.483032,340.761047 421.738068,344.269897 425.581909,343.305664  C426.250000,343.329773 426.518677,343.376953 427.158752,343.611511  C428.220581,344.356384 428.641541,345.075562 428.831970,346.379120  C428.452789,348.895386 427.072968,350.216095 425.101044,350.253326  C416.929871,350.407654 409.104187,352.950958 401.029694,353.570892  C397.679779,353.828125 393.985779,354.689789 391.008545,351.477478  z\"})),_path2204||(_path2204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M426.288208,343.508270  C422.374054,347.107117 419.251282,343.111572 415.382477,342.908997  C414.220276,342.423492 413.452728,341.952179 412.524017,341.253723  C412.086060,340.160004 411.973572,339.301575 412.677734,338.201538  C415.720642,335.691254 417.660553,331.978729 422.420288,332.262695  C425.978027,335.244293 425.610413,339.385468 426.288208,343.508270  z\"})),_path2205||(_path2205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M412.535797,338.006622  C412.818909,338.787872 412.771759,339.646881 412.543732,340.766235  C412.130951,341.023865 411.899017,341.021118 411.318970,341.008850  C410.964508,339.850647 410.852905,338.657440 412.535797,338.006622  z\"})),_path2206||(_path2206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M390.631989,351.076538  C397.330353,353.390411 403.750488,351.968506 409.901123,350.641174  C414.423553,349.665253 418.905273,349.393616 423.429382,349.017975  C425.250916,348.866730 427.171387,349.093201 427.939148,346.414673  C429.004822,344.842865 430.382812,344.616425 432.239319,344.548798  C435.296051,344.323425 437.905121,343.746338 440.949097,343.754578  C444.896393,344.330139 448.358795,343.836182 452.061768,342.521179  C452.999939,341.959930 453.662811,341.650452 454.683838,341.220764  C455.769104,340.871918 456.522034,340.787170 457.666992,340.767395  C458.304810,340.802979 458.559082,340.832275 459.187195,340.944702  C464.132324,342.152252 468.234985,339.732727 472.601013,339.257141  C475.228333,338.970947 477.792572,338.055328 480.705414,339.495239  C481.561920,343.199768 478.459320,343.028137 476.294250,344.276550  C475.156921,344.683533 474.389648,345.015320 473.847687,345.675171  C467.460175,353.451904 461.156342,354.869293 452.310303,350.403107  C450.989441,349.736237 449.653412,349.186920 448.853790,350.671814  C446.639648,354.783508 443.469940,353.454590 439.945770,352.414856  C439.373718,352.353699 439.147247,352.323853 438.589813,352.224426  C436.072998,351.034790 434.580750,352.593262 432.588898,353.623383  C425.835785,352.464569 419.486938,352.978180 413.168671,354.397125  C412.204224,354.613708 411.028442,354.557312 410.345398,355.208679  C405.531555,359.799072 398.831207,359.835327 392.868530,362.561676  C384.280090,364.732666 382.176178,367.524323 380.645355,376.055328  C379.941498,379.977570 379.704437,383.856598 379.448547,388.136688  C377.978973,394.774506 378.379974,401.242584 377.390320,407.950073  C376.990509,409.066284 376.545563,409.685883 375.428162,410.035767  C374.542633,408.815704 374.048767,407.630585 373.324158,406.231873  C372.908203,405.440430 372.722961,404.862579 372.323425,404.063721  C373.895508,400.540771 374.113525,396.994446 374.041565,393.312653  C373.853821,383.709167 375.341888,374.138367 377.576508,364.973541  C379.037048,358.983612 383.313507,353.228455 390.631989,351.076538  z\"})),_path2207||(_path2207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B65E4A\",opacity:1,stroke:\"none\",d:\" M375.030640,410.412262  C375.346405,409.521088 375.656250,409.041321 376.002502,408.266968  C379.914001,408.207062 380.358124,411.038940 380.391846,413.968384  C380.481689,421.778625 381.521393,429.492615 382.414185,437.231445  C382.947998,441.858551 384.721497,446.201538 385.869446,450.596558  C387.803894,458.002808 388.017487,465.657684 390.212982,472.974060  C391.492645,477.238495 391.191132,481.979950 390.995026,486.240662  C390.042633,506.930298 400.084747,523.993591 408.224304,542.111328  C409.496643,545.079773 411.583282,546.919434 413.835266,549.080811  C414.217255,549.535095 414.345428,549.738831 414.563110,550.295654  C414.655090,551.145264 414.537476,551.613342 414.039795,552.301025  C408.732513,554.146057 407.232605,549.237183 403.774017,547.161804  C402.309387,546.366028 401.506470,545.437927 400.868408,543.911804  C400.670471,540.201660 398.305908,537.861572 396.743164,535.250732  C393.134186,529.221252 391.343811,522.328308 387.210144,516.243408  C386.752411,515.891541 386.577667,515.739197 386.237488,515.281006  C386.053101,514.231018 386.034180,513.486755 386.008118,512.370361  C383.276215,501.368988 379.915741,490.567841 381.085663,479.655365  C382.867767,463.032623 377.395691,447.386780 376.363403,431.197754  C376.226654,429.053192 376.548859,426.886017 376.069885,424.377502  C376.076569,422.926910 376.067688,421.863892 376.061401,420.402161  C375.852539,418.491302 376.329132,416.891907 375.285492,415.197083  C375.063538,413.564301 375.044128,412.194000 375.030640,410.412262  z\"})),_path2208||(_path2208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M375.834167,424.162537  C378.849854,428.535736 377.733459,433.831451 378.861237,438.721985  C380.291748,444.925354 381.316345,451.294312 382.248566,457.548187  C383.121918,463.407104 383.883301,469.573914 382.551758,475.893860  C381.470093,481.027863 382.485962,486.756866 383.327820,492.102905  C384.300049,498.276611 386.105286,504.318878 387.538025,510.420715  C387.717529,511.185150 387.343811,511.661072 386.312378,511.946747  C384.919586,511.822784 383.663757,513.074463 382.952698,510.815582  C380.127472,501.840973 379.904083,492.343079 377.178497,483.351074  C376.575775,481.362701 377.352905,479.075104 377.394012,476.961395  C377.562836,468.290680 376.277252,459.713379 375.397888,451.097778  C374.583099,443.114655 375.067383,434.998932 374.973877,426.479919  C375.173065,425.457153 375.377991,424.896118 375.834167,424.162537  z\"})),_path2209||(_path2209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M375.057709,415.327881  C377.722931,415.762115 377.085205,417.640381 376.303345,419.745819  C374.592773,418.847595 375.113251,417.211945 375.057709,415.327881  z\"})),_path2210||(_path2210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M442.576904,279.955139  C443.417877,279.918091 443.879333,279.901794 444.686035,279.857361  C447.945099,278.743378 450.982391,279.017273 454.354492,279.089905  C456.454407,280.063354 458.028442,280.984344 460.268372,280.272247  C464.312927,278.986450 469.139771,282.205170 469.756256,286.267883  C469.881897,287.095886 469.853821,287.904938 469.490509,288.686493  C468.149170,291.571991 460.363464,295.678864 457.194275,295.458099  C451.613251,295.069397 446.058807,295.190765 440.562836,297.977814  C439.703979,298.081665 439.207703,298.059143 438.342468,297.894897  C436.984253,297.393524 436.189331,296.785919 435.908691,295.359772  C438.584290,292.110229 441.414490,290.962769 445.615936,291.452698  C448.948669,291.841278 452.409760,289.304901 456.561646,290.002930  C459.096191,286.972351 458.608978,285.186798 454.737793,284.324585  C451.830261,283.677002 449.197357,282.846588 446.029816,283.639801  C443.583588,284.252411 440.489136,285.260590 438.089905,282.274780  C438.421967,279.094971 440.696686,280.386597 442.576904,279.955139  z\"})),_path2211||(_path2211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M435.629822,294.983124  C436.568939,295.516113 437.140503,296.047638 437.848206,296.842041  C436.709442,300.625275 433.923859,298.991730 431.256958,298.896393  C430.188232,298.703735 429.485779,298.829254 428.432922,298.952881  C427.852203,298.989044 427.620331,298.994110 427.043121,298.992096  C423.957153,298.862854 421.278473,299.393433 418.234558,299.788025  C417.410370,299.793121 416.962769,299.665649 416.271729,299.220337  C415.785065,298.708588 415.565216,298.428894 415.123108,297.991089  C414.931396,297.386627 414.961914,296.940247 415.012726,296.154541  C415.760620,295.827972 416.488281,295.840729 417.580139,295.845490  C420.272827,294.708801 422.582275,293.486847 425.702942,294.517548  C426.812317,294.785461 427.532715,294.868011 428.615906,294.934845  C429.987762,294.151398 431.085785,293.940277 432.677795,294.596161  C433.798187,294.862427 434.530243,294.922028 435.629822,294.983124  z\"})),_path2212||(_path2212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M442.684845,279.691589  C441.821289,281.493378 439.865479,280.557587 438.248779,281.642639  C437.200531,281.865631 436.398743,281.848022 435.218933,281.688354  C436.727753,278.546692 439.508057,278.772278 442.684845,279.691589  z\"})),_path2213||(_path2213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M425.962097,294.378723  C423.647003,295.123962 421.202087,295.545013 418.350769,295.901794  C420.086121,293.086273 422.605011,292.003510 425.962097,294.378723  z\"})),_path2214||(_path2214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M432.969727,294.486511  C431.975647,294.869568 430.885162,294.936310 429.386719,294.961060  C429.851349,292.456207 431.199646,292.467133 432.969727,294.486511  z\"})),_path2215||(_path2215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M407.094910,321.701782  C405.284729,323.984955 402.814178,324.682526 400.336975,325.988464  C398.391541,324.634918 396.891174,323.087952 395.171265,321.844788  C393.079559,320.332825 390.665863,319.194000 393.547302,316.225433  C394.310425,315.439240 393.622681,314.361053 393.026093,313.529480  C392.538239,312.849487 391.905151,311.635254 392.614471,311.360321  C396.570984,309.826935 395.949341,304.169708 400.614746,303.041199  C402.109497,303.061157 403.373596,302.864685 403.945923,304.668762  C404.311371,305.724243 403.969055,306.227814 403.482483,306.707031  C398.893494,311.226593 399.333832,315.734253 404.716309,319.164795  C405.673981,319.775177 406.772278,320.198029 407.094910,321.701782  z\"})),_path2216||(_path2216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79068\",opacity:1,stroke:\"none\",d:\" M437.319946,315.100220  C429.626617,314.537811 422.833282,317.377563 415.402466,318.966858  C414.808868,319.149658 414.599213,319.275726 414.034485,319.313660  C409.516846,316.646667 406.533813,313.038910 404.550659,308.298340  C407.471191,306.236603 410.361328,304.648926 413.653381,303.067505  C414.436676,302.967651 414.876770,302.967957 415.646973,302.969269  C417.166077,301.569580 419.114471,301.568665 420.850281,300.367981  C421.983337,300.001282 422.768188,299.989136 423.949402,300.239227  C429.432892,301.870056 434.823059,302.367035 439.336853,305.750824  C442.111603,307.830902 443.975769,309.859375 442.599396,313.858398  C441.012238,315.495209 439.432739,315.920837 437.319946,315.100220  z\"})),_path2217||(_path2217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D6815E\",opacity:1,stroke:\"none\",d:\" M405.240662,307.669800  C407.977112,311.396027 410.945679,314.779846 413.979919,318.507446  C414.014771,319.246918 413.850647,319.576324 413.277283,319.919708  C412.579163,320.030029 412.157440,320.060242 411.419250,320.109955  C410.305145,320.763519 409.384033,321.177399 408.234650,321.794464  C407.827728,321.994263 407.657074,322.005005 407.229675,322.021332  C401.118652,320.828644 398.947754,315.916229 397.786255,311.222595  C397.118103,308.522675 400.549866,306.445648 403.762939,305.266479  C404.012207,305.009674 404.509186,305.013336 404.757629,305.018005  C405.582153,305.705750 405.732788,306.475006 405.240662,307.669800  z\"})),_path2218||(_path2218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M405.382721,308.001404  C405.005981,307.264374 405.003387,306.516571 405.003479,305.395691  C406.945740,305.018738 408.830078,305.030792 410.095276,303.076019  C410.918640,301.803894 412.213898,301.822906 413.750366,302.717468  C412.136871,306.096497 408.979034,307.096283 405.382721,308.001404  z\"})),_path2219||(_path2219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M420.889771,300.747192  C420.503296,303.666931 418.400330,302.821075 416.370605,302.981720  C415.987213,301.908966 415.997375,300.847626 416.006195,299.387299  C416.447113,298.996246 416.889343,299.004242 417.663269,299.019043  C419.132690,299.083466 420.052856,299.563843 420.889771,300.747192  z\"})),_path2220||(_path2220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M436.398010,323.480530  C429.963470,322.865753 424.742462,326.350006 418.509949,327.115601  C416.191772,324.673615 418.220703,323.625946 419.860199,322.630951  C425.183655,319.400452 430.865448,317.192047 437.607666,316.973938  C442.147308,314.290802 446.665192,315.248291 450.917267,316.044983  C455.684753,316.938232 456.035156,319.311432 452.067657,323.213440  C449.648041,324.788666 447.308716,323.815826 444.715179,324.309021  C441.741608,324.621216 439.168488,325.046295 436.398010,323.480530  z\"})),_path2221||(_path2221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M450.970673,323.407440  C451.613647,321.334167 452.756165,320.088776 454.921844,319.255707  C449.411560,315.930359 444.063202,317.308044 438.488770,316.961243  C437.751007,316.427490 437.473846,315.898499 437.108368,315.080902  C438.433685,314.450806 439.847351,314.109314 441.595825,313.618042  C443.979828,312.218658 446.238556,312.266327 448.916870,312.466797  C451.188538,312.617889 452.969238,313.152466 455.142548,313.670349  C456.240082,313.947083 456.930481,314.243561 458.014404,314.484741  C459.357666,314.542114 460.315491,314.688324 461.570709,315.166260  C464.572083,318.316071 467.984131,320.346436 471.653381,322.614746  C473.345276,323.532532 474.237793,324.616882 474.172668,326.602173  C470.214111,329.116974 467.483368,326.173035 464.780853,324.513123  C461.451080,322.467987 458.847015,322.159149 455.990936,325.556213  C453.708649,325.954468 452.033417,325.557892 450.970673,323.407440  z\"})),_path2222||(_path2222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M408.344482,321.987427  C408.480835,320.924255 409.237976,320.222626 410.773224,320.117126  C410.863678,321.482056 409.991760,322.014771 408.344482,321.987427  z\"})),_path2223||(_path2223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M413.178284,320.209839  C413.203644,319.717865 413.406372,319.435883 413.827362,319.002563  C414.045624,318.851196 414.531219,318.940826 414.774841,318.982178  C414.828735,319.923065 414.770752,320.979492 413.178284,320.209839  z\"})),_path2224||(_path2224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M386.806274,515.196289  C387.990692,515.052917 389.290527,514.898621 389.627045,515.960815  C392.580444,525.282959 397.968719,533.450623 401.981689,542.638184  C397.696014,544.557800 398.119690,540.305542 396.264954,538.275452  C396.022644,537.991028 396.002441,537.997559 396.006592,537.987915  C394.676514,536.750488 394.800323,534.707642 393.274048,533.220886  C393.059052,532.974792 393.022278,532.979980 393.025635,532.961670  C391.282349,529.243958 390.344879,525.217346 388.218536,521.292053  C387.363464,519.882080 386.724518,518.764099 386.050049,517.322876  C386.025848,516.399536 386.209991,515.862732 386.806274,515.196289  z\"})),_path2225||(_path2225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M396.017029,538.367859  C399.063232,538.257874 398.410828,542.480591 401.640198,542.961487  C402.059662,544.130676 402.486145,545.057800 403.745331,545.828430  C406.566620,547.808777 407.293243,550.675720 408.123108,553.713013  C406.568695,553.708862 405.157593,553.393677 403.387146,553.030273  C402.705505,552.517029 402.383209,552.051941 402.023926,551.294678  C401.820374,549.340820 400.400177,548.566101 399.253906,547.210205  C398.703217,544.896729 397.597870,543.167969 396.258759,541.216919  C396.003784,540.252197 396.007599,539.498474 396.017029,538.367859  z\"})),_path2226||(_path2226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M388.009766,521.384399  C391.334442,523.975647 392.216553,528.051575 393.022766,532.553833  C389.535126,530.036255 389.684418,525.495178 388.009766,521.384399  z\"})),_path2227||(_path2227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M393.050781,533.341797  C395.693848,533.245605 396.072021,535.081116 396.008240,537.601562  C393.572449,537.562439 393.272247,535.660156 393.050781,533.341797  z\"})),_path2228||(_path2228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M386.777405,514.980713  C386.834137,515.540466 386.655853,516.089844 386.246094,516.819458  C385.334106,516.549011 385.033905,516.011841 385.846619,515.123901  C386.072021,514.975220 386.542419,514.970337 386.777405,514.980713  z\"})),_path2229||(_path2229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M436.343201,652.229736  C436.079803,651.509155 436.051575,651.078369 436.004761,650.324341  C435.626556,646.993896 436.278015,644.067566 436.728882,641.130249  C436.995148,639.395508 437.811035,637.526245 439.585388,637.473389  C444.844574,637.317017 444.519165,633.854004 444.456146,629.967407  C447.884247,627.086792 448.845367,624.065308 446.882782,620.176270  C446.239746,618.902039 445.956146,617.393860 445.525452,615.988831  C444.527679,612.734009 445.591858,610.861145 449.602051,610.954163  C451.299164,611.342102 452.460785,611.936218 453.605957,613.268066  C454.748108,621.756714 455.433624,629.949280 456.887146,638.056580  C457.460144,641.252563 455.097992,642.865662 452.599274,644.040588  C449.112640,645.679871 447.984589,648.094971 447.436523,652.127014  C446.701416,657.535278 445.320404,663.081726 442.575562,668.315430  C437.736389,666.580811 438.447388,662.305847 437.870117,658.725830  C437.531738,656.627441 438.104309,654.370483 436.343201,652.229736  z\"})),_path2230||(_path2230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M431.310394,635.235840  C431.551178,626.336548 428.258881,617.587097 431.486572,608.955383  C427.748505,602.877686 432.556396,596.343994 430.047974,589.501160  C428.386780,584.969421 425.832336,581.059631 424.036011,576.359192  C423.987274,576.013245 424.004028,575.996033 424.011932,575.988037  C428.629944,574.803772 430.922272,578.448242 433.413147,580.966309  C435.967224,583.548279 437.542999,587.054138 438.065247,590.726746  C439.241882,599.001099 440.615204,607.302002 438.404297,616.002808  C438.959412,621.954163 435.536011,626.875793 435.731781,632.455627  C435.810974,634.713745 434.008728,635.855103 431.310394,635.235840  z\"})),_path2231||(_path2231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M436.067535,652.287964  C439.127808,652.762146 440.200775,654.314514 439.390991,657.693115  C438.584595,661.057495 440.268280,664.325928 441.740479,667.748169  C442.356232,668.311951 442.614899,668.688965 442.837067,669.473938  C442.887543,670.787109 442.538788,671.650513 441.901306,672.779175  C441.386719,673.420532 441.015198,673.699341 440.235657,673.929565  C437.150391,673.821838 437.437775,671.509705 436.663544,669.790344  C435.722687,667.701050 434.176208,665.792480 431.444519,666.157349  C429.062653,666.475525 429.017578,668.433289 428.953735,670.684998  C427.522583,670.412781 426.116577,669.737305 424.375671,669.011353  C426.524109,660.833435 424.108215,653.120056 422.137939,645.344238  C421.839844,644.168030 421.438263,642.504089 422.786194,641.679016  C424.026398,640.919983 424.848419,642.388306 425.795929,642.920471  C428.027313,644.173828 429.773041,645.792969 430.133270,648.616211  C430.417419,650.843201 431.827942,652.578369 433.561340,653.960693  C435.304291,655.350525 435.859589,654.299255 436.067535,652.287964  z\"})),_path2232||(_path2232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M431.016449,635.389282  C434.255219,634.487427 435.869476,633.121216 433.912750,629.702576  C433.546326,629.062439 433.308380,627.601624 433.530853,627.481506  C438.272400,624.920105 435.171600,620.129028 436.842834,616.346497  C438.351746,615.096069 439.533997,614.339600 439.414948,612.219055  C439.291656,610.023865 440.772675,608.589783 443.516968,608.612671  C446.082794,615.456238 447.691711,622.212219 445.050110,629.611694  C445.174042,630.952393 445.203278,631.970764 445.573822,632.844360  C447.066956,636.364258 445.615234,639.190674 441.930298,638.629700  C438.309235,638.078369 437.954254,639.710144 438.009796,642.317261  C438.063293,644.828186 437.149353,647.112854 436.257324,649.735474  C434.094482,647.963501 433.017944,645.586670 432.971252,642.393433  C432.069855,641.036499 431.015442,640.157227 431.024231,638.329224  C431.017395,637.252258 431.017212,636.507019 431.016449,635.389282  z\"})),_path2233||(_path2233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M430.769470,638.212891  C432.125092,638.845337 432.586273,640.059998 432.940735,641.678345  C430.951355,641.631653 429.507141,640.867798 430.769470,638.212891  z\"})),_path2234||(_path2234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A55135\",opacity:1,stroke:\"none\",d:\" M445.352661,629.951660  C444.106720,629.507690 442.886749,628.732117 443.422089,627.816772  C446.988708,621.717712 443.613342,615.651245 443.278137,609.290344  C441.313263,603.189453 441.094788,598.142151 450.214630,595.134949  C450.235992,593.609070 449.148407,592.479553 448.117493,591.985413  C440.003754,588.096313 435.811035,579.708923 427.987366,575.153748  C421.583099,571.424927 417.305786,564.432068 411.240540,559.252808  C410.993927,559.007507 411.000000,559.000000 410.995880,559.002625  C409.890045,557.998779 409.873962,556.223450 408.246277,555.203369  C408.028961,554.971130 408.005585,554.497253 407.992676,554.260681  C405.872925,551.966736 405.225739,549.146423 404.058380,546.279297  C405.405762,545.975342 406.509766,546.204102 407.105316,547.785522  C408.139709,550.532593 410.476685,551.631592 413.608765,552.011353  C416.045532,552.074951 417.235840,553.307495 418.179718,555.389282  C422.252472,562.253662 428.051575,566.886902 434.112762,571.244019  C434.779419,571.723206 435.733002,571.836060 436.280334,572.455505  C442.702332,579.723938 451.331909,583.372864 460.124512,586.456543  C466.814423,588.802734 474.025360,589.543762 480.901794,592.642090  C482.465240,593.569031 483.697601,594.345581 485.452576,594.925720  C486.005920,595.226074 486.215759,595.369263 486.688263,595.791504  C488.676178,599.697632 485.797943,600.228821 483.523895,601.137878  C478.063049,603.320496 472.402405,601.584900 466.847931,601.955017  C466.189941,601.998901 465.524231,601.911011 464.861511,601.920715  C459.320038,602.001587 453.825592,602.108704 452.469055,609.302612  C452.295074,610.225403 451.478180,611.008484 450.348877,611.820801  C446.578613,611.745056 445.256958,612.817688 447.076599,616.277405  C447.831299,617.712402 447.844696,619.560974 448.678680,620.926086  C451.292969,625.205444 450.238495,628.076111 445.352661,629.951660  z\"})),_path2235||(_path2235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M411.001038,559.375854  C415.861511,559.819092 418.483948,563.868774 421.190674,567.098450  C425.937317,572.762207 433.390839,575.189453 437.579041,580.906006  C441.581390,586.368958 447.880707,588.663818 452.025604,593.629028  C453.074249,594.885193 454.859680,596.801514 451.849213,596.819153  C443.679474,596.866821 443.559814,602.537842 443.007019,608.578003  C441.321289,610.087097 439.578796,611.037170 440.800720,613.635254  C443.113190,618.552124 439.713043,616.493103 437.351746,616.041809  C438.655670,611.281189 438.999329,605.671387 438.310822,601.539062  C436.716614,591.970337 436.609772,580.536987 424.365143,576.029541  C421.713806,571.294556 418.341888,567.453003 414.308197,564.230957  C412.743347,562.981018 411.027191,562.045532 411.001038,559.375854  z\"})),_path2236||(_path2236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M408.058136,555.318237  C410.371002,554.828064 411.175323,556.083679 410.994110,558.619385  C408.983734,558.796265 408.557556,557.211609 408.058136,555.318237  z\"})),_path2237||(_path2237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M399.058289,547.306030  C401.008759,547.401672 402.739075,548.053894 402.218140,550.803711  C400.589111,550.250549 399.451080,549.274292 399.058289,547.306030  z\"})),_path2238||(_path2238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M439.920135,674.398132  C440.096130,673.698669 440.305634,673.436035 440.730957,673.041931  C443.777466,672.752563 443.415344,676.159668 445.692322,677.164551  C447.367279,682.286072 448.943512,686.966980 446.316467,692.164795  C444.331207,696.092773 445.956543,700.705322 446.143097,704.901917  C446.284119,708.073792 447.073273,711.363586 446.997803,714.660339  C446.943390,717.036133 448.285553,718.693359 449.871796,720.660889  C450.021240,721.435974 450.021423,721.877502 450.022522,722.650269  C452.552094,725.631897 451.901611,729.250610 452.591461,732.378052  C453.751678,737.637817 456.319550,742.696777 455.255768,748.657837  C454.542603,749.167419 453.685760,749.369507 453.695465,749.513062  C454.042542,754.659790 452.191559,760.017273 454.662445,764.922119  C455.770416,767.121582 456.754028,768.727051 453.393951,769.963196  C449.910217,762.381714 448.500763,754.470642 448.962097,746.200989  C449.238831,741.240479 447.495880,736.906067 445.038025,732.567322  C443.553162,729.946106 443.334930,726.461975 443.070923,723.321594  C442.245026,713.499084 442.539764,703.487732 440.690247,693.878723  C439.439423,687.380493 442.146240,681.062256 439.920135,674.398132  z\"})),_path2239||(_path2239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE7755\",opacity:1,stroke:\"none\",d:\" M455.127075,749.285400  C453.683899,742.710876 452.559235,736.380798 450.957977,730.173767  C450.408875,728.045105 449.961823,726.007141 450.013306,723.409790  C452.859558,723.657532 454.468201,725.030151 453.426788,728.288147  C452.272461,731.899597 454.823212,734.598999 456.113007,737.536377  C457.142975,739.882019 458.144409,742.043945 456.996002,744.600586  C456.232910,746.299316 456.708588,747.806091 457.778656,749.242798  C458.670502,750.440308 459.815826,751.731384 457.340027,752.943481  C456.425873,751.866821 455.842316,750.722473 455.127075,749.285400  z\"})),_path2240||(_path2240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2B2A2D\",opacity:1,stroke:\"none\",d:\" M223.311874,534.945312  C223.098923,534.104980 223.372940,533.339966 224.686935,533.052124  C224.903107,533.894836 224.626373,534.657776 223.311874,534.945312  z\"})),_path2241||(_path2241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M452.949066,906.876038  C452.884003,906.877319 452.776154,906.744873 452.668274,906.612427  C452.747620,906.655701 452.826935,906.699036 452.949066,906.876038  z\"})),_path2242||(_path2242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M453.005646,906.995789  C453.118530,907.123352 453.226105,907.255066 453.333679,907.386841  C453.255402,907.343323 453.177155,907.299744 453.045349,907.132935  C452.991821,907.009766 453.000305,907.000000 453.005646,906.995789  z\"})),_path2243||(_path2243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M450.001221,913.001465  C450.002411,913.002869 450.253174,912.583679 450.253174,912.583679  C450.253174,912.583679 450.234406,912.899414 450.115601,912.948486  C449.996826,912.997559 450.000000,913.000000 450.001221,913.001465  z\"})),_path2244||(_path2244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M457.338409,858.856506  C458.702667,859.120911 459.678162,859.382568 459.571869,861.021912  C459.375610,861.489136 459.272736,861.680054 459.136871,861.707458  C453.497009,862.845215 451.291534,866.122314 452.771729,872.109436  C452.419006,873.165161 451.963287,873.710938 450.919128,874.122437  C450.556519,874.188110 450.071838,874.188599 450.071838,874.188599  C450.071838,874.188599 449.591003,874.127563 449.351654,874.090393  C448.034485,873.121033 446.965790,872.183167 446.903015,870.238647  C446.841431,868.919373 446.831207,867.948608 446.797424,866.614380  C446.333099,865.358887 446.403381,864.478699 446.928558,863.276062  C446.896393,861.500000 447.324341,860.322693 448.866394,859.327637  C451.692505,859.013611 454.302917,858.952271 457.338409,858.856506  z\"})),_path2245||(_path2245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M450.625153,874.469849  C450.937958,873.678894 451.319427,873.169678 451.851196,872.382324  C453.811005,869.526001 456.221832,869.167664 459.348083,870.488892  C460.816132,870.855835 461.946869,870.939331 463.500427,871.041138  C464.154266,872.760925 463.696930,873.952759 461.360168,874.054321  C459.529968,874.605530 458.374847,876.088196 456.260925,875.330444  C454.547119,875.157471 453.130157,875.158020 451.290253,875.231689  C450.809509,875.120361 450.751648,874.935913 450.625153,874.469849  z\"})),_path2246||(_path2246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M446.630371,870.172363  C448.076569,870.733093 448.583893,872.017212 449.050171,873.708984  C446.586090,874.074402 445.401031,873.088196 446.630371,870.172363  z\"})),_path2247||(_path2247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M446.682800,863.028748  C448.155792,863.830017 447.621979,864.748291 446.924988,865.958862  C446.367828,866.186646 445.961792,866.122375 445.244995,866.038818  C445.062164,864.884705 444.900909,863.609558 446.682800,863.028748  z\"})),_path2248||(_path2248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D282A\",opacity:1,stroke:\"none\",d:\" M285.426605,356.645935  C285.633575,357.385742 285.374969,357.654327 284.800323,357.539673  C284.681000,357.515869 284.520569,357.346527 284.502594,357.225891  C284.416321,356.645599 284.698730,356.402496 285.426605,356.645935  z\"})),_path2249||(_path2249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#422C2B\",opacity:1,stroke:\"none\",d:\" M287.333679,399.957581  C287.094757,399.112946 287.366760,398.351685 288.677856,398.045959  C288.906189,398.885284 288.638184,399.648865 287.333679,399.957581  z\"})),_path2250||(_path2250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M300.242310,422.826904  C299.004242,422.112305 299.220062,421.484406 300.717407,421.037872  C300.825409,421.549377 300.649597,422.097778 300.242310,422.826904  z\"})),_path2251||(_path2251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#262325\",opacity:1,stroke:\"none\",d:\" M356.849182,229.093674  C357.000244,229.165619 357.000458,229.332458 357.000916,229.749557  C356.900269,229.729401 356.799316,229.458984 356.849182,229.093674  z\"})),_path2252||(_path2252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M473.824585,160.298798  C474.764069,159.648010 475.544922,159.313705 476.649292,158.908173  C480.278473,158.023956 483.639404,157.798401 487.468414,157.882416  C490.997467,155.792664 494.392517,155.349655 498.374390,156.189789  C499.453308,156.904007 499.762848,157.632156 499.818176,158.848587  C498.383850,161.842148 494.305756,162.962082 495.174744,167.279083  C494.725769,167.692200 494.513184,167.826523 493.938904,168.094238  C487.131531,168.320068 481.009583,170.437012 474.674835,171.270844  C470.617157,171.804962 466.543793,172.054520 462.480774,172.436569  C460.616333,172.611877 458.863861,172.634308 457.319824,174.561600  C455.361145,175.548096 453.658569,175.698715 451.485748,175.553375  C446.154480,174.732605 441.441345,176.788544 436.245148,176.190567  C440.787018,170.487793 447.289764,167.108459 454.106842,167.311310  C461.887939,167.542847 467.421936,163.575455 473.824585,160.298798  z\"})),_path2253||(_path2253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M499.281891,157.203827  C495.595428,157.326950 492.190857,157.647217 488.346497,157.921448  C487.924652,152.717865 492.813263,153.727524 495.502777,152.221786  C498.577667,150.500320 501.836884,149.917496 504.877289,147.166122  C507.805908,144.515884 513.050415,142.704773 518.638672,143.056213  C519.851746,145.190857 518.489807,145.818649 517.069519,146.341919  C515.098022,147.068253 513.935730,148.565506 512.874634,150.665359  C512.546326,151.154312 512.396423,151.338303 511.975037,151.754868  C510.299469,152.928818 508.688965,153.372818 506.774048,153.992462  C506.212250,154.141006 505.986847,154.191025 505.422913,154.290802  C503.160767,154.291550 501.636261,154.959213 500.483093,156.983551  C500.004089,157.272644 499.783936,157.336792 499.281891,157.203827  z\"})),_path2254||(_path2254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M532.602295,137.051544  C533.007324,136.995575 533.497864,137.025375 533.743530,137.027695  C534.831848,139.464859 536.577332,140.160172 539.055786,140.030869  C540.964722,139.931274 543.126404,139.415619 544.809570,141.684509  C545.060852,143.951553 543.554443,144.095032 542.310974,144.065430  C535.507446,143.903549 528.702637,142.621704 521.905823,144.274475  C521.140869,144.460495 520.308228,144.005203 519.309448,143.246384  C518.990417,142.989487 518.885803,142.898041 518.829468,142.852890  C519.862122,138.914810 523.370300,138.665543 526.402283,138.075455  C528.306580,137.704834 530.330750,137.870850 532.602295,137.051544  z\"})),_path2255||(_path2255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M518.915649,143.339752  C527.459595,140.958344 535.992004,142.505066 544.749634,142.279785  C545.001587,142.021194 545.477295,141.994217 545.713623,141.968292  C549.680176,143.368225 553.747681,143.711884 557.297424,145.797256  C560.145874,147.470612 563.290833,148.336655 566.719543,148.029938  C569.006165,147.825424 571.377991,147.845825 572.982239,150.506592  C568.306152,157.004059 563.109558,152.510834 558.164734,151.272827  C556.352356,150.819077 554.409241,149.963211 552.949829,148.519287  C551.902039,147.482620 550.408569,147.090591 549.269165,147.599228  C544.690063,149.643341 540.461182,147.569229 536.238403,146.583084  C529.401550,144.986450 523.778381,147.828476 518.257629,150.942139  C516.151733,152.129852 514.422607,152.660751 512.111450,151.150391  C511.279297,145.614426 516.438477,145.987518 518.915649,143.339752  z\"})),_path2256||(_path2256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M435.643921,176.051025  C440.611115,174.920303 445.232788,173.409149 450.587646,174.037369  C451.852448,178.910461 448.067627,178.276352 445.455505,178.406662  C440.828461,178.637497 437.111755,179.915710 435.231049,184.980865  C426.524628,189.523544 422.308716,197.344696 419.132141,205.560364  C415.368256,215.294922 412.203522,225.302872 409.515930,235.388443  C407.687317,242.250671 407.046021,249.444901 405.083801,256.311249  C402.994812,263.621307 402.812347,271.405853 399.287842,278.703369  C399.228149,280.391663 400.076202,280.897186 401.413605,280.989410  C405.994537,281.305359 410.570923,281.687073 415.600281,282.096741  C412.674225,286.614319 407.981262,284.183197 403.840027,284.333099  C402.363159,284.386536 400.994873,284.057098 399.586548,284.904907  C395.533295,287.344910 393.548889,284.102295 393.325104,281.378815  C392.963074,276.973114 392.640900,272.650055 394.907410,267.962219  C397.781281,262.018036 398.143066,254.903168 399.993103,248.408478  C402.088013,241.053940 402.753204,233.425003 405.597443,226.159897  C409.921021,215.116150 414.494690,204.226913 419.869751,193.303467  C420.238617,192.189362 420.607727,191.437149 421.018829,190.371521  C421.538055,189.471329 422.073547,188.938095 422.792328,188.188950  C423.543365,187.465759 424.095062,186.943741 424.788147,186.171600  C427.577667,185.728363 427.035217,183.216446 428.003723,181.413986  C428.056580,181.063721 428.490601,180.981766 428.708923,180.948441  C430.246796,179.873230 431.343903,178.596222 432.813568,177.256241  C433.823303,176.765778 434.595917,176.481476 435.643921,176.051025  z\"})),_path2257||(_path2257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M422.670593,188.033905  C422.941528,188.894699 422.649323,189.636017 421.368347,189.984741  C421.069427,189.124496 421.324066,188.351151 422.670593,188.033905  z\"})),_path2258||(_path2258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M432.705292,177.070831  C432.741852,179.074646 431.608978,180.365707 429.275970,180.906982  C429.243286,178.897079 430.425140,177.656372 432.705292,177.070831  z\"})),_path2259||(_path2259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M575.618652,560.065491  C576.444702,559.996460 576.887024,559.995361 577.661011,559.992798  C578.794495,559.320740 579.195129,558.389587 579.813843,557.240906  C583.707703,557.083130 586.450439,555.257446 589.144836,552.887573  C592.576294,549.869446 597.061340,548.429138 600.621643,545.387146  C603.897827,542.587952 606.704102,538.740295 611.878113,538.604309  C613.447205,538.562988 614.285889,536.298462 613.640442,534.525879  C612.693542,531.925537 614.461731,530.655029 616.070312,529.679993  C629.079590,521.794250 642.145752,514.009277 652.388611,502.437958  C652.580688,502.220947 652.996948,502.202332 653.654297,502.048615  C655.646301,503.938019 654.879272,505.675354 653.284973,507.685608  C652.995667,508.748352 652.988892,509.494232 652.976685,510.613098  C652.454285,511.531555 651.927917,512.068054 651.200195,512.801636  C650.997559,512.997559 650.985352,513.493225 650.981628,513.741150  C648.127747,516.888306 645.182983,519.713013 643.239990,523.760498  C643.002441,524.007324 642.997620,524.500977 642.993896,524.747803  C638.617981,528.297852 635.112122,532.466187 631.241638,536.753418  C626.139832,539.010071 621.332886,541.162903 616.411499,543.011047  C610.099060,545.381531 606.365356,551.310120 600.394226,554.190186  C593.150208,557.684204 587.660583,564.675476 578.406250,565.004883  C575.651550,566.933655 572.992126,567.928894 569.562256,567.573364  C567.593079,565.578003 568.954773,564.377441 570.204956,563.291809  C571.706177,561.988403 573.398987,560.932861 575.618652,560.065491  z\"})),_path2260||(_path2260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M568.667603,566.733154  C571.741333,566.365967 574.486755,565.736816 577.614868,565.057495  C576.417664,568.498352 571.969238,568.995483 570.134399,572.682739  C569.780945,573.142578 569.587708,573.307251 569.054504,573.649414  C568.464966,573.886841 568.215271,573.946777 567.580933,574.026611  C558.452332,574.533875 550.343567,578.424927 541.570679,578.796936  C533.167725,579.153320 524.825439,580.101074 516.534912,581.535706  C513.801880,582.008667 511.647430,581.084839 510.445312,577.995239  C511.190613,574.408875 513.746826,573.542114 516.463257,573.374878  C525.190063,572.837280 533.781982,571.083740 542.645020,571.493713  C549.104553,571.792480 554.860229,567.731689 561.174561,566.434082  C563.623779,565.930725 565.951355,564.928955 568.667603,566.733154  z\"})),_path2261||(_path2261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M567.661499,573.160400  C568.006592,573.019958 568.499939,573.020386 568.746582,573.017334  C569.219482,573.235901 569.463257,573.436157 569.861084,573.808716  C570.757263,574.007141 571.517029,574.011902 572.657104,574.035034  C570.222900,577.535156 565.922607,578.266113 562.098328,579.744873  C555.248901,582.393616 548.001709,583.613037 540.401489,584.985107  C537.494568,586.712524 535.752502,585.914368 534.455933,582.961609  C534.397766,580.753967 535.620728,579.603149 537.099182,579.471130  C541.848145,579.047180 546.468872,577.867798 551.146362,577.107239  C556.580261,576.223633 562.339050,576.268982 567.661499,573.160400  z\"})),_path2262||(_path2262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M643.387268,524.007568  C643.011963,518.927124 645.857117,515.927612 650.629761,514.038086  C650.982239,514.434692 650.986572,514.880371 650.992554,515.660156  C651.272827,516.196228 651.530029,516.422241 652.000427,516.773926  C652.328369,518.189819 651.795349,519.304382 650.868958,520.669617  C650.077332,521.723328 649.513000,522.472046 648.863892,523.497192  C648.107178,523.863281 647.435120,523.952942 646.424683,524.069702  C645.314880,524.067139 644.543518,524.037476 643.387268,524.007568  z\"})),_path2263||(_path2263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M631.358643,536.987183  C633.593750,531.914978 636.621277,527.246216 642.639648,525.037354  C642.932922,525.655701 643.125854,526.688416 642.780090,526.921326  C638.595520,529.739807 636.159302,534.468262 631.358643,536.987183  z\"})),_path2264||(_path2264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M569.993774,573.746216  C569.686768,573.887329 569.429932,573.698730 569.110168,573.225464  C568.993286,573.014282 569.484009,572.994019 569.729126,572.985962  C569.979492,573.148560 569.984741,573.319275 569.993774,573.746216  z\"})),_path2265||(_path2265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#0C0C0D\",opacity:1,stroke:\"none\",d:\" M668.606873,459.199158  C668.859619,458.788086 668.950684,458.646362 669.180542,458.293335  C671.731873,457.534088 672.879089,455.650696 673.567017,453.595093  C674.330566,451.313507 675.868774,449.425964 677.976990,449.512207  C680.789185,449.627228 679.571350,452.570892 680.146851,454.298950  C683.431885,464.162384 678.129639,470.479584 671.328613,476.313812  C669.847107,477.584747 668.579529,477.991028 666.575562,477.054779  C665.840942,475.214722 666.467712,473.501495 666.986389,471.400391  C667.865295,470.222290 668.111816,469.305145 667.549316,467.961670  C667.292114,467.278442 667.267029,466.874268 667.457886,466.171051  C667.728760,465.481750 667.889282,465.083374 668.175415,464.387085  C668.776917,463.375366 668.879028,462.628387 668.383423,461.554871  C668.086121,460.646332 668.148560,460.045776 668.606873,459.199158  z\"})),_path2266||(_path2266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M671.341675,444.793213  C669.802307,443.984283 669.813965,443.000977 671.477173,441.983948  C671.716370,442.793030 671.660461,443.683350 671.341675,444.793213  z\"})),_path2267||(_path2267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M670.306885,450.785553  C668.783630,449.985352 668.847412,449.004944 670.440796,447.978271  C670.673828,448.778870 670.618713,449.668945 670.306885,450.785553  z\"})),_path2268||(_path2268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M665.281250,479.772522  C663.803772,479.038116 663.891479,478.061615 665.246338,476.949463  C665.932556,477.723389 666.031006,478.628571 665.281250,479.772522  z\"})),_path2269||(_path2269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M653.406250,508.000763  C653.329895,506.259064 653.657349,504.515686 653.992432,502.389221  C654.330139,500.903107 654.660278,499.800110 654.997803,498.346863  C656.734314,497.460114 656.980469,494.823456 659.561279,495.012573  C660.088745,495.013306 660.279968,495.018188 660.758179,495.014465  C660.753052,496.113525 660.461121,497.221252 659.999695,498.631256  C659.514832,499.405273 659.165649,499.859741 659.052795,500.723846  C658.853943,501.851074 658.663452,502.693665 658.265076,503.787659  C657.063110,504.698303 657.016846,505.891693 656.490845,507.140259  C656.489319,507.464905 656.436768,507.785828 656.342651,507.917419  C655.435669,508.032379 654.622864,508.015717 653.406250,508.000763  z\"})),_path2270||(_path2270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M656.767212,507.284668  C656.063110,506.189117 655.716309,504.933075 657.683838,504.099152  C658.117554,505.192169 658.006836,506.288757 656.767212,507.284668  z\"})),_path2271||(_path2271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M659.283508,500.828033  C657.995728,500.209961 658.225647,499.571899 659.560913,498.986176  C659.727661,499.504883 659.625122,500.076233 659.283508,500.828033  z\"})),_path2272||(_path2272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M651.312988,512.947449  C651.095520,512.113281 651.363953,511.350372 652.660645,511.042297  C652.901062,511.888306 652.634705,512.652771 651.312988,512.947449  z\"})),_path2273||(_path2273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M652.290039,516.737549  C651.912537,516.736511 651.586548,516.601440 651.127380,516.230347  C651.232788,516.028137 651.471436,516.061951 652.057251,516.209534  C652.404419,516.323303 652.341675,516.603577 652.290039,516.737549  z\"})),_path2274||(_path2274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M511.677490,150.888458  C514.192993,150.706100 517.474731,152.450562 517.453857,147.890060  C517.452759,147.645218 518.192444,147.241821 518.628357,147.173096  C526.962952,145.859131 535.292725,142.244202 543.662964,147.031876  C543.801392,147.111084 544.029968,147.196381 544.140564,147.137131  C551.811951,143.027817 557.230713,150.303772 563.829834,151.598450  C567.262634,152.271927 569.486755,150.244537 572.678589,150.914474  C573.520508,150.892746 573.955872,150.918259 574.718872,150.954376  C576.764221,153.071579 576.164185,155.343964 575.315552,157.935425  C570.745178,159.567368 567.118286,156.945938 563.266418,155.839172  C559.943909,154.884521 556.726562,153.427933 553.504456,152.087616  C553.044189,151.896149 552.578308,151.717285 552.109497,151.547745  C551.568115,151.351959 530.325256,150.265198 529.770264,150.427582  C528.602295,150.769363 526.936768,150.458298 527.220093,152.609909  C527.770813,156.790955 524.770264,156.635391 522.436523,155.803650  C519.491760,154.754166 518.206055,155.973282 516.143921,157.813644  C512.234253,161.302841 509.064026,166.522629 502.247437,165.508026  C500.137115,162.451599 502.873535,160.727325 503.791687,158.166504  C504.543182,156.720612 505.510162,156.029922 506.897644,155.313690  C508.734894,154.307938 509.957855,153.174042 510.795685,151.243378  C510.984955,150.989334 511.447784,150.929413 511.677490,150.888458  z\"})),_path2275||(_path2275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M575.249512,158.313141  C573.477722,155.903427 575.339600,153.814713 575.026978,151.343338  C580.071777,153.057999 584.127319,156.493881 587.978516,160.623291  C586.054871,162.903076 583.949463,162.084915 582.077881,160.997513  C580.450378,160.051910 578.841919,159.353195 576.582947,159.162445  C575.966003,158.905243 575.734924,158.766357 575.249512,158.313141  z\"})),_path2276||(_path2276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M575.774902,158.327362  C580.327759,156.770920 583.098938,161.470901 587.624512,160.987869  C588.022095,160.973572 588.464478,161.049911 588.687683,161.073471  C589.294983,161.425949 589.615112,161.808472 589.991699,162.602173  C590.238770,163.716919 590.171448,164.460190 589.817871,165.536743  C589.012512,166.962891 587.992493,167.609940 586.553833,168.267029  C585.741516,168.399307 585.290344,168.314575 584.596313,167.889038  C583.749939,167.008087 583.205933,166.301987 582.149292,165.644165  C580.192932,162.776093 576.153625,162.279694 575.774902,158.327362  z\"})),_path2277||(_path2277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M588.812012,166.323349  C588.949707,165.253418 588.969543,164.507797 588.991089,163.389236  C590.341064,162.310242 591.130249,163.190903 592.101196,164.338562  C592.656921,165.549149 593.375732,165.958694 594.672424,165.999420  C595.432617,166.028152 595.864807,166.045853 596.620544,166.064209  C596.944031,166.064850 597.010071,166.480698 597.046143,166.687363  C596.610718,169.327927 598.396301,171.118408 598.940430,173.639465  C598.807068,174.158936 598.634216,174.312958 598.120483,174.537521  C595.504639,174.340912 594.309631,172.468582 592.448730,170.973969  C591.025574,169.380615 589.059998,168.695160 588.812012,166.323349  z\"})),_path2278||(_path2278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M592.275146,165.190994  C591.171875,164.434555 590.355652,163.853043 589.266113,163.143890  C588.975159,162.588959 588.957520,162.161621 588.925415,161.415665  C591.286499,160.802887 592.862366,161.571609 593.064209,164.576416  C592.914795,165.089203 592.738525,165.227570 592.275146,165.190994  z\"})),_path2279||(_path2279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M592.046448,165.329941  C592.171692,165.007629 592.355286,164.999207 592.815063,164.970795  C593.617859,165.146271 594.144592,165.341705 594.835815,165.773804  C593.870911,167.185547 592.874451,167.310684 592.046448,165.329941  z\"})),_path2280||(_path2280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#242124\",opacity:1,stroke:\"none\",d:\" M234.003632,502.749084  C232.411636,503.030731 231.027710,502.790375 231.011398,500.368103  C231.471191,499.685730 231.942352,499.370209 232.707672,499.026245  C233.315155,499.786591 233.628464,500.575470 233.975464,501.682159  C234.009155,502.000000 234.004837,502.499390 234.003632,502.749084  z\"})),_path2281||(_path2281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M617.277100,492.718994  C613.047791,492.994080 609.065918,492.897827 606.069336,496.644775  C604.788879,498.533447 602.950134,499.021301 600.922607,499.965393  C598.661621,500.523254 596.784119,500.707794 594.577515,499.807281  C592.205139,497.039276 593.945496,495.307678 595.666809,493.686066  C597.152771,492.286194 599.114868,491.751526 601.022461,491.134155  C606.340820,489.412933 607.527954,487.720276 607.923096,481.633789  C608.209473,477.222839 605.987244,474.552429 602.151917,472.771851  C595.680298,469.767273 588.307495,469.865417 581.522095,466.684784  C578.997192,466.479767 576.813171,466.851654 574.290894,466.371399  C573.442871,466.262573 572.970886,466.140625 572.177124,465.820618  C570.702515,464.783905 569.400879,464.081512 568.478394,462.472778  C568.566284,459.905365 568.724548,458.050537 565.453125,457.763611  C561.710999,457.435425 559.981873,453.661499 557.046692,451.814270  C553.962708,449.873383 551.280151,447.343536 548.255249,445.280823  C546.571472,444.132629 545.441406,442.460327 545.443909,439.932434  C546.502441,437.860138 548.019165,438.359192 549.495422,438.617279  C558.369934,440.168701 568.030029,438.754700 575.772156,446.188782  C574.522034,439.569366 577.361938,434.729248 580.029053,429.498413  C579.990234,428.674927 580.034424,428.207428 580.220459,427.407928  C580.972107,425.882385 581.745667,424.734497 581.679626,422.930878  C581.914490,421.388000 582.368652,420.286346 583.105835,418.904663  C584.567993,417.459930 584.712036,415.444458 586.744629,414.562531  C591.443481,416.763611 590.916138,420.416687 589.254150,423.817047  C586.657471,429.129700 587.054749,434.761658 586.701050,440.338470  C586.552307,442.684387 587.958313,443.126343 589.904236,442.848114  C592.231750,442.515228 594.365295,441.634308 596.790771,440.427490  C603.756958,440.222748 607.643677,444.549011 611.344360,449.125854  C612.383545,450.411072 612.930664,452.135620 614.241150,453.153137  C619.678406,457.374664 621.183411,463.024109 620.494507,469.944885  C620.775818,472.460693 620.698425,474.561340 620.055542,476.989441  C619.830933,477.479248 619.719910,477.610321 619.654236,477.761169  C618.541870,480.318146 613.965637,476.886383 613.951294,480.892670  C613.942688,483.290161 616.508118,484.697388 617.308533,486.904297  C617.534790,487.527985 617.842529,488.123932 618.115601,489.126160  C618.298279,490.541870 618.128113,491.533997 617.277100,492.718994  z\"})),_path2282||(_path2282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M597.259949,440.707703  C594.634705,444.767517 590.574463,444.284454 587.020752,444.694641  C585.701538,444.846924 583.885437,443.227997 584.440002,441.666626  C586.702515,435.297119 583.767029,427.916229 588.646973,421.964935  C589.983276,420.335297 589.119141,417.462128 587.279663,415.237366  C586.418335,414.444672 586.108337,413.755310 585.968140,412.589294  C585.504761,407.406403 584.269348,402.719696 580.799866,399.348175  C574.778687,393.496979 574.358337,385.793213 573.280884,378.372955  C572.749695,374.714539 576.238647,371.506989 580.075806,371.200043  C581.701660,371.069946 583.375427,371.466034 585.234619,370.353424  C598.183472,374.468048 609.522461,372.145599 621.256958,365.998871  C629.712524,361.569611 639.182190,358.309052 649.323669,358.233887  C655.230530,358.190094 659.257507,359.980865 661.476013,365.526123  C661.965332,366.749207 662.801025,367.826263 663.604736,369.343597  C664.345398,370.758148 664.324402,372.116302 665.649170,373.191956  C667.836365,375.460724 668.869080,377.870789 669.088623,380.993988  C668.448059,383.999176 670.086182,386.108734 670.820068,388.788757  C670.826965,389.606384 670.690552,390.047058 670.236084,390.727539  C674.525574,402.159393 670.423157,412.204285 666.206909,422.363220  C664.435242,426.632080 664.182495,431.399628 660.276245,434.857147  C658.612915,436.329468 657.553650,436.855560 655.346680,436.038757  C651.635254,437.151459 651.087341,434.660645 650.551270,432.411377  C650.088745,430.470825 650.624329,428.462524 650.525635,426.039276  C650.370117,422.629883 650.786987,419.821838 653.065491,417.177917  C654.292786,416.381927 655.301819,416.459564 656.290466,416.535675  C659.603210,416.790649 661.489563,415.146454 661.492432,411.966309  C661.497681,406.191742 661.377319,400.471405 663.168518,394.842163  C663.777954,392.926971 662.743225,390.849396 661.352539,389.341217  C658.560059,386.312775 657.206848,382.644562 655.917969,378.824615  C653.346985,371.204559 648.084412,368.066925 640.137878,369.098541  C637.669373,369.418976 635.133423,369.660706 632.897644,370.841736  C623.479980,375.816528 613.453674,378.287048 602.819641,378.395569  C599.794983,378.426422 596.904663,379.000793 594.168030,380.412689  C591.847107,381.610046 589.351257,381.506256 586.864380,380.869598  C583.608521,380.035950 583.068115,381.925598 583.396179,384.468109  C583.654541,386.470306 584.634766,388.252045 585.533325,390.029327  C589.241333,397.363281 591.796082,405.045868 592.588135,413.257965  C592.784912,415.298492 593.545898,417.110168 594.680542,419.209900  C594.941711,419.788879 595.029419,420.028992 595.205200,420.643433  C595.375244,423.079651 595.882202,425.069733 596.361450,427.457855  C596.365784,429.909576 597.563293,431.586304 598.167542,433.449524  C598.950195,435.862671 599.474487,438.255219 597.259949,440.707703  z\"})),_path2283||(_path2283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M651.717896,424.787689  C652.891663,428.598541 649.944946,432.979248 654.617188,435.936584  C654.406982,438.699951 652.545837,440.600128 650.878784,442.648132  C647.616821,446.655273 644.407776,450.707275 644.974792,456.384216  C645.094604,457.584076 644.794617,458.802032 643.876648,459.580231  C640.306519,462.606567 636.844116,465.661591 636.342102,470.925781  C633.483826,470.225861 634.202515,467.755310 633.453369,465.731934  C628.735291,467.362457 624.703796,470.699554 619.274170,470.223816  C619.532898,463.593842 617.748901,458.741272 612.856812,453.721436  C608.151184,448.893005 604.758911,443.002228 597.361816,441.045319  C598.918030,436.502228 595.834412,432.814148 595.010315,428.377045  C597.030090,426.646362 598.111755,428.361572 599.177002,429.461670  C605.034729,435.511383 613.315552,438.111908 619.427429,443.796722  C620.813599,445.086029 622.334412,444.493835 624.050110,443.940216  C631.480286,441.542755 636.773560,435.603424 643.695496,432.371552  C645.629517,431.468567 646.732239,429.358612 647.817200,427.453827  C648.621948,426.040955 649.296204,424.354401 651.717896,424.787689  z\"})),_path2284||(_path2284=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E3976F\",opacity:1,stroke:\"none\",d:\" M600.741943,499.239868  C601.852722,497.122803 603.494446,496.929565 605.628967,497.000000  C611.592407,504.485291 604.420898,509.067047 601.820496,514.560791  C599.474792,519.516357 595.078979,523.739563 598.258728,530.023560  C599.422546,532.323608 597.584961,533.173218 595.700317,532.674744  C593.256287,532.028137 592.671204,532.960510 591.945679,535.125305  C589.146179,543.477661 586.563721,552.135193 576.600830,555.003784  C575.452393,555.334473 575.072327,556.169189 575.006348,557.620117  C572.292969,560.988586 568.851990,562.069824 564.575928,561.720581  C562.153076,558.653442 564.421326,557.295288 566.384888,556.142151  C573.443542,551.996826 578.219299,545.760132 582.482422,539.018555  C583.432068,537.516785 583.537659,535.845154 583.025574,534.228271  C581.868225,530.574158 580.954163,526.953369 583.813049,522.689819  C578.495789,524.452881 574.067261,525.050415 569.961487,526.868530  C568.342712,527.585327 566.556702,528.407043 564.699890,526.569946  C564.617554,523.601196 566.754517,522.465881 568.602905,521.787231  C574.273010,519.705566 578.650696,515.684143 583.849487,512.253662  C585.736755,510.904144 587.110962,509.400024 589.063293,508.833984  C592.371094,507.874908 595.017212,506.192017 596.402710,502.839813  C597.138733,501.059021 598.826599,500.243225 600.741943,499.239868  z\"})),_path2285||(_path2285=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M563.695679,560.775269  C567.768066,561.282349 570.657654,558.467102 574.616272,558.042053  C575.310059,558.461365 575.627380,558.934570 575.973633,559.702637  C575.002808,563.514404 570.471008,563.188965 569.058228,566.659607  C561.466003,567.047729 554.677551,570.101807 547.804260,572.568970  C545.854980,573.268677 544.373230,573.633911 542.289246,573.392761  C537.565369,572.845886 532.895142,572.638733 528.074646,574.203491  C524.507996,575.361206 520.365417,574.122009 516.454285,574.895447  C514.411133,575.299500 512.554199,575.484009 511.177612,577.691956  C510.638245,578.381714 510.202362,578.617004 509.323792,578.740967  C500.834412,578.181580 492.955811,575.641296 484.377502,575.909790  C483.499237,576.039185 482.990112,576.042297 482.096558,575.933105  C476.636108,574.504272 472.509521,570.944702 467.331116,569.726074  C465.553589,569.307739 464.297424,567.807312 464.739868,565.300171  C468.077271,563.328430 471.256165,564.277893 474.057678,565.525085  C481.550842,568.861206 489.662903,568.502747 497.457001,569.982849  C498.567322,570.193665 499.379211,569.658020 500.400421,568.644470  C501.194183,568.154663 501.693054,567.963135 502.619995,567.774902  C503.843872,567.674316 504.651642,567.753418 505.826447,568.085449  C511.643341,571.394592 517.413879,569.951782 522.660706,568.374512  C527.633118,566.879700 532.726990,566.741150 537.638916,566.255615  C544.785339,565.549194 551.613037,563.899109 558.850220,562.122192  C560.525818,561.296204 561.729309,560.233582 563.695679,560.775269  z\"})),_path2286||(_path2286=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E79B75\",opacity:1,stroke:\"none\",d:\" M619.006042,470.447693  C623.502625,468.122742 628.400146,467.153778 632.379761,464.102905  C633.179932,463.489471 634.082886,462.802948 635.067261,463.405640  C636.412292,464.229095 635.665527,465.426544 635.311951,466.492523  C634.868347,467.829712 635.023926,469.098602 635.846558,470.660339  C636.182312,473.615082 636.655090,476.247009 636.492004,478.838898  C636.190796,483.624908 636.578735,488.875122 630.123779,490.531311  C628.832153,490.862701 628.137207,492.582001 627.980896,494.231018  C627.602112,498.224670 623.952148,499.315430 621.256470,499.708099  C616.709717,500.370392 618.765137,495.684326 617.268066,493.274200  C617.003845,491.934814 617.005249,490.869324 617.008179,489.404358  C618.054138,486.977417 618.041626,484.825745 617.720032,482.298615  C617.662231,481.484100 617.670532,481.013641 617.763550,480.184326  C617.972473,479.356750 618.203491,478.932068 618.757080,478.275970  C619.001587,475.631317 619.003174,473.261444 619.006042,470.447693  z\"})),_path2287||(_path2287=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M670.368530,390.995361  C670.005676,390.551392 670.004028,390.108856 670.002441,389.334412  C670.304871,388.266785 670.836060,387.809875 671.985474,387.764893  C673.196045,388.529083 673.475891,389.436218 673.166382,390.733704  C672.174805,390.992523 671.452271,390.994690 670.368530,390.995361  z\"})),_path2288||(_path2288=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M673.124512,391.011597  C672.675903,390.188934 672.454468,389.387451 672.099426,388.297546  C671.794800,387.542725 671.897339,387.136108 672.552917,386.649292  C673.101013,386.535767 673.330261,386.553528 673.844849,386.765076  C674.126892,387.405823 674.123596,387.852783 674.218811,388.621216  C674.216125,389.408508 674.114868,389.874329 673.910767,390.684631  C673.807983,391.029144 673.351685,391.032776 673.124512,391.011597  z\"})),_path2289||(_path2289=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M579.718994,557.151672  C579.943604,558.138245 580.117371,559.380493 578.331177,559.929810  C578.037659,558.860291 578.456665,557.929688 579.718994,557.151672  z\"})),_path2290||(_path2290=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M668.469360,458.996033  C668.824402,459.691528 668.880188,460.453247 668.943970,461.599609  C668.801697,462.114807 668.651550,462.245361 668.262573,462.196686  C666.853699,460.972076 666.802185,459.982056 668.469360,458.996033  z\"})),_path2291||(_path2291=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M667.782104,467.804016  C669.161072,469.109406 669.166321,470.096832 667.413696,470.984314  C667.079773,470.286896 667.049927,469.534454 667.037720,468.402100  C667.214905,467.883514 667.374573,467.744781 667.782104,467.804016  z\"})),_path2292||(_path2292=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M668.000732,467.637695  C668.029968,468.001984 667.542419,468.010345 667.298828,468.016296  C666.099976,467.349060 666.116089,466.680084 667.316040,465.947632  C667.702698,466.344543 667.837097,466.808990 668.000732,467.637695  z\"})),_path2293||(_path2293=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M668.032288,462.369171  C668.023865,462.017426 668.487976,462.001190 668.719971,461.992706  C669.906006,462.714172 669.837830,463.379272 668.562988,464.036743  C668.214233,463.633057 668.127441,463.176971 668.032288,462.369171  z\"})),_path2294||(_path2294=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M659.551270,280.846222  C659.793640,282.140930 659.865845,283.180908 659.941956,284.612976  C661.307678,288.740021 660.039001,293.004303 662.461914,296.862396  C662.703430,298.162537 662.755127,299.164154 662.778931,300.541992  C662.840881,305.465454 663.696655,309.902893 664.948975,314.528381  C665.485840,315.118561 665.643860,315.539948 665.609375,316.336304  C665.047363,317.950134 664.721924,319.232239 665.766602,320.755737  C666.303406,322.418884 666.609985,323.841095 666.942993,325.631348  C666.992188,326.586700 667.056580,327.168365 667.243713,328.029388  C667.479065,328.986115 667.674255,329.652344 667.988281,330.645325  C668.721191,331.696503 669.032471,332.501953 668.666748,333.779755  C668.701599,335.452759 668.843201,336.806152 669.098083,338.552429  C669.711365,339.641937 670.096802,340.381775 670.059204,341.687988  C669.866943,346.809265 671.604736,351.374115 671.094727,356.518555  C671.126526,357.711487 671.114990,358.491974 671.224121,359.646088  C672.588623,366.606873 671.711609,373.409454 673.629761,380.283386  C674.026672,380.855316 674.164062,381.098297 673.988892,381.619751  C673.694275,382.667328 673.712280,383.436340 673.815247,384.581177  C673.696655,385.137848 673.492981,385.318756 672.897278,385.616730  C670.589722,385.715942 669.533264,384.645294 669.014771,382.508118  C669.307800,376.407196 665.730164,371.714050 664.853271,366.269104  C664.240356,362.463257 663.424866,358.782776 664.228394,354.910065  C664.634155,352.954437 664.576843,350.915649 664.110596,348.947754  C662.675903,342.892914 658.592773,341.018555 653.123779,343.807159  C651.191528,344.792389 649.496887,346.185699 647.094971,347.123291  C644.222900,347.562073 641.735229,347.838867 639.145996,346.086548  C638.066162,345.012665 637.668091,344.015961 637.274780,342.603455  C636.900757,339.557434 638.567810,337.918854 640.378235,336.428406  C642.007202,335.087311 643.071472,333.503235 643.018433,331.351074  C642.874695,325.523285 640.276978,320.567139 637.263611,315.813477  C636.307983,314.306061 634.465271,314.248535 632.814148,313.993622  C630.355042,313.614014 628.906067,312.311554 629.311157,309.281555  C630.988464,306.946930 631.399780,304.853943 630.175171,302.477142  C629.495239,301.157440 628.958923,299.720642 629.726807,297.881714  C633.852844,294.386475 636.114441,298.848602 639.519958,299.675903  C644.594727,301.080414 646.418335,305.588989 649.851135,309.380951  C650.583740,305.743622 649.783997,302.978485 648.684998,299.948608  C648.092529,299.111267 647.766357,298.510345 647.267151,297.615021  C646.701660,296.503448 646.391174,295.654083 645.961792,294.493408  C645.219482,291.393768 643.796509,288.962860 642.179626,286.290344  C641.787537,285.910736 641.636169,285.751862 641.272583,285.339691  C640.027832,283.352112 638.207764,282.262878 637.091064,280.151489  C636.402344,278.755615 636.030518,277.622681 635.947144,276.039978  C636.587280,272.993774 635.818359,270.321655 635.963379,267.277649  C639.272400,262.046539 636.497009,257.924133 634.033752,254.101471  C631.374878,249.975220 628.863953,246.019073 629.642944,240.817169  C629.786682,239.857513 629.294617,238.872681 629.040405,237.911331  C625.651001,225.095261 621.584106,212.579529 613.282654,201.908600  C611.948425,200.193481 610.765930,198.369644 611.461365,195.673981  C613.527161,193.981339 614.777527,195.487885 615.946655,196.499557  C619.966309,199.977753 623.966431,203.495499 625.924927,208.690231  C626.574219,210.412399 627.692688,211.886230 628.892273,213.269928  C632.394104,217.309387 634.516296,221.828964 634.101379,227.333313  C633.965088,229.141174 633.819702,231.063187 636.148438,232.351105  C637.255859,233.551743 637.715454,234.666870 637.825195,236.288315  C637.363098,238.336884 637.607422,239.873627 638.646057,241.327637  C639.525940,242.559402 640.350464,244.029480 639.415771,245.451462  C637.527222,248.324692 641.107544,248.302368 641.819458,250.140503  C648.553589,256.832001 651.939941,265.153900 656.061035,273.433197  C656.875977,274.695129 656.983765,275.834076 657.351929,277.227844  C657.500977,278.927399 658.609863,279.652100 659.551270,280.846222  z\"})),_path2295||(_path2295=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M671.385498,356.626129  C669.606750,352.354889 669.998291,347.515991 669.294189,342.418518  C669.676086,341.688782 670.042297,341.575775 670.712708,341.814514  C670.979919,342.425537 671.000244,342.855530 671.029297,343.607025  C670.960083,348.072662 672.999695,352.115173 671.385498,356.626129  z\"})),_path2296||(_path2296=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M671.205078,341.782806  C670.606873,341.995911 670.254089,341.996307 669.638672,341.997864  C669.245667,341.232117 669.115295,340.465210 669.098145,339.321777  C670.799866,339.101837 672.521912,339.144470 671.205078,341.782806  z\"})),_path2297||(_path2297=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M666.117798,320.614075  C663.709412,320.614014 663.824524,319.164795 664.678467,317.253296  C665.132019,316.881592 665.348572,316.749390 665.884766,316.823853  C666.215820,318.097473 666.227295,319.164459 666.117798,320.614075  z\"})),_path2298||(_path2298=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M668.866150,333.944519  C667.807861,333.413544 667.827148,332.519989 667.999023,331.293304  C669.875549,331.377014 670.360901,332.266937 668.866150,333.944519  z\"})),_path2299||(_path2299=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M666.414673,317.053101  C665.989807,317.028748 665.775208,317.026978 665.238037,317.019531  C664.897278,316.580231 664.879089,316.146698 664.818604,315.390228  C664.750732,314.793213 664.725098,314.519135 665.052795,314.031311  C666.689880,314.207062 666.859436,315.263214 666.990356,316.698364  C667.044617,317.021820 666.625000,317.075745 666.414673,317.053101  z\"})),_path2300||(_path2300=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M667.484375,328.031982  C666.527832,327.818085 666.032471,327.221466 666.752319,326.130615  C667.664429,326.393799 667.864380,326.991150 667.484375,328.031982  z\"})),_path2301||(_path2301=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M673.954590,381.308472  C670.376038,375.061035 671.452454,367.906067 671.227295,360.470520  C674.876404,363.665588 672.183044,368.403534 673.420532,372.525513  C673.818481,373.851044 674.017456,375.669403 674.007324,377.668243  C674.038330,378.457428 674.053162,378.866058 674.069092,379.581848  C674.149353,380.231567 674.228516,380.574188 673.954590,381.308472  z\"})),_path2302||(_path2302=/*#__PURE__*/React.createElement(\"path\",{fill:\"#372725\",opacity:1,stroke:\"none\",d:\" M673.604187,381.755707  C673.688538,381.401062 673.775696,381.101990 673.966431,380.345947  C674.549377,380.206451 675.316345,380.438141 675.442322,380.860870  C675.645325,381.542267 674.935242,381.804260 673.995605,381.906372  C673.676270,381.898285 673.606995,381.811249 673.604187,381.755707  z\"})),_path2303||(_path2303=/*#__PURE__*/React.createElement(\"path\",{fill:\"#382A27\",opacity:1,stroke:\"none\",d:\" M672.620483,385.314911  C672.949219,384.950836 673.139526,384.947723 673.615112,384.950775  C674.624939,385.318573 674.968994,385.825745 674.334961,386.793793  C674.130188,386.958832 673.662048,386.939270 673.427734,386.938232  C672.707336,386.657196 672.470154,386.236755 672.620483,385.314911  z\"})),_path2304||(_path2304=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M665.326843,313.399170  C665.292786,314.021301 665.179504,314.225037 664.921265,314.748047  C661.933289,310.794189 661.624207,306.040558 662.442383,301.024994  C663.197876,301.288116 663.644653,301.657959 664.361816,302.115143  C664.673889,302.616333 664.715698,303.030121 664.728760,303.757751  C663.863525,304.877350 663.930664,305.744843 664.758667,306.823547  C665.078125,308.992798 665.162842,310.986786 665.326843,313.399170  z\"})),_path2305||(_path2305=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M662.721924,296.828003  C658.175781,294.246246 659.286743,289.774780 659.684631,285.289978  C660.416077,285.009796 660.886353,285.014465 661.709534,285.010132  C662.102417,285.702332 662.142334,286.403534 662.217285,287.454224  C662.467590,288.343750 662.827209,288.823273 662.933594,289.704102  C662.990662,290.740479 663.040894,291.484589 663.120850,292.599884  C661.411499,293.980927 662.943787,295.323669 662.721924,296.828003  z\"})),_path2306||(_path2306=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M663.167236,289.845123  C662.659546,289.472748 662.378601,288.949127 662.175049,288.114594  C663.143372,288.125427 664.001953,288.466797 663.167236,289.845123  z\"})),_path2307||(_path2307=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M636.241333,232.788727  C629.440674,232.612717 633.197571,227.252304 632.528259,224.520309  C631.971130,222.246399 631.793945,219.785202 630.384277,217.884140  C624.676392,210.186493 620.957886,200.907623 611.997742,194.966980  C610.442566,192.804977 608.535034,191.426086 609.021057,188.781464  C611.295227,187.571701 612.656189,188.821014 614.136475,189.901489  C618.950134,193.415039 623.184998,197.486526 626.818237,202.666718  C627.093750,202.899353 627.000000,202.995438 627.049927,202.950989  C631.488464,205.900452 631.714050,211.508942 634.865784,215.312302  C635.888855,216.546921 636.553772,218.129013 637.764587,219.720413  C638.015930,219.969482 638.155273,220.428436 638.189453,220.665833  C637.518066,224.769836 637.629700,228.756653 636.241333,232.788727  z\"})),_path2308||(_path2308=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M636.020142,233.356674  C636.136292,229.042786 634.555786,224.834717 637.894165,221.075180  C638.903015,220.954300 639.582397,221.005386 640.604187,221.061798  C640.946594,221.067139 641.032959,221.498413 641.077454,221.713776  C641.389709,222.297043 641.598022,222.695938 641.780823,223.461090  C641.274475,225.800125 641.571899,227.691223 642.787598,229.740295  C643.014282,230.162460 643.035889,230.330521 643.077026,230.752014  C641.730347,232.639175 642.294250,234.110596 643.690430,235.786987  C644.597473,237.459946 645.291077,238.875885 646.039185,240.630890  C646.535034,242.316879 647.162415,243.653214 646.063232,245.321442  C645.145264,245.934204 644.441162,246.064758 643.345825,245.939804  C642.307373,245.584488 641.802429,245.120499 641.459351,244.104065  C641.448669,242.798737 641.868042,241.755936 640.695251,240.737610  C639.525085,239.429993 638.268066,238.660080 637.200195,237.269165  C636.739685,235.886688 636.403137,234.792419 636.020142,233.356674  z\"})),_path2309||(_path2309=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M627.088745,202.510468  C624.539246,202.887817 623.436523,200.911972 622.123718,199.223038  C618.761169,194.897079 614.578003,191.564514 609.391113,188.988220  C607.862122,188.688919 607.278137,187.828857 606.763062,186.415771  C606.544678,184.222168 605.516418,182.448654 606.724731,180.310089  C613.144104,185.258347 618.036804,191.941330 625.614563,195.986023  C626.329834,198.070480 626.706787,200.096039 627.088745,202.510468  z\"})),_path2310||(_path2310=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M638.004639,219.592621  C633.650757,218.569290 632.512085,214.112640 630.531677,210.916519  C629.257874,208.860794 628.244324,206.095886 627.110535,203.276215  C631.109619,203.177734 633.323608,206.027206 634.382874,209.221603  C635.500122,212.590805 636.928406,215.837204 638.004639,219.592621  z\"})),_path2311||(_path2311=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M606.838989,179.778625  C607.323364,181.761124 607.652466,183.501999 607.983032,185.626740  C606.956116,187.015030 605.851013,186.641724 604.432861,186.018219  C603.939087,185.697723 603.754028,185.550079 603.333008,185.136292  C602.116577,183.238052 601.127930,181.608734 601.431641,179.242813  C601.962219,178.270859 602.543213,177.897873 603.634521,177.904602  C604.142456,178.019897 604.310730,178.024506 604.731323,178.025803  C605.550293,178.527328 606.117004,179.032166 606.838989,179.778625  z\"})),_path2312||(_path2312=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M642.997925,229.578522  C640.884033,228.731018 639.241211,227.254242 640.707886,224.230499  C641.340881,223.615173 641.798706,223.480042 642.608643,223.843002  C642.888672,224.096695 642.928223,224.550705 642.960449,224.776276  C642.996216,226.388794 642.999756,227.775711 642.997925,229.578522  z\"})),_path2313||(_path2313=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M642.888306,223.774933  C642.460022,224.069183 642.031311,224.041672 641.278931,224.004364  C640.974976,223.534439 640.994751,223.074295 641.068237,222.271652  C642.020569,222.077957 642.727478,222.448959 642.888306,223.774933  z\"})),_path2314||(_path2314=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M603.834351,177.727295  C603.488525,178.264450 603.002869,178.513596 602.266846,178.873505  C601.092041,179.323135 600.681824,178.762344 600.332275,177.669678  C600.370178,177.062424 600.440002,176.825058 600.751404,176.305969  C602.139526,176.026260 603.062195,176.455673 603.834351,177.727295  z\"})),_path2315||(_path2315=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M600.733887,175.890472  C600.988953,176.191330 600.984924,176.358383 600.971802,176.775970  C598.599854,178.206131 597.354736,177.600708 597.714600,174.440948  C598.135498,174.040146 598.304443,174.033066 598.726685,174.015442  C599.478210,174.588837 599.976501,175.172760 600.733887,175.890472  z\"})),_path2316||(_path2316=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M642.768555,245.242142  C643.738464,245.006653 644.474365,245.007492 645.578247,245.010590  C649.371338,246.717575 650.136169,250.017593 650.603882,253.307922  C650.770752,254.481949 651.042297,255.447403 651.767334,256.703125  C651.930420,258.063629 651.992371,259.102692 652.081909,260.528992  C651.636902,265.823822 657.156372,268.416016 656.915161,273.622803  C656.785217,274.138062 656.615417,274.280151 656.174866,274.229919  C654.061829,273.805084 653.583435,272.316650 653.103577,270.900604  C650.621399,263.575287 646.233643,257.423584 641.138184,251.306046  C640.764526,248.958618 642.340820,247.413025 642.768555,245.242142  z\"})),_path2317||(_path2317=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M652.131226,256.803467  C650.405640,256.851074 648.826477,256.030731 649.259338,254.648514  C650.475952,250.764328 647.237183,248.623474 646.105591,245.322006  C646.200439,243.755951 644.755920,242.664093 645.842041,241.160400  C647.908569,241.181152 649.600464,242.262924 649.615112,243.873093  C649.655640,248.351913 652.769226,252.080063 652.131226,256.803467  z\"})),_path2318||(_path2318=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M643.968628,235.713654  C642.496643,235.952606 641.532898,235.102448 640.640686,234.132996  C638.128967,231.403915 639.891113,231.009766 642.725281,231.002594  C645.373840,232.044220 644.634827,233.728500 643.968628,235.713654  z\"})),_path2319||(_path2319=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M659.793091,280.735474  C658.396240,280.668457 655.662231,281.964630 656.825073,278.338806  C657.115479,277.852448 657.278015,277.663605 657.700562,277.743164  C658.346375,278.037659 658.732056,278.063782 659.398987,278.132080  C659.741760,278.906189 659.803284,279.638092 659.793091,280.735474  z\"})),_path2320||(_path2320=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M657.968628,277.645630  C657.792847,278.013763 657.625000,278.015930 657.205078,278.029694  C656.618530,276.938507 656.284119,275.835693 655.926880,274.385223  C656.079346,274.028046 656.254517,274.018524 656.692383,274.002472  C658.123535,274.832947 657.949890,276.087463 657.968628,277.645630  z\"})),_path2321||(_path2321=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M486.331024,596.224243  C485.994080,596.007324 485.500397,595.998657 485.253540,595.993530  C484.050751,595.061157 482.975067,594.339355 481.328308,594.014709  C475.048004,592.975342 469.296478,590.800720 463.597290,589.172363  C454.041412,586.441956 444.549774,582.556763 436.753723,575.175781  C431.503265,570.204956 425.376221,565.981079 419.945587,561.037476  C418.564972,559.780701 417.003571,558.847839 417.012085,556.360596  C417.395966,555.651550 417.821411,555.368591 418.657013,555.061646  C420.824463,554.896484 422.486969,555.613525 423.461548,556.912537  C428.662567,563.845093 436.306000,567.600647 443.156555,572.389893  C443.702606,572.771606 442.960144,572.607971 443.536774,572.674988  C450.667786,573.503601 457.168121,578.707336 464.804108,575.854431  C466.630066,575.172241 468.369324,575.047974 470.143616,575.678345  C471.898224,576.301758 473.623199,576.817078 475.858276,576.122498  C476.764282,576.092102 477.275635,576.177368 478.133911,576.504272  C482.869324,579.762878 488.017029,579.076538 492.896698,579.457581  C497.395081,579.808960 501.902710,579.754333 505.659637,583.487122  C506.515625,585.860168 506.802460,588.378296 509.845245,587.964111  C519.985840,586.583618 530.104980,587.912048 540.616394,588.035889  C541.000061,587.985718 541.499756,587.990967 541.749634,587.993042  C545.005066,588.198608 545.123535,590.475891 545.132568,592.617249  C545.141113,594.638977 543.900635,596.644592 542.067261,596.618591  C533.940308,596.503601 527.517761,602.740601 519.154602,602.179688  C514.368713,601.858826 509.500244,602.144287 504.934326,600.634521  C498.954437,598.657288 492.310150,599.738098 486.331024,596.224243  z\"})),_path2322||(_path2322=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M486.124939,596.316406  C494.396332,596.980652 502.634979,598.975159 510.930511,600.326172  C518.182922,601.507263 526.238403,601.566284 532.976990,596.754822  C534.323181,595.793640 535.453186,594.755371 537.404602,595.576843  C539.503845,596.460510 541.866699,596.293030 543.321777,594.407837  C544.853455,592.423279 543.811096,590.328979 542.279175,588.231018  C544.515320,586.014221 554.477478,586.035706 556.647461,587.893616  C558.512512,589.490295 556.698120,590.435364 555.950134,591.029724  C553.524414,592.957214 550.868103,594.594238 548.304565,596.348816  C547.537842,596.873535 546.114197,597.198181 546.730286,598.394775  C547.097290,599.107483 548.423889,599.847595 549.205750,599.741333  C554.802551,598.981018 560.735352,601.064575 566.040588,597.692627  C567.629089,596.682983 568.444763,597.886169 568.958374,599.651489  C569.601624,600.680908 569.763916,601.458923 569.250000,602.662476  C565.178650,602.393494 561.406494,602.404602 557.374756,603.943359  C552.773438,604.233948 548.667480,605.398315 544.084106,605.692383  C543.490540,605.829895 543.250549,605.865906 542.650269,605.915649  C538.668823,606.239319 535.101013,606.848511 531.224365,607.892883  C525.476257,608.899536 520.039795,607.956177 514.317261,608.739990  C513.540710,608.974915 513.101379,608.973938 512.332642,608.972778  C508.414825,609.104126 504.860046,607.986755 500.917297,608.808472  C499.635284,609.187683 498.684082,609.311890 497.357971,609.049805  C497.003662,608.981018 496.517548,608.964661 496.274506,608.955688  C490.947205,606.562805 485.369507,606.464355 479.972473,605.631714  C477.069366,605.183777 474.051147,605.341919 471.087433,605.268921  C465.905792,605.141418 461.122467,605.973206 459.065918,611.782654  C458.538452,613.272705 457.321075,614.141174 455.458679,614.692017  C454.568542,614.790771 454.074860,614.690430 453.299438,614.236694  C452.126404,613.494568 451.259766,612.984253 450.198975,612.233276  C449.960449,608.552429 454.118011,606.232788 452.523438,602.291382  C452.205353,601.505127 453.413147,601.028137 454.284271,601.045715  C460.803833,601.177002 467.270172,599.302246 473.841309,600.732788  C477.871948,601.610168 481.656860,599.913452 485.483734,598.963135  C486.850037,598.623840 486.720367,597.644897 486.124939,596.316406  z\"})),_path2323||(_path2323=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M540.870789,587.694397  C539.530273,591.652771 536.410278,590.029358 534.149414,589.721375  C526.390015,588.664429 518.688110,588.508179 510.965729,589.812683  C506.132538,590.629150 504.316833,589.104614 504.960175,584.342407  C508.046692,581.300537 511.651825,582.468323 515.506042,582.558411  C520.326172,583.508362 524.748657,585.092651 529.439941,582.179443  C531.281311,581.492798 532.772278,580.960754 534.686157,581.766113  C535.758606,583.948181 536.905884,585.336182 539.626709,584.994324  C540.242249,585.797791 540.491882,586.600464 540.870789,587.694397  z\"})),_path2324||(_path2324=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M579.237488,601.765015  C578.250305,602.002136 577.503113,602.004333 576.382202,602.008118  C574.201172,603.214722 573.127258,602.167053 572.082764,600.378784  C572.332825,598.256226 573.058411,596.291565 575.056091,597.850220  C576.989258,599.358459 578.774414,598.124756 580.781616,598.764587  C581.685181,600.556641 580.218445,600.825012 579.237488,601.765015  z\"})),_path2325||(_path2325=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M571.621338,599.997925  C573.116211,600.642883 574.237366,601.288147 575.683533,601.971619  C574.539978,605.642578 572.185120,605.450439 569.215332,603.265686  C569.000671,602.247009 569.001343,601.496521 569.003418,600.370544  C569.752441,599.996155 570.500000,599.997192 571.621338,599.997925  z\"})),_path2326||(_path2326=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M579.391357,602.000732  C578.988281,600.803589 579.812866,600.153687 580.818481,599.248413  C581.444153,598.994568 581.885925,598.994019 582.658936,598.991821  C584.001709,598.156433 584.882019,598.475037 585.858032,599.655762  C584.349609,601.969910 582.096802,602.077637 579.391357,602.000732  z\"})),_path2327||(_path2327=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M586.258545,600.009094  C585.217773,599.694397 584.424194,599.376709 583.310425,599.024658  C582.757385,596.140564 584.257507,596.080566 586.660278,596.963867  C587.001770,597.754761 587.001099,598.504700 587.000183,599.629761  C587.000000,600.004883 586.505737,600.006042 586.258545,600.009094  z\"})),_path2328||(_path2328=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D88861\",opacity:1,stroke:\"none\",d:\" M468.348694,744.926453  C468.044434,741.865356 468.118195,738.786926 468.745270,735.651978  C469.446381,732.147034 469.778046,728.357544 466.255585,725.672058  C465.247345,724.903320 465.289673,723.959717 465.972046,722.655518  C468.934113,716.994568 471.666351,711.213318 474.741058,705.240112  C476.714996,707.233032 478.573181,709.367126 480.119202,711.707336  C485.594971,719.996155 485.315277,725.405273 478.595795,732.779663  C475.072449,736.646362 471.072754,740.072083 468.348694,744.926453  z\"})),_path2329||(_path2329=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M459.782104,870.437256  C457.377655,871.131531 454.909912,870.573669 452.392944,872.040527  C450.885712,869.675293 452.307648,866.626343 449.929779,864.418335  C449.005035,863.559448 450.225891,862.034546 450.940918,862.461548  C454.039825,864.312317 456.076721,860.656616 459.155090,861.316284  C459.493866,861.374512 459.636902,861.359070 459.693390,861.314575  C459.957550,861.372681 460.165192,861.475342 460.116302,861.812256  C459.875305,862.434509 459.890839,862.822449 459.890991,863.501709  C459.371307,865.012085 460.222046,866.191223 459.975464,867.709229  C459.938812,868.711365 459.908844,869.406738 459.782104,870.437256  z\"})),_path2330||(_path2330=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M467.309937,865.489319  C467.535461,866.540955 467.728607,867.948792 466.607117,867.167847  C465.349915,866.292419 466.108551,864.465332 466.114227,862.898987  C467.286682,863.497864 466.927307,864.465942 467.309937,865.489319  z\"})),_path2331||(_path2331=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M460.218170,867.800049  C458.653168,866.954224 458.319000,865.721741 459.595459,864.025452  C460.355011,865.012634 461.426178,866.139893 460.218170,867.800049  z\"})),_path2332||(_path2332=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M465.425140,859.542847  C465.383270,859.478516 465.467010,859.607178 465.425140,859.542847  z\"})),_path2333||(_path2333=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M460.028473,861.958008  C459.859772,862.046570 459.720947,861.667297 459.735413,861.468628  C460.155823,861.278198 460.568298,861.281555 460.028473,861.958008  z\"})),_path2334||(_path2334=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M463.072693,856.945312  C463.236023,857.082458 463.322968,857.292053 463.409912,857.501587  C463.292511,857.475037 463.175079,857.448547 462.955322,857.296875  C462.852997,857.171753 462.996338,857.017700 463.072693,856.945312  z\"})),_path2335||(_path2335=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M456.066345,875.494385  C457.742126,875.344910 458.631104,872.855042 460.796387,873.850708  C460.574005,877.947937 458.622925,877.584351 456.066345,875.494385  z\"})),_path2336||(_path2336=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE7755\",opacity:1,stroke:\"none\",d:\" M450.278503,720.735962  C445.097656,720.945129 445.073059,717.131287 445.343414,714.006287  C445.599762,711.043640 446.960632,708.203430 443.776520,706.034485  C446.689514,700.903564 441.087067,694.580139 446.048431,689.755493  C446.909515,688.918091 446.898346,688.050537 446.514191,687.071472  C445.423035,684.290833 445.674133,681.357849 445.269562,678.234009  C444.646515,677.599365 444.437561,677.128052 444.451202,676.192017  C447.644501,671.344727 447.644501,671.344727 454.637482,673.976624  C455.728485,674.467468 456.309479,675.210144 457.118378,675.331604  C459.343414,675.665588 461.944061,677.288757 463.732971,675.495972  C465.526367,673.698730 462.727051,672.095886 462.252228,670.309082  C461.483948,667.418274 460.465485,664.573730 462.103668,661.676270  C462.903320,660.261963 462.817383,658.851013 462.342773,657.378357  C461.238220,653.951294 462.442719,650.386047 464.906860,648.899841  C468.884888,646.500671 469.777496,643.140137 470.647339,638.969727  C472.264557,638.037415 473.414703,638.392944 474.702271,639.716309  C475.393951,643.152161 479.852875,644.641846 478.253479,648.766357  C472.562836,651.494202 472.487610,652.497925 475.025238,657.789246  C476.948242,661.798950 476.726562,666.147400 474.273590,670.139160  C472.811218,672.518921 470.201385,674.420227 472.626617,677.961182  C473.853058,679.751831 470.157227,680.341309 470.034607,682.663818  C466.827850,683.127686 464.769806,684.563904 462.600342,687.074707  C459.711823,690.417603 455.548676,692.625061 452.160553,695.581055  C449.389862,697.998413 447.530212,709.027527 448.975250,712.470154  C450.048981,715.028076 451.371521,717.544556 450.278503,720.735962  z\"})),_path2337||(_path2337=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BD6C42\",opacity:1,stroke:\"none\",d:\" M454.756409,614.326233  C455.667023,612.841675 457.304688,612.998779 457.916809,611.530090  C460.437164,605.482910 464.510101,602.508484 470.588013,603.560059  C476.690796,604.615967 483.261780,602.314880 488.960327,606.178345  C490.063873,606.926514 491.112732,605.684692 492.208405,605.495422  C494.351868,605.125183 495.715790,605.971130 496.016418,608.592651  C495.860504,608.961914 495.689514,608.977173 495.261292,609.004761  C493.474457,610.373169 491.606506,610.234619 489.926422,609.745300  C486.893585,608.862061 483.821167,609.240356 480.386963,609.015381  C479.558685,609.004944 479.114258,609.004761 478.336548,609.007568  C469.638123,608.789307 467.682678,610.518188 466.612640,619.115540  C466.431335,620.572327 466.442139,622.058777 465.705566,623.779663  C464.235016,625.295715 463.142487,626.730530 461.081848,627.510864  C455.807892,624.598999 454.802002,619.793030 454.756409,614.326233  z\"})),_path2338||(_path2338=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M464.761780,624.355957  C464.956055,619.395081 464.845367,614.802124 467.560059,610.704163  C470.459045,606.328125 472.481232,605.861877 477.679138,608.834106  C471.484863,617.585266 471.171021,626.956177 474.417847,636.794556  C474.673584,637.569458 474.789948,638.390320 474.978851,639.591248  C473.884308,639.687805 472.782013,639.382874 471.336212,639.040161  C468.598663,640.235291 467.337311,638.615112 466.988495,636.826782  C466.199768,632.783081 464.557404,628.906860 464.761780,624.355957  z\"})),_path2339||(_path2339=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C4794A\",opacity:1,stroke:\"none\",d:\" M480.291718,609.277222  C484.718292,606.939270 489.434113,608.659973 494.576874,609.010010  C493.963654,612.329834 491.196198,610.930603 489.207672,610.864014  C486.320465,610.767395 483.455048,610.019470 480.291718,609.277222  z\"})),_path2340||(_path2340=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BD6C42\",opacity:1,stroke:\"none\",d:\" M499.910950,608.343872  C503.914978,605.556396 507.638763,608.058838 511.725525,608.709595  C510.881500,611.185364 508.342712,608.632141 507.048401,610.724060  C506.554169,611.014099 506.109589,611.011230 505.331604,611.007324  C503.163666,610.489563 500.975769,610.766052 499.910950,608.343872  z\"})),_path2341||(_path2341=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C4794A\",opacity:1,stroke:\"none\",d:\" M499.657990,607.989502  C501.130463,609.601135 503.680481,608.490417 504.832153,610.704468  C501.991943,612.894043 499.471497,611.878723 497.075256,609.336853  C497.556274,608.132751 498.416077,608.007446 499.657990,607.989502  z\"})),_path2342||(_path2342=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BD6C42\",opacity:1,stroke:\"none\",d:\" M541.649902,605.054321  C542.167603,605.011841 542.334961,605.010864 542.753357,605.007141  C544.310669,604.446777 544.643188,605.403809 545.013916,606.657104  C542.488403,610.343750 538.832825,610.320251 535.355042,609.771362  C532.387939,609.303101 529.909607,609.608521 526.929260,610.331238  C523.189148,611.237976 518.838013,609.624634 514.365295,609.037354  C514.432495,606.682312 516.250977,607.025024 517.842102,607.014465  C522.246826,606.985107 526.651855,606.994812 531.524170,606.984741  C535.082214,606.292786 538.449890,606.973511 541.649902,605.054321  z\"})),_path2343||(_path2343=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M545.341248,607.013733  C544.499268,606.455444 543.987000,605.894470 543.239624,605.168884  C547.405273,603.844849 551.811584,602.732727 556.713257,603.721191  C554.483154,606.899292 550.658081,605.296021 547.347046,606.852295  C546.550354,607.013184 546.110657,607.012085 545.341248,607.013733  z\"})),_path2344||(_path2344=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EAA585\",opacity:1,stroke:\"none\",d:\" M476.297241,275.866241  C474.724670,276.258911 473.099396,277.178650 472.210907,276.707855  C466.839142,273.861450 461.261505,274.247284 455.463470,274.442139  C452.647461,274.536774 450.196106,275.127136 447.537567,275.589203  C440.706177,276.776581 433.665588,277.411041 426.743561,277.186981  C422.450043,277.048035 417.808563,279.076385 413.347900,276.041534  C412.444305,275.374298 412.177734,274.667694 412.302429,273.471863  C413.300629,271.483429 414.556488,270.195068 416.401917,268.947815  C421.493622,265.354736 426.767914,263.387421 433.003845,263.036743  C439.074982,265.180450 444.886414,263.508392 450.619873,263.562286  C455.911224,263.612000 461.183502,263.257843 466.471588,264.004486  C471.326813,264.690002 475.745087,263.949554 478.459045,259.100647  C479.385925,257.444702 480.881836,256.404419 483.247070,256.146301  C488.604828,257.590424 492.607910,260.349854 495.065125,264.930542  C497.276459,269.053009 496.566132,271.535187 492.344666,274.842712  C489.632812,275.749054 487.238251,275.454834 484.497559,275.401489  C482.165039,275.405670 480.557343,273.705719 478.253052,274.385254  C477.559753,274.995026 477.091217,275.395844 476.297241,275.866241  z\"})),_path2345||(_path2345=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M399.374908,278.964569  C398.567291,275.740234 400.369476,272.844727 400.682831,269.841003  C401.815521,258.983185 405.905823,248.800766 407.286438,237.972855  C408.051422,231.973251 410.663361,226.105560 412.694611,220.242126  C414.868225,213.967712 416.424255,207.406158 419.160736,201.350357  C421.176666,196.888992 424.031921,192.736389 426.978088,188.793625  C428.611908,186.607101 431.055847,184.852188 434.812805,185.276062  C435.215576,189.950897 431.517120,192.264542 429.462952,195.542618  C428.602936,196.915039 426.995087,197.868195 426.500610,199.477631  C421.831268,214.675690 412.895355,228.711060 413.992950,245.498306  C414.120148,247.443680 413.603699,249.447632 412.833435,251.698242  C408.166534,256.974121 408.671906,263.653229 406.688690,269.463104  C405.848297,271.924957 405.877991,274.696198 403.282227,276.725586  C401.911987,277.633881 400.803528,278.281281 399.374908,278.964569  z\"})),_path2346||(_path2346=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M439.799957,297.663727  C445.640076,293.592590 451.941467,292.627380 458.561401,294.380524  C460.395050,294.866150 461.408325,294.158234 462.468994,293.047363  C463.707001,291.750824 464.594269,290.160095 466.584045,289.627594  C468.800629,289.034393 469.320679,287.556305 468.211090,285.407257  C466.820770,282.714417 462.490662,280.097412 462.113281,280.731506  C459.448486,285.209381 457.380127,281.493164 455.042450,280.440033  C454.421814,278.801636 455.338470,278.448364 456.621918,278.078186  C463.341522,277.227600 469.247803,278.232422 474.498383,282.525909  C475.028503,281.247375 475.522736,280.055420 476.075562,278.533081  C476.487488,277.708740 476.965546,277.502228 477.943909,277.765137  C479.286224,279.083557 479.491028,280.440704 479.467468,282.273560  C479.469757,283.222931 479.476105,283.763550 479.513672,284.703735  C481.660126,292.930878 481.338287,293.710999 473.364075,295.995636  C469.641754,297.062103 466.616150,299.643982 462.761932,300.326630  C455.413940,301.628143 448.190125,301.029816 440.681000,298.908875  C440.154755,298.487976 439.977142,298.280640 439.799957,297.663727  z\"})),_path2347||(_path2347=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M403.454498,276.989685  C404.790924,270.929169 406.175201,264.787048 407.504211,258.616882  C407.994659,256.339935 408.253967,253.215408 411.641388,252.050568  C413.878845,253.712997 413.244965,255.868057 412.952637,257.904572  C412.570160,260.569031 412.760681,263.061310 414.667145,265.632446  C415.830231,268.398376 414.981873,270.428589 413.299530,272.672852  C413.014709,273.747528 413.003723,274.495026 412.981720,275.615875  C410.021576,277.032013 406.968201,277.131317 403.454498,276.989685  z\"})),_path2348||(_path2348=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M456.740906,277.773926  C456.411499,278.573334 455.842468,279.090759 455.111389,279.855438  C451.794800,280.191376 448.640259,280.280060 445.258484,280.098999  C448.367218,276.658386 452.677307,278.267853 456.740906,277.773926  z\"})),_path2349||(_path2349=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M478.502289,277.929688  C477.612396,278.017609 477.187317,278.056183 476.448181,278.148743  C476.097687,277.709137 476.061188,277.215515 476.017090,276.351837  C476.183075,275.431213 476.356659,274.880615 476.763641,274.150085  C480.951782,273.611938 480.007843,275.721771 478.502289,277.929688  z\"})),_path2350||(_path2350=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M435.941284,323.565247  C438.731232,323.118835 441.411255,323.009399 444.539734,322.898163  C448.931061,323.606781 452.544861,324.739899 453.557648,329.747375  C453.921509,330.501434 454.071991,330.956543 454.247986,331.781067  C454.378632,333.097809 454.333221,334.046692 453.940155,335.292419  C453.404846,336.675720 451.780457,337.270935 452.643860,339.133362  C452.745392,339.922760 452.691864,340.378113 452.410278,341.151123  C449.750397,344.490784 445.980164,344.109985 442.336975,345.102722  C439.267273,345.406860 436.567932,345.663116 433.459045,345.865417  C431.451385,344.477661 429.274902,345.416290 427.306091,344.204498  C427.021790,343.986969 426.593628,343.921234 426.378479,343.901550  C423.836823,340.651062 423.278595,336.869202 422.787598,332.680725  C421.781891,328.867218 423.362823,327.431122 426.596344,326.583984  C429.686554,325.774414 433.167358,326.180756 435.941284,323.565247  z\"})),_path2351||(_path2351=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M427.125000,344.251892  C428.952026,344.373138 431.199280,343.144775 432.933044,345.468079  C431.646393,345.890717 430.243347,345.970001 428.418549,346.042358  C427.740601,345.529205 427.484406,345.023010 427.125000,344.251892  z\"})),_path2352||(_path2352=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C77158\",opacity:1,stroke:\"none\",d:\" M408.251587,544.214844  C405.026550,542.577515 405.221954,539.340698 403.959259,536.939270  C398.812073,527.149963 394.915283,516.797607 391.225311,506.437836  C389.459503,501.480255 389.383179,495.708405 389.596252,490.347260  C389.704407,487.625153 389.467194,485.122101 388.905975,482.585632  C388.473236,480.630066 387.762878,478.798279 389.012024,476.857971  C389.421143,476.222473 389.760437,475.162994 389.514435,474.541779  C385.967865,465.585602 386.863373,455.607117 383.692078,446.767456  C379.728363,435.718842 379.528870,424.466095 379.054688,413.121307  C378.965820,410.994812 377.698395,409.850555 376.321960,408.206970  C376.843109,401.599335 376.136383,395.073486 377.992584,388.398560  C379.859772,387.037628 378.410767,383.488342 381.884918,383.679565  C384.815948,387.031982 382.409637,391.187073 384.408356,394.901245  C384.531555,395.556610 384.552795,395.823639 384.504028,396.485840  C382.305115,400.291260 383.038025,404.259155 382.657440,407.908020  C381.527771,418.738708 384.219299,429.234619 386.424805,439.766785  C388.362000,449.017456 390.238892,458.369629 393.398621,467.181641  C396.067078,474.623596 394.441193,482.736725 398.327576,490.128357  C400.421478,496.523438 398.817596,503.093842 401.432434,509.063538  C404.412201,515.866455 404.494507,523.662537 408.642212,530.485291  C409.424103,532.391479 409.966217,534.002502 411.429199,535.529968  C411.757477,536.047729 411.871765,536.266113 412.118408,536.830078  C412.906952,540.517639 415.217072,542.627808 417.690918,544.678223  C420.084747,546.662354 422.013458,548.935974 420.612366,552.739868  C420.220520,553.219299 420.023804,553.375977 419.470886,553.656250  C416.585754,554.097473 415.834778,551.924927 414.278503,550.251465  C414.016846,549.989075 414.001221,550.000000 414.005615,549.991943  C412.079468,548.227112 410.920288,545.699158 408.251587,544.214844  z\"})),_path2353||(_path2353=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M437.656921,350.977509  C438.173004,350.954681 438.344940,350.955719 438.774506,350.968262  C442.353363,353.951874 446.534851,353.952728 450.604553,354.305847  C453.725494,354.576599 456.884521,354.630127 460.022522,356.522369  C460.784424,357.524078 460.919983,358.317291 460.700317,359.544891  C456.039246,365.146545 449.719269,364.885040 443.663177,365.391449  C441.796936,365.547516 441.075378,364.124695 440.548706,362.697113  C439.891113,360.914581 438.812592,360.251984 436.822815,360.195526  C423.062195,359.804993 409.772369,361.830902 396.777039,367.625000  C394.155701,368.131226 392.353516,370.092773 389.511475,369.530212  C387.789276,366.395569 389.607300,364.430573 391.664948,362.212952  C393.705750,360.322571 395.805084,359.451202 398.113342,358.957886  C401.951477,358.137634 405.556549,357.303253 408.657104,354.224243  C411.055481,351.842560 415.263489,351.927948 418.519043,351.909180  C423.046387,351.883057 427.929840,349.362885 432.605286,352.913147  C434.272247,351.976776 435.688049,351.257782 437.656921,350.977509  z\"})),_path2354||(_path2354=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE7755\",opacity:1,stroke:\"none\",d:\" M460.269165,360.295868  C459.993866,359.233551 459.996246,358.483002 459.998535,357.357117  C459.671021,355.679779 460.642456,355.453339 461.848999,355.109802  C463.614838,355.207336 465.109039,355.580902 466.375366,353.863953  C470.847015,351.518616 473.400146,348.066071 474.802765,343.276184  C476.683655,341.701752 479.248474,342.520203 480.857483,340.335999  C481.187347,339.836426 481.345306,339.638733 481.828247,339.242096  C482.869446,338.745483 483.618988,338.605316 484.776306,338.535522  C486.464996,338.266449 487.771790,337.963593 489.274841,339.033081  C490.328156,343.580719 488.845306,347.500214 487.670288,351.847382  C480.994354,356.196991 473.694855,358.252014 466.754639,361.122559  C464.779449,361.939514 462.533936,361.779663 460.269165,360.295868  z\"})),_path2355||(_path2355=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M463.345825,355.993042  C462.141510,356.160675 461.289215,356.325623 460.217651,356.736206  C454.610596,356.249176 449.195312,355.667694 443.850311,354.698639  C442.074158,354.376617 439.713074,354.236206 439.073425,351.346802  C440.316589,351.177002 441.854218,350.994049 442.834900,351.647247  C445.172974,353.204773 446.184296,352.674194 447.177734,350.161041  C448.179016,347.628052 449.612793,345.928864 452.661835,348.600067  C458.740601,353.925537 468.009705,352.132782 472.183044,345.177063  C472.653320,344.393250 473.625671,343.910675 474.685822,343.148743  C475.563049,348.856293 472.706970,352.457458 467.224121,354.738495  C466.036163,355.795929 464.892639,355.978058 463.345825,355.993042  z\"})),_path2356||(_path2356=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M482.189148,339.596558  C481.910492,339.911896 481.467377,339.955994 481.248383,339.995056  C475.494324,339.805359 470.202271,341.197174 464.911621,342.522552  C463.128387,342.969299 461.410461,343.221558 459.362183,342.363586  C459.228424,341.481781 459.646667,341.015991 460.332306,340.356659  C460.898132,339.869293 461.241821,339.613556 461.871826,339.196747  C462.914490,338.581970 463.737579,338.275665 464.896576,337.914886  C465.977112,337.596985 467.386292,337.754517 467.403290,337.198944  C467.444214,335.862030 465.932312,336.487793 464.843536,335.957062  C462.654846,335.173676 460.810577,334.473694 460.437378,331.835144  C461.405304,329.742035 464.190491,330.201569 464.977356,327.734802  C469.295105,327.184814 472.206940,329.778046 475.461700,331.460724  C477.045410,332.279510 478.623474,333.105225 480.608887,334.015564  C482.678040,335.538177 483.539124,337.123047 482.189148,339.596558  z\"})),_path2357||(_path2357=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M391.684875,361.854004  C391.732819,364.382812 390.228363,366.250275 389.148254,368.670502  C388.764191,371.256409 387.223206,373.203308 387.312622,375.918182  C387.174408,376.726135 387.027466,377.169403 386.662842,377.901337  C384.300751,379.374939 384.042755,381.939423 382.281464,383.808411  C379.356689,383.965424 380.659760,387.311127 378.347534,387.922791  C377.307770,382.938080 379.195343,378.084625 379.125092,373.055420  C379.053619,367.938812 385.563263,362.110535 391.684875,361.854004  z\"})),_path2358||(_path2358=/*#__PURE__*/React.createElement(\"path\",{fill:\"#ADA99F\",opacity:1,stroke:\"none\",d:\" M462.236328,339.678284  C461.788116,340.227753 461.539703,340.424103 461.026123,340.650513  C460.103333,341.360413 459.088348,340.931305 458.065430,341.603333  C457.069458,341.784668 456.369080,341.825714 455.318024,341.877106  C452.679382,340.982941 452.769165,339.163208 453.439819,337.360992  C454.048676,335.724915 454.099243,334.152924 453.580292,332.165527  C453.313171,331.387634 453.187531,330.952179 453.190033,329.935120  C454.277527,328.796722 455.315735,328.716217 456.774841,328.936005  C457.401306,329.136017 457.641571,329.245239 458.192993,329.597839  C459.193268,333.284332 463.988861,335.016602 462.236328,339.678284  z\"})),_path2359||(_path2359=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M442.254639,345.371948  C444.740021,343.235443 448.435852,343.382233 451.381195,341.011536  C452.534851,341.000275 452.941467,341.514984 453.044128,342.572876  C450.193542,346.604797 445.941345,344.449188 442.254639,345.371948  z\"})),_path2360||(_path2360=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M453.237915,342.894043  C452.637695,342.409790 452.343964,341.913483 451.885864,341.174683  C451.820404,340.510925 451.919342,340.089630 452.053650,339.345398  C451.907745,338.132263 451.842438,337.257965 452.626373,336.199829  C452.924866,334.819916 453.035126,333.714386 453.292114,332.215973  C455.746948,333.099396 454.944244,335.208954 454.674988,337.035645  C454.464172,338.465912 453.699432,339.824524 454.804260,341.566284  C454.493011,342.218933 454.018707,342.550446 453.237915,342.894043  z\"})),_path2361||(_path2361=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M437.770996,350.716736  C436.911407,352.364838 435.412994,352.906097 433.334808,352.968689  C433.672821,350.615417 435.170197,349.743866 437.770996,350.716736  z\"})),_path2362||(_path2362=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M458.094238,341.850403  C458.192932,340.467590 458.996521,339.988922 460.546661,340.636292  C460.420227,341.143707 460.038727,341.555237 459.369080,342.045837  C458.860229,342.069000 458.639465,342.013092 458.094238,341.850403  z\"})),_path2363||(_path2363=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M414.010071,550.327637  C416.557587,549.285950 416.743195,552.114685 418.660278,552.927856  C419.576935,553.677246 419.731628,554.443848 419.243958,555.636597  C418.567017,555.982788 418.121796,555.987549 417.342865,555.992432  C417.022583,554.129944 415.060364,553.837585 414.142822,552.304321  C413.989746,551.569336 413.996521,551.117737 414.010071,550.327637  z\"})),_path2364||(_path2364=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M408.060089,544.322021  C411.822906,543.707825 412.465424,546.944824 413.963409,549.633606  C411.100220,549.255310 409.612518,546.945374 408.060089,544.322021  z\"})),_path2365||(_path2365=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M439.500000,297.212830  C439.800415,297.254181 439.852875,297.712952 439.894409,297.940094  C444.334015,299.907532 448.690277,301.439423 451.334717,306.037445  C453.046600,309.014069 453.399628,311.125824 450.227112,313.483826  C447.548248,313.735260 445.169189,313.755432 442.360382,313.621948  C442.245697,310.198395 440.926117,308.658264 437.922577,306.691223  C433.548767,303.826721 428.685425,303.579102 424.092468,301.406677  C425.208435,298.826691 428.791199,300.470276 429.811035,297.315247  C432.475952,297.518738 434.871429,298.708130 437.712769,297.355530  C438.389404,297.127136 438.794464,297.149292 439.500000,297.212830  z\"})),_path2366||(_path2366=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M464.407043,284.763245  C464.795044,285.291565 464.769745,285.431366 464.407043,284.763245  z\"})),_path2367||(_path2367=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M456.999390,290.000488  C457.104858,290.125702 457.210938,290.250458 457.317017,290.375183  C457.244110,290.330444 457.171234,290.285675 457.049744,290.119873  C457.001129,289.998779 457.000000,290.000000 456.999390,290.000488  z\"})),_path2368||(_path2368=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M429.766602,297.109192  C430.583008,301.362305 427.630554,301.082092 424.410156,301.017578  C423.244843,301.028442 422.501587,301.025604 421.386963,301.033264  C419.897583,300.953857 418.935760,300.570160 418.142151,299.309753  C420.626404,297.464935 423.607635,297.727448 426.740540,297.639465  C427.142975,298.238037 427.398163,298.372345 427.929321,298.107178  C428.560699,297.679871 429.033844,297.428192 429.766602,297.109192  z\"})),_path2369||(_path2369=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M427.816895,297.921814  C427.785583,298.032257 427.483582,298.132996 427.093567,298.056824  C427.185791,297.890656 427.366028,297.901367 427.816895,297.921814  z\"})),_path2370||(_path2370=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M458.281189,330.225006  C458.031403,329.966003 457.690308,329.763519 457.506104,329.690033  C456.118286,329.192413 454.913452,328.197113 453.563782,329.922272  C453.413849,330.220428 453.036835,330.168884 452.897095,330.038635  C451.158203,326.624695 448.707794,324.367920 445.031006,323.217682  C446.775269,321.599579 448.522247,323.339722 450.665405,322.993103  C452.455414,323.650482 453.877167,324.281281 455.643433,324.947510  C459.184113,324.615143 461.981903,325.609436 464.703796,327.815613  C464.882111,329.262543 466.220490,330.366486 465.361908,331.351929  C464.241516,332.637909 462.974945,331.194397 461.413635,331.022827  C460.057098,331.661041 459.273224,331.178680 458.281189,330.225006  z\"})),_path2371||(_path2371=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M450.296967,313.844696  C452.089783,307.980652 449.065582,302.646912 442.616364,300.957703  C441.378265,300.633423 440.500793,300.087402 440.015625,298.515533  C446.975922,298.434875 453.957062,300.205078 461.055969,298.979858  C467.096619,297.937347 472.156403,294.310760 478.013977,292.593384  C481.829529,291.474762 477.557465,288.092987 478.048401,285.343262  C482.254028,282.950439 490.638123,285.372681 492.260132,289.327820  C493.422638,292.162384 491.621826,294.435974 489.301544,295.440308  C484.462799,297.534821 479.855530,300.485199 473.957062,300.664551  C472.265656,301.344788 470.203522,301.100433 469.770172,302.670715  C469.243347,304.579742 471.507294,304.711365 472.575226,305.572357  C473.752686,306.521637 474.911774,307.434540 475.326721,309.339355  C471.204468,314.856110 465.245270,314.020020 459.333801,314.611511  C458.231476,314.903137 457.483887,314.969177 456.352234,314.927246  C454.207977,314.595398 452.437286,314.284882 450.296967,313.844696  z\"})),_path2372||(_path2372=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M457.780823,314.274231  C461.011871,311.998810 464.595093,313.254791 467.861450,312.205261  C470.175171,311.461853 472.474548,310.866211 474.768066,309.288208  C476.711884,307.261047 478.530273,307.788788 480.425720,308.706635  C487.328308,312.049255 490.562866,317.575897 489.459625,325.120544  C488.808319,329.574432 488.825684,333.906097 489.223511,338.638916  C487.881287,339.289612 486.776184,339.600464 485.326294,339.943054  C483.271454,338.491913 482.539368,336.581940 482.074097,334.378021  C480.856384,328.609833 477.578064,324.260651 472.050049,321.299622  C468.546143,319.849579 465.198151,318.863770 462.245056,316.307007  C460.940155,316.010834 459.913971,315.959717 458.502563,315.900574  C457.675110,315.565491 457.490112,315.129364 457.780823,314.274231  z\"})),_path2373||(_path2373=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M465.252014,328.147156  C462.083313,327.267059 459.282745,326.381989 456.235107,325.239929  C458.777954,319.537659 459.621155,319.207062 464.621582,322.715179  C467.322327,324.609924 470.189331,325.959351 473.966675,327.036163  C475.252167,327.341675 475.843903,327.582306 476.744019,327.884430  C477.392914,328.184113 477.731934,328.401550 478.245148,328.864990  C478.812347,329.469452 479.133911,329.955475 480.095642,329.856567  C482.123993,331.421295 482.027222,332.962250 480.295013,334.763062  C474.742004,333.709290 470.709015,329.811981 465.252014,328.147156  z\"})),_path2374||(_path2374=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M480.327515,335.157166  C479.933685,333.407867 481.808960,331.656219 479.286133,330.153656  C478.817902,330.121002 478.638763,330.234619 478.233978,330.123932  C477.908325,329.614075 477.738434,329.379089 477.306000,329.088501  C476.279999,328.366486 475.227051,328.125793 474.232178,327.196106  C474.018768,326.971039 474.004730,326.986145 474.015411,326.977661  C473.414154,325.864960 472.992859,324.603149 471.343567,324.034363  C469.999115,322.693329 470.437653,321.559509 471.684265,320.240143  C476.425690,320.593689 483.869446,328.706787 483.592773,333.769775  C483.467834,336.056122 485.005432,337.347382 484.972717,339.618469  C484.214264,339.977722 483.446991,339.980621 482.295105,339.947723  C482.048035,338.231140 482.263855,336.528442 480.327515,335.157166  z\"})),_path2375||(_path2375=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M471.678314,319.860748  C471.696503,321.100983 471.394226,322.194885 471.062500,323.628906  C468.044250,321.562469 463.918976,320.564362 462.020294,316.401001  C465.383209,316.543121 468.356873,318.163910 471.678314,319.860748  z\"})),_path2376||(_path2376=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E4E38\",opacity:1,stroke:\"none\",d:\" M457.708679,313.997009  C458.017975,314.394196 458.036682,314.824066 458.086365,315.573242  C457.524597,315.737000 456.931885,315.581451 456.158936,315.165924  C456.458466,314.613861 456.938263,314.321808 457.708679,313.997009  z\"})),_path2377||(_path2377=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M454.667572,614.004883  C455.420624,618.809387 458.288300,622.569580 460.691101,626.830383  C466.494141,633.649048 466.347961,642.877319 460.587769,648.842102  C459.648438,649.814819 458.462402,650.555725 459.290283,652.148926  C461.138275,655.705261 460.087738,659.283081 459.355896,662.846130  C458.724335,665.920959 458.104919,668.819275 459.349609,672.067810  C460.478821,675.014771 458.819641,676.461792 455.311279,675.247437  C453.751190,674.838318 452.102173,675.112793 451.316437,674.415100  C448.504974,671.918762 447.233826,674.134888 445.360413,675.940247  C442.379730,675.109863 443.048035,672.515503 442.152130,670.324280  C442.017883,669.549988 442.011993,669.106567 442.006226,668.330383  C443.698059,664.605835 442.877594,660.675781 444.470764,657.187439  C445.700348,654.495300 446.248749,651.680725 445.778503,648.384338  C445.502747,646.451416 448.199799,643.840942 451.002960,643.020813  C454.373138,642.034851 456.415314,640.661987 455.249481,636.328369  C454.494507,633.521912 454.536469,630.427795 453.368195,627.647827  C451.581665,623.396729 454.394470,619.038086 452.995941,614.398376  C453.439606,614.004089 453.886169,614.003296 454.667572,614.004883  z\"})),_path2378||(_path2378=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M441.889526,670.279114  C444.519531,670.983643 443.604767,673.684998 444.869873,675.690491  C445.017365,676.454163 445.015350,676.894958 445.017090,677.666504  C442.265015,677.673157 442.522888,675.021118 441.203857,673.149536  C441.216248,672.128540 441.485748,671.346680 441.889526,670.279114  z\"})),_path2379||(_path2379=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M481.200409,594.252930  C482.982727,592.487732 483.942474,593.912109 484.951752,595.670288  C483.626434,595.931396 482.474152,595.317200 481.200409,594.252930  z\"})),_path2380||(_path2380=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M434.986176,184.988098  C433.438751,181.535477 437.548889,177.402420 442.538818,176.931854  C445.377014,176.664215 448.912750,178.635132 450.962006,174.440292  C452.711029,174.003754 454.382721,173.945099 456.472961,173.877563  C461.757874,171.794159 466.875244,171.858994 472.422241,172.285141  C473.586029,173.090042 473.818390,173.913437 473.674835,175.258026  C471.875519,177.937805 469.139252,178.436295 466.922302,177.971848  C460.603455,176.648102 455.379242,179.190186 449.679993,181.895660  C446.924927,182.736740 444.904297,184.173553 442.691925,185.206772  C440.420593,186.267502 438.095612,186.972336 435.364929,185.302261  C435.045746,185.048218 435.006317,185.007858 434.986176,184.988098  z\"})),_path2381||(_path2381=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M473.367737,173.259125  C467.915222,172.819427 462.948181,174.662918 457.357483,173.915375  C459.145508,168.548080 464.253906,171.088791 467.837433,170.486526  C473.630249,169.512985 479.587097,169.195114 485.309296,167.696136  C487.968445,166.999557 490.565063,167.061264 493.663635,167.102707  C494.847534,168.820648 493.888824,169.829208 492.504883,170.076324  C486.241394,171.194870 480.308075,174.150711 473.367737,173.259125  z\"})),_path2382||(_path2382=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M504.685120,157.760437  C505.464844,160.761078 502.282013,161.822708 502.024506,164.623901  C502.157898,165.885178 502.174286,166.775543 501.533813,167.899170  C500.973907,168.447144 500.574982,168.643661 499.803192,168.787247  C498.816772,168.826233 498.165405,168.748306 497.188660,168.661438  C496.208435,168.483185 495.659180,168.163010 495.125305,167.333923  C495.592407,164.818176 493.339691,164.217545 492.246399,162.653320  C494.416626,161.726501 496.341064,160.904663 498.626709,160.034515  C500.573700,158.703033 501.987610,157.043716 504.685120,157.760437  z\"})),_path2383||(_path2383=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M494.790771,167.055725  C495.507416,167.270737 495.997406,167.512634 496.745239,167.846268  C497.108246,168.192184 497.213409,168.446365 497.222656,169.102203  C496.785492,170.077011 496.415680,170.700821 495.809631,170.949188  C488.666412,173.876709 481.148285,175.335815 473.279480,176.267609  C472.993042,175.241196 472.998291,174.500702 473.006256,173.390503  C479.967896,171.330276 487.166840,170.605728 493.985352,167.493515  C494.112183,167.147217 494.564117,167.082596 494.790771,167.055725  z\"})),_path2384||(_path2384=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M505.193176,157.762436  C502.961243,157.934494 501.820404,160.237732 499.352417,159.983124  C498.991119,159.241364 498.994293,158.496490 498.998718,157.379166  C499.000000,157.006699 499.492859,156.991425 499.739410,156.990662  C501.235962,155.465363 503.163635,154.813477 504.760315,153.217896  C504.979675,152.982941 505.477661,152.966690 505.726776,152.966919  C507.073303,153.451706 508.122467,153.982956 508.151337,155.685730  C507.137238,156.514755 506.266052,157.021194 505.193176,157.762436  z\"})),_path2385||(_path2385=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M504.591125,152.982819  C505.175903,156.021530 503.163940,156.717911 500.363647,156.984314  C499.798645,153.978073 501.369629,152.816422 504.591125,152.982819  z\"})),_path2386||(_path2386=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M508.371704,155.955978  C507.421814,155.178391 506.835175,154.348495 506.112213,153.242859  C507.435669,152.387665 508.895477,151.808197 510.670105,151.109024  C510.993317,152.974640 511.364288,155.125946 508.371704,155.955978  z\"})),_path2387||(_path2387=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M535.252808,581.738037  C533.577209,582.329224 532.162354,582.643799 530.381714,582.965759  C525.893982,583.169800 521.795349,583.647583 517.340210,583.990845  C513.303589,583.989563 509.612427,583.989014 505.460663,583.988159  C498.521118,579.724426 491.042145,581.419922 484.008575,580.456787  C481.763306,580.149292 478.889801,581.189880 478.000885,577.408081  C477.893158,574.475586 479.878662,575.256897 481.610779,575.019043  C482.438965,575.023926 482.884064,575.024841 483.663025,575.029907  C491.982788,577.010315 500.043671,578.388977 508.657349,578.051636  C509.444794,578.018372 509.890686,578.016541 510.671143,578.017090  C514.094849,581.989929 518.105530,579.824402 521.544189,579.184448  C528.258972,577.934509 535.024231,577.480774 541.781555,577.324524  C550.660767,577.119263 558.577209,572.205505 567.751099,572.772095  C566.386047,577.763306 561.937012,576.814453 558.483398,577.535645  C550.881348,579.123291 542.992493,579.089844 535.252808,581.738037  z\"})),_path2388||(_path2388=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M500.875366,168.235840  C501.126495,167.001617 501.308807,166.192825 501.734131,165.181763  C508.385376,164.648880 512.451233,160.373611 515.729797,155.757446  C517.686951,153.001846 519.034424,152.430954 521.639771,154.105103  C523.141296,155.069916 524.673645,155.351379 526.345764,154.434769  C526.593689,152.671799 523.140076,152.718857 524.425720,150.513458  C525.465637,148.729462 527.259338,149.159958 528.876892,148.979233  C532.878296,148.532211 537.066406,146.486404 540.487793,150.513977  C540.640076,150.693176 541.203491,150.743591 541.428284,150.608780  C548.911255,146.119781 555.158997,151.350677 561.555054,153.572113  C565.775574,155.037964 570.320984,155.699127 574.626343,157.995148  C574.995178,157.998779 575.491516,158.013794 575.739075,158.032730  C577.099060,161.307541 581.510498,161.164886 582.796875,164.727386  C583.379211,165.421616 583.528809,165.913742 583.276001,166.830200  C581.298706,168.178528 579.807861,167.257187 578.542175,166.202072  C575.466431,163.638000 571.802429,162.639526 568.008850,161.982452  C565.193970,161.494873 562.600403,160.537781 559.998230,159.344116  C552.824280,156.053299 545.345520,155.171188 537.666382,157.436493  C535.321655,158.128174 533.095398,158.313797 530.716125,156.597443  C530.072632,155.946121 529.870178,155.435120 529.695496,154.909805  C529.596008,155.198517 529.589050,155.498810 529.600464,156.146957  C528.839355,157.831436 527.569458,158.241669 526.228455,158.363297  C517.687134,159.138000 512.058167,165.385956 504.907043,169.633636  C503.074829,170.148788 501.735443,170.072495 500.875366,168.235840  z\"})),_path2389||(_path2389=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M529.766602,154.750153  C532.716553,156.759872 535.154541,156.624466 538.371887,155.590744  C546.195862,153.076889 554.043335,154.654770 561.317932,158.112808  C563.293152,159.051758 565.042664,159.880829 567.240234,160.118652  C572.961365,160.737854 577.900146,163.273285 582.652344,166.957230  C583.389404,166.619171 583.848328,166.473373 584.689575,166.783447  C585.115295,167.316071 585.308533,167.569519 585.790833,167.878433  C587.048889,168.045151 587.784790,168.662445 588.719116,169.620163  C591.214783,174.187485 594.621460,177.391235 598.538879,180.157364  C600.250244,181.365814 602.095886,182.526917 602.966064,185.021240  C603.008789,190.737411 605.365051,194.359360 609.705872,197.787323  C615.224976,202.145706 617.727478,209.158401 617.845154,215.875320  C617.941467,221.376236 620.068054,225.324738 622.815735,229.374664  C623.959106,231.060028 625.158203,232.580414 624.998840,234.739807  C624.693359,238.880814 626.190430,242.690109 628.012573,246.141037  C630.463013,250.781769 630.573486,256.087311 632.890869,260.705841  C633.330811,261.582672 633.083313,262.666718 632.437988,263.938904  C630.626831,265.320801 629.084045,264.975098 627.226196,263.897003  C626.721252,263.456329 626.544861,263.256470 626.173279,262.715088  C625.459656,261.357635 625.759583,259.956909 624.651184,259.236359  C617.032593,254.283707 612.894104,246.399124 607.846985,239.288712  C606.586548,237.513016 605.278809,235.788757 603.628052,234.390991  C601.268250,232.392899 599.622314,229.962372 598.717041,227.031311  C597.679199,223.671021 596.245544,220.765961 593.351624,218.359436  C590.126526,215.677490 590.428345,213.077621 593.769836,210.025970  C596.814331,207.245636 597.888000,204.075623 596.672607,200.167130  C594.284851,192.487946 591.727417,184.941422 584.030029,180.650177  C581.411804,179.190582 580.578003,176.280228 579.248901,173.801559  C576.762085,169.163849 573.772095,168.324692 569.725769,171.460541  C566.870361,173.673492 564.619690,172.507660 562.716980,170.524170  C557.269348,164.845322 551.267578,161.485687 543.199890,164.643356  C542.102356,165.072937 540.893799,164.983063 539.755920,164.640533  C532.351440,162.411636 525.377319,163.462387 518.531189,166.946930  C514.523804,168.986649 510.192688,170.268692 505.269684,169.229584  C505.872772,164.114487 511.209290,164.884644 513.757996,162.054718  C517.743591,157.629395 523.420654,157.023163 528.910156,155.439606  C529.180908,154.867386 529.342041,154.671555 529.766602,154.750153  z\"})),_path2390||(_path2390=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M588.318848,170.102295  C587.414490,169.506195 586.831360,169.013763 586.126404,168.256378  C586.469177,166.986038 587.175659,166.270584 588.619995,166.033539  C590.185364,167.143021 591.440796,168.287018 592.844360,169.717621  C591.604126,171.417572 590.129150,170.962036 588.318848,170.102295  z\"})),_path2391||(_path2391=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M584.948425,166.690094  C584.554688,167.005524 584.111877,167.005920 583.336914,167.002731  C583.005737,166.554138 583.006592,166.109131 583.007324,165.330307  C583.898621,165.098267 584.663208,165.373978 584.948425,166.690094  z\"})),_path2392||(_path2392=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M588.044495,170.351425  C589.430054,168.340744 590.866821,170.369690 592.646667,169.998962  C594.464294,171.245132 595.936157,172.486038 597.687256,173.887085  C597.966919,175.613602 598.237976,176.970871 600.601562,177.008514  C601.157959,177.563583 601.353149,178.100693 601.782471,178.811020  C602.653992,180.746399 603.291382,182.508560 603.972900,184.621292  C603.622925,185.335602 603.159180,185.489182 602.311707,185.216980  C600.432373,182.778503 598.024170,181.557175 595.924011,179.992462  C592.569702,177.493271 589.602539,174.729492 588.044495,170.351425  z\"})),_path2393||(_path2393=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E45F47\",opacity:1,stroke:\"none\",d:\" M571.735474,464.717316  C572.478943,464.971161 572.917847,464.978943 573.685669,465.000977  C574.339294,465.407043 574.516968,465.853546 574.405273,466.713684  C570.715454,468.826630 566.501282,469.821960 562.956238,469.831787  C554.030396,469.856506 545.426025,473.453888 536.413086,471.693939  C536.425232,473.198639 537.714478,473.631195 538.382874,474.507629  C540.625671,477.448792 540.287903,479.404602 536.650696,480.364899  C533.603882,481.169342 532.633728,482.805847 532.434692,485.897430  C531.332153,487.249847 529.972046,487.300690 528.416321,487.866760  C527.514832,488.043304 526.992493,488.069794 526.080933,488.001221  C515.812683,486.148682 505.912903,486.314301 495.972473,487.491516  C492.729309,487.875610 490.547516,489.204346 490.134644,492.517487  C489.734894,495.725403 492.192535,496.675537 494.589996,497.654938  C496.870056,498.586365 499.448242,499.325867 499.326538,502.903320  C496.274597,505.311554 493.098358,504.622467 490.015594,504.067444  C486.437317,503.423126 483.096558,501.659424 479.340210,501.771667  C478.673279,501.791595 477.905640,501.540405 477.528290,501.040009  C474.595764,497.151306 470.529968,494.747742 466.334717,492.023132  C466.853302,487.891693 469.900391,487.454437 472.639404,487.687683  C477.339233,488.087921 481.394653,486.422607 485.510864,484.728973  C486.675385,484.249847 488.382263,484.078735 488.413696,482.447754  C488.447235,480.707825 487.394470,479.352051 485.836029,478.498718  C484.117126,477.557526 481.956299,477.506409 480.374634,475.572937  C479.877808,474.539551 479.776825,473.787903 479.836853,472.625305  C480.069305,471.449219 480.438171,470.758942 481.267914,469.895691  C482.029816,469.379395 482.522858,469.211914 483.435547,469.119568  C484.594757,469.135895 485.326721,469.421997 486.482300,469.434021  C492.879333,468.852753 498.582581,471.621613 504.619812,471.031586  C506.605469,470.837494 508.726990,471.026398 510.463196,470.075317  C513.955322,468.162292 517.469666,467.299194 521.419739,468.285797  C522.732056,468.613586 524.030701,467.910706 525.167969,467.206573  C533.593689,461.990295 543.148987,461.414154 552.574097,461.175232  C558.931763,461.014130 565.597412,460.842834 571.735474,464.717316  z\"})),_path2394||(_path2394=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M545.862549,439.676483  C547.916260,445.533539 553.972290,446.571259 557.503601,450.430298  C558.674744,451.710175 560.656128,452.432037 561.824890,454.126404  C562.970703,455.787323 564.818359,457.188568 566.854309,456.735748  C573.709290,455.211212 570.200012,458.905273 569.152771,461.651459  C568.097229,462.895752 566.900452,463.213593 565.790588,462.787598  C560.738586,460.848572 555.361694,460.948822 549.760437,459.968628  C547.319214,456.572021 544.817383,456.025696 541.487976,458.139465  C534.998962,462.259155 528.450317,460.604889 521.973877,457.950439  C518.830688,456.662170 516.937927,454.144348 517.696167,450.915985  C518.831909,446.080170 518.206787,441.468079 517.467529,436.421478  C519.659607,434.217133 521.427856,435.440155 523.513794,436.759125  C524.001770,437.106354 524.180908,437.259491 524.593628,437.663696  C525.557312,439.205444 526.604065,439.589325 528.304626,438.938904  C529.965393,438.599701 531.314331,438.603027 532.999390,438.770477  C534.617188,439.089691 535.895996,439.133118 537.481934,438.619446  C539.753052,438.088409 540.872192,435.673828 543.586914,436.339020  C545.053406,437.084534 545.502808,438.146973 545.862549,439.676483  z\"})),_path2395||(_path2395=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M580.764587,465.358673  C587.555176,467.921265 594.791260,468.480621 601.504883,470.904999  C609.169800,473.672882 612.195374,483.170593 607.568726,489.777161  C605.888733,492.176056 603.287659,492.160675 600.997437,492.740143  C597.734802,493.565704 595.128967,494.854553 594.039917,498.639587  C594.165466,499.491852 594.119873,499.960083 593.566772,500.664246  C589.531006,502.818420 586.669556,505.746918 584.118835,509.023682  C579.240906,515.289917 571.882385,518.422791 565.952576,523.365112  C564.820496,524.308655 563.179016,524.346802 561.304321,524.308838  C560.455383,524.194153 559.990906,524.051758 559.250977,523.639160  C557.312927,518.790894 561.299866,517.517273 563.872437,515.655396  C566.593994,513.685669 567.097351,512.206055 563.672852,510.180878  C563.505737,505.600830 567.292908,504.697601 569.960205,503.200073  C575.320129,500.190887 579.952942,496.152740 585.218933,493.041321  C586.349548,492.373352 587.344971,491.460541 588.295776,490.041443  C592.484558,487.392944 596.205505,484.551483 600.885925,483.600403  C602.882812,483.194611 604.154297,481.778107 604.476685,479.904999  C604.815918,477.933411 603.180908,477.021820 601.647278,476.277466  C598.692383,474.843323 595.975586,472.725250 592.053955,473.006409  C591.209900,472.973175 590.733337,472.886200 589.920166,472.621124  C587.829102,471.203613 585.740601,470.570221 583.890381,469.488037  C582.357666,468.591492 580.458008,467.992401 580.764587,465.358673  z\"})),_path2396||(_path2396=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E66D55\",opacity:1,stroke:\"none\",d:\" M548.653992,458.730164  C555.757996,457.703430 561.825806,460.772278 568.594360,461.981873  C569.623047,463.187775 571.540161,462.803528 571.974182,464.645874  C562.671936,462.580200 553.097778,461.893646 543.608337,463.221313  C539.443115,463.804077 535.392029,465.334137 531.050171,465.073883  C529.818298,465.000031 529.021790,465.792206 528.210999,466.762390  C525.808594,469.637054 522.999268,471.450592 519.024841,469.586029  C517.328125,468.790039 515.716736,468.756714 513.960999,470.102020  C508.836182,474.028931 502.827271,473.015442 497.101898,472.273651  C493.625183,471.823212 490.236298,470.660797 486.314697,470.943176  C484.859985,469.006317 486.260162,468.170197 487.666718,467.601074  C490.896179,466.294434 494.008118,464.421539 497.540009,464.216614  C503.709991,463.858612 509.546600,461.841797 516.002563,460.834106  C519.175232,460.195770 522.048035,459.899994 524.737610,460.536682  C531.102722,462.043427 537.092285,461.052277 543.037903,458.744354  C544.711792,458.094604 546.501465,457.617737 548.653992,458.730164  z\"})),_path2397||(_path2397=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D88861\",opacity:1,stroke:\"none\",d:\" M544.339050,437.204163  C541.333374,436.344055 540.784607,439.526367 538.357422,439.949005  C536.948120,437.105011 535.790588,440.271332 534.341553,439.976288  C532.282654,440.006531 530.570496,440.004211 528.430542,440.005737  C526.829102,439.942505 525.612244,440.154785 524.266846,439.235504  C523.999146,439.000000 523.993225,438.505798 523.989258,438.258728  C523.619080,437.592651 523.455872,437.105682 523.639038,436.178894  C524.955505,434.498871 526.682739,434.739777 528.522705,434.161896  C530.653870,433.888550 532.366882,434.295746 534.457031,434.483582  C535.526001,434.536011 536.235840,434.541290 537.285645,434.418060  C544.328369,429.050568 551.745972,429.470276 559.312622,431.783600  C567.300598,434.225800 575.645508,429.846161 578.164001,421.833466  C578.670776,420.220978 578.304382,418.915344 577.432434,417.215576  C576.877380,413.442902 578.309937,410.643738 580.578735,407.759583  C581.677795,407.132111 582.486267,407.059235 583.699829,407.426086  C584.490417,407.979675 584.808472,408.424377 585.147522,409.326996  C585.660461,412.649261 585.392822,415.504547 584.129639,418.629517  C583.691284,420.103546 583.382507,421.205841 583.034424,422.651428  C581.934814,423.878876 581.905884,425.310577 581.102295,426.690247  C581.005310,427.443817 581.003296,427.888641 581.000610,428.667023  C578.907349,432.253754 577.114868,435.516083 573.933472,438.181915  C568.066345,443.098236 562.193848,439.152924 556.395325,439.206299  C552.502808,439.242096 548.520020,438.475189 544.339050,437.204163  z\"})),_path2398||(_path2398=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M544.023071,437.338104  C550.925720,436.199799 557.691467,437.706879 564.428955,438.865021  C568.004028,439.479614 575.844238,436.657318 576.870544,433.131714  C577.474548,431.056824 578.704041,430.124939 580.677979,429.147675  C582.603882,430.416351 581.776062,431.662323 580.663757,432.796753  C577.508728,436.014496 576.512085,439.705383 577.781799,444.089691  C578.177612,445.456421 578.632385,447.370789 577.290710,448.255035  C575.868408,449.192474 574.508301,447.791992 573.407410,446.846466  C568.402710,442.547974 562.550842,440.588745 556.062561,441.083008  C552.644287,441.343445 549.688293,439.882324 546.236694,439.763489  C544.978027,439.529907 544.258423,438.807434 544.023071,437.338104  z\"})),_path2399||(_path2399=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M592.729492,500.280579  C593.306213,499.882538 593.560364,499.686981 593.879333,499.209717  C596.039978,498.998260 598.082458,498.998962 600.562439,498.999207  C597.767517,505.688416 592.258362,509.817108 585.309021,512.836731  C583.315979,511.182617 583.975830,509.533112 585.204041,507.761475  C587.188293,504.899414 590.074829,502.986450 592.729492,500.280579  z\"})),_path2400||(_path2400=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E3976F\",opacity:1,stroke:\"none\",d:\" M618.777954,481.780273  C619.611328,484.485413 620.332947,486.997284 617.346375,488.936462  C616.197510,487.578156 615.730103,485.608124 614.505676,484.831177  C611.385132,482.851166 611.344421,480.333801 612.804321,477.674683  C614.598999,474.405853 616.366699,478.840851 618.634094,477.993835  C619.000427,478.445404 619.000854,478.889557 619.000610,479.666870  C618.491943,480.421997 618.299988,480.931549 618.777954,481.780273  z\"})),_path2401||(_path2401=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M580.622253,465.044922  C582.508362,469.176208 587.470703,468.355438 589.960999,471.558655  C588.057983,473.852631 586.127380,472.450134 583.840149,471.614075  C580.595337,469.892273 577.254150,469.385986 574.222229,467.302246  C573.994141,466.559723 573.997986,466.118256 574.008301,465.346008  C576.099670,465.022705 578.184631,465.030182 580.622253,465.044922  z\"})),_path2402||(_path2402=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79068\",opacity:1,stroke:\"none\",d:\" M584.334106,418.933594  C582.772461,416.280792 584.704407,413.560516 584.001343,410.419434  C585.579285,408.968018 586.359741,409.823517 586.952332,411.612671  C586.996521,412.749603 586.997742,413.499817 586.998230,414.625214  C585.479858,415.842224 586.606384,418.277435 584.334106,418.933594  z\"})),_path2403||(_path2403=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M581.357849,426.920898  C579.482849,425.016174 580.919250,424.060333 582.676514,423.049988  C582.832153,424.366302 583.507446,426.018219 581.357849,426.920898  z\"})),_path2404||(_path2404=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M579.646973,449.574524  C580.384644,449.368164 580.652283,449.626099 580.537964,450.198975  C580.514221,450.317932 580.345337,450.477844 580.225037,450.495697  C579.646484,450.581787 579.404175,450.300171 579.646973,449.574524  z\"})),_path2405||(_path2405=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79068\",opacity:1,stroke:\"none\",d:\" M584.214600,407.728729  C583.247620,408.001495 582.497620,408.000610 581.372681,407.999969  C580.184814,408.120972 579.451355,407.901611 578.473877,407.221008  C575.163696,400.432709 569.487854,397.376678 562.877197,396.502533  C550.660217,394.887115 544.936157,386.314240 540.124695,376.529663  C539.378601,375.012390 539.195984,373.166107 539.819031,371.655243  C542.645996,364.799896 540.442688,358.286926 538.746948,351.721436  C538.168091,349.480286 537.283325,347.304596 537.441467,344.541443  C537.893677,343.122986 538.621704,342.379211 539.875061,341.623840  C543.260071,341.325745 543.836853,343.832520 544.176575,345.776611  C545.725159,354.640839 553.629700,357.574005 559.390442,362.493866  C560.281494,363.254883 561.603638,363.176910 562.771118,363.034454  C569.257446,362.242798 575.232666,364.241302 581.132080,366.475311  C587.548584,368.905151 594.121338,369.629089 600.526245,367.160919  C610.367432,363.368591 620.880188,361.430817 630.178528,356.117859  C635.643555,352.995148 641.310547,350.230347 646.680420,346.218506  C649.602234,343.088531 653.674866,342.499786 656.542297,340.002472  C657.901184,338.818970 658.836792,339.585236 659.984741,340.450104  C664.958130,344.197174 667.328064,349.191193 665.829224,355.191437  C664.266846,361.446045 666.766785,366.857147 668.306274,372.479095  C669.092773,375.351379 670.289490,378.086761 670.009033,381.574036  C669.621704,382.376282 669.164001,382.514008 668.317017,382.206390  C667.866150,379.267853 667.061401,376.778076 665.157715,374.315979  C664.125732,373.357117 664.054077,372.228851 663.221985,371.215027  C662.442566,370.182892 661.967224,369.282745 661.296936,368.564636  C658.876221,365.971161 659.179565,360.721222 655.006470,360.237091  C648.818420,359.519196 642.444702,359.403168 636.466003,362.028625  C635.562073,362.425598 634.686646,363.042847 633.744568,363.173706  C625.075439,364.378326 618.374451,370.472015 610.086731,372.615265  C601.794983,374.759521 593.614136,375.546387 585.376465,371.060852  C578.230774,370.156342 572.384705,372.688080 566.701538,375.951355  C565.716125,376.517242 564.522339,375.602448 562.916931,375.694031  C567.902771,383.636047 573.388184,390.877838 579.625000,397.481476  C582.398315,400.417908 584.049194,403.540497 584.214600,407.728729  z\"})),_path2406||(_path2406=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F89A7C\",opacity:1,stroke:\"none\",d:\" M594.272217,421.295166  C594.004578,420.828522 594.004211,420.661835 594.003174,420.245056  C593.461609,416.966644 594.078003,414.210449 595.211182,411.312958  C597.513428,405.426270 597.228333,398.923431 599.300171,392.884705  C601.609924,386.152588 605.964600,382.507233 613.221191,383.063293  C616.886841,383.344208 619.502319,382.435028 621.972290,379.666168  C626.363281,374.743835 632.650513,375.426422 638.302124,375.502411  C643.597290,375.573608 648.653259,377.144501 652.099365,382.133484  C653.997314,384.881104 654.971130,387.309570 654.857910,390.756989  C654.680115,396.169891 656.146606,401.641907 653.885071,407.311401  C651.440674,409.721802 648.142334,408.092712 645.429077,410.898590  C642.425110,414.005188 639.202087,416.160217 639.276001,421.020508  C639.302490,422.763794 637.747253,423.873535 635.884155,424.135223  C635.062988,424.250549 634.230530,424.276398 633.420044,424.480164  C631.664368,424.921478 631.598755,428.224548 629.231140,427.277008  C626.587585,426.219147 624.592224,424.127686 622.562622,421.664581  C621.174927,416.237518 624.649170,413.352722 627.969482,410.812653  C630.619629,408.785156 630.591553,407.684174 628.147339,405.644592  C624.875122,402.914032 621.640503,400.032715 620.625916,395.542725  C620.426575,394.660522 619.605774,394.314606 618.407959,394.141235  C617.239929,394.042603 616.185791,394.313721 615.622131,393.879028  C611.705566,390.858765 609.735107,396.186340 606.465576,395.961365  C605.930054,395.924530 605.777466,397.089447 605.920349,397.706970  C606.779907,401.423004 605.457764,404.272827 603.198547,407.269470  C600.786499,410.468781 602.027649,418.320892 605.044922,421.669952  C609.579346,423.276367 612.669434,427.857666 618.322998,426.452209  C620.899109,427.606903 621.408447,429.365356 620.297852,431.431152  C618.952209,433.934357 616.327576,435.116882 613.991028,434.118652  C606.840332,431.063782 598.722778,429.314545 594.272217,421.295166  z\"})),_path2407||(_path2407=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M652.734009,408.356995  C654.918701,401.326843 652.785583,394.543945 653.466736,387.743347  C653.858154,383.836060 649.249512,379.777527 645.631409,378.431030  C639.516113,376.155243 632.713074,376.796600 626.214600,378.162384  C624.484131,378.526093 623.205811,379.844116 622.500732,381.297638  C620.681641,385.048126 617.635010,385.405853 614.104126,384.840698  C607.255188,383.744507 602.831421,387.138062 600.880554,393.836365  C598.415100,402.301971 597.804199,411.208038 594.266663,419.725220  C591.839417,417.947906 591.127563,415.496460 590.892517,412.471893  C590.283997,404.642822 587.569946,397.382843 584.006836,390.388306  C582.705261,387.833344 580.601318,385.322144 581.499878,382.085999  C582.257935,379.355743 583.125854,376.588593 586.860718,379.218475  C588.492554,380.367493 590.588074,380.502380 592.126648,379.693481  C598.369507,376.411163 605.061951,377.181244 611.683960,376.431671  C618.506958,375.659332 625.412903,373.196014 631.740906,369.727142  C637.164917,366.753784 643.243713,366.416077 649.042664,368.310760  C654.162781,369.983551 656.572388,374.596985 657.839905,379.502808  C658.700012,382.831543 659.843140,385.736053 662.481628,388.052368  C664.628479,389.936981 665.962158,392.873077 664.844849,395.257935  C662.055603,401.211456 663.814453,407.405640 662.989563,413.419495  C662.347656,418.099060 659.329102,419.525848 654.275024,417.200165  C651.814209,414.547882 651.335754,411.781128 652.734009,408.356995  z\"})),_path2408||(_path2408=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F09576\",opacity:1,stroke:\"none\",d:\" M652.645630,407.952118  C653.334351,410.719666 653.668701,413.440582 654.004639,416.578918  C653.035217,419.321960 651.957947,421.618134 652.001709,424.615723  C650.144470,425.158997 649.573669,426.598969 649.147034,428.032867  C648.228149,431.121399 645.972656,433.539764 643.396179,434.556458  C638.322754,436.558411 634.788330,440.540070 630.331421,443.184753  C627.845886,444.659637 624.779724,445.947876 622.064270,446.579742  C619.139404,447.260345 616.917053,443.816345 614.684265,441.618011  C611.662170,438.642609 606.983521,438.511078 603.821899,435.164703  C601.428284,432.631317 598.242493,430.655121 595.335327,428.056458  C594.599182,425.941315 593.686707,423.969879 594.002563,421.397705  C599.188477,425.756409 605.492920,428.723877 611.587769,432.038422  C613.979431,433.339081 616.305115,433.589050 618.487244,431.871216  C620.191162,430.529907 620.512634,428.899078 618.306030,427.164124  C616.303894,422.789795 618.473755,421.133850 622.625366,420.764465  C625.321533,422.800751 627.645569,424.610260 630.117676,426.535065  C631.180298,425.272278 629.126221,421.366364 633.028259,422.566284  C638.360779,424.206116 638.829529,420.578705 638.381592,417.216583  C637.932373,413.845306 638.332153,412.003784 642.061829,411.955292  C643.561462,411.935822 644.611206,411.082123 645.083069,409.735657  C646.588501,405.440216 649.160095,405.641754 652.645630,407.952118  z\"})),_path2409||(_path2409=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M583.998352,408.335144  C582.661316,399.809875 575.172180,395.947388 571.090149,389.682770  C567.976135,384.903687 563.755981,380.906189 561.198669,375.715576  C560.699280,374.701874 559.461426,373.755585 560.644653,372.707428  C561.619812,371.843536 562.431335,372.995422 563.117310,373.626556  C564.833374,375.205536 566.728638,375.573730 568.466858,373.965454  C573.140381,369.641357 578.343811,368.629150 584.620728,371.005920  C584.824097,372.422974 583.990845,372.924805 582.604431,372.936279  C575.038147,372.998962 573.126282,376.341217 575.308533,383.621796  C577.239319,390.063110 579.117432,396.038757 583.958679,401.287689  C585.796631,403.280426 588.153442,407.492523 587.248047,411.766724  C586.203186,411.362701 585.411011,410.726044 584.310669,410.044067  C584.001343,409.555145 584.000244,409.111511 583.998352,408.335144  z\"})),_path2410||(_path2410=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M667.770264,382.217102  C668.445984,382.000763 668.892029,382.000397 669.672668,381.999390  C670.100708,383.412903 670.661133,384.487091 672.440857,384.929626  C672.899841,385.386444 673.040710,385.818939 673.187500,386.594299  C672.884583,387.137177 672.575684,387.337219 672.116333,387.773193  C671.479736,388.266205 670.993591,388.523315 670.254944,388.891418  C668.749329,386.974701 667.113159,385.090515 667.770264,382.217102  z\"})),_path2411||(_path2411=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M663.012939,371.348755  C664.419617,371.122345 664.998047,371.959320 664.987366,373.654968  C663.584473,373.877747 663.002075,373.044159 663.012939,371.348755  z\"})),_path2412||(_path2412=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M564.047852,560.641357  C562.882507,561.628418 561.765015,562.259277 560.322693,562.946289  C557.452698,562.697083 554.945129,561.944397 552.412109,563.391418  C551.103271,564.139099 549.547180,564.129456 548.549988,562.136597  C552.391479,555.107117 557.917114,550.614990 565.546753,548.785095  C569.552063,547.824524 572.617676,545.895447 571.924438,540.630920  C572.101929,539.826355 572.276123,539.394409 572.702271,538.709290  C574.445435,537.090149 575.786682,535.740784 572.795654,534.041992  C572.230713,533.546204 571.924500,533.245056 571.407715,532.699951  C570.102722,530.985046 568.659729,530.286560 566.476929,530.488342  C563.741394,530.565735 561.392212,531.526672 558.621948,530.725220  C558.108765,530.381104 557.933960,530.199829 557.708618,529.642395  C558.372192,527.478271 560.101318,526.769653 561.817871,525.510376  C562.933105,525.124146 563.684570,525.156860 564.706909,525.750366  C566.666199,527.595398 568.402527,526.268127 569.494690,525.518860  C573.715454,522.623352 579.386047,524.007141 583.361023,520.546692  C584.079590,519.921204 584.963745,520.532288 585.452942,521.266235  C585.947266,522.007812 586.048035,522.922302 585.364014,523.551270  C581.976379,526.666382 583.171448,529.903625 584.533447,533.543640  C585.553101,536.268616 584.811768,538.693420 582.729187,541.568054  C579.907959,545.462219 576.848877,548.931641 573.571716,552.391174  C571.485107,554.593811 569.880676,556.907410 566.596558,557.419189  C565.309937,557.619690 564.441895,558.895630 564.047852,560.641357  z\"})),_path2413||(_path2413=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M565.208984,525.734009  C564.251221,526.000854 563.502502,526.001709 562.379395,526.003662  C561.303528,526.471985 560.718384,526.161865 559.950562,525.449341  C559.571228,524.416260 559.854309,523.848938 560.734375,523.207153  C563.801270,523.129395 565.777954,521.731628 568.116821,520.233032  C576.531250,514.841614 583.093201,507.416260 590.551025,500.989899  C591.034241,500.573486 591.713440,500.384521 592.650024,500.049133  C592.509705,503.268921 589.563477,504.623932 587.664062,506.768463  C586.230652,508.386810 584.669678,509.814117 585.000854,512.618896  C579.359802,518.549316 572.003906,521.404053 565.208984,525.734009  z\"})),_path2414||(_path2414=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M503.255310,568.756836  C502.558197,568.993835 502.113983,568.997437 501.336670,569.002930  C492.266479,569.487061 483.451141,569.264526 475.408875,565.780518  C471.675720,564.163147 468.665436,560.482178 465.844238,557.177246  C464.540131,555.649597 463.192688,554.122681 460.892303,554.303955  C457.771729,554.549805 455.516479,552.969116 453.483276,550.870361  C448.086823,545.299805 441.348846,541.600647 434.620636,538.073669  C429.203400,535.233948 426.157928,530.245300 422.072601,526.204773  C420.968567,525.112854 420.696198,523.358643 421.510773,521.994568  C423.849640,518.078125 421.711975,515.474365 419.229187,512.789185  C415.174255,508.403687 412.214081,494.881927 414.265686,489.249298  C419.316681,487.766205 422.228333,491.646637 424.030396,494.354614  C425.940735,497.225342 428.258453,498.544830 431.017090,500.294006  C431.899261,497.754028 430.941589,495.649658 430.406799,493.438995  C429.489807,489.648315 427.471924,485.986603 428.985138,481.618225  C430.437195,480.687744 431.683289,480.631927 433.321594,481.115662  C436.658966,485.069824 437.473907,489.623688 438.016327,494.236267  C438.189972,495.712585 438.002533,497.243622 438.623352,498.644897  C439.350677,500.286560 439.633026,502.585175 441.498444,503.059845  C443.603973,503.595673 444.420593,501.290131 445.578003,499.969238  C449.042389,496.015656 451.753937,495.728760 455.741852,499.256378  C458.231262,501.458435 460.815521,503.550537 463.269745,505.783112  C465.589996,507.893860 467.984314,509.360657 471.293549,508.899292  C473.004608,508.660767 474.806396,509.188110 475.839508,510.518860  C479.306091,514.983948 484.230835,517.311157 488.961517,519.958313  C489.389526,520.197754 489.763000,520.817078 490.177063,520.781555  C496.353119,520.250977 500.678040,525.369934 506.786194,526.208374  C508.527893,527.472656 510.495331,527.739014 511.727570,529.696716  C512.084900,530.838135 512.044800,531.608704 511.598663,532.699463  C509.348419,534.581360 507.093964,533.747559 505.220856,533.003784  C495.615753,529.189941 484.855011,529.566833 475.394745,524.612427  C477.008667,526.937744 478.009033,529.383850 479.061493,531.806946  C480.228180,534.492920 480.379242,536.979431 477.757721,538.951294  C476.443909,539.939514 475.851013,541.196167 476.081390,542.843811  C476.498199,545.824890 475.560150,548.389954 473.753906,550.745544  C472.012054,553.017273 473.033844,554.385803 475.410400,555.182068  C483.124115,557.766602 491.101532,559.469177 498.761688,562.261230  C501.262817,563.172974 504.014282,562.841553 506.662292,562.267212  C511.331543,561.254395 515.479980,562.557739 519.377563,565.619995  C518.367981,569.208862 516.024170,570.117615 512.909180,569.373718  C511.154388,568.954651 509.391022,568.651489 507.248505,568.376343  C505.738678,567.974731 504.596680,567.854736 503.255310,568.756836  z\"})),_path2415||(_path2415=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M415.075165,488.644531  C414.912018,497.797882 415.143188,506.349792 421.989777,513.342163  C423.967346,515.361816 427.306946,518.604919 422.758636,522.130127  C421.054749,523.450745 422.802734,525.019897 423.826965,526.360046  C430.439423,535.012451 440.204224,539.373840 449.147949,544.773438  C451.975494,546.480469 453.257263,549.421448 455.915985,551.145142  C457.003387,551.850098 457.972351,553.448792 459.215973,552.883179  C463.820068,550.789124 465.708221,554.362122 467.775238,556.940063  C473.390228,563.942688 480.395569,567.368958 489.473816,567.122253  C493.031921,567.025635 496.626160,568.258484 500.603729,568.945374  C500.689453,571.612854 499.105133,572.061951 496.760742,571.795776  C486.207001,570.597778 476.012787,567.777161 465.057861,564.940979  C460.180115,560.767883 456.037415,556.821289 449.914124,555.938538  C447.798737,555.633484 446.878387,553.596863 445.791229,551.944580  C443.936890,549.126221 441.754669,546.762329 437.637939,546.794189  C431.264435,545.127441 427.007935,540.924805 422.846527,536.660156  C421.586151,535.368469 420.747589,533.660461 419.095978,532.729309  C407.456299,526.166870 404.307343,515.478027 405.322937,503.175293  C405.782928,497.603027 403.951324,492.697113 402.656372,487.583160  C401.883820,484.532043 400.542450,481.590302 401.811066,478.352844  C402.199829,477.360748 402.037537,476.254211 401.244781,475.569519  C397.069275,471.963348 396.489471,466.642609 394.384705,461.641174  C392.797302,459.233124 391.962769,456.957764 391.370270,454.493042  C388.851349,444.014587 386.172150,433.552124 383.886658,423.046082  C382.669403,417.450378 382.425049,411.248535 383.061981,405.342957  C383.370758,402.479950 382.432251,399.386627 384.121277,396.365295  C384.010864,396.010986 384.000824,395.995850 383.997803,395.987213  C383.699677,394.739410 383.773865,393.522034 384.409729,392.002930  C385.521088,390.705200 386.675537,390.228882 388.351990,390.033936  C388.982300,390.064423 389.232178,390.104492 389.838562,390.271912  C391.235931,391.078735 392.290802,391.739502 393.340973,392.964203  C393.252380,396.658264 391.882629,400.180298 395.134369,403.014313  C395.763428,403.562531 395.652527,404.662567 395.212341,405.376129  C392.720642,409.415863 394.140289,413.024933 396.298492,416.597229  C397.740051,418.983337 397.082245,421.829285 398.040100,424.705322  C398.842529,428.055725 398.106415,431.075775 398.332214,434.451294  C397.782410,441.048309 398.123199,447.001862 402.252106,452.254578  C403.428619,453.751221 403.899384,455.882294 403.952271,457.923523  C404.042786,461.415100 405.623810,464.322998 407.580200,467.048431  C412.145844,473.408844 413.762939,480.801788 415.075165,488.644531  z\"})),_path2416||(_path2416=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M505.779114,567.316650  C508.670563,567.223572 511.388031,566.489319 513.963074,568.197876  C515.839294,569.442688 516.870178,566.707458 518.780640,566.243042  C519.388123,565.615234 519.843933,565.352600 520.760498,565.161499  C526.199585,564.055969 531.432800,564.169739 536.398193,562.567749  C540.307068,561.306641 544.279968,560.309692 548.716614,561.734253  C550.113159,563.341675 551.339417,563.032349 552.388489,562.046936  C554.986206,559.606995 557.313660,560.301331 559.795166,562.739807  C552.757874,565.363281 545.640991,567.393860 537.749084,567.661316  C533.493835,567.805542 528.413086,567.394714 524.050720,569.772827  C520.020264,571.969971 515.239136,570.648438 510.879456,571.786133  C509.375183,572.178650 507.255554,571.500488 506.073730,569.361450  C505.617096,568.618347 505.472198,568.158752 505.779114,567.316650  z\"})),_path2417||(_path2417=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M481.767273,574.761230  C481.144928,576.338379 479.471619,575.689453 478.202454,576.777710  C477.543823,577.025085 477.103149,577.017517 476.331848,577.003784  C466.864777,574.877991 457.974609,572.202698 450.796936,565.714905  C449.581879,564.616638 448.263336,563.540894 448.771423,561.265503  C452.816528,558.954041 455.755096,562.754944 459.717773,562.576172  C461.749115,562.748596 463.141479,563.463318 464.694702,564.747192  C464.992615,565.007324 464.999756,565.000793 464.996094,565.004028  C465.147766,566.840820 466.195007,568.585083 467.811188,568.620728  C473.259735,568.740906 476.798126,572.969360 481.767273,574.761230  z\"})),_path2418||(_path2418=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M508.781586,577.744263  C508.324005,579.327454 507.258972,580.177979 505.786011,579.889343  C498.810608,578.522705 491.490570,579.305664 484.754761,576.505005  C484.497040,576.397888 484.360596,575.999084 484.082214,575.385132  C485.448303,573.437927 487.481689,573.706299 489.085907,574.093323  C494.946747,575.507385 500.831665,576.471375 506.869476,576.520630  C507.436951,576.525269 507.999481,577.137878 508.781586,577.744263  z\"})),_path2419||(_path2419=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M505.650146,567.013550  C505.998260,567.451172 505.997742,567.894958 505.995575,568.671875  C505.246002,569.002686 504.498108,569.000488 503.376282,568.994263  C503.124023,567.581116 503.959503,567.004883 505.650146,567.013550  z\"})),_path2420||(_path2420=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M618.992188,481.660614  C618.119995,481.867004 616.848755,482.294342 616.634949,481.083557  C616.440552,479.983032 617.614075,480.165863 618.663818,480.007751  C618.998047,480.442841 618.996155,480.885712 618.992188,481.660614  z\"})),_path2421||(_path2421=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3D2E2C\",opacity:1,stroke:\"none\",d:\" M646.636780,293.762573  C647.282654,294.798462 647.707764,295.565308 648.201965,296.654541  C646.972229,298.360840 645.427490,298.068573 643.486816,297.546509  C641.595276,297.276947 640.284668,296.619110 638.841553,295.447540  C637.867859,294.404938 637.327393,293.412628 635.975708,292.809875  C635.347656,292.388702 635.016968,292.111481 634.479736,291.580414  C633.174194,289.616211 631.619202,288.658783 629.240295,288.509338  C627.446716,288.560944 626.006409,288.437073 624.204590,288.138580  C618.475220,284.967041 612.957275,287.947784 607.181763,287.759064  C606.163513,288.087952 605.465454,288.185089 604.437683,288.339722  C603.213013,288.419006 602.391174,288.647491 601.419800,289.442932  C600.928040,289.743408 600.720459,289.853119 600.177734,290.092834  C597.879761,290.533569 595.978516,291.435760 593.547241,290.706146  C589.328735,288.979401 585.481506,290.806274 581.611389,290.613342  C578.397644,290.453186 575.398804,289.978699 572.587952,288.461395  C570.589355,287.382538 569.511353,285.936035 571.317139,283.413818  C576.560364,279.659363 580.440369,274.477783 587.283691,273.312500  C588.095154,273.100647 588.567993,273.050720 589.393250,273.059143  C591.585449,273.734711 593.255249,273.327698 595.145325,272.109619  C596.182678,271.745667 596.907959,271.625305 598.033142,271.583374  C601.049316,271.500061 603.657104,271.639282 606.549072,272.597961  C609.670776,273.871460 612.609375,274.256317 615.858337,274.844421  C617.410339,275.310303 618.362610,276.473236 620.141235,276.118774  C622.316833,276.096191 623.988708,276.702698 625.872498,277.736938  C627.041321,278.529175 627.910217,279.182922 629.396301,279.256348  C629.950317,279.369812 630.170471,279.431152 630.709534,279.625702  C634.178406,282.169891 639.016541,280.750977 641.913208,284.598267  C642.215759,284.773346 642.043701,284.889343 642.139038,284.848450  C644.244934,287.405975 644.081360,291.051056 646.636780,293.762573  z\"})),_path2422||(_path2422=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M629.785034,297.649780  C630.782166,299.934967 631.576416,301.857208 632.359985,303.783752  C633.235352,305.936157 633.476868,307.893097 630.368408,308.946869  C627.580566,311.958618 624.499451,312.240356 620.991638,311.440430  C615.495422,310.187073 609.978394,308.909271 603.873047,309.789032  C602.962952,309.970886 602.438477,309.976532 601.538330,309.827881  C599.176147,308.494537 597.106384,308.075134 594.511414,309.219177  C591.686279,309.507507 589.237061,309.825195 586.437500,308.926849  C582.807190,305.766388 584.403259,303.181061 587.190979,301.458832  C591.180176,298.994354 594.656555,295.900635 598.454651,293.224091  C603.802124,289.455719 617.474915,289.588989 622.600342,293.531525  C624.767822,295.198792 627.667053,295.288605 629.785034,297.649780  z\"})),_path2423||(_path2423=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M646.571655,346.000427  C643.623169,352.933411 636.125732,354.037903 630.442688,357.689941  C621.643738,363.344360 611.124756,364.556793 601.655029,368.598694  C594.618530,371.601990 587.153931,370.403656 579.787048,367.594452  C574.419739,365.547791 568.794556,363.061493 562.585388,364.830994  C560.201111,365.510437 558.151428,364.315430 556.319153,362.612823  C553.830750,360.300537 551.521545,357.989136 548.091614,356.561584  C544.479675,355.058258 544.863403,350.091766 543.039673,346.858459  C542.187073,345.346893 542.511108,343.225006 540.354797,342.071350  C537.528809,341.219360 537.119202,339.140503 536.823547,336.589844  C537.079712,334.572998 536.522705,333.041779 536.276917,331.474670  C535.989990,329.644958 535.847595,327.879425 538.685669,327.482666  C541.498474,328.808868 541.264282,331.423309 542.067505,333.499054  C543.549683,337.329590 545.228271,341.072693 547.075256,345.149475  C549.807495,351.997772 555.953003,354.931732 561.558228,356.748688  C568.021912,358.844025 574.352173,361.352905 580.829834,363.408875  C583.443298,364.238312 586.087646,364.884949 588.652405,363.953613  C593.332153,362.254181 598.216370,364.468018 603.156555,362.734772  C603.897400,362.365326 604.347717,362.230225 605.161011,362.125397  C606.631470,362.198517 607.731262,362.181122 608.983276,361.271545  C610.804626,360.475037 612.412354,360.150269 614.338135,359.658936  C621.965271,358.025635 626.995605,352.717194 632.753052,348.643738  C634.611084,347.329132 635.816589,345.095734 638.671387,344.860352  C641.240784,346.367554 643.732117,345.930939 646.571655,346.000427  z\"})),_path2424||(_path2424=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8B61\",opacity:1,stroke:\"none\",d:\" M601.997681,185.445435  C602.446228,184.997589 602.894958,184.993942 603.680359,184.981079  C604.017090,184.971863 604.012512,184.991623 604.019531,184.988220  C606.823853,187.928665 609.176086,191.222519 611.763550,194.758026  C612.001892,194.997208 612.000000,195.000000 612.001221,194.999390  C612.323364,200.325546 616.136292,204.007187 618.809204,207.996857  C622.350586,213.282883 625.494934,218.285934 626.220581,224.877228  C626.674500,228.999496 629.701233,232.558899 630.379089,236.973724  C630.774780,239.550766 631.593811,241.959839 631.050720,244.635727  C630.703247,246.347824 631.366150,247.849792 632.622559,249.158813  C635.672180,252.336227 636.909424,256.600403 639.071533,260.313782  C640.458435,262.695709 639.218628,264.742004 637.209473,266.729523  C634.297485,268.602905 632.757751,267.415497 631.903687,264.413666  C630.478149,258.897675 629.048340,253.764954 627.396606,248.704636  C625.817505,243.866409 622.108643,239.583389 623.760315,233.926788  C623.917419,233.388702 623.675842,232.263458 623.327576,232.120132  C619.035645,230.354126 619.965027,224.843979 616.399475,222.595810  C615.211975,221.847046 615.351257,220.831802 615.703430,219.557007  C617.317322,213.715820 613.472961,201.238968 608.343872,198.391830  C603.034180,195.444397 601.070862,191.604996 601.997681,185.445435  z\"})),_path2425||(_path2425=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9764E\",opacity:1,stroke:\"none\",d:\" M602.922485,309.335236  C608.525757,306.647369 614.031616,308.205933 619.407654,309.416382  C622.850952,310.191650 626.028076,310.592041 629.633789,309.009888  C630.029602,311.180389 630.460693,313.437744 633.246887,312.661072  C636.227295,311.830292 637.854187,313.270294 638.860413,315.394653  C641.332397,320.613342 644.784485,325.397858 644.532227,331.772827  C644.422119,334.555786 643.759033,335.988831 641.589355,337.290649  C640.041077,338.219666 638.618835,339.421661 638.033997,341.653778  C633.630066,348.131073 628.556030,353.167145 619.997437,353.480591  C617.709106,353.721130 615.839600,353.673492 613.659180,352.877136  C611.166382,350.509827 612.433838,348.784698 614.164856,347.277374  C616.163147,345.537354 618.344604,343.889954 620.894287,343.194733  C623.671936,342.437317 625.465820,340.743469 627.187378,338.206848  C629.463623,336.290405 631.964050,338.075928 634.161011,336.945557  C635.880432,336.060852 638.229736,334.937134 637.137634,333.156067  C633.851135,327.796448 632.679504,320.765076 625.599365,317.786987  C620.032593,314.687378 614.101501,313.985260 608.459167,312.351929  C606.469971,311.776093 604.183167,311.737610 602.922485,309.335236  z\"})),_path2426||(_path2426=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M630.363586,298.006714  C626.440857,296.976044 622.693970,296.929474 619.996887,293.348419  C618.089111,290.815369 614.358582,292.080048 611.421204,292.037415  C604.968384,291.943848 598.853088,292.826172 594.629150,298.593079  C592.995056,300.824066 590.102661,301.178833 587.942444,302.698273  C586.119629,303.980438 584.687378,305.007782 585.874268,307.753204  C586.495911,309.963318 585.067505,310.625092 583.520447,311.567932  C582.714355,311.833740 582.237122,311.911346 581.391357,311.928040  C579.405762,311.378723 577.709167,312.101532 575.734436,311.497070  C571.714172,308.357056 573.118713,305.209869 575.398315,302.361786  C577.454956,299.792267 580.204712,297.945099 583.625854,296.545288  C587.256226,293.352753 591.805603,293.461700 595.926636,291.591797  C597.556763,290.577118 599.119385,290.243988 600.748718,289.275665  C600.998718,289.056000 600.927185,288.949829 600.916138,288.886780  C601.402466,288.520599 601.936523,288.310272 602.939209,288.209167  C608.668884,288.884277 613.991943,288.559082 619.296631,288.494843  C623.799927,288.440308 627.782043,289.688019 631.528076,292.045776  C633.336548,293.183990 635.113403,294.303986 637.220276,295.002838  C639.492920,295.756714 641.296875,297.365570 640.269287,300.638733  C637.896179,300.856537 635.561218,301.718140 634.675964,298.380646  C634.272461,296.859558 632.074585,298.387421 630.363586,298.006714  z\"})),_path2427||(_path2427=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C29378\",opacity:1,stroke:\"none\",d:\" M631.635925,263.993439  C632.938293,265.709900 634.158386,267.009949 636.649963,266.995941  C636.977234,269.887329 639.095215,272.740662 636.977661,276.035828  C634.502258,276.738068 633.191345,275.059692 631.382629,273.580688  C629.238647,270.520020 626.034424,270.517029 623.527039,270.881714  C615.237732,272.087494 606.824646,270.721252 598.287476,272.596252  C597.257446,272.940613 596.536621,273.092041 595.455261,273.319580  C594.392334,273.458435 593.731262,273.728973 592.684509,273.766541  C590.918518,273.039276 589.517456,272.094940 587.629395,273.570007  C586.320435,274.009003 585.330994,274.045593 583.963196,273.700195  C581.965149,272.124969 580.149963,271.384338 577.896423,271.430817  C575.989868,271.470154 573.907349,271.316254 573.602234,268.328461  C576.450378,265.466797 579.788086,266.535706 582.786560,266.753143  C594.060486,267.570618 604.792969,264.462524 615.715271,262.698517  C619.250427,262.127563 622.792480,260.522797 626.691650,262.749146  C628.420715,263.330170 629.843811,263.659149 631.635925,263.993439  z\"})),_path2428||(_path2428=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M640.313843,301.128540  C640.042908,298.042419 638.703369,296.012756 635.684937,296.075470  C632.358459,296.144623 631.073242,293.144409 628.547791,291.975067  C622.357178,289.108673 615.928162,290.271484 609.573425,289.997681  C607.599182,289.912598 605.627808,289.762634 603.328735,289.388245  C602.613342,288.739410 602.481262,288.272034 602.883179,287.463745  C603.869446,287.162628 604.578735,287.129852 605.643311,287.099304  C611.718628,287.313538 617.426758,286.018280 623.582764,286.948914  C625.668762,287.010498 627.324524,287.091400 629.389893,287.227478  C631.093689,288.783478 632.880066,289.571564 634.764648,290.784180  C635.297241,291.130798 635.567383,291.296387 635.959473,291.696014  C636.605774,292.907379 637.801270,292.936859 638.753784,293.826294  C640.035461,294.699738 641.117432,295.342926 642.510254,296.059601  C644.512512,297.560120 645.841248,299.720215 648.941284,298.935516  C651.980530,302.282379 651.933289,306.315369 651.880371,310.337311  C651.870850,311.064606 651.355652,311.648895 650.621521,311.522003  C649.110901,311.260834 647.797241,310.591125 647.177002,309.041351  C645.849731,305.725006 643.390137,303.368134 640.313843,301.128540  z\"})),_path2429||(_path2429=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M631.735229,272.742065  C633.474426,273.945770 634.872925,274.979980 636.543457,276.213654  C637.225403,277.347717 637.635254,278.282318 638.103638,279.525574  C636.535828,281.540283 635.171570,280.082550 633.808411,279.406250  C632.287048,278.651428 630.833374,277.985138 628.932495,279.315002  C627.938843,279.793396 627.262329,279.669830 626.291138,279.227722  C624.230286,278.385284 622.466858,277.739807 620.350586,277.056396  C619.128418,276.983368 618.244324,277.018555 617.219238,276.291504  C613.688721,276.170746 610.521118,275.662079 607.271851,274.092316  C607.290833,271.440399 609.382263,271.200348 610.774109,271.376923  C616.391418,272.089355 621.983826,271.181702 627.576294,271.481659  C628.907715,271.553101 630.172607,272.029083 631.735229,272.742065  z\"})),_path2430||(_path2430=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C48355\",opacity:1,stroke:\"none\",d:\" M619.755371,352.277649  C625.189941,351.363800 630.136292,350.365295 633.036377,345.203827  C633.911804,343.645813 635.580505,342.733276 637.640137,342.043915  C638.834595,342.556091 638.988159,343.411743 638.996887,344.667542  C633.275208,350.378876 627.304077,355.437225 620.305847,359.112213  C618.864136,359.869324 617.257629,360.312866 615.355835,360.943481  C613.774536,359.313751 614.893066,358.141876 616.020447,357.239777  C617.622192,355.958038 618.313354,354.085480 619.755371,352.277649  z\"})),_path2431||(_path2431=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B97955\",opacity:1,stroke:\"none\",d:\" M642.770020,244.827087  C643.319641,247.077423 645.192688,249.592407 641.207520,250.755554  C639.109314,249.512558 637.239624,248.017136 635.411255,246.554718  C635.590759,244.075119 638.898499,247.007767 638.824951,244.415421  C638.778198,242.769653 637.380676,241.936630 636.392639,240.897873  C635.176453,239.619156 634.784485,238.448059 636.778809,237.131531  C638.648254,237.273651 640.167664,237.651474 640.940918,239.662811  C641.196716,240.832352 641.768677,241.522629 641.973755,242.690155  C642.180786,243.556244 642.359192,244.102310 642.770020,244.827087  z\"})),_path2432||(_path2432=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M629.302490,279.390228  C628.922241,276.923035 629.431946,276.046326 631.899963,276.749023  C634.079163,277.369507 635.220886,279.510437 637.795044,279.848083  C639.482971,281.265472 640.803833,282.696747 642.170227,284.450684  C638.836182,281.752258 633.377991,284.816467 630.182861,280.406860  C629.869446,279.980377 629.737244,279.872223 629.302490,279.390228  z\"})),_path2433||(_path2433=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M649.193848,298.615662  C648.831116,299.802826 649.185791,301.819611 647.820740,301.444580  C645.589233,300.831512 643.283508,299.712616 642.873779,296.485779  C644.369446,296.412628 645.917847,296.692200 647.868652,296.974365  C648.548767,297.435272 648.826538,297.893555 649.193848,298.615662  z\"})),_path2434||(_path2434=/*#__PURE__*/React.createElement(\"path\",{fill:\"#573E38\",opacity:1,stroke:\"none\",d:\" M646.897217,293.658691  C641.781311,293.135071 643.966064,288.212311 642.185059,285.161743  C645.552673,286.662476 645.637695,290.310822 646.897217,293.658691  z\"})),_path2435||(_path2435=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M611.996582,194.642731  C608.100159,192.971069 605.735413,189.638474 604.059448,185.338593  C605.118835,185.299744 606.211060,185.614655 607.643921,185.970093  C608.240417,186.807663 608.496216,187.604721 608.887390,188.689133  C609.778564,190.877686 612.205139,191.845154 611.996582,194.642731  z\"})),_path2436||(_path2436=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M642.277344,242.966614  C641.026672,242.394638 639.805298,241.912689 640.779480,240.174622  C642.676086,240.356033 643.934509,240.940231 642.277344,242.966614  z\"})),_path2437||(_path2437=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M448.571106,560.451111  C452.088165,567.013428 457.976410,569.566956 463.667206,571.682068  C467.677155,573.172363 471.567261,574.911011 475.767731,576.737793  C469.050842,575.737854 462.239838,580.541870 455.152435,577.301636  C452.604706,576.136902 449.809448,574.896973 446.695557,575.930603  C445.678223,576.268372 444.392914,576.117310 443.394104,575.270142  C438.519348,571.135071 433.645233,567.029236 427.681519,564.422729  C426.232727,563.789612 425.433594,562.214722 424.797485,560.547485  C423.952423,558.332581 421.804138,557.134766 419.363861,556.031128  C419.008850,555.233093 419.005463,554.488220 419.001648,553.370422  C419.170319,552.996948 419.339447,552.996338 419.762207,552.994202  C422.575653,550.847656 424.553162,552.682556 426.672302,553.910095  C430.484375,556.118164 432.923645,560.240356 437.553406,561.382996  C439.591339,561.886047 441.204712,562.484070 442.824677,560.516968  C444.269897,558.762085 446.206512,558.672546 448.571106,560.451111  z\"})),_path2438||(_path2438=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B25C36\",opacity:1,stroke:\"none\",d:\" M502.449158,585.738708  C501.440277,586.963745 500.676727,588.275757 499.084808,587.288574  C498.482727,586.915222 498.145111,585.920410 498.680603,585.662415  C499.868896,585.089844 501.190521,583.233276 502.449158,585.738708  z\"})),_path2439||(_path2439=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M541.771973,604.759766  C539.381165,607.800842 536.235107,608.236877 532.362854,607.034668  C532.296082,606.435303 532.842102,605.400330 532.870850,605.414490  C535.969360,606.941956 538.590393,604.025391 541.771973,604.759766  z\"})),_path2440||(_path2440=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M517.275146,584.261353  C521.014893,581.391785 525.384216,581.445435 529.937195,582.634888  C526.376709,587.602051 521.801636,584.752930 517.275146,584.261353  z\"})),_path2441||(_path2441=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M455.093079,675.374634  C457.739258,674.887146 460.905701,675.004761 457.008972,671.294006  C455.851562,670.191833 456.250946,668.957947 456.599274,667.612793  C457.343994,664.736755 457.925964,661.817078 458.518372,658.903931  C458.747345,657.777832 459.384827,656.118774 458.881836,655.556702  C454.541260,650.706848 458.060638,648.248657 461.520447,645.457825  C464.344025,643.180298 464.759644,640.139954 462.963745,636.970581  C461.332886,634.092529 462.632965,630.670593 461.055725,627.401306  C462.221497,626.144775 462.045807,623.744202 464.643402,624.007141  C466.594574,627.859619 468.283234,631.684265 468.065155,636.030151  C467.993866,637.450928 468.785736,638.481384 470.613892,638.940552  C471.049347,640.662170 470.778900,642.420471 471.242401,643.957520  C471.875305,646.056213 471.166931,646.930481 469.367615,647.773071  C463.899536,650.333618 463.026550,652.510376 464.706055,658.698853  C464.977844,659.700256 465.102936,660.728149 464.347015,661.525452  C460.549500,665.531006 463.097260,669.063354 465.292023,672.461548  C466.002228,673.561218 467.329651,674.288940 466.696533,675.821533  C466.041718,677.406555 464.504608,678.054321 463.031555,677.878113  C460.339966,677.556213 457.432770,677.765076 455.093079,675.374634  z\"})),_path2442||(_path2442=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E79B75\",opacity:1,stroke:\"none\",d:\" M413.342468,272.947693  C413.349030,270.934143 413.672333,268.868195 413.995392,266.400208  C414.056580,261.342529 414.571350,256.782776 415.793915,252.241547  C417.295959,246.662277 418.854584,241.118301 418.734711,235.149338  C418.577789,227.334229 423.161255,220.635086 424.903412,213.218033  C425.468781,210.811020 426.326691,208.457123 426.895416,206.028030  C428.973236,197.153397 433.804138,190.433304 442.278900,186.606888  C444.259491,185.712662 445.886993,184.239761 448.121033,183.010193  C452.551178,181.459137 456.921387,180.913300 460.665527,178.565491  C461.081543,178.304611 461.635895,178.013351 462.069305,178.099121  C470.284668,179.724777 478.002167,176.027679 486.084290,175.904709  C494.716156,175.773361 503.345398,175.186584 511.986877,175.134842  C512.498535,175.131775 513.119568,175.089676 513.369812,174.696976  C516.517029,169.759033 521.410767,171.164047 525.947632,171.100296  C527.895081,171.072952 529.582458,171.486298 530.990356,172.802628  C534.177368,175.782318 537.893250,176.433884 542.106567,175.767105  C545.420593,175.242630 548.603760,175.439560 549.139709,179.904419  C549.269287,180.983459 549.950256,181.909607 550.908142,182.146347  C555.853516,183.368439 559.168579,187.508316 564.021179,189.129761  C567.377625,190.251312 569.875854,192.485611 573.955322,190.552292  C576.683716,189.259293 580.121033,192.754623 580.070679,196.028748  C580.029846,198.682632 579.624207,201.324127 579.556519,203.992020  C579.457153,207.910339 580.037231,211.324539 582.743347,214.612488  C585.748535,218.263840 587.215881,222.785919 585.629333,227.716187  C584.957825,229.803009 585.290100,231.683167 586.985229,233.163864  C588.828308,234.773743 588.848694,236.939835 589.098694,239.430557  C589.388367,239.964249 589.514587,240.171158 589.805420,240.699783  C591.202759,245.332550 593.824097,248.546097 597.594299,250.933472  C599.101135,251.887604 600.742126,252.757034 601.800659,254.754639  C602.449036,258.492126 600.254456,259.981354 597.579468,260.800385  C589.603760,263.242401 581.681702,266.016510 572.874634,266.112793  C572.369080,266.412598 572.156067,266.511261 571.602539,266.688110  C568.305481,266.168060 565.546936,266.430695 562.917053,268.783142  C560.466858,269.458679 558.413696,270.513550 555.770569,269.803040  C553.561646,267.004669 555.886597,265.867920 557.412231,264.669403  C559.185669,263.276184 561.293762,262.310577 562.977905,260.213165  C563.412964,259.794006 563.604858,259.646545 564.125366,259.348907  C568.602783,259.313965 572.539307,258.300323 576.744995,256.952576  C575.793030,254.854248 573.914612,254.684952 572.249878,254.407166  C568.691772,253.813431 566.439697,251.769806 564.699646,248.692474  C562.862793,245.444000 561.187683,241.918152 556.963745,240.352585  C555.104126,239.849426 553.896179,238.979141 552.684692,237.475250  C552.273987,236.678070 552.153625,236.184570 552.123413,235.295593  C553.264404,231.335968 553.771240,227.804535 551.522278,224.396408  C551.068176,223.708206 550.863647,222.753952 551.142395,221.985352  C553.252319,216.167389 550.671753,211.300949 548.137695,206.390228  C547.379150,204.920181 546.170166,203.350571 546.351990,201.794952  C547.068909,195.661514 542.387329,195.723450 538.719971,195.229904  C535.296021,194.769089 531.944214,196.531479 528.436096,196.646500  C526.830139,196.699158 526.725403,198.414337 526.258606,199.639648  C523.572937,206.688889 518.267029,208.475113 511.416595,205.718536  C507.211029,204.026199 503.811432,202.091431 501.793915,197.935593  C501.237061,196.788544 500.043762,195.825607 498.841980,195.326416  C495.657227,194.003525 494.611359,191.364792 493.853455,188.041077  C490.934479,185.914093 487.782562,186.197220 484.992218,186.769928  C480.266785,187.739761 475.475037,188.115295 470.761108,188.140915  C465.475037,188.169647 462.599213,190.818466 460.117737,195.236740  C459.283722,196.405136 458.408600,196.886780 457.054382,197.266739  C453.147858,197.955139 449.797852,196.459671 445.999695,196.501007  C445.471954,196.704086 445.259735,196.782547 444.723633,196.961334  C438.953369,197.992996 438.953369,197.992996 440.804077,202.908051  C441.448700,205.131592 441.055023,206.943695 440.280212,209.040222  C439.657562,210.296204 439.355347,211.268570 439.841949,212.670044  C440.034821,215.592239 438.656860,217.469086 436.802063,218.945068  C430.864105,223.670380 430.651276,230.175522 431.924500,236.623367  C432.610474,240.097122 432.499268,242.650116 430.161377,245.263535  C427.335327,248.422653 425.820770,252.110733 425.272186,256.439667  C424.600433,261.740723 421.145569,265.726532 417.274780,269.727234  C415.896973,270.960754 414.778107,271.928040 413.342468,272.947693  z\"})),_path2443||(_path2443=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F2A484\",opacity:1,stroke:\"none\",d:\" M438.775024,210.307785  C439.328156,207.929718 439.662415,205.862991 439.997131,203.398132  C438.401642,198.780273 441.339294,197.580551 444.683472,196.220993  C445.000000,196.001221 445.000000,196.000000 445.000610,196.000000  C446.402802,194.656372 447.810852,195.486893 448.982910,196.227829  C451.164368,197.606827 453.266083,197.353226 455.726898,196.218262  C456.855774,195.834442 457.709991,195.665817 458.782715,195.248901  C460.372833,193.550629 461.839050,192.201660 463.419250,190.984192  C467.227448,188.050018 471.664154,188.006729 475.255280,191.042603  C476.272888,191.902908 477.161896,192.796753 478.458923,193.286499  C481.236389,194.335281 482.354614,196.370956 481.283783,199.219925  C480.409058,201.547119 481.362122,202.599854 483.202515,204.067825  C486.954773,207.060791 489.442078,211.226562 491.748047,215.417496  C492.506683,216.796310 492.605347,218.649765 495.143372,217.590179  C496.375641,217.075714 497.693481,218.294342 498.433075,219.416687  C500.255066,222.181580 502.711517,222.842484 505.783539,222.058762  C510.027710,220.975983 513.245178,222.204208 515.361389,226.217545  C516.270691,227.942047 517.303589,230.002365 519.857361,227.917435  C520.911316,227.056946 522.188599,227.380630 523.054626,228.234146  C525.722961,230.863907 529.136292,231.681671 532.603027,231.998047  C539.722717,232.647797 542.738281,238.957245 547.697510,242.566605  C548.470276,243.129013 548.858459,244.189285 550.211426,244.660706  C550.772827,244.888672 550.993835,244.995209 551.535645,245.289047  C555.607239,246.683334 559.216064,248.059128 562.637024,250.186935  C567.505859,253.215302 568.012695,254.533112 564.275085,259.726410  C564.002441,259.998779 564.000000,260.000000 563.998779,260.001221  C563.390686,260.583832 562.724487,261.209259 561.876770,261.202850  C554.877686,261.149963 550.170288,264.873138 546.230164,270.227173  C544.181152,273.011414 541.785583,275.598785 538.420288,276.988190  C537.487244,277.373413 536.670532,278.120331 536.457458,279.126373  C535.331116,284.443390 531.050415,286.106567 526.678955,287.601349  C522.313416,289.094116 518.471924,291.176239 516.356018,295.559875  C515.516296,297.299683 514.292480,298.723083 512.187683,298.527374  C509.938660,298.318237 509.335449,296.317963 508.959320,294.584106  C508.158386,290.892303 506.223663,288.335266 502.744904,286.766754  C500.913239,285.940887 499.383392,284.527740 499.050568,282.355865  C498.747955,280.381104 497.572144,279.505981 495.366272,279.212982  C494.791809,279.033691 494.566772,278.943237 494.030243,278.660309  C492.643402,277.417145 491.823486,276.230316 491.846954,274.340179  C496.039398,270.319122 495.817902,265.822357 491.246368,262.193420  C489.093018,260.484070 486.699036,259.077850 484.203522,257.272064  C484.411957,252.735184 485.784729,252.375778 490.924683,255.195068  C488.275787,243.088623 485.284973,231.090942 479.665955,219.572205  C479.477112,217.433243 479.736176,215.671280 479.998657,213.903183  C480.210999,212.472641 480.628326,210.876572 479.202515,209.860580  C477.758362,208.831558 476.429718,209.818176 475.151978,210.500305  C474.579803,210.805771 474.020264,211.133682 473.067017,211.454697  C470.167297,211.526413 469.118988,209.483124 467.699677,207.892944  C461.630524,201.093231 453.705872,202.025146 449.598053,210.016113  C447.445496,214.203491 444.791626,217.967407 440.800751,220.606354  C438.932495,221.841751 438.092651,223.406784 438.638550,225.669083  C439.072510,227.467468 438.388245,229.380722 438.793884,231.115738  C440.572296,238.722549 439.806152,245.870529 435.815643,252.690414  C434.821228,254.389923 434.794647,256.513550 434.959686,258.535095  C435.110565,260.382904 435.116119,262.206604 433.320007,263.820343  C427.648712,265.302216 422.156464,266.236420 417.367859,269.948212  C417.062836,268.001038 418.587189,266.750763 419.511871,265.230164  C421.816162,261.440674 424.292297,257.959259 424.204102,253.032059  C424.138611,249.371719 426.968140,246.438217 429.464325,243.796982  C431.352936,241.798630 432.258850,240.330872 430.255096,237.485092  C427.404907,233.437180 430.544098,221.799011 434.894928,218.604446  C436.977173,217.075577 438.653046,215.418060 438.988525,212.371262  C438.617584,211.614624 438.471313,211.153549 438.775024,210.307785  z\"})),_path2444||(_path2444=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FAA683\",opacity:1,stroke:\"none\",d:\" M433.243591,264.286835  C434.069550,261.596466 433.112122,259.144928 433.238342,256.759369  C433.381958,254.045715 434.161591,251.273987 435.715088,248.779083  C437.837769,245.370117 439.428589,241.643784 437.979584,237.528259  C436.440430,233.156631 438.255737,228.477905 436.350586,224.075607  C435.410004,221.902084 437.702057,220.368179 439.389801,219.504074  C443.771912,217.260452 446.629181,213.615158 448.200195,209.279114  C449.922638,204.524963 453.033112,202.572647 457.748718,201.959457  C463.202362,201.250275 466.942474,203.738480 469.740082,207.936264  C470.502716,209.080551 471.136383,210.115829 472.688354,210.852554  C471.827301,217.175766 477.942505,216.089005 480.757233,218.766953  C481.011719,219.332596 480.883789,219.817459 481.055481,219.974304  C485.943329,224.439148 484.154022,232.016449 487.578339,236.136230  C490.508423,239.661346 488.707520,243.539291 491.135651,246.895538  C492.201019,248.368103 491.387177,252.733688 493.758942,255.334457  C494.330475,255.961197 493.917511,257.323578 492.724396,257.725189  C491.265717,258.216217 490.046021,257.700134 489.298218,256.433258  C487.578644,253.520157 485.894257,253.704407 484.055359,256.672913  C482.075714,257.240173 480.616302,258.064484 479.608795,259.828918  C476.683167,264.952545 472.138824,266.997528 466.045624,265.790863  C457.716278,264.141357 449.414337,265.392242 441.106201,265.825165  C438.439362,265.964142 435.803467,266.375397 433.243591,264.286835  z\"})),_path2445||(_path2445=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD9971\",opacity:1,stroke:\"none\",d:\" M478.029724,278.393188  C479.299744,276.558838 479.558075,275.236420 477.329529,274.046967  C478.612518,270.077606 480.556488,273.396759 482.679840,273.871368  C485.979340,276.670776 490.661011,274.213989 493.708191,277.749451  C493.977081,278.012268 493.998718,278.002991 493.992432,278.013306  C495.956390,281.095947 498.866821,283.576111 499.808563,287.666290  C499.521362,289.307343 499.043488,290.452545 497.610291,291.374573  C493.234802,290.684784 491.995422,286.739716 489.717133,284.176605  C487.068085,281.196411 485.088715,280.259125 481.922394,282.847839  C480.999023,283.602722 479.904541,283.996063 478.453583,283.179504  C478.150818,281.557343 478.086365,280.182343 478.029724,278.393188  z\"})),_path2446||(_path2446=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M493.950134,277.686890  C490.670349,276.145721 486.014435,278.553558 483.171875,274.337219  C485.696350,274.012299 488.397247,274.007538 491.548035,274.004456  C492.639648,275.124573 493.281433,276.243042 493.950134,277.686890  z\"})),_path2447||(_path2447=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E3976F\",opacity:1,stroke:\"none\",d:\" M449.237366,183.655640  C445.843170,186.674118 441.235260,187.615753 438.584381,190.072540  C433.701141,194.598236 429.164062,199.920639 427.969940,207.322540  C426.955170,213.612808 425.177612,219.864853 422.185577,225.634949  C420.543243,228.802139 419.944275,232.499695 420.219330,235.735352  C420.804596,242.620193 418.269257,248.672638 416.486389,254.926315  C415.488373,258.427002 417.208282,262.359070 414.285278,265.751709  C410.316925,264.861664 410.881683,261.852142 411.076691,259.122192  C411.226624,257.023682 411.680603,254.946899 411.997864,252.431458  C412.278870,241.427277 412.421661,230.647186 416.464294,220.829117  C419.592957,213.230881 422.178802,205.410431 425.523834,197.987198  C427.521423,193.554169 431.879852,189.917908 434.990112,185.388489  C440.270844,186.402634 443.668457,181.778595 448.622375,181.005035  C449.663727,181.663971 449.757446,182.448288 449.237366,183.655640  z\"})),_path2448||(_path2448=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M478.144409,283.267731  C480.267181,283.333099 480.955994,281.518280 482.202789,280.550507  C485.266357,278.172546 488.249817,279.014069 490.097809,282.478210  C491.729065,285.536072 495.678833,286.845978 496.698486,290.819580  C497.592499,291.598267 497.817505,292.326508 497.659363,293.530151  C492.383667,299.917236 485.411957,302.749878 477.688660,304.918762  C475.079895,304.356262 473.911072,302.730682 473.037659,300.381775  C477.580353,298.345734 482.105469,296.506805 486.765686,295.122650  C488.906128,294.486938 490.318176,293.466278 491.188599,291.536285  C491.522156,290.796692 491.972992,289.455597 491.025543,289.426788  C486.453400,289.287659 484.257385,282.830536 478.495789,284.977142  C478.066345,284.514069 478.069916,284.058594 478.144409,283.267731  z\"})),_path2449||(_path2449=/*#__PURE__*/React.createElement(\"path\",{fill:\"#878383\",opacity:1,stroke:\"none\",d:\" M435.187256,338.589844  C432.837158,339.077026 430.574615,339.377533 430.322418,336.643738  C430.173431,335.029388 431.953339,334.620239 433.227112,335.240387  C434.426849,335.824432 438.381958,334.860474 435.187256,338.589844  z\"})),_path2450||(_path2450=/*#__PURE__*/React.createElement(\"path\",{fill:\"#97999C\",opacity:1,stroke:\"none\",d:\" M438.792877,333.643616  C437.305176,333.432648 436.246155,332.923981 436.653961,331.474792  C436.742249,331.161041 437.846222,330.802002 438.268829,330.977631  C439.386200,331.442047 440.239868,332.233459 438.792877,333.643616  z\"})),_path2451||(_path2451=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4D302C\",opacity:1,stroke:\"none\",d:\" M452.475647,335.955780  C452.728729,336.800079 452.642822,337.674683 452.322998,338.785889  C451.285706,338.859161 450.395782,338.743256 450.275299,337.715729  C450.116119,336.358307 451.139526,336.160217 452.475647,335.955780  z\"})),_path2452||(_path2452=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D88861\",opacity:1,stroke:\"none\",d:\" M460.144592,563.676392  C456.192047,564.399719 453.241821,561.763672 449.361877,561.056885  C448.989319,561.014160 448.997375,561.002014 448.991821,561.005981  C444.464966,558.381287 439.583801,556.328186 435.698761,552.681091  C435.211334,552.223511 434.636597,551.885254 433.919250,551.977539  C424.925232,553.134460 420.413513,546.696655 415.626007,540.955811  C414.404083,539.490540 412.804718,538.729248 411.265015,537.242676  C411.006409,536.834534 411.003052,536.666687 410.995544,536.246948  C409.922424,534.972961 409.698212,533.347168 408.235809,532.224426  C405.201416,527.321533 402.220673,522.733398 402.619995,516.869812  C402.805756,514.141724 400.757568,511.998413 399.760651,509.716492  C397.201538,503.858734 399.016571,497.611176 397.077637,491.420685  C398.797089,489.701294 398.883820,487.833252 398.285980,486.049683  C396.333862,480.225952 396.210449,473.969543 393.775635,468.227112  C392.831940,466.001495 391.539490,463.128845 394.638184,460.937897  C397.125366,461.262726 396.815155,462.952179 397.089722,464.398651  C397.908966,468.714294 399.372192,472.702087 403.501495,475.013031  C404.351044,475.488525 404.993713,476.096924 404.420898,476.919189  C400.165253,483.028046 405.203339,488.164062 406.242523,493.672760  C406.545929,495.281189 407.160767,496.887360 406.961853,498.507477  C406.191833,504.779816 405.899963,511.154663 408.144012,517.048340  C410.182465,522.402039 412.392456,528.135498 418.415833,530.596741  C420.330383,531.379089 421.985809,532.156372 423.044312,534.069885  C426.243286,539.852478 431.974884,542.585815 437.680298,545.861328  C441.394165,546.178040 443.290009,548.741211 444.868988,551.070496  C447.442169,554.866333 451.034821,556.845215 455.134552,558.065186  C457.981598,558.912354 459.665161,560.521729 460.144592,563.676392  z\"})),_path2453||(_path2453=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D6815E\",opacity:1,stroke:\"none\",d:\" M394.984741,460.615906  C392.516449,465.877777 396.249420,469.772369 397.124176,474.102875  C398.093689,478.902313 399.526306,483.606873 400.557159,488.395813  C400.987640,490.395569 399.392426,490.861053 397.396057,490.998230  C394.089386,485.839020 395.054077,479.882111 393.694397,474.520844  C392.381561,469.344177 391.158722,464.054962 389.559021,458.900085  C386.359467,448.589813 385.043365,437.786743 382.373077,427.389069  C379.942474,417.924774 382.305664,408.765289 381.383575,399.527344  C381.208984,397.778015 382.629303,397.371338 383.797119,396.276764  C387.787628,398.201141 384.522308,401.561096 384.359192,403.663452  C384.005341,408.223633 385.891815,412.529968 385.073090,416.871429  C383.937469,422.893311 388.793274,428.044098 387.209961,434.034912  C392.977051,441.823151 390.103088,452.171936 394.984741,460.615906  z\"})),_path2454||(_path2454=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M411.007416,537.384155  C414.622467,537.047852 417.669220,537.795349 417.425629,542.393799  C417.366089,543.517578 418.039307,543.743713 418.884979,543.980713  C422.180695,544.904236 424.542297,547.257874 426.928864,549.485596  C429.030457,551.447266 430.867767,553.367920 433.263092,549.851990  C433.917572,548.891235 435.166626,548.880615 435.766754,549.905579  C438.799774,555.085876 444.963074,556.275208 448.922607,560.668396  C446.204407,560.192627 443.310974,559.060669 442.803467,563.650940  C442.720428,564.401855 441.862946,564.902893 441.333160,564.469299  C438.175018,561.884460 433.492645,562.903564 430.556824,559.055664  C428.332153,556.139832 425.178009,553.156433 420.398682,552.994507  C420.733917,549.357361 418.664886,547.163940 416.092102,545.126648  C413.672455,543.210632 410.716431,541.585815 411.007416,537.384155  z\"})),_path2455||(_path2455=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M385.280090,391.683075  C384.769623,393.116882 384.525909,394.232452 384.138489,395.663300  C380.694855,392.756134 382.470459,388.622467 381.998474,384.440735  C382.438782,381.651520 381.920227,378.789032 385.611755,377.994141  C388.486023,382.526825 387.526215,386.962463 385.280090,391.683075  z\"})),_path2456||(_path2456=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D37F54\",opacity:1,stroke:\"none\",d:\" M408.049683,532.344299  C410.029968,532.161011 410.969208,533.297729 410.987793,535.634155  C408.996155,535.794739 408.564331,534.220276 408.049683,532.344299  z\"})),_path2457||(_path2457=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D6815E\",opacity:1,stroke:\"none\",d:\" M476.785461,304.305725  C484.018188,301.837830 490.420929,298.491638 496.639038,294.048767  C498.821259,296.333282 498.288116,299.069794 498.194611,301.668549  C498.031555,306.200165 499.153076,310.225739 502.320038,313.547028  C504.492798,315.825684 505.570709,318.496124 505.631378,321.633362  C505.663574,323.298004 506.003357,324.922211 506.520905,326.516235  C509.888885,336.890381 505.829071,349.087067 496.693237,355.259216  C491.319916,358.889435 485.760529,362.345032 478.376038,361.507874  C474.686249,361.148010 471.710724,362.263580 468.960815,363.812164  C462.025665,367.717621 454.546600,368.498657 446.824799,367.945892  C444.465485,367.777008 442.219025,368.024597 439.929291,368.544403  C434.259186,369.831604 428.682007,370.696198 422.792816,368.918396  C415.429047,366.695496 408.389832,368.961853 401.226898,372.021179  C398.875488,372.798401 396.368683,371.610352 394.509918,374.038330  C393.956390,374.313995 393.708649,374.370758 393.084991,374.343567  C388.973663,370.199951 392.843750,369.087036 395.675140,367.229279  C397.682434,363.803925 401.280914,364.068207 403.951569,363.178040  C412.948853,360.179016 422.133301,357.650848 431.857697,358.945160  C433.455963,359.157898 435.212830,358.959930 436.772949,358.516998  C440.074799,357.579590 442.092987,358.258972 441.971497,362.052399  C441.897522,364.360809 443.009857,364.089905 444.766510,363.999420  C449.911133,363.734314 454.694244,362.387482 459.623779,360.037872  C466.831268,360.727600 472.544373,357.323364 478.340942,354.640137  C480.929718,353.441833 483.524384,352.687439 486.606750,352.001709  C493.467438,348.620880 494.655121,342.449402 495.362701,336.074188  C495.914795,331.099731 495.177917,326.114410 494.842041,321.181244  C494.556641,316.988892 491.053772,314.256012 487.534363,312.316193  C484.494049,310.640472 481.785004,308.375885 478.461426,307.196655  C477.308899,306.787720 476.453735,306.016144 476.785461,304.305725  z\"})),_path2458||(_path2458=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE8561\",opacity:1,stroke:\"none\",d:\" M395.617737,367.010681  C395.595886,369.484314 390.608490,369.585938 392.860138,373.667297  C392.866577,374.180542 392.732727,374.384827 392.311584,374.815979  C390.259216,375.664673 388.794891,377.423523 386.329346,376.248718  C385.905945,373.475525 385.735504,370.916168 388.688629,369.158142  C391.456085,369.504883 392.748016,366.373108 395.617737,367.010681  z\"})),_path2459||(_path2459=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M476.753052,303.812073  C479.573730,307.088531 483.592682,307.819366 486.751404,309.991730  C492.013733,313.610809 496.962677,316.306274 496.579681,324.656250  C496.263885,331.541168 497.024536,338.401520 495.100037,345.242676  C493.975891,349.238647 492.039368,351.721069 487.382690,351.991669  C486.766174,347.782959 487.857239,343.781647 488.937622,339.374939  C487.310974,335.114990 485.845673,331.551300 487.740173,326.955383  C489.213898,323.380341 488.679047,318.278656 486.489380,315.533325  C484.073486,312.504272 480.565186,309.169098 475.393860,309.012329  C473.651245,308.053223 472.400848,306.907288 470.942047,306.178223  C469.214294,305.314728 466.598846,305.196045 467.272125,302.430969  C467.847534,300.067780 470.180328,300.073425 472.601257,300.000427  C474.663635,300.726654 475.524628,302.229401 476.753052,303.812073  z\"})),_path2460||(_path2460=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M463.200989,356.236328  C463.844177,354.873138 465.082123,355.022308 466.629944,354.996429  C466.186707,356.429382 465.218323,357.471130 463.200989,356.236328  z\"})),_path2461||(_path2461=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M458.028198,330.335358  C458.842163,330.223206 459.652924,330.480377 460.766174,330.859314  C460.995331,333.342621 463.036957,333.679779 464.740021,334.799133  C466.506805,335.965179 467.328552,337.029480 465.303223,338.761169  C464.204254,339.307007 463.422180,339.646576 462.317963,339.982971  C462.753235,335.997162 458.414612,334.196228 458.028198,330.335358  z\"})),_path2462||(_path2462=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M465.388611,338.984558  C465.566040,337.875275 466.102386,336.780121 465.097534,335.308838  C465.308105,335.019562 465.642365,334.971863 465.968262,335.005371  C467.671661,335.180573 470.356354,334.427734 470.410919,336.838379  C470.476440,339.733826 467.594452,338.744751 465.388611,338.984558  z\"})),_path2463||(_path2463=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M386.027130,376.349243  C388.247131,376.563629 389.235870,373.936615 391.630493,374.011414  C394.325500,376.993103 391.568390,379.666962 391.438934,382.914001  C391.050751,385.738739 390.845367,388.199890 389.247589,390.668518  C387.888123,391.294861 386.791748,391.607910 385.354370,391.961121  C385.343018,387.610504 385.672638,383.219696 385.993164,378.403503  C385.992615,377.543640 386.001190,377.109192 386.027130,376.349243  z\"})),_path2464||(_path2464=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88776E\",opacity:1,stroke:\"none\",d:\" M453.798950,330.161072  C452.832733,328.954376 453.365723,327.996857 454.488617,327.562866  C455.774689,327.065887 456.432739,328.153748 457.200165,329.329346  C456.275970,329.778259 455.230011,329.939972 453.798950,330.161072  z\"})),_path2465||(_path2465=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M474.077057,327.318054  C475.183136,326.989075 476.083405,327.501831 476.936523,328.708282  C475.943665,328.943512 474.663666,329.154022 474.077057,327.318054  z\"})),_path2466||(_path2466=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M478.085510,330.067139  C478.008331,329.899597 478.501678,329.962982 478.749329,329.985199  C478.718903,330.083160 478.440826,330.158936 478.085510,330.067139  z\"})),_path2467||(_path2467=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD9971\",opacity:1,stroke:\"none\",d:\" M449.392029,183.946228  C449.000732,183.250137 449.000244,182.499054 448.999451,181.372360  C454.136810,177.685059 459.230865,174.620087 465.883850,176.617905  C467.743073,177.176193 470.051178,176.239456 472.570587,175.985107  C480.459839,172.674881 488.877747,172.675613 496.665619,169.148743  C497.399292,168.556534 497.851929,168.199127 498.714905,167.975616  C499.435913,167.916214 499.868530,167.902390 500.622650,167.849487  C501.724457,169.101685 503.013367,168.965225 504.618622,168.985703  C511.406952,167.992828 517.395935,165.896988 523.363098,163.238342  C528.515137,160.942841 534.346497,161.021576 539.803894,163.246872  C543.404968,164.715271 546.214233,161.764450 549.731445,161.692612  C555.765564,161.569382 559.317139,165.172104 562.825134,168.553757  C565.758423,171.381470 566.207275,172.033813 568.558228,168.844955  C569.994019,166.897324 578.792542,167.776169 579.322266,170.392944  C580.800232,177.693008 587.787476,179.940079 591.507568,185.057968  C595.638916,190.741745 598.297607,197.126816 598.911804,204.150345  C599.193054,207.366089 597.153870,210.153992 594.516479,211.470947  C590.104553,213.673950 592.630127,216.831070 594.299683,217.416275  C599.718750,219.315704 598.657776,224.618286 600.895142,228.090530  C601.375122,228.835419 601.046204,230.031372 601.898010,230.786926  C609.650696,237.663620 614.676392,246.657150 620.620605,254.938522  C621.423523,256.057129 622.450562,256.870209 623.893188,256.990967  C626.537598,257.212250 627.086670,258.971100 626.989380,261.599304  C623.193542,262.850616 620.225830,260.990204 617.604431,258.747192  C614.235840,255.864746 610.900085,253.973984 606.343079,256.009033  C604.845337,256.677887 603.068726,256.555206 601.289124,255.240082  C596.226318,251.284973 589.877563,249.000046 589.007935,241.374847  C589.195923,240.808014 589.389221,240.613922 589.579651,240.417053  C589.769836,240.220566 589.705444,240.285553 589.193359,240.806335  C587.910828,240.828033 586.734802,240.188904 587.155396,239.141739  C588.405212,236.030151 586.596130,234.590286 584.421021,233.177567  C582.327820,231.818069 583.069031,230.023285 583.779724,228.303955  C586.215210,222.411972 583.904968,217.726974 579.885681,213.620697  C578.761719,212.472427 577.893127,211.489365 577.997742,209.826828  C578.268555,205.523773 577.292297,201.132126 578.593567,196.920624  C579.382446,194.367508 578.212036,193.522949 576.229370,192.363678  C574.216003,191.186417 572.920532,191.184631 571.601624,193.029495  C570.825378,194.115280 569.179993,195.804764 568.600769,194.485657  C566.101257,188.793640 558.560181,191.325119 555.839050,186.126404  C554.877808,184.289993 552.217346,184.833115 550.428711,184.007370  C548.928772,183.314926 546.684082,182.928528 547.183044,180.879288  C548.487122,175.523773 544.688904,176.671951 542.347046,177.241516  C537.130554,178.510178 532.887939,177.686707 529.513489,173.313629  C528.774292,172.355652 517.690186,171.955963 516.951050,172.877548  C516.138977,173.890060 515.560242,175.122726 515.044067,176.329712  C514.586243,177.400238 513.970764,177.976013 512.784912,177.717239  C504.820068,175.979126 496.679535,178.389740 488.965546,177.417465  C480.509399,176.351654 472.996155,182.694763 464.671417,179.105453  C463.928894,178.785309 462.615112,179.190994 461.826416,179.679199  C458.108337,181.980713 454.063507,183.249573 449.392029,183.946228  z\"})),_path2468||(_path2468=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C0895F\",opacity:1,stroke:\"none\",d:\" M498.849243,167.725952  C498.535217,168.264847 498.067108,168.599655 497.299194,168.962952  C496.999084,168.816086 496.998779,168.640701 497.000763,168.201660  C497.442749,167.293610 497.977783,167.036911 498.849243,167.725952  z\"})),_path2469||(_path2469=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M529.993042,154.760559  C529.861572,155.029037 529.693054,155.033508 529.272156,155.050613  C528.975891,154.536194 528.781311,153.598160 528.912903,153.549911  C529.670715,153.272064 529.797974,153.950027 529.993042,154.760559  z\"})),_path2470||(_path2470=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D99D7B\",opacity:1,stroke:\"none\",d:\" M600.990356,255.375259  C601.826599,254.996307 602.795288,255.283905 603.458008,254.955032  C610.806030,251.308731 616.142273,254.981995 621.398010,259.557617  C622.711609,260.701263 624.634827,261.144806 626.632812,261.951782  C626.990173,262.161377 626.992615,262.329346 626.996338,262.749268  C622.219238,262.991577 617.503174,265.092743 613.152466,265.192566  C604.164185,265.398804 595.867615,269.936035 586.601624,268.275452  C582.943298,267.619904 578.785706,267.874695 574.422363,268.016510  C573.167053,267.820190 572.628723,267.260742 572.095947,266.300201  C572.326965,264.206573 573.018311,262.340912 575.142334,263.867737  C577.194275,265.342743 579.048828,264.750977 580.735352,263.963867  C586.098206,261.460938 592.229248,261.930786 597.571533,259.344147  C599.286987,258.513519 601.024353,258.091766 600.990356,255.375259  z\"})),_path2471||(_path2471=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F09576\",opacity:1,stroke:\"none\",d:\" M393.352631,392.836914  C391.852264,392.949585 390.613953,393.114319 390.058899,391.333313  C391.966797,382.479218 397.521729,377.502380 405.910706,377.518036  C410.444519,377.526489 414.707458,375.999054 419.142731,375.943420  C425.648041,375.861847 431.825043,377.981110 438.497620,379.355957  C445.386993,380.245789 450.687103,376.250153 456.971130,374.738403  C457.499054,374.396881 457.720428,374.274872 458.293152,374.008087  C462.805084,373.081604 466.310181,370.735840 470.101318,369.070984  C474.418549,367.175140 480.277435,368.598358 483.189789,372.212189  C485.957733,375.646912 489.756012,375.687408 491.397949,371.469818  C493.224304,366.778351 496.889160,364.394348 500.005951,361.070374  C503.497925,357.346222 506.574707,352.687256 507.763153,347.370209  C510.818573,333.700287 509.406281,320.346069 505.082977,307.110291  C503.506042,302.282410 501.433167,297.601379 500.598083,292.247864  C504.756744,291.984283 508.296234,294.461426 509.131592,298.545105  C509.885376,302.230133 511.526184,305.350006 513.729004,308.736694  C514.830444,315.700897 516.460938,322.214111 515.139038,329.037842  C514.389893,332.905273 514.486755,337.132263 515.199951,340.891266  C516.976562,350.256012 514.196350,359.321777 514.335449,368.912170  C512.144104,374.092651 513.037964,378.013336 517.823364,381.194489  C518.727478,383.609222 518.684570,385.707520 518.077881,388.183289  C516.669556,390.639984 514.962280,392.518036 514.574280,395.076599  C513.959229,399.132233 511.295410,400.363922 507.541901,400.528290  C501.963806,400.772491 496.356537,400.573181 490.904510,402.448822  C487.440887,403.640381 485.690247,406.365295 483.701233,408.945374  C482.170715,410.930756 484.219574,411.375061 485.632904,412.372253  C485.176208,416.656189 481.954437,418.202179 479.203278,415.692719  C476.691071,413.401245 476.186890,410.515320 477.817169,407.513611  C481.750793,400.271027 487.073242,394.884735 495.964905,394.519836  C497.131470,394.471954 498.320465,394.397217 499.361298,393.810547  C500.737427,393.034943 501.969513,391.853638 501.588013,390.251007  C501.086304,388.143188 499.268127,388.964966 497.850067,389.179962  C497.359497,389.254364 496.867981,389.638367 496.415985,389.575012  C488.501160,388.466003 485.377289,394.130310 482.300629,399.672211  C480.304718,403.267365 477.674713,405.896729 474.106049,408.089752  C468.396912,411.598083 465.215668,417.289581 462.852142,423.329498  C464.043060,424.654846 464.956665,423.766968 465.683868,423.345215  C468.635376,421.633423 471.091431,422.501831 473.425659,424.545288  C475.945740,426.751526 478.290497,429.242218 480.035309,431.992065  C483.162842,436.921112 486.917755,439.942169 493.362244,439.051300  C495.322632,440.042908 496.960114,440.640259 498.968567,439.163818  C501.959930,438.614624 504.545898,437.964874 506.965088,435.953949  C508.994080,435.537476 510.186493,434.306274 511.937988,433.338440  C514.524719,432.778412 516.166138,433.851624 517.818726,435.679260  C519.475403,440.595428 521.516113,444.901550 519.206665,450.085632  C517.769287,453.312225 519.745972,455.792816 523.458374,457.081726  C530.458923,459.512146 536.998779,460.022125 543.416321,455.428040  C546.475403,453.238159 548.791809,453.981750 549.003906,458.597137  C548.511108,459.011353 547.935669,458.897522 547.530212,459.109222  C537.708435,464.236420 527.245239,462.465271 516.441895,462.002380  C505.114807,462.739685 494.470215,464.385742 484.337097,469.758331  C483.547821,469.953033 483.107697,469.974670 482.337189,470.003601  C480.455109,470.149445 479.681488,471.415985 478.379333,472.543274  C477.075226,473.443542 475.949921,473.832550 474.365936,473.946411  C471.626587,473.395020 469.358917,474.655457 466.643677,474.362915  C461.766144,471.616302 458.209198,472.536499 455.351685,477.386841  C454.849854,477.711060 454.633179,477.814941 454.069275,478.015015  C452.055420,478.379517 450.422791,477.909485 448.767212,477.883850  C442.175201,477.781921 439.544434,474.938232 440.030029,468.389709  C440.189850,466.234558 440.511993,464.039948 441.619751,462.165100  C445.009552,456.427734 447.380829,450.238678 450.209045,443.030640  C441.052887,450.205200 431.531769,455.756226 430.621246,468.185150  C430.351349,471.869781 430.196533,475.502350 433.403473,478.275024  C434.282349,479.034882 434.758698,480.161621 434.209167,481.715912  C432.609009,482.000000 431.220490,482.000000 429.415344,482.000000  C428.834167,482.025665 428.601562,482.135315 428.514618,482.064972  C421.444824,476.348114 420.830597,459.940369 427.731995,454.379028  C431.321167,451.486786 432.467804,446.543060 436.524048,444.318115  C440.676941,442.040100 443.216400,438.476807 445.758942,434.301270  C446.233276,433.549927 446.554474,433.161255 447.181519,432.548218  C452.201935,429.643097 452.681458,424.025635 455.841949,420.202454  C460.750153,414.265137 463.568481,406.591888 470.766693,402.552368  C471.620239,402.073364 471.706512,400.828949 472.540314,399.765228  C478.212524,395.530945 478.585571,390.303314 473.707794,385.775177  C472.738342,384.875244 471.276672,384.347107 470.810944,383.085022  C469.097076,378.440186 465.793396,378.679382 462.412445,380.549408  C456.731934,383.691315 450.306732,383.919281 444.290436,385.704865  C441.579315,386.509460 439.017914,386.091644 436.220886,384.704407  C434.700500,384.404663 433.539703,384.471863 432.061188,385.050842  C431.207855,385.270142 430.706085,385.338623 429.808228,385.379578  C421.456512,383.687408 413.301636,385.336090 405.309174,383.997864  C402.252045,383.485992 399.903137,384.940308 397.973755,387.234558  C396.490540,388.998322 395.568939,391.199097 393.352631,392.836914  z\"})),_path2472||(_path2472=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F66657\",opacity:1,stroke:\"none\",d:\" M498.962708,503.415802  C498.047485,500.353638 495.990173,499.352509 493.340210,498.959351  C489.953674,498.456879 487.566589,496.438812 488.166473,492.927124  C488.730438,489.625793 489.572601,486.269592 494.395233,485.899170  C504.777100,485.101776 515.105042,484.489258 525.719116,486.702820  C526.065125,489.534119 523.935242,489.340179 522.492004,489.382721  C518.023804,489.514282 513.616150,490.526550 509.075226,489.882233  C506.039886,489.451538 501.349213,488.885010 500.796814,492.175751  C500.193726,495.768250 505.099030,495.848022 507.872437,496.742950  C517.288696,499.781342 526.252380,496.624847 535.099792,493.978577  C538.294373,493.023132 541.397827,491.533752 544.708313,491.866730  C550.098267,492.408813 554.861694,491.149414 559.253845,487.946411  C557.057922,487.943512 554.831360,488.362396 552.617920,488.184204  C550.263367,487.994720 547.851685,487.737427 547.592163,484.269135  C549.205505,482.322174 551.217346,482.136597 553.574219,481.910828  C555.268066,482.070160 556.617920,482.351257 558.152466,481.308228  C559.976685,480.789429 561.380432,481.206909 563.137024,481.772491  C566.653503,482.907593 571.233215,482.462982 571.439331,487.111145  C571.632629,491.472443 567.866516,493.467804 564.442993,495.272644  C560.860901,497.161072 556.916321,498.231140 555.151062,502.809143  C554.020630,505.740814 549.758972,503.470886 547.181519,505.624512  C542.685059,506.290558 538.820923,508.128418 534.873596,508.871887  C524.997437,510.732086 514.888428,511.868164 504.842743,509.954865  C501.819183,509.378998 499.688843,507.035645 498.962708,503.415802  z\"})),_path2473||(_path2473=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FD7367\",opacity:1,stroke:\"none\",d:\" M547.724243,483.862488  C548.477051,486.339935 550.232056,486.892639 552.122742,486.883606  C554.227783,486.873474 556.331543,486.538971 558.435486,486.342072  C560.154968,486.181152 562.787842,485.013336 563.232422,487.046600  C563.754822,489.435913 561.133972,489.951385 559.058350,490.014923  C557.383118,490.066223 556.418274,491.251556 555.239868,492.147949  C553.308594,493.617096 551.328430,494.125671 548.747070,493.519989  C544.926331,492.623535 541.163391,493.560638 537.413330,494.839905  C525.499268,498.904175 513.540955,502.279480 501.156891,496.129761  C499.293823,495.204559 497.998199,494.596008 498.020386,492.398865  C498.043365,490.122864 499.415619,489.522522 501.386719,488.861786  C507.556335,486.793579 513.864380,489.722717 520.020874,488.046936  C521.738464,487.579407 523.613525,487.690765 525.718140,487.253876  C526.457703,486.970520 526.895447,486.969910 527.661804,486.966583  C530.030823,487.190643 531.916504,486.406372 534.172729,485.950378  C535.315186,485.585663 535.988953,485.045258 536.990723,484.413177  C537.921204,484.039734 538.578918,483.966888 539.579590,484.007324  C541.823181,484.596283 543.720642,484.934204 545.826965,483.539795  C546.609192,483.383179 547.054626,483.449493 547.724243,483.862488  z\"})),_path2474||(_path2474=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D04736\",opacity:1,stroke:\"none\",d:\" M540.397156,485.043030  C539.282104,485.070923 538.554260,485.079895 537.462891,485.115326  C536.524475,485.557434 535.948853,485.972076 534.973999,486.412354  C533.931213,486.828613 533.246033,486.674530 532.317383,486.157532  C530.381104,482.019989 530.135620,479.004303 535.824219,479.127136  C536.839844,479.149078 538.351929,479.239441 538.690552,477.705780  C538.999512,476.306458 538.052063,475.582428 536.902161,475.101288  C533.986816,473.881470 533.781555,471.584167 534.384460,468.628387  C538.882019,471.342010 543.574829,471.584961 548.228577,469.920654  C551.268127,468.833588 554.194092,468.569427 557.365906,468.956268  C560.511841,469.339935 563.755371,469.259155 566.475403,467.243500  C568.728882,465.573547 570.978394,467.224121 573.602295,467.003387  C577.467285,466.664459 580.219543,468.794922 583.647888,469.897156  C581.353638,473.540649 577.322144,474.313965 573.486572,475.348816  C570.682617,476.105408 568.488281,477.194000 568.376709,480.865051  C566.986206,482.522064 565.224915,482.357269 563.314392,482.828979  C561.569397,482.623169 560.168091,482.346344 558.405273,482.083069  C557.375610,482.725433 556.566711,482.991302 555.339966,483.044800  C552.929749,483.382538 550.845154,483.694733 548.360962,484.059875  C547.535034,484.119415 547.108582,484.125946 546.362915,484.159363  C544.433044,485.360382 542.557739,484.872589 540.397156,485.043030  z\"})),_path2475||(_path2475=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E66D55\",opacity:1,stroke:\"none\",d:\" M498.551514,503.006836  C504.038574,511.520508 512.237000,509.322876 519.727417,508.852203  C522.996643,508.646820 526.082581,507.910767 529.470032,508.746979  C532.010376,509.374084 534.589783,507.793793 536.884949,506.444916  C539.831543,504.713226 542.917786,504.042419 546.637634,504.955566  C552.883301,504.326111 558.388794,501.147308 564.884827,502.619873  C566.189026,505.579651 563.949341,506.367371 562.366455,507.382751  C556.896912,510.891418 550.747070,512.095886 544.368530,512.485657  C541.911255,512.635742 539.357971,511.976440 536.648193,513.470398  C535.737610,513.846802 535.187317,513.957458 534.200806,513.982666  C529.501587,513.287170 525.397827,514.718567 521.204224,515.061523  C518.269043,515.301697 515.364929,515.823120 512.009644,515.355469  C500.813782,512.911743 490.820709,507.767670 479.821320,506.064636  C478.149475,505.805786 476.768890,504.770874 475.650665,503.508545  C472.998779,500.514954 470.043671,497.936829 466.519440,495.972504  C464.806641,495.017822 463.087128,493.787659 463.798492,490.986206  C464.778625,490.235657 465.555237,490.196899 466.681213,490.739014  C467.159821,492.378387 467.993530,492.980957 469.337494,492.985260  C470.875977,492.990173 472.472290,493.302216 473.393005,494.481628  C479.808319,502.699188 489.229034,502.024353 498.551514,503.006836  z\"})),_path2476||(_path2476=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D04736\",opacity:1,stroke:\"none\",d:\" M467.250427,490.698792  C466.254669,490.991150 465.502625,490.997559 464.375275,491.024597  C460.981201,491.902374 458.101654,491.710419 455.173950,489.605164  C454.709961,488.784943 454.749390,488.290466 455.307007,487.549713  C459.008240,485.215515 462.905396,485.688965 467.463501,485.271545  C464.149200,483.965027 461.488739,485.428345 458.609070,484.716370  C457.298523,483.911407 457.272400,482.979828 457.720367,481.637085  C458.046265,481.124298 458.203308,480.938751 458.647827,480.533936  C460.167786,479.664185 461.618774,479.458221 463.000732,478.295776  C463.992126,477.813385 464.700195,477.619629 465.811005,477.460999  C470.835144,476.039398 474.977570,472.240265 480.682648,474.694763  C484.434814,476.892578 489.282440,476.584961 490.632874,481.901337  C491.131744,483.865204 492.014465,484.330322 489.410248,485.113342  C483.252563,486.964844 477.497803,490.333984 470.648010,489.151001  C469.697723,488.986877 468.550323,489.964020 467.250427,490.698792  z\"})),_path2477||(_path2477=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08061\",opacity:1,stroke:\"none\",d:\" M484.157410,470.176025  C484.811615,466.181122 488.549957,466.737915 490.846130,465.996674  C498.782745,463.434540 506.693115,460.063416 515.690552,461.727173  C511.725677,463.005554 507.516602,464.345184 503.205383,464.923187  C497.162933,465.733307 491.266113,466.694611 486.055908,470.621277  C485.426453,470.784454 484.876709,470.602570 484.157410,470.176025  z\"})),_path2478||(_path2478=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M480.992310,474.572357  C475.688568,474.270966 471.248657,476.807892 466.298431,478.841248  C464.743408,476.472717 466.489258,475.459930 468.132202,474.789124  C469.785553,474.114075 471.448578,473.356567 473.618561,472.983765  C475.089722,472.647583 476.176331,472.341980 477.600128,471.982239  C478.661835,471.402100 479.444244,471.203369 480.655212,471.756714  C480.992218,472.739624 480.989655,473.473114 480.992310,474.572357  z\"})),_path2479||(_path2479=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F66657\",opacity:1,stroke:\"none\",d:\" M531.697876,485.935577  C532.802673,485.907043 533.538391,485.912140 534.643066,485.912445  C535.138489,486.095978 535.265076,486.284271 535.203125,486.755981  C532.848267,487.672943 530.649475,487.804504 528.205322,487.214722  C528.867554,485.841339 530.138672,486.040955 531.697876,485.935577  z\"})),_path2480||(_path2480=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08061\",opacity:1,stroke:\"none\",d:\" M481.110779,471.750946  C480.230865,471.997406 479.466888,471.988708 478.320129,471.954071  C478.456879,470.052063 479.554291,469.066101 481.805542,469.779236  C481.746765,470.505859 481.486755,471.000824 481.110779,471.750946  z\"})),_path2481||(_path2481=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M494.313904,440.027649  C486.625092,442.160950 482.079559,438.987976 478.770660,432.506744  C477.648895,430.309540 475.401031,428.563995 473.672058,426.641815  C471.617798,424.357971 468.907257,421.855865 465.341339,425.201630  C464.258514,426.217560 462.447968,426.677338 460.220612,426.387726  C463.028595,417.638824 466.770660,409.695190 475.324280,405.628448  C479.369446,403.705231 480.043854,399.817352 482.148071,396.865112  C483.611633,394.811676 485.605560,392.933167 486.469177,390.393921  C486.665985,389.815247 487.247528,389.013336 487.740173,388.944427  C492.460571,388.284363 497.189667,387.606384 501.940002,387.289795  C503.364014,387.194885 504.279510,388.895203 503.854187,390.256927  C503.076111,392.748016 502.154297,395.440002 499.034332,395.917389  C496.916870,396.241425 494.687683,395.928772 492.603638,396.360474  C485.412872,397.850037 481.756317,403.404480 478.472717,409.228699  C477.156677,411.562958 478.624878,413.544647 480.185883,414.983337  C482.424683,417.046692 484.043030,414.954956 485.824402,413.303375  C488.510681,408.945435 492.370972,407.600403 496.457520,409.759857  C496.608154,411.503479 495.578827,412.385254 494.816345,413.772827  C494.410889,414.208160 494.228088,414.359528 493.728516,414.664124  C492.972748,414.946594 492.526459,415.039307 491.745911,415.115021  C490.097626,415.108276 488.993195,415.696320 487.633514,416.531128  C485.039795,418.728851 484.226776,421.948486 481.073853,423.507507  C478.799255,424.632263 480.082489,427.261017 481.521362,428.493103  C488.955841,434.858948 499.239563,437.731354 505.977966,427.126831  C507.988678,423.962555 510.887024,423.501068 514.148438,425.215118  C515.464600,425.906769 516.495728,427.043427 518.166382,427.848145  C518.849487,428.307526 519.187012,428.632141 519.668152,429.295441  C519.833069,432.524231 523.439880,432.821381 524.005859,435.656281  C523.992432,436.442230 523.992737,436.890533 523.989197,437.675232  C521.965637,438.050323 520.824768,435.767456 518.360840,436.016724  C515.778687,436.575775 514.768982,433.933502 512.360229,434.014343  C510.339294,434.190460 509.559418,435.594971 508.228638,436.770477  C505.710815,439.147675 503.249817,440.845154 499.425537,440.005005  C497.542023,440.111694 496.084290,440.076508 494.313904,440.027649  z\"})),_path2482||(_path2482=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M534.198853,440.235687  C535.323975,439.767059 536.125793,436.125946 538.004211,439.691956  C536.766785,439.836823 535.716614,441.169067 534.198853,440.235687  z\"})),_path2483||(_path2483=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M524.065186,439.334167  C525.170715,439.163696 526.342224,439.327362 527.758179,439.750305  C526.592163,441.256866 525.262512,441.587585 524.065186,439.334167  z\"})),_path2484||(_path2484=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C8734E\",opacity:1,stroke:\"none\",d:\" M533.615234,513.010742  C534.443542,512.995911 534.884583,512.994263 535.656494,512.992676  C539.548889,511.221985 543.379578,512.729248 547.114258,512.058167  C552.421997,511.104462 557.789062,510.175812 563.600403,509.936707  C565.332764,511.376770 568.106567,508.746613 568.648865,511.291595  C569.199402,513.875916 566.935669,515.593872 564.993713,516.652344  C562.439331,518.044556 560.312866,519.629578 559.018250,522.628296  C558.503479,523.578491 557.860596,523.795044 556.793579,523.778015  C555.016235,523.407532 554.139221,521.757690 552.130737,522.071411  C551.391663,522.183228 550.966492,522.243286 550.214722,522.339539  C548.995728,522.405762 548.136475,522.598816 546.971313,522.995361  C542.349365,523.366028 538.231750,524.681946 533.677002,525.384644  C532.940002,525.664856 532.501770,525.739258 531.732910,525.692261  C530.170471,525.322327 529.675964,523.941589 528.188721,523.521423  C527.521118,523.458984 527.136658,523.453674 526.460938,523.485107  C525.346497,523.663086 524.718079,524.238342 523.631042,524.610229  C522.829834,524.711853 522.367859,524.645630 521.583496,524.343201  C519.843750,522.716248 517.093628,522.046204 517.625671,519.407410  C518.194397,516.586365 520.863098,515.817383 523.230164,515.264404  C526.553345,514.488098 529.911011,513.843140 533.615234,513.010742  z\"})),_path2485||(_path2485=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A55135\",opacity:1,stroke:\"none\",d:\" M568.431396,481.143433  C565.972229,477.383514 567.207031,475.093353 571.009644,474.630096  C575.518127,474.080811 579.029724,470.796173 583.767456,470.287109  C585.731812,470.754913 587.292603,472.007385 589.683105,471.918884  C590.478210,471.923920 590.909485,471.954163 591.665405,471.986572  C595.041931,472.797974 597.948364,473.949188 600.594055,475.696014  C602.250000,476.789337 603.176880,478.312897 602.853210,480.324310  C602.537781,482.284637 601.436401,483.639526 599.375427,484.051208  C597.093323,484.507050 595.188843,486.067291 592.420715,486.304565  C589.174316,485.607147 586.208435,485.155182 584.518066,481.925415  C586.489624,478.551392 589.110474,480.162384 591.567078,480.570740  C593.008728,480.810303 595.052185,481.349121 595.361511,479.616241  C595.680542,477.829041 593.484009,477.758270 592.122314,477.460480  C588.361938,476.638336 585.727783,478.529327 583.338867,481.563416  C578.283447,484.684113 573.570129,481.666931 568.431396,481.143433  z\"})),_path2486||(_path2486=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M564.054016,509.675537  C561.641785,512.957153 558.054688,512.267578 555.179810,512.263611  C549.029419,512.254883 543.005005,515.195984 536.396179,513.008057  C537.057373,509.660583 539.870605,511.087097 541.896362,511.074158  C550.367615,511.020172 558.190125,509.196747 564.940552,503.348145  C565.280090,501.530365 566.401611,500.753601 567.567444,500.116333  C573.260193,497.004456 579.141479,494.215240 584.077515,489.867004  C585.103455,488.963257 586.492615,488.786987 588.456909,489.594604  C588.597961,494.508636 584.203186,494.878174 581.647644,497.151001  C576.293762,501.912567 569.165588,504.130096 564.054016,509.675537  z\"})),_path2487||(_path2487=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M591.658081,485.386292  C594.279297,484.440674 596.573303,483.574951 598.940857,483.026611  C600.673950,482.625183 601.429260,481.530670 601.756836,480.034027  C602.136414,478.299957 600.949341,477.254608 599.695068,476.458069  C597.363892,474.977692 594.481506,474.505066 592.195923,472.263458  C597.793091,470.916779 602.150696,474.306427 605.789307,477.677979  C609.067261,480.715302 604.607239,484.201782 602.897644,484.434814  C597.868469,485.120331 594.405212,488.842010 589.400269,489.981842  C589.041016,490.040192 589.003052,490.001984 588.984436,489.982544  C587.674316,487.360657 589.581177,486.515900 591.658081,485.386292  z\"})),_path2488||(_path2488=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08061\",opacity:1,stroke:\"none\",d:\" M555.793091,523.339661  C556.748779,522.968567 557.489014,522.974792 558.598389,522.977722  C559.420410,522.981873 559.873230,522.989319 560.665527,522.998413  C560.743347,523.495483 560.481750,523.990967 560.106445,524.742798  C559.102844,525.999878 557.995667,526.093018 556.407227,525.552979  C555.648010,524.862000 555.498230,524.321167 555.793091,523.339661  z\"})),_path2489||(_path2489=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M519.194458,430.289124  C518.832275,429.712646 518.640869,429.469238 518.186768,429.155212  C516.556274,427.163177 515.218384,425.252167 515.513672,422.367279  C516.185852,421.423859 516.873718,421.203552 517.991699,421.221985  C519.908875,421.821625 521.255859,423.423309 523.524536,422.219666  C528.178467,422.384216 532.279053,421.787598 536.100464,419.545959  C537.930420,418.472473 540.016724,417.928192 542.549500,418.416199  C544.720581,420.469086 543.576172,422.166412 542.520508,423.899750  C541.600342,425.410522 539.917053,426.458008 539.686707,428.382599  C540.415527,428.879547 541.174561,428.662964 541.596863,428.268829  C546.091248,424.073669 550.713867,425.043701 555.714478,427.398804  C559.457947,429.161804 563.546631,430.224426 567.777466,429.017120  C571.829529,427.860840 572.851868,425.875427 570.758057,422.280457  C568.984009,419.234558 570.493713,415.635956 568.458557,412.395935  C568.245789,411.812347 568.188049,411.565857 568.126343,410.933136  C569.475586,406.920502 571.652588,407.967194 573.861450,409.577454  C576.153015,411.247955 576.326782,414.081390 577.735840,416.679932  C580.791748,417.993317 581.144531,419.494324 579.924805,422.325043  C577.066895,428.957550 571.800964,432.416656 565.372620,434.672913  C564.203308,435.083313 563.007324,435.091095 562.011047,434.440887  C557.586487,431.553253 552.423828,431.996765 547.578979,431.530304  C544.218750,431.206787 541.273682,433.573944 538.350708,435.897461  C537.240356,435.171783 536.400940,434.878754 535.205444,435.777252  C533.168518,436.168732 531.444031,435.731628 529.372253,435.061646  C525.120300,435.009247 521.828979,433.749603 519.194458,430.289124  z\"})),_path2490||(_path2490=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M578.045532,416.615051  C575.655334,416.874084 575.390564,415.176178 574.822205,413.349091  C573.778259,409.993683 571.948303,409.187256 568.992920,410.628815  C567.796631,412.175842 566.463440,411.556915 564.869019,411.345642  C563.724792,411.173187 562.932312,411.280304 561.905457,411.843933  C558.712463,413.138977 555.787598,414.230438 552.394043,414.900513  C551.260010,415.014862 550.429443,415.004517 549.408508,415.563599  C548.951477,415.821045 548.765442,415.923340 548.288208,416.164001  C546.169250,416.713074 545.447632,418.766144 543.333191,419.122162  C538.387878,419.073212 534.980713,422.549194 530.576965,423.412872  C528.169861,423.885010 526.027527,424.010315 523.412720,423.034973  C522.036377,422.954620 521.327209,422.385559 520.407166,421.510010  C519.903320,420.853882 519.713440,420.422516 519.609741,419.599121  C519.754883,419.028320 519.879761,418.819611 520.301880,418.396667  C530.767456,418.397247 538.804871,412.674835 547.739319,408.365540  C558.014343,404.955566 568.046204,403.292816 578.668640,406.826355  C579.552612,407.175079 580.097839,407.354675 580.820374,407.767242  C580.029175,410.750854 579.060669,413.501434 578.045532,416.615051  z\"})),_path2491||(_path2491=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E66D55\",opacity:1,stroke:\"none\",d:\" M518.972717,430.386597  C522.149963,431.500702 525.337036,432.997467 528.759338,434.753143  C527.826599,436.386017 526.224304,435.884613 524.377563,435.993103  C522.979187,433.622528 518.380859,434.688873 518.972717,430.386597  z\"})),_path2492||(_path2492=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E66D55\",opacity:1,stroke:\"none\",d:\" M535.372681,435.988342  C535.551941,434.006958 536.386108,433.240662 537.940796,435.639587  C537.253723,435.969269 536.501282,435.980896 535.372681,435.988342  z\"})),_path2493||(_path2493=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E79B75\",opacity:1,stroke:\"none\",d:\" M578.958130,406.634705  C577.825562,408.268036 576.911011,408.755463 574.891235,407.775543  C571.371155,406.067749 567.547363,405.539886 563.439575,406.577972  C558.659607,407.785889 553.687012,408.231079 548.399658,409.009735  C545.942810,410.412720 543.888550,411.988281 541.597656,408.792297  C542.473145,404.625763 545.349426,401.504089 545.452393,397.006653  C544.257141,391.857483 541.536133,388.224060 538.321899,384.425690  C532.725769,377.812378 529.879517,369.637024 532.427307,360.844452  C533.595276,356.813690 533.709351,352.982483 532.977905,349.093170  C532.428833,346.173340 531.403748,343.344238 531.247131,340.328186  C531.144531,338.353577 530.008606,336.907318 528.472290,335.807251  C525.980896,334.023285 525.636292,331.886963 527.411987,329.025024  C528.242065,327.696045 528.671692,326.602966 528.429016,325.407288  C526.998535,318.357758 526.384277,311.122070 523.533386,304.392517  C523.025757,303.194244 522.192627,302.568542 521.158020,302.024567  C518.779358,300.773956 518.632874,298.713745 519.241699,296.469391  C519.833923,294.286560 520.901184,292.264496 523.420715,292.114471  C530.257629,291.707397 534.328491,286.465027 537.071533,281.859283  C540.143921,276.700470 544.532227,275.420959 549.404541,273.477173  C551.607483,275.030914 550.371155,276.832214 550.230713,278.873596  C550.053528,279.484100 549.962341,279.722382 549.688354,280.297058  C548.772949,281.683167 547.830444,282.534668 546.600586,283.634766  C546.090942,284.014465 545.878784,284.155273 545.331543,284.474335  C539.744629,293.048889 533.653564,301.104309 534.488159,311.871490  C534.907227,317.277832 533.431763,322.816772 535.743774,328.467743  C535.938477,330.352905 536.447266,331.823486 536.342773,333.722656  C535.335327,337.476105 538.865784,339.984253 538.063599,343.662750  C539.783386,350.094696 542.011230,356.067200 542.699219,362.454926  C542.986938,365.126282 543.099365,367.532379 541.733704,370.118317  C540.297852,372.837189 540.305908,375.900757 542.853210,378.348328  C545.599121,380.986694 546.129700,384.914642 548.877136,387.798889  C551.925476,390.999084 555.232483,392.924438 559.254456,394.025024  C563.349365,395.145569 567.484253,395.735748 571.444702,397.755402  C575.343079,399.743378 578.002380,402.032867 578.958130,406.634705  z\"})),_path2494||(_path2494=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DB926C\",opacity:1,stroke:\"none\",d:\" M538.312866,343.949066  C536.847656,341.141113 535.697693,338.282227 534.780029,335.212433  C536.008301,334.152832 536.877319,334.478333 537.844238,335.645264  C537.824585,338.021179 538.816895,339.671173 539.856384,341.673462  C539.900879,342.885803 539.630737,343.656403 538.312866,343.949066  z\"})),_path2495||(_path2495=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FB9E83\",opacity:1,stroke:\"none\",d:\" M605.356567,423.101105  C603.129761,421.737854 597.891235,422.610687 601.675964,417.699097  C601.948853,417.344910 601.194580,416.244293 600.992065,415.471283  C599.931335,411.424561 599.560059,407.533783 603.464905,404.600250  C605.892700,402.776337 604.850159,400.521667 604.273499,398.262970  C603.862488,396.652893 603.619507,394.924316 605.157349,393.657806  C606.748596,392.347229 607.840820,394.031982 609.026672,394.649017  C610.373352,392.921753 607.630676,390.568512 609.925964,389.620880  C611.513855,388.965332 612.453003,390.930878 613.399719,391.951782  C614.747437,393.404999 616.282104,391.859894 617.797241,392.770935  C620.089783,396.993042 623.431885,400.716522 620.644165,405.743958  C620.334961,406.301514 620.489136,407.039062 620.616638,407.695038  C621.011169,409.725952 622.676331,411.866852 620.875061,413.791901  C618.440613,416.393463 616.598755,419.811432 612.661133,420.617493  C610.206970,421.119843 608.072144,422.457214 605.356567,423.101105  z\"})),_path2496||(_path2496=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F99C80\",opacity:1,stroke:\"none\",d:\" M605.216919,423.268616  C606.319885,421.859039 607.010437,419.827026 609.237061,419.966431  C614.396545,420.289459 616.481567,415.686188 619.946228,413.294525  C620.079590,413.202454 620.302429,412.994141 620.281799,412.959320  C617.739258,408.658752 620.554626,404.060364 619.558899,399.839813  C619.096680,397.880646 617.900146,396.005890 618.001831,393.403442  C620.726379,392.344757 622.699524,391.251892 622.499207,396.232666  C622.339966,400.191681 626.873840,402.856812 630.069519,405.387573  C633.704712,408.266418 633.823853,409.446625 629.615173,411.493713  C625.808960,413.345001 624.427429,416.718994 623.000000,420.600250  C620.165222,421.642822 618.401367,423.303589 618.008911,426.629456  C616.452454,429.239532 614.414062,429.373322 612.590149,427.678375  C610.479614,425.717072 607.748230,425.028473 605.216919,423.268616  z\"})),_path2497||(_path2497=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M557.670288,529.767578  C560.723145,529.665710 563.443848,529.333862 566.582275,529.002197  C568.284912,530.248535 570.076294,530.592224 571.762329,531.770264  C572.307739,532.119263 572.563904,532.312561 572.884277,532.789978  C573.956970,534.637024 575.502380,536.111023 574.221313,538.645752  C573.693115,539.120300 573.437683,539.313721 573.118042,539.790344  C571.484009,545.160767 567.943970,547.365295 562.666260,547.600342  C558.147034,547.801575 554.722717,550.597290 551.312500,553.275818  C548.172058,555.742432 544.988220,558.205994 540.276245,557.558472  C538.104797,554.849060 539.729370,553.031250 541.284790,551.271606  C547.562744,544.169434 547.552368,542.693542 541.068054,535.696655  C540.730774,535.332703 540.575134,534.839172 540.436768,533.971924  C541.426208,530.410339 544.432434,529.964355 546.774841,530.111877  C550.370239,530.338318 553.816956,529.584473 557.670288,529.767578  z\"})),_path2498||(_path2498=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M539.683777,556.770020  C544.400085,555.850464 548.142456,554.306030 551.585938,550.615356  C553.304077,548.773926 557.088806,545.651428 560.981934,546.064331  C566.208130,546.618591 569.890137,544.702026 572.656738,540.069824  C574.067993,546.730225 572.858093,548.220825 565.932068,550.251770  C560.812866,551.752991 555.543579,553.213318 552.903931,558.796265  C552.347900,559.972290 550.616821,560.592773 549.216003,561.734619  C544.194214,562.823853 539.414795,563.338013 534.635498,564.889282  C530.649658,566.183044 525.898010,565.922180 521.251099,566.258179  C520.757751,562.521179 523.948792,562.414185 525.876587,561.208252  C529.988525,558.636108 534.704468,557.635071 539.683777,556.770020  z\"})),_path2499||(_path2499=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M555.687744,524.740540  C557.063049,524.990845 558.128601,524.994202 559.593384,524.998413  C560.491638,525.258667 560.990601,525.518127 561.747314,525.891235  C561.796997,527.998535 560.223877,528.437134 558.343628,528.956177  C548.392639,530.759155 538.636047,530.999512 528.538940,531.952393  C527.308655,532.199646 526.481262,532.160583 525.256348,531.910156  C523.261902,530.498413 521.548645,531.118774 519.758423,531.286133  C517.041504,531.540039 514.199829,532.151001 511.313110,530.259277  C510.156250,528.482300 507.728821,529.604858 507.307617,527.047974  C508.189056,525.941711 509.015472,525.484070 509.790588,525.628784  C517.368469,527.043152 525.066711,524.114685 532.615234,526.291870  C533.444641,526.531067 534.243408,526.364746 535.281128,525.629761  C536.102356,525.231018 536.606079,525.113220 537.511230,525.094360  C542.910828,526.627136 547.700378,525.657166 552.795044,523.762939  C553.988159,523.777100 554.725647,524.011169 555.687744,524.740540  z\"})),_path2500||(_path2500=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F09576\",opacity:1,stroke:\"none\",d:\" M527.871216,531.350342  C530.112549,529.075012 532.808960,529.885132 535.111633,529.924316  C541.524597,530.033447 547.774048,529.151733 554.041199,528.058411  C555.111938,527.871643 556.291321,528.307556 557.710205,528.725464  C558.000244,529.162170 558.000549,529.329285 558.001709,529.746948  C554.848206,531.285461 551.898438,532.591064 548.148438,531.440674  C546.091431,530.809631 543.277405,531.471741 541.182983,533.684021  C540.662903,534.346802 540.263977,534.587708 539.439209,534.720337  C536.685181,534.100281 534.374023,532.790649 531.407959,533.822754  C530.570618,533.908508 530.090149,533.869385 529.267883,533.643555  C528.272827,533.074646 527.880554,532.471130 527.871216,531.350342  z\"})),_path2501||(_path2501=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M574.294861,538.847168  C573.674622,537.255005 573.346802,535.511963 573.010742,533.385742  C575.596191,534.325500 578.927734,535.443176 574.294861,538.847168  z\"})),_path2502||(_path2502=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M571.932251,531.653259  C570.034241,531.948975 568.147522,531.738831 567.066284,529.346436  C568.963745,529.050781 570.852417,529.257507 571.932251,531.653259  z\"})),_path2503||(_path2503=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M434.000305,482.403076  C433.704742,481.238708 433.630554,480.073120 433.085449,479.778381  C427.299194,476.649384 428.716675,471.236145 429.232117,466.535248  C429.891907,460.517212 431.964935,454.876312 437.779755,451.633179  C439.254852,450.810516 440.671326,450.094849 441.111023,448.205170  C441.705719,445.649353 443.437958,444.264526 446.068878,444.022980  C447.045410,443.933380 448.119293,444.026001 448.702942,442.974976  C449.471832,441.590485 450.109222,439.144745 452.066650,440.597229  C453.657471,441.777679 451.395264,443.454102 451.023651,444.956848  C449.066345,452.871735 443.510498,459.313293 441.784241,467.295135  C440.345154,473.949127 442.248718,476.117401 448.847076,476.123779  C450.304932,476.125214 451.762299,476.680695 453.615173,476.995056  C455.013245,478.211731 454.297211,479.164886 453.530518,480.075165  C452.888824,480.837097 452.021820,481.400482 451.435242,482.202026  C449.854614,484.361969 447.935089,486.858276 448.691833,489.393280  C449.526794,492.190186 452.793488,491.008423 454.866150,490.977325  C463.410065,490.849365 468.513916,496.803802 473.060455,502.231415  C478.725677,508.994415 485.412842,513.675537 493.284027,516.946594  C497.134796,518.546753 500.684753,520.697266 504.495728,522.346069  C506.174347,523.072388 507.768829,524.131226 507.220764,526.715088  C507.002441,526.997559 506.996063,527.003723 506.989136,527.010376  C503.228119,527.105469 499.714874,526.533020 497.016846,523.549561  C496.213074,522.660706 495.279175,522.053101 493.943817,522.523926  C490.950623,523.579224 489.065247,520.913940 487.000793,520.359985  C481.134918,518.785950 478.200836,514.370056 474.237701,510.883240  C473.772430,510.473846 472.954498,510.007904 472.467621,510.148468  C464.179321,512.541382 460.879669,505.257019 456.106720,501.375336  C450.530609,496.840454 450.018097,496.500427 445.840790,502.269958  C444.688385,503.861542 443.613129,505.849945 441.347137,505.775024  C438.920135,505.694763 439.102539,503.227051 438.345947,501.693604  C435.412201,495.747253 436.348358,488.897858 434.000305,482.403076  z\"})),_path2504||(_path2504=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F99C80\",opacity:1,stroke:\"none\",d:\" M528.666992,532.993713  C529.442749,533.003296 529.887024,533.004089 530.664429,533.005981  C533.396362,533.641846 535.987122,532.841858 538.658264,533.993286  C539.443542,534.000000 539.888245,534.000000 540.666504,534.000000  C543.787659,535.977539 546.225830,538.015015 547.263550,541.668945  C548.254333,545.157654 547.600342,547.723999 545.027039,549.945435  C542.942505,551.744995 540.303772,553.055847 540.010498,556.628906  C534.032715,560.346619 526.880310,561.073608 521.170532,565.692871  C520.554993,565.996765 520.110168,565.995972 519.331665,565.993469  C514.248047,564.259888 509.654388,562.243469 504.309387,564.246399  C501.718903,565.217102 498.551239,564.502869 496.107422,563.376282  C489.169769,560.178284 481.670929,559.070251 474.461700,556.916321  C470.556396,555.749451 469.665375,552.929626 472.421783,550.006470  C474.344208,547.967712 475.551239,545.778137 474.468750,542.812622  C473.566589,540.341125 473.636810,538.368591 477.029144,537.703308  C479.085999,537.299927 479.329865,535.384888 478.291504,533.710938  C476.439636,530.725586 476.470306,526.436646 472.284668,525.024231  C471.477448,524.751831 470.960114,523.950745 471.372681,523.006897  C471.791321,522.049072 472.664703,522.083435 473.487244,522.331299  C475.077087,522.810364 476.694977,523.242981 478.217407,523.891663  C488.505585,528.275024 499.899261,528.708069 510.619934,532.941101  C511.387787,532.632446 511.842804,532.468262 512.712280,532.637268  C514.202515,536.299622 511.869476,536.795715 509.355469,536.745605  C506.191742,536.682556 503.034149,536.314941 499.926208,537.219971  C497.667297,537.877686 495.335754,538.533325 494.124298,540.770020  C492.651703,543.488892 490.770111,545.145447 487.414856,544.905945  C485.133698,544.743164 485.114502,546.380859 485.780945,547.981384  C487.058624,551.049927 489.489441,553.325073 492.290741,554.650024  C501.160461,558.845398 510.479370,559.323547 519.927551,556.794128  C523.370056,555.872437 526.437988,554.958984 528.477417,551.066040  C530.306030,547.575623 535.064941,547.806580 539.339111,547.437012  C538.105774,545.135986 536.054382,543.980957 535.458252,541.852173  C534.872070,539.759033 533.303284,539.086426 531.216309,539.236023  C528.389526,539.438721 525.547546,539.208496 522.736328,539.061035  C519.122009,538.871460 515.724854,537.881531 515.768921,532.903381  C517.029724,531.779419 518.243530,531.676941 519.862671,531.904724  C522.723511,533.903748 525.484375,533.808777 528.666992,532.993713  z\"})),_path2505||(_path2505=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F7957B\",opacity:1,stroke:\"none\",d:\" M446.762634,433.741882  C445.140106,438.327148 442.686188,441.693115 438.574127,444.742126  C432.768951,449.046509 427.904968,455.013611 424.475159,461.580078  C422.571320,465.225067 424.513367,469.504028 425.527496,473.180298  C426.284760,475.925354 427.055878,478.888367 428.734741,481.752502  C429.885315,488.173248 433.206818,493.817291 432.979279,500.224762  C432.940704,501.310272 433.493195,502.780823 432.120544,503.329315  C430.749115,503.877258 430.114532,502.526550 429.420013,501.660004  C428.713531,500.778473 428.272064,499.107178 427.022980,499.447235  C422.994049,500.543976 422.705933,498.858521 423.742706,495.675537  C423.859314,495.317627 423.159760,494.283997 422.749878,494.229309  C419.434082,493.786865 418.336121,490.384949 415.344910,489.050049  C412.746124,483.576721 410.462158,478.170227 409.487885,472.305176  C409.316498,471.273499 408.383911,470.321930 407.676849,469.433685  C404.825165,465.851379 401.933441,462.429108 402.512360,457.241974  C402.707001,455.497742 401.888824,453.012360 400.627441,451.844330  C395.649078,447.234436 396.374725,441.589600 396.993164,435.432495  C400.204224,433.617981 402.466980,436.053528 402.327087,438.101410  C401.893707,444.445953 406.430511,446.908752 410.453552,450.398438  C411.683929,452.821411 411.356934,455.288727 412.353455,457.413574  C413.334778,459.506134 414.998322,460.936127 417.259766,461.161469  C419.346680,461.369415 419.883606,459.324615 420.530609,457.911255  C424.070892,450.177612 431.476685,446.158813 437.144562,440.482025  C438.762787,438.861237 440.546783,437.528870 441.560028,435.313324  C442.472839,433.317383 444.261536,432.445831 446.762634,433.741882  z\"})),_path2506||(_path2506=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F09576\",opacity:1,stroke:\"none\",d:\" M513.347900,533.243652  C512.561829,533.007324 512.115967,533.002441 511.335632,532.993896  C511.000671,532.243896 511.000122,531.497559 510.999176,530.378052  C514.789490,529.834167 518.628662,530.483215 522.355774,529.164673  C523.312439,528.826233 524.345337,529.132202 524.916077,530.631226  C524.528320,532.685730 523.304382,533.302795 521.330505,533.162720  C519.605530,533.006775 518.213562,533.008606 516.403931,533.016418  C515.301086,533.583740 514.535156,533.735352 513.347900,533.243652  z\"})),_path2507||(_path2507=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FD9B8A\",opacity:1,stroke:\"none\",d:\" M410.257294,451.271515  C408.161530,449.898987 406.264709,448.870422 404.485870,447.667419  C402.360016,446.229767 400.278351,444.425629 401.146393,441.585175  C402.236298,438.018799 400.573547,436.331116 397.344543,435.047974  C395.513977,431.958496 397.745850,428.897888 396.960510,425.424957  C397.828796,419.223419 396.486145,413.221466 399.152924,407.564270  C400.013916,405.737793 398.625580,403.395386 397.566071,401.522186  C395.547241,397.952881 395.936462,394.935669 399.717163,392.391296  C401.364716,392.160645 402.848236,392.751709 403.955566,391.937378  C410.890137,386.837677 418.552856,389.203400 426.011780,389.730713  C428.429138,389.901611 430.636414,391.140747 433.283447,390.634857  C435.850922,390.144165 436.087128,392.256927 435.818695,394.591644  C434.026611,397.387329 433.356659,399.873779 434.462921,402.894348  C435.449097,405.586945 434.140350,406.937531 431.204346,406.807312  C424.478516,406.509003 421.805695,408.384338 419.529480,414.781006  C419.139160,415.877960 418.724091,416.967621 418.498718,418.110504  C417.720398,422.057251 415.217224,422.836792 411.825226,421.594940  C409.877991,420.882050 408.033264,420.394806 406.068573,421.383820  C404.570953,422.137726 402.919373,422.812103 403.087524,424.898865  C403.223450,426.586243 404.376587,427.789856 405.894287,428.025635  C410.701080,428.772308 412.331299,431.580231 412.747803,436.241394  C413.097992,440.160400 416.916260,442.425903 419.056946,445.520660  C419.663818,446.397949 421.016754,446.317108 421.697754,445.427155  C423.024109,443.693878 426.488708,442.671021 425.343964,440.141327  C423.286072,435.593842 427.106323,433.932983 429.185425,433.726105  C436.164764,433.031708 438.354401,427.191956 442.045502,423.056671  C444.566742,420.232117 446.336334,416.755463 448.240601,413.434814  C449.461212,411.306274 450.697540,408.915405 454.200989,409.840240  C455.998627,412.870941 455.468781,415.330231 453.185577,417.442230  C452.342590,418.222015 451.528412,418.971375 451.486145,420.610291  C451.470703,421.774841 451.314514,422.525757 450.914124,423.609619  C446.096344,429.803040 441.647827,435.818939 436.463165,441.250519  C434.610138,443.191833 432.961487,445.178497 430.252502,445.923737  C429.282562,446.190552 428.234955,446.821686 427.893585,447.650452  C425.670898,453.046082 419.774078,451.929718 415.914185,454.446838  C413.433960,456.064209 411.775238,453.566498 410.257294,451.271515  z\"})),_path2508||(_path2508=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M439.235535,380.729675  C432.258575,379.730865 425.426788,376.543121 418.805664,377.763916  C412.781006,378.874756 406.698700,378.092194 400.834259,379.634521  C395.138763,381.132477 394.028809,386.999542 390.257965,390.791443  C389.825958,390.994537 389.657745,390.993500 389.237000,390.987122  C388.964966,388.543060 388.859222,386.093414 389.948608,383.393005  C391.159271,381.774200 391.874878,380.285095 392.593201,378.788574  C394.129059,375.588654 396.462769,373.843597 400.195709,373.289459  C405.067688,372.566223 409.542908,370.017090 414.533569,369.513916  C415.021606,369.464691 415.533600,369.087799 415.971405,369.178375  C426.485962,371.353180 438.010681,366.219971 448.034607,373.875488  C448.725952,377.177521 446.369263,377.187439 444.579620,377.394501  C442.324829,377.655457 440.603058,378.487610 439.235535,380.729675  z\"})),_path2509||(_path2509=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F7957B\",opacity:1,stroke:\"none\",d:\" M400.359009,392.854858  C397.343872,395.660339 396.285126,398.657593 399.387756,401.495697  C401.318695,403.262024 399.197845,406.618988 402.267578,407.635529  C402.337830,407.658722 402.392944,408.023682 402.350983,408.047729  C395.547546,411.949432 400.864807,419.256256 397.805634,424.199951  C397.719055,424.339844 397.603729,424.461945 397.228027,424.797729  C395.894897,420.570801 394.746857,416.250824 392.395447,412.186401  C390.930206,409.653625 392.992340,407.001923 393.980560,404.356781  C394.540649,402.857605 390.081696,401.104126 390.900116,397.647369  C391.272125,396.076202 392.273376,395.067688 392.913452,393.368774  C396.115997,383.782928 399.280945,381.984344 408.970398,382.879791  C415.668640,383.498810 422.481812,382.419250 429.573669,384.000000  C431.038177,386.829529 428.787994,386.770081 427.160522,387.195648  C423.459106,388.163452 419.624817,388.117798 415.869568,388.192688  C410.323700,388.303223 405.128540,389.046387 400.359009,392.854858  z\"})),_path2510||(_path2510=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M460.363129,564.047485  C458.163849,561.951355 456.992950,559.975403 453.364410,559.309753  C450.391632,558.764404 446.524384,555.883179 444.268372,552.502075  C442.702240,550.154907 440.630615,548.262634 438.207092,546.268677  C442.801208,544.270630 444.867493,548.125061 446.771545,550.963745  C448.496155,553.534729 450.188080,554.507812 453.207367,555.282349  C458.093964,556.535889 462.381470,559.528992 464.953247,564.660706  C463.570496,564.703247 462.148376,564.399109 460.363129,564.047485  z\"})),_path2511||(_path2511=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M573.271729,283.550598  C570.826843,284.694214 570.403931,285.636383 572.770691,286.927155  C577.817566,289.679657 583.206665,289.372681 588.578247,288.567078  C590.423157,288.290375 592.103760,287.662292 593.848877,289.499084  C594.196289,289.997772 594.328735,290.198517 594.495056,290.759216  C593.573364,293.577820 591.292236,292.662231 589.174438,293.102112  C584.259094,292.137878 579.920776,294.617188 575.011353,293.914612  C571.888428,293.243164 569.165527,292.552460 566.629028,291.268311  C560.716248,288.274780 560.124451,283.518372 565.161560,279.200958  C565.907288,278.561737 566.906311,278.227539 567.640442,276.985779  C568.007996,276.439667 568.178894,276.236908 568.681763,275.812622  C571.064575,275.069153 571.866394,276.489807 572.817627,278.291748  C573.454529,280.144592 573.997620,281.629913 573.271729,283.550598  z\"})),_path2512||(_path2512=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M632.012207,272.571198  C626.296265,272.904724 620.498291,273.163361 614.745300,272.767822  C612.245422,272.595917 609.934814,272.758087 607.313110,273.541748  C604.304504,273.525726 601.551941,273.272156 598.388794,272.903870  C600.885437,269.758911 604.778687,269.735809 608.378662,270.102478  C614.568054,270.732880 620.564575,268.605225 626.770203,269.409454  C629.127258,269.714905 630.919189,269.976532 632.012207,272.571198  z\"})),_path2513||(_path2513=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M573.376221,283.839661  C572.704712,282.490234 572.360657,281.111847 572.009521,279.371155  C574.471497,275.974976 578.591309,275.417664 581.654419,272.622803  C582.455078,272.333038 582.935303,272.323151 583.750610,272.576172  C585.137817,272.752991 586.192261,272.778229 587.638550,272.740631  C588.127747,272.864166 588.225159,273.050537 588.171204,273.513641  C582.653809,276.281860 577.454163,279.011047 573.376221,283.839661  z\"})),_path2514||(_path2514=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M623.749512,286.666718  C618.297546,289.057098 612.449463,287.810333 606.320679,287.356689  C611.781311,285.702637 617.547241,283.887421 623.749512,286.666718  z\"})),_path2515||(_path2515=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M634.959595,290.665405  C632.813721,290.847443 629.937012,291.859253 629.855591,287.653687  C632.184814,287.148712 634.003967,287.971436 634.959595,290.665405  z\"})),_path2516||(_path2516=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M594.225464,291.227905  C594.008301,290.782928 594.016846,290.586334 594.044617,290.093384  C596.113281,289.506866 598.162781,289.216705 600.605469,288.991272  C600.792053,291.050201 599.174622,291.403046 597.343262,291.941620  C596.105896,292.042816 595.202271,292.146454 594.225464,291.227905  z\"})),_path2517||(_path2517=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M588.346741,273.811096  C588.028198,273.605804 588.036499,273.421234 588.037598,272.957214  C588.959106,270.382385 590.312073,270.634460 591.967590,272.344421  C591.977173,273.481812 591.377808,273.735107 590.325928,273.843231  C589.547058,273.828369 589.110291,273.830078 588.346741,273.811096  z\"})),_path2518||(_path2518=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M590.186035,274.108093  C590.493958,273.518585 591.004089,273.210449 591.796143,272.775330  C592.844055,272.793060 593.610168,272.937744 594.735474,273.239075  C593.786987,274.963409 592.288879,275.629700 590.186035,274.108093  z\"})),_path2519||(_path2519=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M617.027344,276.396942  C617.831970,276.225403 618.702881,276.360382 619.785767,276.756897  C618.890442,278.198090 617.900879,278.291229 617.027344,276.396942  z\"})),_path2520||(_path2520=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M638.912903,293.716431  C637.793701,293.993134 636.538391,294.111694 636.129028,292.232056  C637.252747,291.972229 638.437683,291.982666 638.912903,293.716431  z\"})),_path2521||(_path2521=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4B3E39\",opacity:1,stroke:\"none\",d:\" M626.130798,279.294708  C626.745300,279.019043 627.496887,279.007355 628.624146,279.006042  C628.999878,279.016418 628.999329,278.997528 628.991455,278.995911  C629.121582,279.154602 629.259644,279.314880 629.203735,279.726318  C627.853027,281.427429 627.060242,280.493958 626.130798,279.294708  z\"})),_path2522||(_path2522=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M602.835205,287.170258  C603.120300,287.624359 603.080322,288.053284 603.021362,288.808167  C602.532532,289.090363 602.062683,289.046570 601.248901,288.913269  C601.055298,287.896210 601.481995,287.233063 602.835205,287.170258  z\"})),_path2523||(_path2523=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M629.258545,279.998047  C629.009766,279.977448 629.000427,279.485870 628.991943,279.240112  C629.250122,279.202942 629.516663,279.411591 629.892456,279.854370  C630.001709,280.088562 629.507324,280.018616 629.258545,279.998047  z\"})),_path2524||(_path2524=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M582.671387,311.103638  C583.873962,310.065613 584.794373,309.327881 585.857971,308.330994  C588.701965,308.046906 591.402771,308.021973 594.553650,307.992645  C596.802124,308.128784 598.653076,307.685364 600.713989,308.695740  C601.469971,308.932007 601.905029,308.945953 602.666443,308.954559  C608.340820,311.569000 614.371765,311.822083 619.893127,313.827087  C621.867554,314.544067 624.127014,314.640991 625.579712,316.948364  C623.538330,318.609467 621.629517,317.913483 619.709839,317.460999  C613.931335,316.098785 608.147766,314.768921 602.307129,313.680817  C597.054382,312.702271 591.866943,312.061005 586.757568,314.333862  C585.502747,314.892059 584.182922,314.847931 582.636780,313.853638  C581.769348,312.843842 581.695068,312.112030 582.671387,311.103638  z\"})),_path2525||(_path2525=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9764E\",opacity:1,stroke:\"none\",d:\" M600.937927,308.571442  C599.197998,308.927795 597.333862,309.318634 595.279053,308.257141  C597.006714,306.656433 598.971436,306.266541 600.937927,308.571442  z\"})),_path2526||(_path2526=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BD6C42\",opacity:1,stroke:\"none\",d:\" M546.304443,346.230347  C543.266357,340.402374 540.275024,334.936279 539.136963,328.337158  C536.955627,325.837036 537.522522,323.216766 537.744751,320.286499  C540.543823,312.330688 545.387939,305.636597 546.906616,297.583466  C547.314453,295.420715 547.980103,293.367523 550.708618,292.449249  C554.338867,293.959229 557.461121,295.952881 561.678223,295.699219  C563.029785,295.925812 563.994690,296.208679 564.861816,296.691498  C568.596497,298.771088 568.803223,301.360596 565.264526,303.884735  C560.151306,307.532013 554.867981,310.930908 549.944397,314.855652  C545.498596,318.399567 543.557739,323.177216 544.573914,328.413177  C545.660950,334.014313 547.125549,339.766052 551.526978,344.501343  C551.952209,345.603912 551.969604,346.368866 551.571411,347.487244  C549.314880,349.092316 547.987244,347.661072 546.304443,346.230347  z\"})),_path2527||(_path2527=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C48355\",opacity:1,stroke:\"none\",d:\" M546.022705,346.333038  C547.771179,345.795898 549.143677,346.579437 550.694458,347.843384  C562.887390,353.056335 575.496887,355.903259 588.069397,360.057800  C591.175232,360.805786 593.968567,360.632996 596.711182,360.416626  C599.316101,360.211060 601.524353,360.871063 603.792053,362.684265  C602.984558,365.904999 600.002197,366.119446 598.386475,365.260681  C595.949280,363.965302 593.881165,364.316833 591.789490,365.037964  C585.243042,367.294952 579.485229,364.801025 573.693970,362.377136  C569.860901,360.772797 565.580994,360.204742 561.932434,358.673737  C555.846375,356.119904 549.263367,353.397125 546.022705,346.333038  z\"})),_path2528||(_path2528=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BE6B4D\",opacity:1,stroke:\"none\",d:\" M604.339966,363.011292  C599.026367,360.873474 593.659363,362.785187 588.297485,361.273132  C587.401367,360.234344 587.534302,359.487000 588.368713,358.493713  C592.132446,356.646393 595.559998,358.337250 599.001160,358.320129  C601.473328,358.307831 603.885193,358.915649 603.589355,354.652832  C603.322144,350.802856 606.882446,349.720428 612.702515,351.751160  C615.038269,351.997284 617.081360,351.999420 619.562256,352.001404  C621.552124,356.645782 616.832458,357.572723 615.041748,360.627808  C613.246399,361.323242 611.508240,361.660522 609.383789,362.001953  C608.386780,362.733887 607.571655,362.978333 606.331726,363.005127  C605.559875,363.013306 605.116211,363.010620 604.339966,363.011292  z\"})),_path2529||(_path2529=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DA9264\",opacity:1,stroke:\"none\",d:\" M539.099121,318.595520  C538.984314,321.691925 538.987427,324.391388 538.982422,327.539886  C537.208618,328.263397 536.942871,329.260925 537.413330,330.845978  C537.868408,332.378998 538.926086,333.800323 538.228516,335.770996  C537.211304,335.686310 536.427673,335.373810 535.328125,335.031433  C535.002502,333.288513 534.992859,331.575500 534.981934,329.434448  C534.526550,323.293457 533.311401,317.584167 534.653442,311.851715  C535.320312,309.003113 535.685242,305.884155 539.524902,304.738159  C543.126404,309.424530 539.946106,313.745148 539.099121,318.595520  z\"})),_path2530||(_path2530=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C48355\",opacity:1,stroke:\"none\",d:\" M606.213135,363.251953  C606.554565,362.166290 607.406921,362.009003 608.661865,362.005737  C608.760437,363.579315 608.057312,364.342773 606.213135,363.251953  z\"})),_path2531||(_path2531=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M613.008423,351.633850  C611.677795,351.997833 610.358826,351.959015 609.043457,352.011536  C605.830627,352.139709 602.323242,351.869263 606.003723,356.743988  C607.821045,359.150970 605.512146,359.701294 603.608154,359.977264  C598.966125,360.650055 594.493530,358.940857 589.457397,358.989288  C586.417786,357.948547 583.054382,358.482544 581.401978,354.932526  C583.215271,345.487244 584.188843,344.900177 595.229370,346.429565  C597.934631,346.390747 600.256592,346.281921 602.561951,346.481628  C604.639526,346.661621 606.486267,346.708038 607.541626,344.387207  C608.049316,343.270935 609.272888,342.808411 610.438293,342.696716  C616.395020,342.125854 621.958130,340.250275 627.682983,337.925537  C627.508423,341.329498 625.696655,343.099121 622.503052,344.176361  C618.684509,345.464355 614.811157,347.088348 613.008423,351.633850  z\"})),_path2532||(_path2532=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M628.400513,338.120056  C623.010986,342.187988 617.132996,343.745361 610.806702,344.063934  C610.045288,344.102264 608.637817,344.551086 608.648010,344.753418  C608.983704,351.432831 604.092163,347.051208 601.779663,347.907959  C600.332825,348.444000 598.525574,348.007233 596.421692,348.002869  C595.030212,346.951904 594.661926,345.742798 595.023804,343.995361  C596.534485,341.329071 598.653748,341.732178 600.784241,342.127106  C601.937744,342.340912 603.212891,343.589417 604.350342,341.474976  C609.205688,338.893494 613.915161,336.711975 619.234741,335.216278  C621.204102,336.642365 622.888367,337.074951 624.888916,336.021118  C626.766479,335.032043 628.848694,334.712219 630.952820,334.431152  C631.962341,334.296326 633.937378,334.331696 632.343262,331.993042  C630.995361,330.779236 630.306396,329.539642 629.742615,327.816284  C629.342346,323.797821 626.821472,321.014709 625.857300,317.333282  C625.997559,317.002869 626.015564,316.984131 626.026489,316.972900  C628.760254,316.754669 630.366455,318.485962 631.642273,320.461914  C633.526367,323.379944 635.140076,326.471252 636.979797,329.419617  C638.324036,331.573730 639.826172,333.664062 638.270691,336.280182  C636.770203,338.803741 633.981384,338.386566 631.647095,338.838043  C630.769409,339.007782 629.741455,338.400330 628.400513,338.120056  z\"})),_path2533||(_path2533=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B06640\",opacity:1,stroke:\"none\",d:\" M551.281372,345.281616  C543.731201,339.698090 539.519470,323.769806 546.335571,315.525055  C548.580505,312.809601 552.143555,310.921478 555.149780,308.805817  C557.782898,306.952759 560.432251,304.968628 563.268860,303.337555  C564.620483,302.560333 566.822083,302.423157 566.747314,300.288391  C566.660889,297.822418 564.072937,298.240692 562.328857,297.144501  C561.440979,296.351349 561.205444,295.604919 561.470825,294.377228  C563.629028,291.835938 566.268860,294.091278 568.823486,292.935486  C570.553955,292.693726 571.861572,293.062653 573.575317,293.205994  C577.370239,295.508789 581.286316,292.454254 585.030518,294.623779  C585.750183,295.678741 585.733887,296.476440 585.215576,297.639282  C580.640686,298.547852 577.768127,301.423737 575.389282,304.669464  C574.203247,306.287659 573.573059,308.574860 576.054626,310.902649  C576.387146,311.655762 576.346863,311.869904 576.107300,312.344421  C575.056519,313.288818 574.104126,313.831512 572.952942,314.670502  C572.240417,315.010223 571.809692,315.149628 571.027527,315.308380  C569.022827,315.392975 567.468994,315.539429 566.261292,317.004425  C565.093201,318.421448 563.406860,319.201263 561.747253,319.944916  C553.997864,323.417450 551.289307,329.746704 554.076538,338.576202  C554.971130,341.057526 556.140930,343.121002 555.359375,345.871948  C553.774719,347.004395 552.608215,346.636230 551.281372,345.281616  z\"})),_path2534||(_path2534=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M570.762329,314.335724  C571.512390,314.077972 571.931396,314.051941 572.664185,313.999207  C573.675842,313.197662 574.633545,312.839905 575.773499,312.203857  C576.017334,312.024475 576.005798,312.001221 576.015869,312.013245  C577.325256,311.173676 578.835022,311.164001 580.667908,310.920471  C581.466064,310.876892 581.892151,310.871246 582.635925,310.834473  C582.716797,311.356079 582.479980,311.908783 581.979980,313.054718  C578.323608,316.679352 574.111145,318.325104 570.209595,320.503937  C568.233337,321.607574 565.835327,322.574341 566.592102,325.994629  C566.720947,328.776581 564.723633,329.536530 563.139587,330.626953  C562.060364,331.369904 560.931580,332.062836 560.391785,333.339966  C560.130981,333.957001 559.943359,334.650696 560.566040,335.135071  C561.505737,335.866028 562.065918,335.184326 562.423950,334.420074  C563.194336,332.775299 563.783691,330.974396 566.490967,331.331787  C567.906982,331.910614 568.307129,333.124268 569.570435,333.903259  C572.687622,335.841064 575.729858,336.636963 579.435791,336.161011  C583.208740,338.032867 587.538879,337.615021 590.594604,340.940460  C590.408691,343.953247 588.520874,343.934357 586.637329,343.739136  C578.287476,342.873779 569.848633,343.054474 561.550232,341.562134  C559.572754,341.206512 557.632324,340.873505 555.765625,339.206909  C553.643799,329.159821 556.258545,323.394257 561.845032,320.242889  C564.853271,318.545837 566.802002,315.285767 570.762329,314.335724  z\"})),_path2535||(_path2535=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B0694A\",opacity:1,stroke:\"none\",d:\" M585.312500,297.821045  C584.998291,297.242859 584.999023,296.493042 584.999756,295.368164  C584.804871,292.330872 587.205261,293.166595 588.721924,292.217468  C590.388367,290.730316 592.096436,291.881042 593.793945,291.185852  C594.853394,291.149414 595.706970,291.319305 596.781128,291.734070  C595.635437,294.708588 592.722778,294.388214 590.494568,294.760803  C588.278381,295.131348 586.955688,296.196381 585.312500,297.821045  z\"})),_path2536||(_path2536=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M580.797607,310.657562  C579.941589,312.426880 578.286011,311.908264 576.414246,312.026093  C576.018921,311.846252 576.011963,311.667236 576.003540,311.218933  C577.555908,311.095581 578.910217,309.484222 580.797607,310.657562  z\"})),_path2537||(_path2537=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M583.965698,272.393677  C583.627014,272.828430 583.170776,272.929108 582.364746,273.055908  C578.498474,274.572113 575.125549,277.005951 571.048157,274.476196  C570.608948,274.203705 569.966675,275.065521 569.258911,275.765900  C569.021606,276.017975 568.950989,276.459412 568.919312,276.680695  C565.344055,280.329712 561.667175,278.075928 557.665405,277.145905  C556.310913,277.027008 555.408142,276.725159 554.635986,275.542297  C554.981018,272.099304 556.184082,269.672821 560.108704,269.575928  C560.925354,269.799896 561.443054,269.983582 562.129883,269.382629  C562.467529,269.035950 562.615356,268.901978 563.037720,268.624878  C565.838684,268.256592 568.475098,268.421661 570.790039,266.273193  C571.069031,266.092010 571.539246,266.068604 571.773315,266.042847  C572.889282,266.127625 573.652832,266.398926 573.935120,267.710327  C574.385010,270.322296 576.197449,269.948486 577.758606,269.996246  C580.004639,270.065033 582.324890,269.873993 583.965698,272.393677  z\"})),_path2538||(_path2538=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M550.222412,245.753143  C546.411316,244.563690 543.538757,241.566483 541.479919,238.940857  C538.006165,234.510849 533.685425,233.890778 529.034363,232.923798  C527.276794,232.558395 525.197693,232.198517 523.994141,231.063248  C522.083618,229.261032 520.951050,226.488358 519.342163,231.278870  C518.921326,232.532028 517.247314,231.729065 516.501953,230.713181  C515.520264,229.375168 514.432434,228.031189 513.830750,226.514954  C512.402222,222.914932 509.750671,222.418259 506.526428,223.343475  C502.730133,224.432877 499.304565,224.923523 497.454224,220.235123  C497.149475,219.462936 495.967712,218.505173 495.229187,218.536179  C493.070404,218.626785 495.821075,221.069687 493.774628,221.563965  C492.512146,221.468567 492.139465,220.305756 491.911835,219.165268  C490.882263,214.006302 485.563354,211.372681 484.378448,206.275604  C484.147247,205.281097 482.830383,205.214539 481.846344,204.964294  C478.479828,204.108185 477.295715,202.456482 479.767670,199.323029  C480.706329,198.133133 481.362091,195.660873 479.733154,195.521378  C476.166595,195.215958 474.646515,192.340424 472.079712,190.883759  C466.577454,187.761200 463.826172,193.531601 459.352234,194.956390  C460.856018,187.196548 467.378571,186.218323 473.480560,186.317047  C479.207733,186.409729 484.624298,184.038284 490.328888,184.994461  C491.862885,185.251602 493.700104,184.379654 494.894470,186.619598  C494.999146,188.834412 495.222961,190.697449 494.940857,192.482452  C494.400665,195.900299 493.591614,198.916473 498.685760,199.782913  C500.971771,200.171738 501.651031,203.041809 500.164490,205.139297  C498.255402,207.832962 499.826233,208.408127 501.937805,209.256943  C506.355927,211.032913 511.221375,209.853699 515.654968,211.504684  C516.703430,211.895111 516.900696,210.737946 517.212158,209.995132  C518.886353,206.002304 522.301147,205.358490 525.902100,206.064407  C528.581787,206.589722 530.716431,206.078262 532.996338,204.819138  C537.581116,202.286957 540.337097,202.533157 541.634583,205.325378  C542.931641,208.116638 539.955139,213.825043 536.534180,215.079208  C534.987793,215.646118 533.205139,215.291687 530.595764,217.034668  C534.468811,217.282639 537.126343,217.117645 539.837708,216.179153  C545.407166,214.251389 548.485657,216.355957 547.911926,222.000458  C547.560181,225.460220 548.225037,228.188828 550.867615,230.473541  C552.001404,231.453842 552.909790,232.674423 552.986206,234.649368  C553.000183,235.443634 553.000427,235.888824 553.001343,236.667938  C553.370544,240.204117 550.141357,242.324371 550.222412,245.753143  z\"})),_path2539||(_path2539=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M553.267639,234.743530  C551.911743,233.753174 551.019226,232.221649 549.697449,231.317841  C546.129028,228.877914 545.207092,225.764755 546.575378,221.797333  C547.162537,220.094788 547.157471,218.519669 545.515381,217.338440  C543.826904,216.123764 542.038635,215.869476 540.566650,217.476288  C538.245850,220.009644 535.215210,217.756638 532.617737,218.864670  C531.277771,219.436279 528.828552,219.385056 528.553894,217.238510  C528.272278,215.037247 530.342102,213.747314 532.172424,214.133423  C536.682922,215.084900 538.204163,211.824738 540.205200,209.126831  C541.194031,207.793610 541.335144,206.293732 540.180725,205.007568  C539.007690,203.700592 537.518982,203.817291 536.083374,204.619659  C534.488403,205.511154 532.874084,206.384567 531.364563,207.408066  C529.789368,208.476074 528.689148,209.068497 526.546326,207.805603  C522.831726,205.616379 519.462097,207.893311 518.834106,212.363800  C518.585022,214.136871 517.375244,215.661209 515.955627,214.014526  C513.777039,211.487442 511.193542,211.896896 508.648468,212.057861  C504.996277,212.288834 501.770782,210.803238 498.506653,209.746994  C496.108612,208.971008 494.963043,206.858353 498.074799,205.182373  C499.516571,204.405838 500.184418,203.719330 499.517883,202.132233  C498.908844,200.681961 498.060455,200.289322 496.396667,200.658615  C491.825348,201.673294 491.977783,197.162323 492.677826,195.719818  C493.998505,192.998413 493.522064,190.172287 494.733154,187.283997  C495.923553,190.220413 496.940826,193.016083 500.568390,194.655197  C502.599487,195.572922 505.048615,197.498138 505.202362,200.691895  C505.288940,202.490051 506.901886,202.956253 508.527435,202.987503  C509.856293,203.013046 511.459808,202.779297 512.260620,203.941864  C514.703430,207.488007 517.410950,205.996277 520.337646,204.808243  C523.531311,203.511826 524.996704,201.269379 525.008057,197.916122  C525.017029,195.261276 525.822083,193.743591 528.948669,194.751343  C530.148743,195.138138 531.979614,195.378677 532.827087,194.749100  C537.633606,191.178345 542.060364,195.264191 546.656433,195.183792  C547.851807,195.162872 549.247925,196.299362 548.441162,197.492477  C545.391785,202.002014 549.507751,204.915009 550.799194,208.276291  C552.501587,212.706863 555.427002,216.720032 552.376648,221.675827  C552.057129,222.194916 552.261230,223.517151 552.715576,223.955231  C556.154724,227.271011 555.161194,230.835373 553.267639,234.743530  z\"})),_path2540||(_path2540=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M550.340393,274.144897  C546.644165,274.866302 544.525574,278.356018 540.723450,278.368805  C540.280518,278.370270 539.475098,279.220459 539.453857,279.704315  C539.123718,287.211212 530.549927,287.949371 527.992798,293.634918  C527.849060,293.954590 526.338745,293.981415 525.663574,293.687439  C521.717651,291.969208 521.155151,294.879425 520.359131,297.453674  C519.328064,300.787689 521.506470,300.997864 523.891418,301.066010  C525.058594,301.099304 525.900757,301.746552 525.407959,302.978333  C524.153442,306.114258 525.972534,308.375305 527.378296,310.800446  C528.178406,312.180664 529.838745,326.271545 529.267334,328.724121  C526.727478,329.275421 526.457886,327.273712 525.660828,325.964081  C524.879211,324.679901 524.500366,323.170135 524.387878,321.696625  C523.866394,314.863892 521.222961,309.966919 513.305664,309.184631  C510.383881,307.643250 508.270630,304.738281 508.393158,302.663940  C508.721466,297.104980 504.933350,294.954590 501.338715,292.065979  C500.687866,291.759094 500.445404,291.457794 500.195251,290.817932  C499.988953,290.189636 499.867188,289.835907 499.594360,289.247253  C499.367493,288.845428 499.280853,288.682220 499.098938,288.258728  C498.711151,284.175934 493.246460,283.167450 493.987671,278.402649  C495.479187,278.024109 496.972717,278.001526 498.465210,278.031403  C500.012543,278.062347 501.345856,278.697479 500.612976,280.408905  C499.222565,283.655792 501.671783,284.998383 503.606049,285.615784  C508.062134,287.038116 509.737640,290.049652 510.342682,294.307312  C510.501648,295.425659 510.527588,297.325439 512.180115,297.476685  C513.860535,297.630463 514.465332,296.291901 515.103088,294.736755  C517.234131,289.540344 521.792480,287.245728 526.908875,286.074341  C528.778015,285.646423 530.564636,285.648651 530.955933,283.297363  C531.185913,281.915558 531.565186,281.123535 533.212463,282.115936  C534.605347,282.955017 535.082825,281.828278 534.710144,280.757996  C533.545410,277.413208 535.481995,275.965729 538.147766,275.475311  C542.432007,274.687134 544.421997,270.678894 546.134583,268.093109  C550.465820,261.553345 555.966492,259.579742 563.552612,260.001068  C563.546387,262.698547 561.774109,264.204376 559.338379,265.028595  C557.538879,265.637543 556.452881,267.027283 555.159424,268.692627  C554.652344,271.649841 553.356873,273.532562 550.340393,274.144897  z\"})),_path2541||(_path2541=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M564.397095,260.010193  C564.458008,258.422058 564.857239,256.826111 565.386719,255.274582  C565.822571,253.997421 565.650391,252.455826 564.401794,252.474274  C559.630066,252.544846 557.362915,246.392715 552.170288,247.729355  C551.942017,247.788116 551.518677,247.088837 551.091858,246.372360  C552.493347,243.529892 554.824890,241.766617 556.765564,239.238480  C562.064819,239.045013 563.278809,243.578659 565.150330,246.727371  C567.347168,250.423340 569.308105,253.398682 574.153442,253.099533  C576.063965,252.981583 577.473511,254.567383 578.854736,255.685471  C580.297119,256.853027 579.584351,258.694214 578.158264,258.597748  C573.576660,258.287842 569.515503,262.387970 564.397095,260.010193  z\"})),_path2542||(_path2542=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D9956F\",opacity:1,stroke:\"none\",d:\" M549.952087,274.381622  C552.242310,273.159668 552.731873,270.666199 554.714294,269.150848  C557.391602,268.660706 559.780884,268.327026 562.575928,267.985168  C563.120728,268.151581 563.259766,268.326141 563.222351,268.785248  C563.045959,269.069763 563.047058,269.540466 563.035034,269.775513  C562.572815,270.420471 562.163147,270.886139 561.248413,271.093536  C556.784058,268.438629 557.539246,273.823120 555.212524,274.747925  C554.571045,275.478302 554.261841,276.051361 553.564453,276.717468  C552.242981,277.673248 551.630310,278.840759 550.492676,279.971436  C550.013428,280.216309 549.796875,280.260193 549.288940,280.146149  C548.823792,278.162781 549.270569,276.444641 549.952087,274.381622  z\"})),_path2543||(_path2543=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EF9777\",opacity:1,stroke:\"none\",d:\" M556.673218,238.945618  C557.026611,242.686325 554.447205,244.367935 551.344177,245.957840  C550.997559,246.002075 550.499146,246.000687 550.249878,246.000031  C547.919250,242.247665 550.362122,239.943832 552.844971,237.302155  C554.117676,237.630966 555.233337,238.260117 556.673218,238.945618  z\"})),_path2544||(_path2544=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M563.377808,269.048645  C563.033752,268.887817 563.021545,268.705872 562.995483,268.250458  C564.747803,264.803558 567.056213,263.462433 570.756531,265.930237  C569.993469,270.523987 567.207947,270.669189 563.377808,269.048645  z\"})),_path2545||(_path2545=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M444.577576,196.000351  C443.539978,198.240143 440.330475,199.114014 440.041229,202.650269  C437.823364,201.893356 437.587708,199.943329 438.277802,198.016113  C439.322266,195.099457 442.041351,196.257492 444.577576,196.000351  z\"})),_path2546||(_path2546=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M455.579224,196.001236  C452.587921,201.676086 449.159912,196.400482 445.369781,196.008270  C445.271332,193.896851 446.540771,194.326355 447.889099,194.830063  C450.229797,195.704453 452.633301,196.238419 455.579224,196.001236  z\"})),_path2547||(_path2547=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M438.706604,210.042557  C438.995850,210.442184 438.997803,210.887924 438.997437,211.667984  C438.358765,211.900345 437.597351,211.839584 437.555328,211.043045  C437.539398,210.740952 438.113922,210.407715 438.706604,210.042557  z\"})),_path2548||(_path2548=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M480.999817,218.579041  C477.527100,219.567383 474.818726,216.918777 471.462128,216.744324  C469.966858,216.666611 469.724518,215.212189 471.037445,214.309891  C472.033386,213.625458 473.020142,213.129883 472.990265,211.369049  C474.516876,208.210953 477.161682,206.687439 479.887512,207.820221  C482.884399,209.065628 482.129883,212.089355 481.290131,214.740906  C480.953522,215.803818 481.082581,217.014206 480.999817,218.579041  z\"})),_path2549||(_path2549=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M498.764618,288.194183  C499.003662,287.998413 499.503387,288.002594 499.753235,288.004333  C500.427521,288.404663 500.787781,288.845795 500.968872,289.709900  C500.995850,290.443146 500.997192,290.889282 501.000122,291.670166  C504.790894,299.139954 506.637817,306.929443 508.786041,314.638428  C512.132568,326.647858 512.329163,338.983459 508.394440,350.430786  C506.615173,355.607239 504.464874,362.949860 497.094971,365.051025  C495.067352,365.629089 493.901917,367.408142 494.007843,369.706848  C494.099091,371.686737 493.590942,373.242126 491.611572,374.201782  C487.993225,375.956085 484.083099,382.107910 481.817871,372.667389  C481.143402,369.856476 473.753937,369.265839 470.715851,370.471161  C466.774323,372.034882 463.521454,375.481750 458.402527,374.993317  C457.178284,373.098114 458.097992,371.591675 459.527100,370.742462  C465.442688,367.227295 471.254547,363.521393 477.727295,360.252319  C486.946960,361.147217 494.859589,356.776428 499.526917,350.894348  C504.350067,344.815948 510.441772,336.830688 504.999634,327.330414  C503.904968,325.419495 503.896942,323.184998 503.998016,321.001556  C504.084076,319.142700 504.058929,317.270477 502.437744,315.973083  C495.298340,310.259918 496.309692,302.446381 496.954590,294.368530  C497.000610,293.253418 497.004883,292.500702 497.008972,291.371582  C497.514374,290.126770 498.019989,289.258362 498.764618,288.194183  z\"})),_path2550||(_path2550=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M477.589478,360.009857  C473.883026,365.357849 467.652313,367.634979 462.034088,370.724365  C460.300507,371.677673 459.084808,372.674133 458.142090,374.674805  C457.996552,374.991455 457.999176,374.999420 457.995422,374.996643  C454.965332,376.288483 451.890289,376.944946 448.336273,375.350525  C442.425751,371.015350 436.390137,369.957397 429.765472,371.879822  C428.784363,372.164520 427.511475,371.585052 426.407379,371.282257  C418.899048,369.222931 412.113281,372.355804 404.949402,373.614716  C398.307404,374.781860 394.557770,378.466003 390.352203,382.952545  C390.662659,380.257507 391.320404,377.516510 391.987244,374.387756  C392.163696,373.997070 392.331055,373.994171 392.749390,373.983765  C393.000397,373.976227 393.493683,373.982574 393.740356,373.982605  C395.366516,372.172760 397.615509,372.228210 399.731140,371.213745  C406.665405,368.160339 413.299042,364.815430 420.858398,367.034973  C428.536224,369.289276 435.849823,367.318848 443.452606,366.387878  C449.324646,365.668915 455.457214,366.388397 461.487061,365.220306  C464.084808,364.717072 466.061615,363.503571 468.174622,362.260529  C470.950348,360.627655 473.979218,359.983032 477.589478,360.009857  z\"})),_path2551||(_path2551=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M399.580353,370.998840  C398.836334,373.058777 396.909393,373.759674 394.349365,373.981689  C393.940094,369.912109 397.026703,371.278809 399.580353,370.998840  z\"})),_path2552||(_path2552=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E79B75\",opacity:1,stroke:\"none\",d:\" M589.000000,241.000305  C589.292786,240.511932 589.585632,240.023285 589.878479,239.534637  C590.076721,239.704193 590.274902,239.873749 590.473145,240.043320  C590.163025,240.335251 589.852966,240.627197 589.271423,240.959259  C589.000000,240.999390 589.000000,241.000000 589.000000,241.000305  z\"})),_path2553||(_path2553=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F2A484\",opacity:1,stroke:\"none\",d:\" M513.001099,309.400879  C516.876465,307.786133 520.156799,310.432190 523.816833,310.737335  C524.719299,310.812592 525.080017,312.264862 524.889404,313.276337  C523.829346,318.900665 526.468933,323.629944 528.737427,328.758850  C527.224060,331.607239 526.713501,333.755371 530.499084,335.189331  C531.527527,335.578888 532.741211,337.196716 532.755371,338.265594  C532.841064,344.738556 535.474609,350.792908 535.622803,357.250763  C535.682434,359.851959 532.940552,360.853516 532.927185,363.471863  C532.902710,368.236755 534.472168,372.555817 535.539551,377.072052  C537.103943,383.691620 544.718628,385.815552 546.067383,392.441254  C546.317871,393.671753 547.033813,394.863922 546.993530,396.612427  C545.121033,398.815033 542.867249,399.369232 539.983887,398.910095  C539.183044,398.551331 538.552246,398.152954 538.634644,397.774719  C540.050842,391.268646 534.454102,389.343109 530.853333,386.506927  C527.854553,384.144928 524.877136,386.211975 522.666687,388.746216  C521.483521,390.102692 520.785889,391.909058 518.506897,392.562134  C516.519531,392.198669 516.112915,391.148651 516.759399,389.323364  C516.991150,386.626068 516.994507,384.254333 516.997681,381.438080  C517.001831,378.641632 517.489990,376.306335 514.118469,375.368317  C511.891907,374.748871 513.145081,372.328430 512.996460,370.342346  C513.246826,364.103851 513.587708,358.243347 514.284058,352.342743  C515.036499,345.966888 513.261841,339.164459 513.305908,332.495880  C513.312378,331.514832 512.750732,330.385590 513.075012,329.573883  C515.722412,322.947510 512.209839,316.384979 513.001099,309.400879  z\"})),_path2554||(_path2554=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FB9E83\",opacity:1,stroke:\"none\",d:\" M400.307373,393.136353  C402.741577,388.527039 406.479431,386.847168 411.941376,386.776489  C417.895935,386.699371 424.141388,387.288940 429.940277,384.332367  C430.446198,384.002655 430.890350,384.001648 431.667572,384.000061  C433.273682,384.371460 434.458069,384.178284 435.778625,383.222076  C440.048584,385.575867 443.973938,383.605316 448.139282,383.235168  C454.836792,382.639954 460.254272,378.848206 466.569519,377.632660  C467.531708,377.447449 468.513031,376.820374 469.409851,377.449554  C470.028351,377.883453 470.619659,378.610443 470.835693,379.323792  C472.624878,385.231628 481.583344,387.890015 478.248077,396.247559  C477.286285,398.657623 476.137299,399.774353 473.385376,399.992188  C471.019836,403.929718 466.032562,404.202728 463.666107,407.806244  C461.870636,410.540314 459.633331,412.957977 458.038971,415.885437  C456.463989,418.777405 454.475128,421.490601 450.291107,421.221985  C450.094208,419.561432 449.585754,417.761078 451.256744,417.026398  C454.175476,415.743164 454.144897,413.360352 453.999329,410.416382  C452.123260,407.899384 453.216553,405.983276 454.397949,404.100067  C455.370972,402.549011 456.608276,401.171631 457.457520,399.538055  C458.180328,398.147736 458.544434,396.679016 457.648926,395.261841  C456.649353,393.679871 455.103699,393.995117 453.604065,394.340149  C453.441711,394.377533 453.249878,394.490631 453.121094,394.440887  C447.082245,392.107483 441.387512,395.516815 435.246155,395.236938  C434.729828,393.202148 435.806274,389.460266 431.951080,392.870178  C431.389862,393.366577 430.880371,393.523438 430.206055,393.104004  C423.938965,389.205597 416.892883,390.898376 410.162506,390.384674  C408.429169,390.252350 406.781403,391.259949 405.972534,392.699402  C404.329193,395.623840 402.525024,394.323853 400.307373,393.136353  z\"})),_path2555||(_path2555=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08061\",opacity:1,stroke:\"none\",d:\" M507.457642,526.997559  C504.586853,521.646362 498.806061,521.306030 494.477142,519.214417  C485.898438,515.069336 477.376465,511.360657 472.065704,502.755707  C469.262756,498.214050 463.792419,496.443756 459.995239,492.732544  C458.434967,491.207611 454.106964,492.164703 451.118469,492.576843  C449.199524,492.841492 447.913971,492.595551 446.780029,491.141327  C445.602600,489.631287 446.766174,488.494415 447.181793,487.085815  C448.352875,483.117157 450.860657,480.256744 453.945312,477.348480  C454.010437,477.009033 454.502930,477.001038 454.749176,476.997467  C458.012268,474.434967 461.795898,474.167572 465.739960,473.270447  C468.521637,472.846588 471.008118,472.649719 473.748840,472.703003  C472.100433,475.818481 467.649811,474.821991 466.002014,478.520752  C465.209412,478.909271 464.489746,478.961121 463.408447,479.020203  C462.132050,480.184265 460.572144,479.778595 459.218933,480.702728  C458.959839,480.904480 458.957855,480.945099 458.937775,480.948303  C456.295502,482.777344 452.447479,483.898193 454.797180,488.735840  C457.766846,489.570862 460.534882,490.137360 463.651459,490.874573  C464.082794,492.083466 464.388947,493.082520 465.346863,493.568542  C470.270508,496.066681 473.967224,500.011017 478.083618,503.536469  C480.887970,505.938202 485.712494,506.123779 489.706024,506.951019  C493.155182,507.665436 496.459900,508.046387 499.692413,510.075256  C502.781738,512.014221 506.843109,512.404358 510.744690,513.738892  C511.680115,514.743347 511.548401,515.466064 510.981262,516.196228  C508.511749,519.375671 508.904572,520.888611 512.659546,522.069092  C515.494385,522.960388 518.569397,522.637634 521.702393,523.802429  C522.446594,523.974609 522.889160,523.976013 523.663635,523.972290  C524.538818,523.447144 525.081360,522.926270 525.834961,522.218201  C526.468262,522.030579 526.892578,522.032532 527.635254,522.033752  C528.860413,522.836731 529.695984,523.714294 530.784180,524.765991  C531.445496,524.981384 531.889648,524.985901 532.666809,524.987915  C534.046753,524.209656 535.053284,524.140259 535.998901,525.580872  C535.518311,528.446411 533.799072,528.248169 532.208069,527.529053  C529.506104,526.307617 526.754822,526.261169 524.046875,527.042297  C518.635132,528.603333 513.287537,526.339111 507.457642,526.997559  z\"})),_path2556||(_path2556=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F89A7C\",opacity:1,stroke:\"none\",d:\" M516.637512,389.067200  C517.057556,390.129547 516.879883,391.375916 518.657532,391.938263  C520.563110,394.108246 518.873047,395.704102 518.135254,397.439819  C516.616455,401.012848 517.780090,403.822296 521.860779,407.057312  C524.777893,409.369843 527.230286,408.822296 529.738281,406.415527  C531.764832,404.470734 533.917725,402.681244 535.249146,400.119415  C535.917053,398.834320 536.531738,397.330414 538.731445,397.779480  C541.394897,397.666595 543.787720,397.335602 546.586548,397.004150  C546.220886,400.817169 546.407471,405.048798 542.216675,407.735229  C538.506714,411.235840 534.972168,414.304413 530.591675,416.462372  C526.040649,418.704376 522.120056,418.441254 517.920410,415.196747  C517.193054,414.765167 516.821655,414.458954 516.251709,413.841003  C511.653564,408.854797 507.654022,408.275818 502.791809,411.745300  C502.035461,411.758423 501.621399,411.673767 500.962494,411.387482  C500.374939,411.092285 500.036621,410.955750 499.418549,410.881409  C498.627167,411.034210 498.110291,411.209534 497.301086,411.405975  C496.824707,411.417664 496.633789,411.385071 496.224396,411.161072  C495.606689,408.748169 494.419403,408.943665 492.778717,409.759949  C490.731110,410.778687 488.576752,411.582886 486.228760,412.739014  C484.111877,412.767426 481.642242,413.833344 480.618011,411.582306  C479.679932,409.520599 482.165955,408.696320 482.994263,407.254272  C488.078979,398.402039 496.787018,399.426086 504.882172,399.079132  C509.316895,398.889038 513.701843,399.596832 513.368469,392.888123  C513.300232,391.515137 514.704834,389.929596 516.637512,389.067200  z\"})),_path2557||(_path2557=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FB9E83\",opacity:1,stroke:\"none\",d:\" M410.003967,451.426392  C413.228790,453.342529 415.432526,453.140717 419.457092,450.837463  C429.140625,445.295563 434.382446,441.512817 440.952026,434.094025  C443.831665,430.842133 445.260498,426.337036 449.658325,424.065460  C452.455688,427.300934 449.956970,429.736084 448.270447,432.680542  C447.879089,433.309052 447.686432,433.563446 447.212250,433.882202  C445.712952,434.088379 443.923218,433.557709 443.337646,434.883301  C440.114197,442.180328 432.743927,445.308777 427.641785,450.704834  C425.109406,453.383148 423.248047,456.372375 421.271454,459.385864  C420.289978,460.882141 420.585968,464.403961 418.091980,463.556427  C415.384430,462.636322 412.064941,461.667206 410.869476,458.175293  C410.154785,456.087769 409.919678,454.007843 410.003967,451.426392  z\"})),_path2558||(_path2558=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F7957B\",opacity:1,stroke:\"none\",d:\" M448.350403,432.956238  C447.163666,429.899414 450.423157,427.793854 449.997437,424.396667  C449.998779,423.250610 450.000000,422.500000 450.001221,421.374084  C452.884125,420.260040 455.213043,418.467712 456.416595,415.951599  C459.867310,408.737793 464.917480,403.300598 472.643280,400.047974  C473.173523,402.023712 472.304047,403.488007 470.659821,404.613922  C462.498077,410.202820 458.601410,418.991425 453.768799,427.092499  C452.448090,429.306488 451.577271,432.012726 448.350403,432.956238  z\"})),_path2559||(_path2559=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M447.715546,375.265808  C451.029816,374.995575 454.057556,374.995453 457.538513,374.994629  C452.405090,378.369171 446.624939,381.160065 439.432861,380.995361  C437.705811,377.568573 439.116302,376.110016 442.548340,375.994629  C444.178558,375.939789 445.802338,375.694763 447.715546,375.265808  z\"})),_path2560||(_path2560=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F89A7C\",opacity:1,stroke:\"none\",d:\" M512.734863,370.268127  C514.103577,372.084686 513.009766,375.653748 517.981018,374.883118  C519.899597,374.585663 518.588928,378.571564 517.275879,380.763763  C510.906311,378.518188 510.906311,378.518188 512.734863,370.268127  z\"})),_path2561||(_path2561=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M465.681915,472.985596  C463.438507,476.466095 459.347229,476.022125 455.400085,476.995941  C455.168182,474.429077 457.223358,472.894287 458.656494,471.243835  C461.526794,467.938293 462.965698,472.745056 465.681915,472.985596  z\"})),_path2562||(_path2562=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M494.071350,440.344116  C495.269989,437.404541 496.919983,438.260315 498.805389,439.753204  C497.615753,441.934113 496.137268,443.171570 494.071350,440.344116  z\"})),_path2563||(_path2563=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E49773\",opacity:1,stroke:\"none\",d:\" M508.331421,436.961182  C508.383148,434.998199 509.039154,433.287750 511.792023,433.776611  C511.245300,435.393097 510.286041,436.540710 508.331421,436.961182  z\"})),_path2564||(_path2564=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F7957B\",opacity:1,stroke:\"none\",d:\" M435.636475,383.001434  C435.270355,384.905029 434.567261,386.871429 432.054504,384.311829  C432.847260,382.866699 434.087616,383.023682 435.636475,383.001434  z\"})),_path2565||(_path2565=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E45F47\",opacity:1,stroke:\"none\",d:\" M591.604004,485.075073  C591.864746,487.159363 589.219299,487.359314 589.014404,489.632141  C587.329224,489.999603 585.627197,489.815796 584.352112,491.186584  C579.175476,496.751862 571.941895,498.975189 565.325806,502.861176  C559.175232,503.843079 553.340637,504.678741 547.254272,505.257812  C548.338013,501.062927 553.272827,504.580200 553.974792,502.359253  C554.789551,499.781738 555.055969,498.163147 557.856567,496.630524  C561.367004,494.709473 566.084412,494.556885 568.320679,490.486267  C569.026550,489.201385 571.428040,488.845612 570.267090,486.499237  C569.310242,484.565582 567.893494,483.926483 565.877319,483.964752  C565.085876,483.979797 564.287720,483.643829 563.231628,483.183838  C563.538635,480.287079 565.680847,481.216431 567.704102,480.944336  C571.722351,479.058105 575.158325,481.267822 578.682495,481.451752  C579.956665,481.518250 581.194031,482.271698 582.743286,481.238892  C583.397156,480.629486 583.850098,480.520844 584.635742,480.878479  C586.099792,483.933685 589.500793,483.102966 591.604004,485.075073  z\"})),_path2566||(_path2566=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E45F47\",opacity:1,stroke:\"none\",d:\" M555.225769,483.295807  C555.554932,482.176453 556.420288,482.025360 557.701904,482.070526  C557.743103,483.611176 557.000000,484.316101 555.225769,483.295807  z\"})),_path2567||(_path2567=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F66657\",opacity:1,stroke:\"none\",d:\" M540.275513,485.313416  C541.502136,483.412689 543.459229,484.225220 545.639038,484.130737  C544.821411,487.088715 542.583191,485.935516 540.275513,485.313416  z\"})),_path2568||(_path2568=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E45F47\",opacity:1,stroke:\"none\",d:\" M535.323975,486.987488  C535.012512,486.851074 535.010315,486.662781 535.010010,486.191071  C535.508484,485.634521 536.005066,485.361359 536.800537,485.114990  C536.925110,485.996613 536.570251,486.703949 535.323975,486.987488  z\"})),_path2569||(_path2569=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M521.954773,523.626953  C516.931519,524.672241 511.931641,525.000671 507.923401,520.888123  C505.502625,518.404297 504.725769,516.380676 509.370026,515.854187  C509.894257,515.794739 510.348236,515.115906 510.923523,514.363403  C517.435730,514.131897 523.753296,513.176575 530.076660,512.215698  C531.161743,512.050781 532.319946,512.367004 533.723389,512.729248  C531.496033,515.574097 528.190491,515.699219 524.905151,516.279480  C518.494141,517.411682 517.977539,518.898499 521.954773,523.626953  z\"})),_path2570||(_path2570=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M457.380859,483.668091  C461.091888,483.853027 464.252289,482.307800 467.549286,483.112152  C468.960419,483.456421 470.820435,483.774261 470.645264,485.623047  C470.482605,487.340393 468.676514,486.988922 467.426483,487.007904  C463.827759,487.062469 460.218018,486.930511 456.279480,487.982056  C454.656097,486.141022 454.566010,484.556305 457.380859,483.668091  z\"})),_path2571||(_path2571=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M457.909760,483.475037  C456.097443,484.313660 455.727081,485.642365 455.843933,487.621094  C455.572845,488.132446 455.355194,488.333191 455.097748,488.801239  C449.871979,488.275116 451.900970,485.520813 453.446747,483.126709  C454.485840,481.517426 456.181488,480.806580 458.537018,480.959717  C458.608490,481.696594 458.299316,482.441650 457.909760,483.475037  z\"})),_path2572||(_path2572=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M459.334625,480.931366  C459.279572,478.881287 460.824921,479.005890 462.671509,479.014099  C462.736786,481.058044 461.214905,480.994019 459.334625,480.931366  z\"})),_path2573||(_path2573=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E66D55\",opacity:1,stroke:\"none\",d:\" M515.782227,421.723511  C516.138855,424.253998 518.596313,425.777435 517.988037,428.650940  C516.005981,428.879852 514.813965,427.350189 513.315796,426.356506  C510.785797,424.678528 508.422058,425.285797 507.159302,427.716614  C503.572723,434.621033 496.291626,437.592285 489.173187,434.584198  C484.651245,432.673218 479.624207,431.201447 478.367767,425.474823  C477.947815,423.560730 476.754089,421.317017 480.986877,421.567200  C484.229126,421.758911 483.895020,416.836151 486.831329,415.234711  C489.559906,419.436646 489.877075,423.548126 485.654419,427.065796  C487.473663,428.821136 489.394470,429.892242 491.333893,430.737457  C494.508362,432.120819 496.097534,430.771515 495.573181,427.453644  C494.594757,421.262146 494.841949,420.822693 501.268585,421.570618  C506.068939,422.129272 510.785248,420.011383 515.782227,421.723511  z\"})),_path2574||(_path2574=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M516.382202,421.994629  C510.101501,422.149780 504.297363,423.876892 498.231323,422.404083  C495.299683,421.692261 495.767151,424.386414 496.692963,426.013458  C497.925446,428.179474 499.097778,430.999603 496.983124,432.243256  C494.722015,433.573029 491.228394,434.289490 488.980042,431.275879  C488.149689,430.162903 486.990570,430.258026 485.995789,429.766693  C484.547363,429.051239 482.537659,428.437500 482.398224,426.678864  C482.210022,424.306458 484.542175,425.316925 485.777039,424.890411  C487.283539,424.370087 487.805756,423.532288 487.525085,421.880676  C487.194519,419.935120 487.222229,417.928680 487.126465,415.533203  C488.602234,415.147186 488.999084,413.047607 490.850525,413.573914  C491.580017,416.269592 493.087830,417.040649 495.645142,417.880371  C503.083313,420.322723 510.019623,419.546875 517.336792,416.478638  C518.824524,416.617767 519.669678,417.159149 520.226440,418.557861  C520.255676,418.954437 520.197998,419.394745 520.161926,419.613831  C520.062866,420.275116 519.979736,420.713440 519.406189,421.605652  C518.208130,422.040649 517.477722,422.017365 516.382202,421.994629  z\"})),_path2575||(_path2575=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3C251C\",opacity:1,stroke:\"none\",d:\" M492.579895,414.132446  C492.704254,413.704681 493.059204,413.437561 493.268219,413.362457  C495.276794,413.142395 496.577850,411.729248 498.669189,411.264893  C499.833221,410.974396 500.587402,411.166077 501.726990,411.453217  C503.193878,411.612976 504.211731,411.176361 505.674469,411.246216  C508.013489,412.823273 510.993805,412.401215 512.609497,415.183533  C512.895508,416.617218 512.769104,417.601959 511.947235,418.315735  C507.871582,421.855347 495.340759,419.430573 492.579895,414.132446  z\"})),_path2576||(_path2576=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M492.436096,413.669891  C495.705261,417.786224 506.255219,420.516083 510.367920,418.312622  C511.492615,417.710052 512.083069,416.860626 512.130127,415.190613  C513.954895,413.416718 515.601196,414.353058 517.569092,415.348083  C517.994812,415.812134 518.110291,416.043274 518.022949,416.604736  C512.476135,420.407593 506.807037,422.054657 500.414764,420.335022  C498.031372,419.693817 495.559174,419.360291 493.112732,418.981567  C490.198425,418.530396 489.438904,417.059601 490.937195,414.094086  C491.449036,413.697235 491.808502,413.666168 492.436096,413.669891  z\"})),_path2577||(_path2577=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M498.986755,411.307709  C497.810944,413.242218 496.023834,413.460022 493.847839,413.460480  C493.811218,412.287994 494.454590,411.586761 495.731812,411.100983  C496.182007,410.951874 496.358093,410.934113 496.785583,410.830872  C497.714050,410.465363 498.357452,410.473969 498.986755,411.307709  z\"})),_path2578||(_path2578=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08061\",opacity:1,stroke:\"none\",d:\" M553.240845,524.655029  C548.322571,526.837524 543.662598,528.872131 538.262634,526.290833  C539.289551,522.496643 542.898865,523.911560 545.590576,522.585693  C547.194885,522.381042 548.535156,522.483521 549.789673,521.269165  C550.465271,521.056396 550.904358,521.052490 551.672852,521.050842  C553.597473,521.644531 553.975891,522.785767 553.240845,524.655029  z\"})),_path2579||(_path2579=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M547.178223,522.759521  C544.176636,523.841248 541.339722,524.668701 538.247864,525.763855  C537.550171,526.023743 537.107361,526.016052 536.332336,526.006592  C535.448181,525.150085 534.588989,525.008911 533.335815,524.993835  C535.728760,521.680664 540.035339,523.853394 543.245239,522.064819  C543.994019,521.647583 545.172302,522.001038 546.580811,522.000000  C547.120056,522.168457 547.231384,522.336914 547.178223,522.759521  z\"})),_path2580||(_path2580=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M553.376831,524.991272  C552.764648,523.883423 552.526794,522.779053 552.145569,521.363892  C553.967407,519.445435 554.919800,520.925354 555.952637,522.646484  C556.005188,523.412659 556.001831,523.862976 555.997986,524.650391  C555.248779,524.989868 554.500000,524.992310 553.376831,524.991272  z\"})),_path2581||(_path2581=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M547.308289,523.137512  C547.011963,522.844788 547.010376,522.675842 547.008667,522.253479  C547.578979,521.166992 548.430298,521.013977 549.689087,521.045898  C549.913086,522.558716 550.089355,524.375671 547.308289,523.137512  z\"})),_path2582||(_path2582=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M530.958008,524.640625  C529.479858,524.916687 528.444214,524.230652 528.009766,522.365479  C529.489990,522.073853 530.553040,522.731934 530.958008,524.640625  z\"})),_path2583||(_path2583=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D0744E\",opacity:1,stroke:\"none\",d:\" M525.725708,522.066650  C525.909607,522.906860 525.621765,523.667969 524.310364,523.927734  C524.104309,523.072083 524.398743,522.317627 525.725708,522.066650  z\"})),_path2584||(_path2584=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7A3E2D\",opacity:1,stroke:\"none\",d:\" M585.329102,481.071503  C584.488892,481.089905 584.062805,481.057465 583.317139,480.992950  C582.196777,480.411652 581.395935,479.862457 579.625000,478.648010  C583.353455,479.278992 585.314453,477.945251 587.341797,476.081604  C589.320740,474.262512 596.362732,476.238068 597.692688,478.552826  C598.074646,479.217651 598.797607,480.351440 597.810913,480.693207  C595.896423,481.356293 594.443604,483.822693 591.952576,482.425049  C590.013977,481.337341 587.977295,480.762634 585.329102,481.071503  z\"})),_path2585||(_path2585=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M543.005188,419.380981  C544.530457,417.757355 545.091125,415.402466 547.810059,415.145447  C549.206177,417.839386 551.195312,418.635559 553.983704,418.507629  C559.664917,418.246979 564.474060,416.165588 568.840942,412.087006  C571.176514,412.383453 570.963745,413.989746 571.016357,415.490082  C571.118286,418.395966 570.482239,421.307068 573.873962,423.371246  C575.620972,424.434479 574.131958,426.687317 572.842102,427.969025  C569.399475,431.389893 565.107422,431.484436 560.709351,430.690735  C559.251160,430.427582 557.885071,429.691620 556.443542,429.291626  C551.728027,427.983124 546.919434,423.848175 542.392029,429.815063  C541.913574,430.445679 540.534058,430.388794 539.575134,430.659760  C538.598389,430.935760 537.407654,431.303528 536.771790,430.428223  C535.822510,429.121338 537.466797,428.495911 537.905273,427.528229  C539.204346,424.661560 542.642334,423.209473 543.005188,419.380981  z\"})),_path2586||(_path2586=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C3222\",opacity:1,stroke:\"none\",d:\" M569.059570,411.699951  C569.411621,414.775940 567.535889,415.417480 565.364075,416.668762  C560.695435,419.358582 555.893982,420.193573 550.681641,420.076843  C547.471619,420.004944 546.322632,418.936890 548.055786,415.525635  C548.153564,415.167053 548.542847,415.016510 548.733032,414.930573  C549.403137,414.528137 549.852478,414.160950 550.674988,413.872192  C554.340332,412.780029 557.729309,411.769836 561.481262,410.636719  C562.379456,410.341644 562.884827,410.084106 563.712158,409.903259  C565.398743,410.171661 566.809387,410.495209 568.571045,410.892456  C568.937988,411.132660 568.953857,411.299164 569.059570,411.699951  z\"})),_path2587||(_path2587=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M520.755371,420.988678  C521.607788,421.457489 522.182373,421.959381 522.889771,422.718872  C521.468506,426.329498 520.325195,423.958710 519.020508,422.379578  C518.938538,422.063934 519.012878,421.987518 519.050171,421.949524  C519.481689,421.506836 519.914307,421.162262 520.755371,420.988678  z\"})),_path2588||(_path2588=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M518.059631,417.143250  C517.820068,416.935028 517.825134,416.634521 517.833374,416.484497  C517.550842,415.824615 517.447754,415.279327 517.770142,414.344727  C525.656555,419.509033 531.460999,415.219086 537.124756,410.356750  C538.368958,409.288635 539.392883,407.920715 541.638428,408.012329  C543.285461,410.738647 545.324524,409.758179 547.650757,409.050079  C544.625061,413.820953 538.473267,413.653717 534.099609,416.764923  C530.230652,419.517120 525.711487,420.091156 520.650024,418.966919  C519.603516,418.420105 518.951355,417.885773 518.059631,417.143250  z\"})),_path2589||(_path2589=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M550.761658,413.612396  C550.484131,414.155701 550.016968,414.521149 549.236450,414.865631  C549.092712,413.930206 549.320435,413.083832 550.761658,413.612396  z\"})),_path2590||(_path2590=/*#__PURE__*/React.createElement(\"path\",{fill:\"#92452E\",opacity:1,stroke:\"none\",d:\" M520.925903,420.735840  C520.574524,421.266113 520.115845,421.576599 519.372437,421.899323  C519.273621,421.350037 519.459656,420.788483 519.885742,420.029938  C520.411377,420.005310 520.642273,420.233002 520.925903,420.735840  z\"})),_path2591||(_path2591=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B8623C\",opacity:1,stroke:\"none\",d:\" M563.822021,409.659729  C563.474182,410.135895 562.960144,410.423615 562.145142,410.612549  C562.163330,409.671356 562.554810,408.954834 563.822021,409.659729  z\"})),_path2592||(_path2592=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CE855B\",opacity:1,stroke:\"none\",d:\" M548.998779,279.994171  C549.164612,279.989960 549.331726,279.991669 549.749390,279.989380  C550.855164,278.813293 551.883911,277.766418 552.762146,276.229248  C553.457886,275.689453 553.937744,275.375702 554.715454,275.037842  C555.596008,275.839935 556.463562,275.972839 557.718384,275.991608  C558.375366,276.346588 558.561035,276.753448 558.515503,277.562897  C557.485962,279.378754 555.514160,279.953583 554.779297,282.083923  C551.119385,284.991882 550.177551,288.396942 551.230835,292.750153  C547.141052,294.624847 548.055298,298.828186 547.654907,301.434387  C547.252502,304.053650 546.458191,306.060211 544.903381,307.611359  C541.719666,310.787476 542.844788,315.783478 539.340942,318.922150  C537.221741,316.267822 539.431030,313.779724 539.471069,311.155579  C539.498047,309.389038 539.810364,307.626862 539.992676,305.431396  C539.862976,304.806641 539.735535,304.613220 539.655151,304.076111  C540.682068,301.965271 541.816284,300.241669 541.306946,297.702423  C543.218323,292.942688 542.283813,287.871735 544.768799,283.274963  C545.007324,283.007568 545.497925,282.990936 545.743286,282.981934  C547.008179,282.300171 548.210754,281.821228 548.802673,280.249817  C548.992676,280.005066 549.000000,280.000122 548.998779,279.994171  z\"})),_path2593||(_path2593=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M540.068848,303.692078  C540.000000,304.002045 539.999146,304.501068 539.994751,304.750549  C535.500671,309.365784 534.837219,314.927490 535.478943,320.686096  C535.770691,323.303528 536.333252,325.831421 535.257935,328.714417  C533.171021,327.426147 532.970337,325.323090 532.989990,323.107880  C533.026794,318.961243 533.132019,314.808655 532.963684,310.668518  C532.771729,305.947937 533.009766,301.345886 535.789124,297.325989  C538.939880,292.768768 539.913635,286.912537 544.666016,283.065308  C544.351562,287.843292 545.410339,293.004730 542.131042,297.687683  C541.769226,299.935211 540.482239,301.496918 540.068848,303.692078  z\"})),_path2594||(_path2594=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M548.715393,280.138428  C549.038879,281.607239 548.772583,282.970001 546.355957,282.969727  C546.805054,282.072510 547.621582,281.172150 548.715393,280.138428  z\"})),_path2595||(_path2595=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M521.058594,533.331177  C522.138855,532.423096 523.280151,531.841309 524.713318,531.127319  C525.753235,530.996277 526.501343,530.997437 527.623535,530.999268  C528.256714,531.496155 528.515930,531.992310 528.886841,532.745483  C526.521301,535.013916 524.037415,536.944702 521.058594,533.331177  z\"})),_path2596||(_path2596=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EE9E7C\",opacity:1,stroke:\"none\",d:\" M538.765381,533.721436  C536.338745,534.803772 533.686096,535.427429 531.064880,533.340210  C533.625000,531.147400 536.102539,531.879089 538.765381,533.721436  z\"})),_path2597||(_path2597=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FCA48A\",opacity:1,stroke:\"none\",d:\" M512.954956,533.368774  C513.752502,533.012207 514.497253,533.012207 515.614136,533.017334  C517.555603,536.577026 519.969971,538.346558 524.112854,537.528503  C527.290161,536.901062 530.591187,538.572937 533.858276,537.298523  C534.314819,537.120422 535.568237,537.907471 535.841248,538.520264  C537.137573,541.430115 537.649963,544.779419 541.483398,545.864685  C542.242310,546.079529 542.039185,547.674805 541.505310,548.591492  C540.921509,549.593811 539.998230,549.860168 538.940125,549.441101  C536.174561,548.345703 533.710388,549.581055 531.231689,550.466309  C530.325745,550.789917 528.903503,551.425049 528.828064,552.051941  C527.764221,560.881226 519.445740,556.860718 514.970520,559.627441  C513.507141,560.532104 509.953308,559.920227 507.373901,559.877014  C499.854889,559.751038 492.896057,557.964905 487.029053,552.662781  C484.844116,550.688232 483.863739,548.307129 483.303467,545.886841  C482.467255,542.274231 485.525208,542.998535 487.540527,543.142761  C489.124664,543.256165 491.012451,544.462280 491.753235,542.122559  C494.176514,534.468384 500.688965,535.644104 506.481628,534.911560  C508.608826,534.642517 511.462555,537.651428 512.954956,533.368774  z\"})),_path2598||(_path2598=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FDA796\",opacity:1,stroke:\"none\",d:\" M434.640228,395.065857  C437.392273,395.016815 439.685913,394.308624 441.596405,393.084930  C444.508057,391.220001 447.065552,389.977448 449.864380,393.173248  C450.818542,394.262787 452.039978,393.492371 453.056732,392.958954  C455.355804,391.752777 457.629395,391.445343 459.168274,393.919769  C460.585327,396.198334 460.289734,398.500092 458.718079,400.844177  C456.937225,403.500275 453.768860,405.434784 453.999542,409.616577  C451.669220,410.174500 450.525055,411.796997 449.689514,413.671600  C446.418579,421.010345 440.646362,426.611938 436.194427,433.129181  C435.682922,433.878021 434.362366,434.905823 433.868103,434.703217  C429.918549,433.084747 428.120361,436.357605 424.900635,438.254608  C430.532043,439.426910 429.383759,441.374786 426.049561,443.318878  C423.545959,444.778687 422.734222,449.400879 419.358185,448.319550  C417.095032,447.594666 416.458984,443.326569 414.485077,442.040466  C411.192413,439.895081 410.773895,437.380707 410.989655,434.130890  C411.187317,431.153595 409.710480,429.893677 406.790192,429.980652  C403.892731,430.066956 402.093750,428.326202 401.225342,425.830353  C400.604156,424.045013 400.786102,421.658356 402.911926,421.228394  C405.666626,420.671143 407.619019,416.731750 411.325714,419.637604  C414.755188,422.326233 416.191925,421.505798 417.020721,417.123901  C418.051575,411.673737 421.191650,407.812714 425.726074,404.818756  C427.729523,403.495911 429.177277,404.708344 430.809784,405.379425  C431.748535,405.765320 432.751526,406.219025 433.500427,405.197113  C434.078247,404.408752 433.489563,403.714691 433.044556,402.980774  C431.270813,400.055267 431.436432,397.374664 434.640228,395.065857  z\"})),_path2599||(_path2599=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M557.691833,278.329041  C557.979919,277.545624 557.999451,277.103241 558.037720,276.329041  C561.416382,276.952972 564.832886,277.326813 568.602783,276.947937  C569.023193,279.007660 567.338074,279.374390 565.976685,280.320099  C561.720398,283.276978 562.232483,286.936157 566.721252,289.596405  C569.192627,291.061035 571.888550,291.577362 574.729004,292.785461  C575.140015,293.514313 575.026184,293.892456 574.304932,294.113892  C572.595581,294.034180 571.214111,294.027161 569.418091,294.021667  C566.510376,294.569763 564.244751,292.440125 561.317871,293.420715  C555.649658,291.469086 556.480957,286.959595 556.505127,282.366333  C556.491577,280.758026 556.694092,279.641510 557.691833,278.329041  z\"})),_path2600||(_path2600=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M569.341797,276.069122  C569.997253,271.347748 570.007080,271.335968 573.468018,274.229950  C574.226135,274.863831 575.011047,274.928711 575.638000,274.272827  C577.236816,272.600159 579.252930,273.059631 581.598755,273.048035  C579.947571,276.663452 576.252380,277.649933 572.364990,278.958466  C570.822327,278.370087 571.240601,276.436218 569.341797,276.069122  z\"})),_path2601||(_path2601=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M574.066528,294.391907  C574.277283,293.911438 574.530823,293.719910 574.855835,293.259308  C579.446655,293.152740 583.686768,290.593750 588.631653,291.943634  C588.420471,293.711639 586.698242,293.792847 585.208862,294.749207  C581.404053,294.092255 577.729065,296.620667 574.066528,294.391907  z\"})),_path2602||(_path2602=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M625.590576,317.002319  C628.494019,319.746704 630.573608,322.702942 630.875977,326.960754  C626.583008,328.193695 624.476318,323.739044 620.454224,323.014740  C618.551025,321.646759 616.913696,320.562195 614.398438,321.148438  C611.814209,321.361359 609.661133,320.786499 607.104980,320.431183  C601.198608,319.996429 595.649475,320.312286 589.746765,320.051941  C588.399231,320.302460 587.409912,320.362366 586.057007,320.390564  C585.222961,320.357513 584.752258,320.310059 583.943970,320.184570  C582.722839,319.925720 581.837036,319.748108 580.602905,319.550354  C580.071411,319.333679 579.875854,319.204346 579.497192,318.770935  C578.577576,316.183228 580.063904,314.880829 581.740601,313.296814  C581.996338,313.044037 581.997498,313.024353 582.006653,313.020264  C582.981140,313.201874 584.227295,313.872101 584.869446,313.500031  C593.585876,308.449951 602.170166,312.265442 610.751404,313.799225  C615.598145,314.665466 620.375183,315.921387 625.590576,317.002319  z\"})),_path2603||(_path2603=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M550.994263,345.378571  C552.102234,345.310242 553.211853,345.616821 554.666809,345.959869  C556.462646,344.585327 558.319275,344.188629 560.107361,344.707977  C566.793884,346.650024 573.484009,348.633179 579.582764,352.125519  C580.449524,352.621887 581.107422,353.401733 581.773193,354.666901  C583.790527,357.118439 587.136658,356.000732 588.935242,358.643616  C588.699646,359.461884 588.379517,359.934998 588.030884,360.704041  C585.303833,363.002869 583.302551,360.283997 581.129272,359.707947  C572.516296,357.425049 564.066956,354.529694 555.528870,351.954651  C553.617432,351.378143 552.509521,350.007812 551.162842,348.315063  C550.998108,347.253601 550.997009,346.503540 550.994263,345.378571  z\"})),_path2604||(_path2604=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47152\",opacity:1,stroke:\"none\",d:\" M557.491821,281.685760  C558.517883,285.699127 556.502808,290.317139 561.603271,292.929688  C562.074951,293.244843 562.227783,293.390320 562.180237,293.780823  C561.985779,294.769073 561.991760,295.512329 562.000122,296.627167  C558.127258,296.959045 553.979553,297.721283 551.270996,293.226257  C548.203369,286.811676 548.518982,285.395721 553.705688,282.145905  C554.956421,281.199738 555.991577,280.953369 557.491821,281.685760  z\"})),_path2605||(_path2605=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A664E\",opacity:1,stroke:\"none\",d:\" M582.159424,354.690643  C576.537354,351.610229 570.342468,349.995178 564.478516,347.581940  C561.635681,346.411987 558.871033,345.825623 555.442139,345.996857  C554.373596,343.912231 553.735046,341.828156 553.049316,339.382874  C553.386353,337.875946 554.179504,337.396149 555.681885,337.797363  C563.180054,340.380005 570.518005,341.735260 578.110962,341.155975  C580.458679,340.976837 582.694153,341.249939 585.009033,341.659821  C586.517944,341.927032 588.317810,343.828644 589.940918,341.299438  C590.746216,340.054443 591.757080,339.927032 593.220215,340.110046  C594.627625,340.596436 595.285461,341.379761 595.922485,342.670288  C596.015930,344.417664 596.000122,345.795074 595.973877,347.585632  C595.637634,347.998627 595.291931,348.071014 594.989136,347.987549  C588.840332,346.292786 583.493835,346.164642 582.159424,354.690643  z\"})),_path2606||(_path2606=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M620.238281,336.013794  C614.984802,337.401611 610.981567,341.260132 605.228516,341.567413  C603.997498,342.995453 603.246338,342.347107 602.368408,341.205750  C602.010925,339.849701 602.252747,338.897156 602.717102,337.621979  C602.954346,337.076111 603.059082,336.864014 603.343994,336.350891  C604.878174,334.141907 605.595825,332.033264 605.499146,329.315063  C605.442017,327.398376 605.539246,325.865051 606.440247,324.093018  C609.624695,321.723328 612.409729,322.760803 615.515259,324.433350  C617.471985,325.940735 619.163452,327.118103 621.437317,328.120605  C622.191895,328.701935 622.530640,329.127747 622.944641,330.008026  C623.425903,332.834839 623.128845,334.998901 620.238281,336.013794  z\"})),_path2607||(_path2607=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M616.116821,326.282379  C613.250000,325.042572 610.885620,323.204468 607.397095,323.990601  C603.869019,322.892914 605.670044,321.194122 606.723816,319.311096  C609.389648,319.302612 611.786621,319.601837 614.587402,319.926453  C616.632690,320.080048 618.128662,320.651398 619.842041,321.634399  C624.394897,321.863831 626.849243,325.344574 630.541992,327.234070  C630.975830,328.670288 631.724121,329.654449 632.787415,330.794617  C633.963013,334.231506 631.596863,334.167572 629.740417,333.876526  C627.179749,333.475128 624.745056,332.469971 622.590210,330.193878  C622.079468,329.588959 621.827698,329.320984 621.362183,328.878387  C619.633911,327.812531 618.089417,326.982574 616.116821,326.282379  z\"})),_path2608||(_path2608=/*#__PURE__*/React.createElement(\"path\",{fill:\"#703C2A\",opacity:1,stroke:\"none\",d:\" M622.245056,330.235474  C624.601196,330.205383 626.739746,330.910034 628.716064,332.108215  C630.181396,332.996521 631.673096,333.704224 632.947632,331.328308  C635.463074,331.543457 637.315918,333.069061 634.288757,334.595581  C630.307739,336.603058 625.778992,337.578796 621.416321,338.736481  C620.330750,339.024506 620.071045,337.582520 619.909790,336.197998  C621.525635,334.475037 622.077332,332.648438 622.245056,330.235474  z\"})),_path2609||(_path2609=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M602.480103,339.602722  C603.350281,340.462769 603.842041,341.080444 604.635254,341.749207  C605.164307,342.914337 605.391968,344.028381 605.730957,345.687042  C602.514709,344.836182 600.102722,342.192993 596.431213,343.026154  C595.377136,342.673767 594.722534,342.307251 593.984009,341.657837  C596.102356,338.539520 599.144165,339.121643 602.480103,339.602722  z\"})),_path2610||(_path2610=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M555.995239,337.597534  C555.188843,338.270233 554.385803,338.512329 553.292480,338.888062  C550.484863,334.079071 551.632751,323.043579 555.718201,320.278168  C558.463440,318.419952 562.791321,319.148560 565.136719,316.146393  C566.577576,314.302094 568.177673,313.797394 570.685669,314.069458  C569.673767,317.326508 566.335999,318.852875 563.802490,320.331024  C556.935913,324.337250 556.477051,330.595764 555.995239,337.597534  z\"})),_path2611||(_path2611=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A35A44\",opacity:1,stroke:\"none\",d:\" M562.362976,294.027039  C561.979858,294.025848 561.956177,293.561310 561.939148,293.330353  C564.260437,290.934998 566.319397,293.371735 568.761108,293.761566  C566.919495,296.199310 564.831787,293.871368 562.362976,294.027039  z\"})),_path2612||(_path2612=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9A563B\",opacity:1,stroke:\"none\",d:\" M575.667114,312.022583  C575.539490,313.062622 574.796021,313.767914 573.300476,313.953735  C573.124084,312.562805 573.977966,312.001160 575.667114,312.022583  z\"})),_path2613||(_path2613=/*#__PURE__*/React.createElement(\"path\",{fill:\"#211918\",opacity:1,stroke:\"none\",d:\" M603.005493,339.578583  C600.262573,340.979736 597.502197,341.068024 594.318176,341.248322  C592.858887,341.256592 591.817749,341.138214 590.384216,340.989014  C586.847717,339.028290 582.331543,340.691956 579.485840,336.998230  C576.501465,334.996582 576.274414,332.067139 575.935547,328.802673  C576.086609,327.395111 576.553406,326.452087 576.677979,325.048645  C577.337280,322.541107 578.853638,321.458099 581.255371,320.965515  C582.176697,320.845123 582.779114,320.807007 583.580444,320.440857  C584.082336,320.034912 584.366821,319.798981 584.913086,319.458832  C586.190247,319.237366 587.216187,319.132935 588.625305,319.089691  C591.323914,322.008362 589.300598,324.547638 588.229980,327.490112  C587.715515,328.918091 585.472900,329.296051 586.530151,330.761688  C587.336914,331.880066 588.083435,330.818787 588.627075,329.604095  C588.922974,328.828583 589.171814,328.423035 589.750854,327.815002  C590.497314,327.416595 590.972595,327.347473 591.805115,327.515137  C595.705505,331.006226 600.031677,333.364380 603.948486,336.779938  C603.783447,337.836273 603.467957,338.574188 603.005493,339.578583  z\"})),_path2614||(_path2614=/*#__PURE__*/React.createElement(\"path\",{fill:\"#55322D\",opacity:1,stroke:\"none\",d:\" M583.286377,321.947754  C580.993408,322.048828 579.071411,322.296539 577.984619,324.762695  C577.121155,325.816498 576.405212,326.574890 575.413757,327.500336  C573.758545,328.613708 572.748291,330.023499 570.988159,331.001862  C569.666626,331.397369 568.693481,331.864777 567.308716,332.011597  C564.897217,331.889923 563.927429,332.837524 563.992981,334.967712  C564.034668,336.322266 563.934753,337.753296 562.065735,337.870300  C560.654358,337.958618 559.333435,337.494537 558.565063,336.332581  C557.665894,334.972778 557.955017,333.589111 558.872131,332.173645  C560.597534,329.510559 564.103943,329.283630 565.999512,326.469482  C570.058594,322.876495 574.776123,320.967072 579.662842,319.038513  C579.960938,319.253265 580.449036,319.272827 580.690430,319.235535  C581.384521,319.116577 581.839722,319.052429 582.642029,318.988190  C583.479187,319.004150 583.971985,319.040436 584.814575,319.209229  C585.118835,319.701965 585.073303,320.062164 585.002014,320.695770  C584.598511,321.419678 584.157227,321.777374 583.286377,321.947754  z\"})),_path2615||(_path2615=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M579.976379,318.864990  C575.978760,322.277893 571.737976,324.804260 566.462891,326.100891  C561.530090,323.251862 565.793457,321.558807 567.312378,320.599731  C571.771179,317.784576 576.600708,315.556641 581.640686,313.071381  C581.999329,315.102570 579.690186,316.307983 579.976379,318.864990  z\"})),_path2616||(_path2616=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9F8D83\",opacity:1,stroke:\"none\",d:\" M569.812134,330.374542  C571.972595,329.715088 572.251221,327.172913 574.607361,326.895111  C575.723328,326.483185 576.349487,326.793915 577.078613,327.657349  C577.058472,330.875580 578.364319,333.445892 579.063721,336.540161  C575.489807,339.187561 572.492981,336.848297 569.094116,335.268921  C567.806152,333.358185 568.434326,331.967896 569.812134,330.374542  z\"})),_path2617||(_path2617=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M569.771484,330.095123  C569.739014,331.498688 569.378723,332.898865 568.927612,334.654694  C567.455505,334.844635 567.009583,333.943298 566.999695,332.349426  C567.514343,330.996002 568.246460,330.246063 569.771484,330.095123  z\"})),_path2618||(_path2618=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D59468\",opacity:1,stroke:\"none\",d:\" M561.010376,271.404297  C561.429565,270.761932 561.916931,270.415253 562.713684,270.039551  C562.874512,270.898956 563.343262,272.063812 562.088867,272.452332  C561.852417,272.525543 561.420288,271.966980 561.010376,271.404297  z\"})),_path2619||(_path2619=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F09576\",opacity:1,stroke:\"none\",d:\" M501.205719,289.819092  C500.681152,289.528442 500.367859,289.059906 500.028839,288.298706  C500.885620,288.195557 501.997559,288.186646 501.205719,289.819092  z\"})),_path2620||(_path2620=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DD906A\",opacity:1,stroke:\"none\",d:\" M552.647766,276.062012  C553.246521,277.905304 552.274719,279.019958 550.313721,279.845612  C550.255493,278.387115 550.624207,276.856812 552.647766,276.062012  z\"})),_path2621||(_path2621=/*#__PURE__*/React.createElement(\"path\",{fill:\"#FCA48A\",opacity:1,stroke:\"none\",d:\" M539.070129,397.651672  C535.630127,400.975922 533.888184,405.263855 530.196838,408.145538  C527.081482,410.577515 524.698608,411.319885 521.596802,408.781494  C519.026733,406.678223 516.609253,404.408539 515.613892,401.146088  C514.521790,397.566650 518.571350,395.832184 518.952209,392.358795  C521.210510,389.458191 521.351624,385.502441 526.019348,384.499695  C528.779663,383.906738 530.387451,383.657104 532.354797,385.575958  C534.100037,387.278168 535.879395,389.088593 537.975159,390.256470  C541.587280,392.269348 541.552307,394.494629 539.070129,397.651672  z\"})),_path2622||(_path2622=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M506.241669,412.302979  C504.819183,412.105103 503.777771,411.947784 502.383728,411.385284  C504.671417,411.151428 503.269165,406.383820 506.257965,407.334717  C509.989227,408.521820 514.366211,408.472534 516.947144,412.642090  C513.405518,414.893494 510.137787,411.666382 506.241669,412.302979  z\"})),_path2623||(_path2623=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E08865\",opacity:1,stroke:\"none\",d:\" M505.975891,412.598267  C509.516937,409.256042 512.802551,412.273621 516.616455,412.950745  C517.128662,413.302856 517.325012,413.554138 517.796997,413.872650  C517.983826,414.511108 517.960327,415.031250 517.889282,415.942932  C516.194946,415.821350 514.548218,415.308258 512.530029,414.789062  C510.352509,413.456635 507.746887,414.754059 505.975891,412.598267  z\"})),_path2624||(_path2624=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E78D6E\",opacity:1,stroke:\"none\",d:\" M501.824615,410.858582  C502.031097,410.980072 502.015930,411.220734 502.016785,411.340515  C501.272705,411.531342 500.527802,411.602356 499.406158,411.660309  C498.540375,411.410980 498.051331,411.174744 497.299622,410.841919  C497.481079,410.485596 497.925262,410.225830 498.636627,409.939667  C499.341797,409.580231 499.831848,409.460754 500.697418,409.777008  C501.155273,410.297485 501.354370,410.543457 501.824615,410.858582  z\"})),_path2625||(_path2625=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E88F6D\",opacity:1,stroke:\"none\",d:\" M500.973450,409.713104  C500.550598,409.990173 500.080353,409.981201 499.256958,409.942749  C499.311096,408.641541 499.771637,407.591400 500.973450,409.713104  z\"})),_path2626||(_path2626=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DA9264\",opacity:1,stroke:\"none\",d:\" M540.344543,303.934143  C537.841125,301.475220 539.531311,299.882782 541.680420,298.166748  C543.874939,300.471924 542.832703,302.290710 540.344543,303.934143  z\"})),_path2627||(_path2627=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B17D5F\",opacity:1,stroke:\"none\",d:\" M557.863770,281.554199  C556.812378,281.965912 555.800354,281.983856 554.406372,282.002747  C553.910828,279.729248 554.594177,278.093994 557.590820,278.002869  C557.941345,279.045532 557.922302,280.102997 557.863770,281.554199  z\"})),_path2628||(_path2628=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M586.777588,328.678101  C587.257935,325.403107 589.127197,322.913757 588.997314,319.538544  C594.723389,317.549561 600.486938,318.748138 606.612061,318.927490  C606.831604,320.523315 606.670532,322.043213 606.747925,323.778687  C607.005981,325.710358 607.025452,327.426514 606.961914,329.564240  C605.559448,331.966949 605.431702,334.397491 604.285278,336.817688  C604.146790,337.139282 604.093140,337.150970 604.096069,337.124695  C598.934753,336.066864 595.542847,332.404449 591.990295,328.584473  C591.873962,327.475830 591.402893,327.220734 590.446289,327.402008  C590.130493,328.100189 590.083252,328.643982 590.013000,329.596558  C588.538391,330.914795 587.309692,331.012451 586.777588,328.678101  z\"})),_path2629||(_path2629=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M620.031555,321.512939  C618.562500,321.380005 616.991272,320.939758 615.205688,320.225708  C617.073425,318.652100 618.496521,319.948334 620.031555,321.512939  z\"})),_path2630||(_path2630=/*#__PURE__*/React.createElement(\"path\",{fill:\"#935E49\",opacity:1,stroke:\"none\",d:\" M582.817749,318.755707  C582.583679,319.622101 582.055786,319.906830 581.118896,319.367981  C581.319519,318.495575 581.794373,318.021240 582.817749,318.755707  z\"})),_path2631||(_path2631=/*#__PURE__*/React.createElement(\"path\",{fill:\"#43302C\",opacity:1,stroke:\"none\",d:\" M604.456787,336.965332  C604.196777,334.628357 604.450317,332.177094 606.535645,330.074036  C607.170959,332.563507 606.319153,334.786133 604.456787,336.965332  z\"})),_path2632||(_path2632=/*#__PURE__*/React.createElement(\"path\",{fill:\"#734A36\",opacity:1,stroke:\"none\",d:\" M616.000244,326.448730  C617.858154,325.865417 619.619568,326.336700 621.029907,328.385742  C619.119019,328.994629 617.592712,328.020416 616.000244,326.448730  z\"})),_path2633||(_path2633=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6E6D6D\",opacity:1,stroke:\"none\",d:\" M586.572754,328.283356  C587.016418,329.820648 588.129944,329.933197 589.647583,329.981812  C590.007629,332.114929 588.847900,333.014191 586.862244,332.908661  C585.646851,332.844025 584.508301,332.349731 584.172058,331.084991  C583.734009,329.437347 584.818359,328.695770 586.572754,328.283356  z\"})),_path2634||(_path2634=/*#__PURE__*/React.createElement(\"path\",{fill:\"#908B8B\",opacity:1,stroke:\"none\",d:\" M590.480225,327.656677  C589.978882,326.411224 589.647583,324.946960 591.433350,325.147369  C592.688599,325.288330 593.287537,326.412506 592.235046,327.986237  C591.575684,328.062500 591.179199,327.909729 590.480225,327.656677  z\"})),_path2635||(_path2635=/*#__PURE__*/React.createElement(\"path\",{fill:\"#695A52\",opacity:1,stroke:\"none\",d:\" M577.466431,327.771606  C576.657227,327.703857 576.071838,327.420258 575.208130,326.960083  C575.153015,325.474396 576.009705,325.030243 577.562439,325.101196  C577.821533,325.924774 577.755981,326.740265 577.466431,327.771606  z\"})),_path2636||(_path2636=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2628\",opacity:1,stroke:\"none\",d:\" M583.173584,322.183899  C583.463989,321.654480 583.930176,321.342407 584.686279,320.999756  C584.800659,321.863098 584.838257,322.999237 583.173584,322.183899  z\"})));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgMahaPic);export default __webpack_public_path__+\"static/media/Maha Pic.459bebb5f1131654325466c6e8212ca5.svg\";export{ForwardRef as ReactComponent};","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMaha(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"100%\",\n    viewBox: \"0 0 500 500\",\n    enableBackground: \"new 0 0 500 500\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#272727\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M333.000000,501.000000  C222.000031,501.000000 111.500053,501.000000 1.000059,501.000000  C1.000040,334.333405 1.000040,167.666794 1.000020,1.000149  C167.666565,1.000099 334.333130,1.000099 500.999756,1.000050  C500.999847,167.666519 500.999847,334.333038 500.999939,500.999786  C445.166656,501.000000 389.333344,501.000000 333.000000,501.000000  M197.789795,443.747528  C222.941071,451.066833 248.687912,453.221771 274.479279,449.662659  C338.611267,440.812561 388.378143,409.025970 422.428101,353.666138  C428.806549,343.295776 433.578613,331.937408 439.616455,319.997803  C405.277069,319.997803 372.667633,319.997803 340.058197,319.997803  C307.485474,319.997803 274.912750,319.997803 242.822723,319.997803  C240.479797,310.114349 243.569687,302.776184 248.992630,295.315857  C268.371735,268.656067 287.147705,241.557785 306.138489,214.615967  C306.842285,213.617523 307.406769,212.520905 308.434021,210.805771  C287.592438,210.805771 267.526855,210.805771 247.446228,210.805771  C247.446228,199.273117 247.446228,188.186966 247.446228,177.101089  C291.593658,177.101089 335.459106,177.101089 379.262543,177.101089  C380.583740,185.858994 378.931213,192.981979 373.657745,200.192734  C354.202637,226.794998 335.463287,253.920761 316.468292,280.859161  C315.508362,282.220490 314.674591,283.670746 313.234161,285.944427  C358.868164,285.944427 403.259094,285.944427 447.616089,285.944427  C463.886230,202.051819 420.960724,101.351776 320.601288,63.571499  C228.873901,29.040766 124.196861,66.626465 75.663445,154.955627  C30.337143,237.447983 52.284374,332.714172 103.955925,385.541779  C103.955925,315.702911 103.955925,246.346878 103.955925,176.695999  C125.066528,176.695999 145.704941,176.633209 166.340195,176.859055  C167.521423,176.871994 169.330078,179.060516 169.740784,180.542938  C172.980560,192.236313 175.936935,204.007996 179.008286,215.748322  C182.764191,230.105301 186.547043,244.455231 190.684814,260.203369  C191.463028,257.959198 191.829712,257.096069 192.063812,256.198364  C198.649872,230.943512 205.199890,205.679199 211.859589,180.443848  C212.219009,179.081879 213.424301,176.937897 214.330276,176.888458  C220.231033,176.566422 226.157913,176.723022 232.262329,176.723022  C232.262329,186.756943 231.850571,196.098221 232.364349,205.388336  C233.038635,217.580536 230.415604,229.201385 227.382095,240.781906  C223.043884,257.343292 218.457458,273.839752 213.954742,290.357880  C211.262131,300.235657 208.527039,310.101807 205.804276,319.997803  C194.987289,319.997803 184.659714,319.858612 174.339691,320.077332  C170.969955,320.148773 169.542175,319.356598 168.592972,315.816406  C160.887909,287.079163 152.893097,258.419586 144.973328,229.740005  C144.528046,228.127548 143.965973,226.547348 143.317245,224.509064  C142.532806,225.473129 142.150513,225.729813 142.171478,225.947662  C143.425461,238.978165 145.713486,251.997299 145.819611,265.034485  C146.230560,315.523499 145.959671,366.018219 145.890442,416.510712  C145.886627,419.287384 146.041046,421.418762 148.969910,423.080017  C164.218750,431.729156 180.079773,438.854156 197.789795,443.747528  z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFEFE\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M197.410706,443.597565  C180.079773,438.854156 164.218750,431.729156 148.969910,423.080017  C146.041046,421.418762 145.886627,419.287384 145.890442,416.510712  C145.959671,366.018219 146.230560,315.523499 145.819611,265.034485  C145.713486,251.997299 143.425461,238.978165 142.171478,225.947662  C142.150513,225.729813 142.532806,225.473129 143.317245,224.509064  C143.965973,226.547348 144.528046,228.127548 144.973328,229.740005  C152.893097,258.419586 160.887909,287.079163 168.592972,315.816406  C169.542175,319.356598 170.969955,320.148773 174.339691,320.077332  C184.659714,319.858612 194.987289,319.997803 205.804276,319.997803  C208.527039,310.101807 211.262131,300.235657 213.954742,290.357880  C218.457458,273.839752 223.043884,257.343292 227.382095,240.781906  C230.415604,229.201385 233.038635,217.580536 232.364349,205.388336  C231.850571,196.098221 232.262329,186.756943 232.262329,176.723022  C226.157913,176.723022 220.231033,176.566422 214.330276,176.888458  C213.424301,176.937897 212.219009,179.081879 211.859589,180.443848  C205.199890,205.679199 198.649872,230.943512 192.063812,256.198364  C191.829712,257.096069 191.463028,257.959198 190.684814,260.203369  C186.547043,244.455231 182.764191,230.105301 179.008286,215.748322  C175.936935,204.007996 172.980560,192.236313 169.740784,180.542938  C169.330078,179.060516 167.521423,176.871994 166.340195,176.859055  C145.704941,176.633209 125.066528,176.695999 103.955925,176.695999  C103.955925,246.346878 103.955925,315.702911 103.955925,385.541779  C52.284374,332.714172 30.337143,237.447983 75.663445,154.955627  C124.196861,66.626465 228.873901,29.040766 320.601288,63.571499  C420.960724,101.351776 463.886230,202.051819 447.616089,285.944427  C403.259094,285.944427 358.868164,285.944427 313.234161,285.944427  C314.674591,283.670746 315.508362,282.220490 316.468292,280.859161  C335.463287,253.920761 354.202637,226.794998 373.657745,200.192734  C378.931213,192.981979 380.583740,185.858994 379.262543,177.101089  C335.459106,177.101089 291.593658,177.101089 247.446228,177.101089  C247.446228,188.186966 247.446228,199.273117 247.446228,210.805771  C267.526855,210.805771 287.592438,210.805771 308.434021,210.805771  C307.406769,212.520905 306.842285,213.617523 306.138489,214.615967  C287.147705,241.557785 268.371735,268.656067 248.992630,295.315857  C243.569687,302.776184 240.479797,310.114349 242.822723,319.997803  C274.912750,319.997803 307.485474,319.997803 340.058197,319.997803  C372.667633,319.997803 405.277069,319.997803 439.616455,319.997803  C433.578613,331.937408 428.806549,343.295776 422.428101,353.666138  C388.378143,409.025970 338.611267,440.812561 274.479279,449.662659  C248.687912,453.221771 222.941071,451.066833 197.410706,443.597565  M231.386871,237.948456  C230.688568,257.096924 229.990280,276.245422 229.291992,295.393890  C229.796661,295.462463 230.301331,295.531006 230.806015,295.599579  C244.861542,275.686920 258.997406,255.829895 272.873291,235.792831  C274.653931,233.221588 275.083313,229.714584 276.338745,226.058304  C260.996338,226.058304 247.073975,226.058304 232.823959,226.058304  C232.383591,229.822403 231.960999,233.434387 231.386871,237.948456  M118.507454,160.773026  C133.975342,160.772949 149.443253,160.791229 164.911072,160.760223  C168.905701,160.752228 168.905563,160.681168 168.174927,156.861084  C146.772705,156.861084 125.368492,156.861084 103.964279,156.861084  C103.684822,157.297256 103.405357,157.733414 103.125900,158.169586  C104.262115,159.037018 105.340034,160.542191 106.545471,160.652390  C110.174248,160.984100 113.852684,160.772629 118.507454,160.773026  M160.972794,339.562836  C160.550537,344.623871 160.128281,349.684906 159.684204,355.007416  C166.926636,355.257080 162.193756,348.829865 165.418991,346.773651  C166.105194,348.621033 166.635635,350.466919 167.476486,352.158539  C167.995224,353.202118 168.987122,354.010529 169.766602,354.924500  C170.497452,353.947723 171.415558,353.057739 171.917282,351.974792  C172.769882,350.134613 173.360260,348.172882 174.545364,344.940735  C175.638931,355.195251 175.638931,355.195251 179.703079,354.217255  C179.153915,348.507477 178.603745,342.787170 178.054825,337.079926  C170.222214,335.821594 173.160507,343.956207 169.287170,346.032135  C168.308167,343.591339 167.541260,341.018860 166.284088,338.713745  C164.743774,335.889404 162.792648,335.489777 160.972794,339.562836  M299.389496,343.313843  C297.070618,340.806976 296.868469,335.509583 291.001801,337.260651  C291.001801,342.185242 291.109985,347.159912 290.965118,352.127228  C290.862640,355.641327 292.616150,355.394806 295.472290,354.441772  C295.472290,351.469818 295.472290,348.489960 295.472290,345.458984  C299.989014,347.964935 299.254791,355.837860 306.502838,354.884827  C306.502838,348.766296 306.502838,342.997223 306.502838,336.925964  C298.548126,336.685120 305.015930,344.189362 301.257874,345.965820  C300.792358,345.297058 300.325378,344.626221 299.389496,343.313843  M329.203033,344.557007  C329.203033,347.978149 329.203033,351.399323 329.203033,355.457397  C333.209167,354.953583 336.946686,355.436279 339.597443,353.963257  C346.299500,350.238892 337.074860,344.886230 340.190765,340.323639  C340.286499,340.183472 337.725311,337.547974 336.115631,337.093994  C334.040222,336.508667 331.674835,336.951477 329.203033,336.951477  C329.203033,339.635712 329.203033,341.614288 329.203033,344.557007  M211.259262,348.409393  C211.444443,350.517639 211.629608,352.625854 211.839706,355.017883  C213.248398,354.893066 214.450668,354.786560 215.665222,354.678925  C215.665222,348.657257 215.665222,343.055084 215.665222,337.166748  C214.292206,337.166748 213.087143,337.166748 211.744339,337.166748  C211.595230,339.478149 211.460159,341.572296 211.326996,343.636475  C209.356216,343.636475 207.652298,343.636475 205.969604,343.636475  C205.711075,336.901611 205.711075,336.901611 201.809814,337.487244  C201.809814,343.227234 201.809814,348.971008 201.809814,355.037476  C203.277405,354.887115 204.475235,354.764374 205.885651,354.619843  C205.885651,352.287476 205.885651,350.338806 205.885651,347.925812  C207.575897,347.925812 209.014435,347.925812 211.259262,348.409393  M182.140106,351.667419  C181.832886,352.673859 181.525650,353.680298 180.857086,355.870422  C183.205658,354.831543 184.890686,354.566071 185.822357,353.585114  C188.749023,350.503571 191.418381,350.542114 194.476440,353.634125  C195.434250,354.602570 197.253922,354.718658 199.629791,355.562592  C197.118134,349.354553 195.231277,344.405792 193.075623,339.577087  C192.579849,338.466522 191.177261,337.094391 190.162827,337.070312  C189.159805,337.046478 187.682434,338.371826 187.175522,339.460327  C185.429001,343.210602 184.015839,347.116089 182.140106,351.667419  M230.050354,339.259644  C228.420197,335.955658 226.125565,335.405273 224.464920,338.829529  C221.995529,343.921417 220.183655,349.332184 217.520065,356.049408  C220.222870,354.831207 221.898300,354.552063 222.828735,353.568329  C225.736267,350.494232 228.404846,350.545502 231.484299,353.650269  C232.438904,354.612701 234.261581,354.714142 236.639481,355.541077  C234.174316,349.491333 232.240250,344.744995 230.050354,339.259644  M280.309387,353.796722  C278.356293,348.885040 276.487701,343.936523 274.377350,339.093414  C273.965363,338.147949 272.621582,337.053650 271.695160,337.042297  C270.758545,337.030823 269.348297,338.076721 268.937408,339.008575  C266.687347,344.111145 264.680817,349.321075 262.590637,354.494141  C262.834595,354.825012 263.078583,355.155853 263.322571,355.486725  C264.686157,354.799744 266.378571,354.416809 267.349548,353.366730  C269.900330,350.608154 273.279480,350.635773 275.916626,353.285187  C276.885193,354.258270 278.852966,354.236755 280.309387,353.796722  M322.919586,354.577332  C324.239227,354.710052 325.558868,354.842804 327.395721,355.027557  C325.057281,349.204132 323.111053,344.109436 320.921844,339.121429  C320.499847,338.159882 319.143341,337.066284 318.185974,337.035736  C317.245667,337.005707 315.786346,338.042725 315.380890,338.971924  C313.137756,344.112854 311.146942,349.363892 309.069672,354.577179  C309.306793,354.902832 309.543945,355.228455 309.781067,355.554108  C311.219727,354.711365 312.937256,354.133362 314.039948,352.971680  C316.449341,350.433411 320.105438,350.677185 322.919586,354.577332  M250.073257,346.453003  C248.475403,349.110046 246.877563,351.767090 245.083740,354.750000  C250.532486,354.750000 255.423889,354.750000 260.627716,354.750000  C260.181793,348.856201 255.215973,352.662628 252.796387,350.395508  C255.312775,346.257294 257.926697,341.958710 260.859619,337.135498  C255.496933,337.135498 250.934158,337.135498 246.176682,337.135498  C245.854980,343.134888 251.145676,338.919678 252.995102,341.454651  C252.258728,342.743439 251.376465,344.287537 250.073257,346.453003  M286.980530,340.686035  C286.649628,336.882782 286.649628,336.882782 283.175201,337.610718  C283.175201,343.363678 283.175201,349.091156 283.175201,354.731079  C284.550201,354.731079 285.613586,354.731079 286.980591,354.731079  C286.980591,350.196503 286.980591,345.918945 286.980530,340.686035  z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#292929\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M231.462646,237.497421  C231.960999,233.434387 232.383591,229.822403 232.823959,226.058304  C247.073975,226.058304 260.996338,226.058304 276.338745,226.058304  C275.083313,229.714584 274.653931,233.221588 272.873291,235.792831  C258.997406,255.829895 244.861542,275.686920 230.806015,295.599579  C230.301331,295.531006 229.796661,295.462463 229.291992,295.393890  C229.990280,276.245422 230.688568,257.096924 231.462646,237.497421  z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3C3C3C\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M118.009598,160.773010  C113.852684,160.772629 110.174248,160.984100 106.545471,160.652390  C105.340034,160.542191 104.262115,159.037018 103.125900,158.169586  C103.405357,157.733414 103.684822,157.297256 103.964279,156.861084  C125.368492,156.861084 146.772705,156.861084 168.174927,156.861084  C168.905563,160.681168 168.905701,160.752228 164.911072,160.760223  C149.443253,160.791229 133.975342,160.772949 118.009598,160.773010  z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#323232\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M160.995483,339.122620  C162.792648,335.489777 164.743774,335.889404 166.284088,338.713745  C167.541260,341.018860 168.308167,343.591339 169.287170,346.032135  C173.160507,343.956207 170.222214,335.821594 178.054825,337.079926  C178.603745,342.787170 179.153915,348.507477 179.703079,354.217255  C175.638931,355.195251 175.638931,355.195251 174.545364,344.940735  C173.360260,348.172882 172.769882,350.134613 171.917282,351.974792  C171.415558,353.057739 170.497452,353.947723 169.766602,354.924500  C168.987122,354.010529 167.995224,353.202118 167.476486,352.158539  C166.635635,350.466919 166.105194,348.621033 165.418991,346.773651  C162.193756,348.829865 166.926636,355.257080 159.684204,355.007416  C160.128281,349.684906 160.550537,344.623871 160.995483,339.122620  z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#383838\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M299.623962,343.634583  C300.325378,344.626221 300.792358,345.297058 301.257874,345.965820  C305.015930,344.189362 298.548126,336.685120 306.502838,336.925964  C306.502838,342.997223 306.502838,348.766296 306.502838,354.884827  C299.254791,355.837860 299.989014,347.964935 295.472290,345.458984  C295.472290,348.489960 295.472290,351.469818 295.472290,354.441772  C292.616150,355.394806 290.862640,355.641327 290.965118,352.127228  C291.109985,347.159912 291.001801,342.185242 291.001801,337.260651  C296.868469,335.509583 297.070618,340.806976 299.623962,343.634583  z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#333333\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M329.203033,344.074921  C329.203033,341.614288 329.203033,339.635712 329.203033,336.951477  C331.674835,336.951477 334.040222,336.508667 336.115631,337.093994  C337.725311,337.547974 340.286499,340.183472 340.190765,340.323639  C337.074860,344.886230 346.299500,350.238892 339.597443,353.963257  C336.946686,355.436279 333.209167,354.953583 329.203033,355.457397  C329.203033,351.399323 329.203033,347.978149 329.203033,344.074921  z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#363636\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M210.856110,348.167603  C209.014435,347.925812 207.575897,347.925812 205.885651,347.925812  C205.885651,350.338806 205.885651,352.287476 205.885651,354.619843  C204.475235,354.764374 203.277405,354.887115 201.809814,355.037476  C201.809814,348.971008 201.809814,343.227234 201.809814,337.487244  C205.711075,336.901611 205.711075,336.901611 205.969604,343.636475  C207.652298,343.636475 209.356216,343.636475 211.326996,343.636475  C211.460159,341.572296 211.595230,339.478149 211.744339,337.166748  C213.087143,337.166748 214.292206,337.166748 215.665222,337.166748  C215.665222,343.055084 215.665222,348.657257 215.665222,354.678925  C214.450668,354.786560 213.248398,354.893066 211.839706,355.017883  C211.629608,352.625854 211.444443,350.517639 210.856110,348.167603  z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#333333\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M182.307892,351.314941  C184.015839,347.116089 185.429001,343.210602 187.175522,339.460327  C187.682434,338.371826 189.159805,337.046478 190.162827,337.070312  C191.177261,337.094391 192.579849,338.466522 193.075623,339.577087  C195.231277,344.405792 197.118134,349.354553 199.629791,355.562592  C197.253922,354.718658 195.434250,354.602570 194.476440,353.634125  C191.418381,350.542114 188.749023,350.503571 185.822357,353.585114  C184.890686,354.566071 183.205658,354.831543 180.857086,355.870422  C181.525650,353.680298 181.832886,352.673859 182.307892,351.314941  z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#333333\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M230.178284,339.629150  C232.240250,344.744995 234.174316,349.491333 236.639481,355.541077  C234.261581,354.714142 232.438904,354.612701 231.484299,353.650269  C228.404846,350.545502 225.736267,350.494232 222.828735,353.568329  C221.898300,354.552063 220.222870,354.831207 217.520065,356.049408  C220.183655,349.332184 221.995529,343.921417 224.464920,338.829529  C226.125565,335.405273 228.420197,335.955658 230.178284,339.629150  z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#313131\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M280.337158,354.232849  C278.852966,354.236755 276.885193,354.258270 275.916626,353.285187  C273.279480,350.635773 269.900330,350.608154 267.349548,353.366730  C266.378571,354.416809 264.686157,354.799744 263.322571,355.486725  C263.078583,355.155853 262.834595,354.825012 262.590637,354.494141  C264.680817,349.321075 266.687347,344.111145 268.937408,339.008575  C269.348297,338.076721 270.758545,337.030823 271.695160,337.042297  C272.621582,337.053650 273.965363,338.147949 274.377350,339.093414  C276.487701,343.936523 278.356293,348.885040 280.337158,354.232849  z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#333333\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M322.688904,354.204834  C320.105438,350.677185 316.449341,350.433411 314.039948,352.971680  C312.937256,354.133362 311.219727,354.711365 309.781067,355.554108  C309.543945,355.228455 309.306793,354.902832 309.069672,354.577179  C311.146942,349.363892 313.137756,344.112854 315.380890,338.971924  C315.786346,338.042725 317.245667,337.005707 318.185974,337.035736  C319.143341,337.066284 320.499847,338.159882 320.921844,339.121429  C323.111053,344.109436 325.057281,349.204132 327.395721,355.027557  C325.558868,354.842804 324.239227,354.710052 322.688904,354.204834  z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#323232\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M250.283722,346.142334  C251.376465,344.287537 252.258728,342.743439 252.995102,341.454651  C251.145676,338.919678 245.854980,343.134888 246.176682,337.135498  C250.934158,337.135498 255.496933,337.135498 260.859619,337.135498  C257.926697,341.958710 255.312775,346.257294 252.796387,350.395508  C255.215973,352.662628 260.181793,348.856201 260.627716,354.750000  C255.423889,354.750000 250.532486,354.750000 245.083740,354.750000  C246.877563,351.767090 248.475403,349.110046 250.283722,346.142334  z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#292929\",\n    opacity: 1,\n    stroke: \"none\",\n    d: \" M286.980560,341.163696  C286.980591,345.918945 286.980591,350.196503 286.980591,354.731079  C285.613586,354.731079 284.550201,354.731079 283.175201,354.731079  C283.175201,349.091156 283.175201,343.363678 283.175201,337.610718  C286.649628,336.882782 286.649628,336.882782 286.980560,341.163696  z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMaha);\nexport default __webpack_public_path__ + \"static/media/Maha.71f0cc6c8d07224c0deb3b65cfbabbf9.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGithub(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 98,\n    height: 96,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\",\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.97ed8e7eef60d61ca469881dd6f34511.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _polygon, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGmail(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4caf50\",\n    d: \"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1e88e5\",\n    d: \"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#e53935\",\n    points: \"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#c62828\",\n    d: \"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbc02d\",\n    d: \"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGmail);\nexport default __webpack_public_path__ + \"static/media/gmail.e1bc2ceb745debf9361ad2160a79823a.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgKaggle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512px\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    viewBox: \"0 0 512 512\",\n    width: \"512px\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"_x31_89-kaggle\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M385.708,476.478L254.742,313.713l125.578-121.534c2.334-2.426,1.526-9.433-4.761-9.433h-62.16    c-3.145,0-6.288,1.618-9.433,4.761L185.128,307.604V32.738c0-4.491-2.247-6.737-6.738-6.737h-46.618    c-4.492,0-6.737,2.246-6.737,6.737v446.433c0,4.491,2.246,6.738,6.737,6.738h46.618c4.491,0,6.738-2.247,6.738-6.738v-97.91    l27.666-26.317l99.257,126.294c2.695,3.145,5.839,4.762,9.432,4.762h60.095c3.143,0,4.939-0.899,5.389-2.696L385.708,476.478z\",\n    style: {\n      fill: \"#20BEFF\"\n    }\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgKaggle);\nexport default __webpack_public_path__ + \"static/media/kaggle.6060ea88eb19c6660304e79b75537a9f.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLinkedin(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#0078d4\",\n    d: \"M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5 V37z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30,37V26.901c0-1.689-0.819-2.698-2.192-2.698c-0.815,0-1.414,0.459-1.779,1.364 c-0.017,0.064-0.041,0.325-0.031,1.114L26,37h-7V18h7v1.061C27.022,18.356,28.275,18,29.738,18c4.547,0,7.261,3.093,7.261,8.274 L37,37H30z M11,37V18h3.457C12.454,18,11,16.528,11,14.499C11,12.472,12.478,11,14.514,11c2.012,0,3.445,1.431,3.486,3.479 C18,16.523,16.521,18,14.485,18H18v19H11z\",\n    opacity: 0.05\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.5,36.5v-9.599c0-1.973-1.031-3.198-2.692-3.198c-1.295,0-1.935,0.912-2.243,1.677 c-0.082,0.199-0.071,0.989-0.067,1.326L25.5,36.5h-6v-18h6v1.638c0.795-0.823,2.075-1.638,4.238-1.638 c4.233,0,6.761,2.906,6.761,7.774L36.5,36.5H30.5z M11.5,36.5v-18h6v18H11.5z M14.457,17.5c-1.713,0-2.957-1.262-2.957-3.001 c0-1.738,1.268-2.999,3.014-2.999c1.724,0,2.951,1.229,2.986,2.989c0,1.749-1.268,3.011-3.015,3.011H14.457z\",\n    opacity: 0.07\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M12,19h5v17h-5V19z M14.485,17h-0.028C12.965,17,12,15.888,12,14.499C12,13.08,12.995,12,14.514,12 c1.521,0,2.458,1.08,2.486,2.499C17,15.887,16.035,17,14.485,17z M36,36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698 c-1.501,0-2.313,1.012-2.707,1.99C24.957,25.543,25,26.511,25,27v9h-5V19h5v2.616C25.721,20.5,26.85,19,29.738,19 c3.578,0,6.261,2.25,6.261,7.274L36,36L36,36z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLinkedin);\nexport default __webpack_public_path__ + \"static/media/linkedin.c304a4148cde039a54532585f4d47b48.svg\";\nexport { ForwardRef as ReactComponent };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nvar _shallowequal = _interopRequireDefault(require(\"shallowequal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TrackVisibility =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inheritsLoose(TrackVisibility, _PureComponent);\n\n  function TrackVisibility(props) {\n    var _this;\n\n    _this = _PureComponent.call(this, props) || this;\n\n    _this.isVisible = function (_ref, windowWidth, windowHeight) {\n      var top = _ref.top,\n          left = _ref.left,\n          bottom = _ref.bottom,\n          right = _ref.right,\n          width = _ref.width,\n          height = _ref.height;\n      var _this$props = _this.props,\n          offset = _this$props.offset,\n          partialVisibility = _this$props.partialVisibility;\n\n      if (top + right + bottom + left === 0) {\n        return false;\n      }\n\n      var topThreshold = 0 - offset;\n      var leftThreshold = 0 - offset;\n      var widthCheck = windowWidth + offset;\n      var heightCheck = windowHeight + offset;\n      return partialVisibility ? top + height >= topThreshold && left + width >= leftThreshold && bottom - height <= heightCheck && right - width <= widthCheck : top >= topThreshold && left >= leftThreshold && bottom <= heightCheck && right <= widthCheck;\n    };\n\n    _this.isComponentVisible = function () {\n      setTimeout(function () {\n        // isComponentVisible might be called from componentDidMount, before component ref is assigned\n        if (!_this.nodeRef || !_this.nodeRef.getBoundingClientRect) return;\n        var html = document.documentElement;\n        var once = _this.props.once;\n\n        var boundingClientRect = _this.nodeRef.getBoundingClientRect();\n\n        var windowWidth = window.innerWidth || html.clientWidth;\n        var windowHeight = window.innerHeight || html.clientHeight;\n\n        var isVisible = _this.isVisible(boundingClientRect, windowWidth, windowHeight);\n\n        if (isVisible && once) {\n          _this.removeListener();\n        }\n\n        _this.setState({\n          isVisible: isVisible\n        });\n      }, 0);\n    };\n\n    _this.setNodeRef = function (ref) {\n      return _this.nodeRef = ref;\n    };\n\n    _this.ownProps = Object.keys(TrackVisibility.propTypes);\n    _this.state = {\n      isVisible: false\n    };\n    _this.throttleCb = (0, _lodash.default)(_this.isComponentVisible, _this.props.throttleInterval);\n    props.nodeRef && _this.setNodeRef(props.nodeRef);\n    return _this;\n  }\n\n  var _proto = TrackVisibility.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.attachListener();\n    this.isComponentVisible();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!(0, _shallowequal.default)(this.getChildProps(this.props), this.getChildProps(prevProps))) {\n      this.isComponentVisible();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removeListener();\n  };\n\n  _proto.attachListener = function attachListener() {\n    window.addEventListener('scroll', this.throttleCb);\n    window.addEventListener('resize', this.throttleCb);\n  };\n\n  _proto.removeListener = function removeListener() {\n    window.removeEventListener('scroll', this.throttleCb);\n    window.removeEventListener('resize', this.throttleCb);\n  };\n\n  _proto.getChildProps = function getChildProps(props) {\n    var _this2 = this;\n\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var childProps = {};\n    Object.keys(props).forEach(function (key) {\n      if (_this2.ownProps.indexOf(key) === -1) {\n        childProps[key] = props[key];\n      }\n    });\n    return childProps;\n  };\n\n  _proto.getChildren = function getChildren() {\n    var _this3 = this;\n\n    if (typeof this.props.children === 'function') {\n      return this.props.children(_extends({}, this.getChildProps(), {\n        isVisible: this.state.isVisible\n      }));\n    }\n\n    return _react.default.Children.map(this.props.children, function (child) {\n      return _react.default.cloneElement(child, _extends({}, _this3.getChildProps(), {\n        isVisible: _this3.state.isVisible\n      }));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        nodeRef = _this$props2.nodeRef,\n        Tag = _this$props2.tag;\n\n    var props = _extends({}, className && {\n      className: className\n    }, style && {\n      style: style\n    });\n\n    return _react.default.createElement(Tag, _extends({\n      ref: !nodeRef && this.setNodeRef\n    }, props), this.getChildren());\n  };\n\n  return TrackVisibility;\n}(_react.PureComponent);\n\nexports.default = TrackVisibility;\nTrackVisibility.propTypes = {\n  /**\n   * Define if the visibility need to be tracked once\n   */\n  once: _propTypes.default.bool,\n\n  /**\n   * Tweak the throttle interval\n   * Check https://css-tricks.com/debouncing-throttling-explained-examples/ for more details\n   */\n  throttleInterval: function throttleInterval(props, propName, component) {\n    var currentProp = props[propName];\n\n    if (!Number.isInteger(currentProp) || currentProp < 0) {\n      return new Error(\"The \" + propName + \" prop you provided to \" + component + \" is not a valid integer >= 0.\");\n    }\n\n    return null;\n  },\n\n  /**\n   * Pass one or more children to track\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.element, _propTypes.default.arrayOf(_propTypes.default.element)]),\n\n  /**\n   * Additional style to apply\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * Additional className to apply\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Define an offset. Can be useful for lazy loading\n   */\n  offset: _propTypes.default.number,\n\n  /**\n   * Update the visibility state as soon as a part of the tracked component is visible\n   */\n  partialVisibility: _propTypes.default.bool,\n\n  /**\n   * Exposed for testing but allows node other than internal wrapping <div /> to be tracked\n   * for visibility\n   */\n  nodeRef: _propTypes.default.object,\n\n  /**\n   * Define a custom tag\n   */\n  tag: _propTypes.default.string\n};\nTrackVisibility.defaultProps = {\n  once: false,\n  throttleInterval: 150,\n  offset: 0,\n  partialVisibility: false,\n  tag: 'div'\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _TrackVisibility = _interopRequireDefault(require(\"./TrackVisibility\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n* This file seems a bit useless anyway\n* */\nvar _default = _TrackVisibility.default;\nexports.default = _default;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"acca0757\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my-portfolio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_portfolio\"] = self[\"webpackChunkmy_portfolio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null || onToggle();\n    onHide == null || onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavItem = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface HandlerResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData\n  status?: number;\n}\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => Promise<HandlerResult>\n  ) => Promise<HandlerResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<HandlerResult[]>;\n}\n\nexport interface AgnosticPatchRoutesOnMissFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  HandlerResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnMissFunction,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnMiss?: AgnosticPatchRoutesOnMissFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnMissImpl = init.unstable_patchRoutesOnMiss;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnMissImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnMiss implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && patchRoutesOnMissImpl && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    // We need to run patchRoutesOnMiss in initialize()\n    initialized = false;\n    initialMatches = [];\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnMiss() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnMissFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      fetchRequest,\n      [match],\n      requestMatches\n    );\n    let actionResult = actionResults[0];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      fetchRequest,\n      [match],\n      matches\n    );\n    let result = results[0];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[]\n  ): Promise<DataResult[]> {\n    try {\n      let results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        request,\n        matchesToLoad,\n        matches,\n        manifest,\n        mapRouteProperties\n      );\n\n      return await Promise.all(\n        results.map((result, i) => {\n          if (isRedirectHandlerResult(result)) {\n            let response = result.result as Response;\n            return {\n              type: ResultType.redirect,\n              response: normalizeRelativeRoutingRedirectResponse(\n                response,\n                request,\n                matchesToLoad[i].route.id,\n                matches,\n                basename,\n                future.v7_relativeSplatPath\n              ),\n            };\n          }\n\n          return convertHandlerResultToDataResult(result);\n        })\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e,\n      }));\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([\n      matchesToLoad.length\n        ? callDataStrategy(\"loader\", request, matchesToLoad, matches)\n        : [],\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          let fetcherRequest = createClientSideRequest(\n            init.history,\n            f.path,\n            f.controller.signal\n          );\n          return callDataStrategy(\n            \"loader\",\n            fetcherRequest,\n            [f.match],\n            f.matches\n          ).then((r) => r[0]);\n        } else {\n          return Promise.resolve<DataResult>({\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path,\n            }),\n          });\n        }\n      }),\n    ]);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnMissImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        let leafRoute = matches[matches.length - 1].route;\n        if (\n          leafRoute.path &&\n          (leafRoute.path === \"*\" || leafRoute.path.endsWith(\"/*\"))\n        ) {\n          // If we matched a splat, it might only be because we haven't yet fetched\n          // the children that would match with a higher score, so let's fetch\n          // around and find out\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    let route =\n      partialMatches.length > 0\n        ? partialMatches[partialMatches.length - 1].route\n        : null;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnMissImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      let matchedSplat = false;\n      if (newMatches) {\n        let leafRoute = newMatches[newMatches.length - 1].route;\n\n        if (leafRoute.index) {\n          // If we found an index route, we can stop\n          return { type: \"success\", matches: newMatches };\n        }\n\n        if (leafRoute.path && leafRoute.path.length > 0) {\n          if (leafRoute.path === \"*\") {\n            // If we found a splat route, we can't be sure there's not a\n            // higher-scoring route down some partial matches trail so we need\n            // to check that out\n            matchedSplat = true;\n          } else {\n            // If we found a non-splat route, we can stop\n            return { type: \"success\", matches: newMatches };\n          }\n        }\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // If we are no longer partially matching anything, this was either a\n      // legit splat match above, or it's a 404.  Also avoid loops if the\n      // second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        partialMatches.map((m) => m.route.id).join(\"-\") ===\n          newPartialMatches.map((m) => m.route.id).join(\"-\")\n      ) {\n        return { type: \"success\", matches: matchedSplat ? newMatches : null };\n      }\n\n      partialMatches = newPartialMatches;\n      route = partialMatches[partialMatches.length - 1].route;\n      if (route.path === \"*\") {\n        // The splat is still our most accurate partial, so run with it\n        return { type: \"success\", matches: partialMatches };\n      }\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<DataResult[]> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      request,\n      matchesToLoad,\n      matches,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    return await Promise.all(\n      results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            matchesToLoad[i].route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        return convertHandlerResultToDataResult(result);\n      })\n    );\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnMiss() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnMissImpl: AgnosticPatchRoutesOnMissFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<string, ReturnType<typeof patchRoutesOnMissImpl>>,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnMissImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(\n  opts: DataStrategyFunctionArgs\n): ReturnType<DataStrategyFunction> {\n  return Promise.all(opts.matches.map((m) => m.resolve()));\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<HandlerResult[]> {\n  let routeIdsToLoad = matchesToLoad.reduce(\n    (acc, m) => acc.add(m.route.id),\n    new Set<string>()\n  );\n  let loadedMatches = new Set<string>();\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map((match) => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve: DataStrategyMatch[\"resolve\"] = (handlerOverride) => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad\n          ? callLoaderOrAction(\n              type,\n              request,\n              match,\n              manifest,\n              mapRouteProperties,\n              handlerOverride,\n              requestContext\n            )\n          : Promise.resolve({ type: ResultType.data, result: undefined });\n      };\n\n      return {\n        ...match,\n        shouldLoad,\n        resolve,\n      };\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext,\n  });\n\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach((m) =>\n    invariant(\n      loadedMatches.has(m.route.id),\n      `\\`match.resolve()\\` was not called for route id \"${m.route.id}\". ` +\n        \"You must call `match.resolve()` on every match passed to \" +\n        \"`dataStrategy` to ensure all routes are properly loaded.\"\n    )\n  );\n\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<HandlerResult> {\n  let result: HandlerResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<HandlerResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<HandlerResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<HandlerResult>;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride((ctx: unknown) => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return { type: \"data\", result: val };\n        } catch (e) {\n          return { type: \"error\", result: e };\n        }\n      })();\n    }\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertHandlerResultToDataResult(\n  handlerResult: HandlerResult\n): Promise<DataResult> {\n  let { result, type, status } = handlerResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : status,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result, statusCode: status };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnMiss()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isHandlerResult(result: unknown): result is HandlerResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectHandlerResult(result: HandlerResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_HandlerResult,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnMiss?: unstable_PatchRoutesOnMissFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","// src/data.js\r\n\r\nexport const data = {\r\n    about: {\r\n      title: \"About Me\",\r\n      description: \"Hi, I'm Maha Zainab, a passionate developer with a knack for creating elegant and efficient solutions. Welcome to my portfolio!\"\r\n    },\r\n    projects: [\r\n      {\r\n        title: \"Project One\",\r\n        description: \"Description for project one.\"\r\n      },\r\n      {\r\n        title: \"Project Two\",\r\n        description: \"Description for project two.\"\r\n      }\r\n    ],\r\n    navbar: {\r\n      logo: require('../assets/img/Maha.svg').default,\r\n      links: [\r\n        { href: \"#home\", name: \"Home\" },\r\n        { href: \"#research\", name: \"Research\" },\r\n        { href: \"#projects\", name: \"Projects\" },\r\n        { href: \"#skills\", name: \"Skills\" },\r\n        { href: \"#education\", name: \"Education\" },\r\n        { href: \"#experience\", name: \"Experience\" },\r\n        { href: \"#contact\", name: \"Contact\" }\r\n      ],\r\n      socialIcons: [\r\n        { href: \"https://www.linkedin.com/in/mahazainab/\", src: require('../assets/img/linkedin.svg').default },\r\n        { href: \"https://github.com/MahaZainab\", src: require('../assets/img/github.svg').default },\r\n        { href: \"https://www.kaggle.com/mahazainab28\", src: require('../assets/img/kaggle.svg').default },\r\n        { href: \"mznb03@gmail.com\", src: require('../assets/img/gmail.svg').default }\r\n      ]\r\n    },\r\n    banner: {\r\n      tagline: \"Welcome to my Portfolio\",\r\n      name: \"Maha Zainab\",\r\n      roles: [\"Machine Learning Enthusiast \", \"MERN Stack Developer\", \"NLP, ASR, CV Researcher\"],\r\n      description: \"2x Harvard Competitions winner. 3rd highest female coder nationwide and ranked 1798th globally in Google Code Jam 2023. 45th position on day 19 among 311,017 coders in the Advent of Code 2023\",\r\n      connectButtonText: \"Let’s Connect\",\r\n      headerImg: require('../assets/img/Maha Pic.svg').default,\r\n    },\r\n    skills: {\r\n      frontend: [\r\n        { name: \"HTML\", icon: \"path/to/html-icon.svg\" },\r\n        { name: \"CSS\", icon: \"path/to/css-icon.svg\" },\r\n        { name: \"Bootstrap\", icon: \"path/to/bootstrap-icon.svg\" },\r\n        { name: \"Tailwind CSS\", icon: \"path/to/tailwind-icon.svg\" },\r\n        { name: \"JavaScript\", icon: \"path/to/javascript-icon.svg\" },\r\n        { name: \"Material UI\", icon: \"path/to/material-ui-icon.svg\" },\r\n        { name: \"Ant Design\", icon: \"path/to/ant-design-icon.svg\" },\r\n        { name: \"React JS\", icon: \"path/to/react-icon.svg\" }\r\n      ],\r\n      backend: [\r\n        { name: \"PHP\", icon: \"path/to/php-icon.svg\" },\r\n        { name: \"MySQL\", icon: \"path/to/mysql-icon.svg\" },\r\n        { name: \"Node JS\", icon: \"path/to/node-icon.svg\" },\r\n        { name: \"Express JS\", icon: \"path/to/express-icon.svg\" },\r\n        { name: \"MongoDB\", icon: \"path/to/mongodb-icon.svg\" },\r\n        { name: \"Firebase\", icon: \"path/to/firebase-icon.svg\" }\r\n      ],\r\n      languages: [\r\n        { name: \"Python\", icon: \"path/to/python-icon.svg\" },\r\n        { name: \"Java\", icon: \"path/to/java-icon.svg\" },\r\n        { name: \"C++\", icon: \"path/to/cpp-icon.svg\" }\r\n      ],\r\n      others: [\r\n        { name: \"Git\", icon: \"path/to/git-icon.svg\" },\r\n        { name: \"Docker\", icon: \"path/to/docker-icon.svg\" },\r\n        { name: \"Kubernetes\", icon: \"path/to/kubernetes-icon.svg\" }\r\n      ]\r\n    }  \r\n  };\r\n  ","// src/components/NavBar.js\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport { data } from '../../data/data';\r\n\r\nexport const CustNavBar = () => {\r\n  const [activeLink, setActiveLink] = useState('home');\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n\r\n  const onUpdateActiveLink = (value) => {\r\n    setActiveLink(value);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={data.navbar.logo} alt=\"Logo\" />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              {data.navbar.links.map((link, index) => (\r\n                <Nav.Link \r\n                  key={index}\r\n                  href={link.href} \r\n                  className={activeLink === link.name.toLowerCase() ? 'active navbar-link' : 'navbar-link'} \r\n                  onClick={() => onUpdateActiveLink(link.name.toLowerCase())}>\r\n                  {link.name}\r\n                </Nav.Link>\r\n              ))}\r\n            </Nav>\r\n            <span className=\"navbar-text\">\r\n              <div className=\"social-icon\">\r\n                {data.navbar.socialIcons.map((icon, index) => (\r\n                  <a key={index} href={icon.href}><img src={icon.src} alt=\"\" /></a>\r\n                ))}\r\n              </div>\r\n            </span>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </Router>\r\n  )\r\n}\r\nexport default CustNavBar;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRightCircle = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-arrow-right-circle', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z\"\n  }));\n});\nArrowRightCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nArrowRightCircle.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default ArrowRightCircle;","// src/components/Banner.js\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\nimport { data } from '../../data/data';\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  const [index, setIndex] = useState(1);\r\n  const { tagline, name, roles, description, connectButtonText, headerImg } = data.banner;\r\n  const period = 2000;\r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => { clearInterval(ticker) };\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % roles.length;\r\n    let fullText = roles[i];\r\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta(prevDelta => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex(prevIndex => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === '') {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex(prevIndex => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n          <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\r\n                  <span className=\"tagline\">{tagline}</span>\r\n                  <h1>{`Hi! I'm ${name}`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate={JSON.stringify(roles)}><span className=\"wrap\">{text}</span></span></h1>\r\n                  <p>{description}</p>\r\n                  <button onClick={() => console.log('connect')}>{connectButtonText} <ArrowRightCircle size={25} /></button>\r\n                </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={5}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__fadeInLeft\" : \"\"}>\r\n                  <img src={headerImg} alt=\"Header Img\" fill=\"currentColor\"/>\r\n                </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\nexport default Banner;","// src/components/Skills.js\r\n\r\nimport React from 'react';\r\nimport { data } from '../../data/data';\r\nimport './Skills.css';\r\n\r\nconst Skills = () => {\r\n  const { frontend, backend, languages, others } = data.skills;\r\n\r\n  const renderSkills = (skills) => {\r\n    return skills.map((skill, index) => (\r\n      <div key={index} className=\"skill-item\">\r\n        <img src={skill.icon} alt={skill.name} className=\"skill-icon\" />\r\n        <span>{skill.name}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <section id=\"skills\" className=\"skills-section\">\r\n      <h2 className=\"skills-title\">Skills</h2>\r\n      <p className=\"skills-subtitle\">Here are some of my skills on which I have been working</p>\r\n      <div className=\"skills-container\">\r\n        <div className=\"skills-category\">\r\n          <h3>Frontend</h3>\r\n          <div className=\"skills-list\">\r\n            {renderSkills(frontend)}\r\n          </div>\r\n        </div>\r\n        <div className=\"skills-category\">\r\n          <h3>Backend</h3>\r\n          <div className=\"skills-list\">\r\n            {renderSkills(backend)}\r\n          </div>\r\n        </div>\r\n        <div className=\"skills-category\">\r\n          <h3>Languages</h3>\r\n          <div className=\"skills-list\">\r\n            {renderSkills(languages)}\r\n          </div>\r\n        </div>\r\n        <div className=\"skills-category\">\r\n          <h3>Others</h3>\r\n          <div className=\"skills-list\">\r\n            {renderSkills(others)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","// src/components/Footer.js\r\n\r\nimport React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>&copy; 2024 Maha Zainab. All rights reserved.</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// src/App.js\n\nimport React from 'react';\nimport CustNavBar from './components/Navbar/CustNavBar';\nimport Banner from './components/Banner/Banner';\nimport Skill from './components/Skills/Skills'\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Skills from './components/Skills/Skills';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustNavBar />\n      <Banner />\n      <Skill />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","toNumber","isObject","cancel","clearTimeout","flush","value","type","isObjectLike","call","isSymbol","other","valueOf","isBinary","test","slice","defineProperty","_len","length","validators","Array","_key","_createChainableTypeChecker2","default","_len2","_key2","forEach","validator","obj","_createChainableTypeChecker","require","__esModule","validate","checkType","isRequired","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","concat","chainedCheckType","bind","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","err","getShim","ReactPropTypes","array","bigint","bool","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ca","p","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","hasOwnProperty","ka","la","ma","v","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","split","toLowerCase","ra","sa","toUpperCase","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","l","h","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","isArray","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","_react","newObj","desc","_interopRequireWildcard","_propTypes","_interopRequireDefault","_lodash","_shallowequal","_extends","i","TrackVisibility","_PureComponent","subClass","superClass","_this","isVisible","_ref","windowWidth","windowHeight","bottom","right","_this$props","partialVisibility","topThreshold","leftThreshold","widthCheck","heightCheck","isComponentVisible","nodeRef","getBoundingClientRect","html","once","boundingClientRect","innerWidth","clientWidth","innerHeight","clientHeight","removeListener","setState","setNodeRef","ownProps","propTypes","throttleCb","throttleInterval","__proto__","_proto","attachListener","prevProps","getChildProps","_this2","childProps","getChildren","_this3","Children","map","cloneElement","_this$props2","className","Tag","PureComponent","component","currentProp","Number","isInteger","_default","__self","__source","Fragment","jsx","jsxs","forceUpdate","escape","_status","_result","count","toArray","only","Component","Profiler","StrictMode","Suspense","act","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","hasOwn","classNames","classes","arg","appendClass","parseValue","newClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","getPrototypeOf","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","globalThis","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","makeEventKey","eventKey","React","defaultKey","substr","_toPropertyKey","hint","prim","toPrimitive","res","_toPrimitive","useUncontrolled","config","fieldName","_extends2","Utils","propsValue","rest","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","_useState","stateValue","isProp","wasProp","useUncontrolledProp","nextProps","prevState","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","__suppressDeprecationWarning","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","useBootstrapPrefix","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","NavbarBrand","bsPrefix","as","_jsx","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","_setPrototypeOf","setPrototypeOf","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","updateStatus","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","ReactDOM","forceReflow","performEnter","performExit","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","onExit","onExiting","onExited","setNextCallback","_this4","active","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","TransitionGroupContext","noop","optionsSupported","onceSupported","canUseDOM","eventName","wrappedHandler","__once","onceHandler","emulateTransitionEnd","duration","padding","called","handle","createEvent","initEvent","triggerEvent","remove","listen","transitionEnd","str","mult","parseFloat","parseDuration","removeEmulate","transitionEndListener","funcs","filter","acc","triggerBrowserReflow","offsetHeight","toFnRef","refA","refB","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","componentOrElement","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","MARGINS","getDefaultDimensionValue","dimension","elem","margins","collapseStyles","Collapse","inProp","getDimensionValue","computedDimension","createChainedFunction","scroll","TransitionWrapper","role","NavbarCollapse","NavbarContext","expanded","useEventCallback","useCommittedRef","NavbarToggle","label","onToggle","handleClick","isReactNative","product","matchersByWindow","getMatcher","query","targetWindow","matchers","mql","matchMedia","refCount","media","useMediaQuery","matches","setMatches","handleChange","addListener","breakpointValues","names","and","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","entries","getMinQuery","createBreakpointHook","xs","sm","xl","xxl","useWillUnmount","onUnmount","valueRef","useUpdatedRef","ATTRIBUTE_PREFIX","dataAttr","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","reset","removeContainerStyle","modal","modalIdx","isTopModal","Context","useWindow","resolveContainerRef","hasEnteredRef","combinedRef","_excluded","useRTGTransitionProps","excluded","sourceKeys","major","parts","minor","patch","getReactVersion","transitionProps","ImperativeTransition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","onFinish","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","mounted","useMounted","prevShow","usePrevious","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","isEscKey","dialogProps","tabIndex","backdropElement","_Fragment","_jsxs","Manager","fadeStyles","Fade","transitionClasses","isAppearing","OffcanvasBody","transitionStyles","OffcanvasToggling","variant","CloseButton","ariaLabel","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","OffcanvasHeader","DivStyledAsH5","OffcanvasTitle","qsa","selector","replaceClassName","origClass","classToRemove","RegExp","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","restore","super","classList","baseVal","hasClass","addClass","marginProp","removeClass","sharedManager","DialogTransition","BackdropTransition","Offcanvas","ariaLabelledby","placement","responsive","backdropClassName","propsManager","renderStaticNode","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","modalContext","backdropProps","BaseModal","visibility","getSharedManager","Body","Header","Title","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","Container","fluid","suffix","NavContext","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","useNavItem","parentOnSelect","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","NavItem","EVENT_KEY_ATTR","Nav","useForceUpdate","needsRefocusRef","listNode","getNextActiveTab","currentListNode","items","activeChild","querySelector","nextIndex","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","fill","justify","navbar","navbarScroll","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","cardHeaderContext","CardHeaderContext","BaseNav","Link","Action","PopStateEventType","invariant","getHistoryState","usr","createLocation","to","pathname","hash","parsePath","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","delta","createURL","origin","URL","replaceState","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","stripBasename","basename","startsWith","startIndex","endsWith","nextChar","validMutationMethodsArr","validRequestMethodsArr","NavigationContext","LocationContext","useInRouterContext","Router","_ref5","basenameProp","locationProp","navigationType","static","staticProp","future","UNSAFE_invariant","navigationContext","v7_relativeSplatPath","locationContext","trailingPathname","__reactRouterVersion","startTransitionImpl","BrowserRouter","_ref4","historyRef","createBrowserHistory","setStateImpl","v7_startTransition","newState","DataRouterHook","DataRouterStateHook","about","title","description","projects","logo","links","socialIcons","banner","tagline","roles","connectButtonText","headerImg","skills","frontend","icon","backend","languages","others","CustNavBar","activeLink","setActiveLink","scrolled","setScrolled","onScroll","scrollY","alt","onUpdateActiveLink","Row","decoratedBsPrefix","sizePrefix","brkPoint","cols","infix","Col","colProps","spans","span","useCol","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRightCircle","xmlns","viewBox","Boolean","fillRule","Banner","loopNum","setLoopNum","isDeleting","setIsDeleting","setText","setDelta","setIndex","ticker","setInterval","tick","clearInterval","fullText","updatedText","prevDelta","prevIndex","dataPeriod","Skills","renderSkills","skill","Footer","Skill","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}